var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });
var __esm = (fn, res) => function __init() {
  return fn && (res = (0, fn[__getOwnPropNames(fn)[0]])(fn = 0)), res;
};
var __commonJS = (cb, mod) => function __require() {
  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));

// ../../../../../../../../home/mohayyad/.bun/install/global/node_modules/unenv/dist/runtime/_internal/utils.mjs
// @__NO_SIDE_EFFECTS__
function createNotImplementedError(name) {
  return new Error(`[unenv] ${name} is not implemented yet!`);
}
// @__NO_SIDE_EFFECTS__
function notImplemented(name) {
  const fn = /* @__PURE__ */ __name(() => {
    throw /* @__PURE__ */ createNotImplementedError(name);
  }, "fn");
  return Object.assign(fn, { __unenv__: true });
}
// @__NO_SIDE_EFFECTS__
function notImplementedClass(name) {
  return class {
    __unenv__ = true;
    constructor() {
      throw new Error(`[unenv] ${name} is not implemented yet!`);
    }
  };
}
var init_utils = __esm({
  "../../../../../../../../home/mohayyad/.bun/install/global/node_modules/unenv/dist/runtime/_internal/utils.mjs"() {
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    __name(createNotImplementedError, "createNotImplementedError");
    __name(notImplemented, "notImplemented");
    __name(notImplementedClass, "notImplementedClass");
  }
});

// ../../../../../../../../home/mohayyad/.bun/install/global/node_modules/unenv/dist/runtime/node/internal/perf_hooks/performance.mjs
var _timeOrigin, _performanceNow, nodeTiming, PerformanceEntry, PerformanceMark, PerformanceMeasure, PerformanceResourceTiming, PerformanceObserverEntryList, Performance, PerformanceObserver, performance;
var init_performance = __esm({
  "../../../../../../../../home/mohayyad/.bun/install/global/node_modules/unenv/dist/runtime/node/internal/perf_hooks/performance.mjs"() {
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    init_utils();
    _timeOrigin = globalThis.performance?.timeOrigin ?? Date.now();
    _performanceNow = globalThis.performance?.now ? globalThis.performance.now.bind(globalThis.performance) : () => Date.now() - _timeOrigin;
    nodeTiming = {
      name: "node",
      entryType: "node",
      startTime: 0,
      duration: 0,
      nodeStart: 0,
      v8Start: 0,
      bootstrapComplete: 0,
      environment: 0,
      loopStart: 0,
      loopExit: 0,
      idleTime: 0,
      uvMetricsInfo: {
        loopCount: 0,
        events: 0,
        eventsWaiting: 0
      },
      detail: void 0,
      toJSON() {
        return this;
      }
    };
    PerformanceEntry = class {
      static {
        __name(this, "PerformanceEntry");
      }
      __unenv__ = true;
      detail;
      entryType = "event";
      name;
      startTime;
      constructor(name, options) {
        this.name = name;
        this.startTime = options?.startTime || _performanceNow();
        this.detail = options?.detail;
      }
      get duration() {
        return _performanceNow() - this.startTime;
      }
      toJSON() {
        return {
          name: this.name,
          entryType: this.entryType,
          startTime: this.startTime,
          duration: this.duration,
          detail: this.detail
        };
      }
    };
    PerformanceMark = class PerformanceMark2 extends PerformanceEntry {
      static {
        __name(this, "PerformanceMark");
      }
      entryType = "mark";
      constructor() {
        super(...arguments);
      }
      get duration() {
        return 0;
      }
    };
    PerformanceMeasure = class extends PerformanceEntry {
      static {
        __name(this, "PerformanceMeasure");
      }
      entryType = "measure";
    };
    PerformanceResourceTiming = class extends PerformanceEntry {
      static {
        __name(this, "PerformanceResourceTiming");
      }
      entryType = "resource";
      serverTiming = [];
      connectEnd = 0;
      connectStart = 0;
      decodedBodySize = 0;
      domainLookupEnd = 0;
      domainLookupStart = 0;
      encodedBodySize = 0;
      fetchStart = 0;
      initiatorType = "";
      name = "";
      nextHopProtocol = "";
      redirectEnd = 0;
      redirectStart = 0;
      requestStart = 0;
      responseEnd = 0;
      responseStart = 0;
      secureConnectionStart = 0;
      startTime = 0;
      transferSize = 0;
      workerStart = 0;
      responseStatus = 0;
    };
    PerformanceObserverEntryList = class {
      static {
        __name(this, "PerformanceObserverEntryList");
      }
      __unenv__ = true;
      getEntries() {
        return [];
      }
      getEntriesByName(_name, _type) {
        return [];
      }
      getEntriesByType(type) {
        return [];
      }
    };
    Performance = class {
      static {
        __name(this, "Performance");
      }
      __unenv__ = true;
      timeOrigin = _timeOrigin;
      eventCounts = /* @__PURE__ */ new Map();
      _entries = [];
      _resourceTimingBufferSize = 0;
      navigation = void 0;
      timing = void 0;
      timerify(_fn, _options) {
        throw createNotImplementedError("Performance.timerify");
      }
      get nodeTiming() {
        return nodeTiming;
      }
      eventLoopUtilization() {
        return {};
      }
      markResourceTiming() {
        return new PerformanceResourceTiming("");
      }
      onresourcetimingbufferfull = null;
      now() {
        if (this.timeOrigin === _timeOrigin) {
          return _performanceNow();
        }
        return Date.now() - this.timeOrigin;
      }
      clearMarks(markName) {
        this._entries = markName ? this._entries.filter((e) => e.name !== markName) : this._entries.filter((e) => e.entryType !== "mark");
      }
      clearMeasures(measureName) {
        this._entries = measureName ? this._entries.filter((e) => e.name !== measureName) : this._entries.filter((e) => e.entryType !== "measure");
      }
      clearResourceTimings() {
        this._entries = this._entries.filter((e) => e.entryType !== "resource" || e.entryType !== "navigation");
      }
      getEntries() {
        return this._entries;
      }
      getEntriesByName(name, type) {
        return this._entries.filter((e) => e.name === name && (!type || e.entryType === type));
      }
      getEntriesByType(type) {
        return this._entries.filter((e) => e.entryType === type);
      }
      mark(name, options) {
        const entry = new PerformanceMark(name, options);
        this._entries.push(entry);
        return entry;
      }
      measure(measureName, startOrMeasureOptions, endMark) {
        let start;
        let end;
        if (typeof startOrMeasureOptions === "string") {
          start = this.getEntriesByName(startOrMeasureOptions, "mark")[0]?.startTime;
          end = this.getEntriesByName(endMark, "mark")[0]?.startTime;
        } else {
          start = Number.parseFloat(startOrMeasureOptions?.start) || this.now();
          end = Number.parseFloat(startOrMeasureOptions?.end) || this.now();
        }
        const entry = new PerformanceMeasure(measureName, {
          startTime: start,
          detail: {
            start,
            end
          }
        });
        this._entries.push(entry);
        return entry;
      }
      setResourceTimingBufferSize(maxSize) {
        this._resourceTimingBufferSize = maxSize;
      }
      addEventListener(type, listener, options) {
        throw createNotImplementedError("Performance.addEventListener");
      }
      removeEventListener(type, listener, options) {
        throw createNotImplementedError("Performance.removeEventListener");
      }
      dispatchEvent(event) {
        throw createNotImplementedError("Performance.dispatchEvent");
      }
      toJSON() {
        return this;
      }
    };
    PerformanceObserver = class {
      static {
        __name(this, "PerformanceObserver");
      }
      __unenv__ = true;
      static supportedEntryTypes = [];
      _callback = null;
      constructor(callback) {
        this._callback = callback;
      }
      takeRecords() {
        return [];
      }
      disconnect() {
        throw createNotImplementedError("PerformanceObserver.disconnect");
      }
      observe(options) {
        throw createNotImplementedError("PerformanceObserver.observe");
      }
      bind(fn) {
        return fn;
      }
      runInAsyncScope(fn, thisArg, ...args) {
        return fn.call(thisArg, ...args);
      }
      asyncId() {
        return 0;
      }
      triggerAsyncId() {
        return 0;
      }
      emitDestroy() {
        return this;
      }
    };
    performance = globalThis.performance && "addEventListener" in globalThis.performance ? globalThis.performance : new Performance();
  }
});

// ../../../../../../../../home/mohayyad/.bun/install/global/node_modules/unenv/dist/runtime/node/perf_hooks.mjs
var init_perf_hooks = __esm({
  "../../../../../../../../home/mohayyad/.bun/install/global/node_modules/unenv/dist/runtime/node/perf_hooks.mjs"() {
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    init_performance();
  }
});

// ../../../../../../../../home/mohayyad/.bun/install/global/node_modules/@cloudflare/unenv-preset/dist/runtime/polyfill/performance.mjs
var init_performance2 = __esm({
  "../../../../../../../../home/mohayyad/.bun/install/global/node_modules/@cloudflare/unenv-preset/dist/runtime/polyfill/performance.mjs"() {
    init_perf_hooks();
    globalThis.performance = performance;
    globalThis.Performance = Performance;
    globalThis.PerformanceEntry = PerformanceEntry;
    globalThis.PerformanceMark = PerformanceMark;
    globalThis.PerformanceMeasure = PerformanceMeasure;
    globalThis.PerformanceObserver = PerformanceObserver;
    globalThis.PerformanceObserverEntryList = PerformanceObserverEntryList;
    globalThis.PerformanceResourceTiming = PerformanceResourceTiming;
  }
});

// ../../../../../../../../home/mohayyad/.bun/install/global/node_modules/unenv/dist/runtime/mock/noop.mjs
var noop_default;
var init_noop = __esm({
  "../../../../../../../../home/mohayyad/.bun/install/global/node_modules/unenv/dist/runtime/mock/noop.mjs"() {
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    noop_default = Object.assign(() => {
    }, { __unenv__: true });
  }
});

// ../../../../../../../../home/mohayyad/.bun/install/global/node_modules/unenv/dist/runtime/node/console.mjs
import { Writable } from "node:stream";
var _console, _ignoreErrors, _stderr, _stdout, log, info, trace, debug, table, error, warn, createTask, clear, count, countReset, dir, dirxml, group, groupEnd, groupCollapsed, profile, profileEnd, time, timeEnd, timeLog, timeStamp, Console, _times, _stdoutErrorHandler, _stderrErrorHandler;
var init_console = __esm({
  "../../../../../../../../home/mohayyad/.bun/install/global/node_modules/unenv/dist/runtime/node/console.mjs"() {
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    init_noop();
    init_utils();
    _console = globalThis.console;
    _ignoreErrors = true;
    _stderr = new Writable();
    _stdout = new Writable();
    log = _console?.log ?? noop_default;
    info = _console?.info ?? log;
    trace = _console?.trace ?? info;
    debug = _console?.debug ?? log;
    table = _console?.table ?? log;
    error = _console?.error ?? log;
    warn = _console?.warn ?? error;
    createTask = _console?.createTask ?? /* @__PURE__ */ notImplemented("console.createTask");
    clear = _console?.clear ?? noop_default;
    count = _console?.count ?? noop_default;
    countReset = _console?.countReset ?? noop_default;
    dir = _console?.dir ?? noop_default;
    dirxml = _console?.dirxml ?? noop_default;
    group = _console?.group ?? noop_default;
    groupEnd = _console?.groupEnd ?? noop_default;
    groupCollapsed = _console?.groupCollapsed ?? noop_default;
    profile = _console?.profile ?? noop_default;
    profileEnd = _console?.profileEnd ?? noop_default;
    time = _console?.time ?? noop_default;
    timeEnd = _console?.timeEnd ?? noop_default;
    timeLog = _console?.timeLog ?? noop_default;
    timeStamp = _console?.timeStamp ?? noop_default;
    Console = _console?.Console ?? /* @__PURE__ */ notImplementedClass("console.Console");
    _times = /* @__PURE__ */ new Map();
    _stdoutErrorHandler = noop_default;
    _stderrErrorHandler = noop_default;
  }
});

// ../../../../../../../../home/mohayyad/.bun/install/global/node_modules/@cloudflare/unenv-preset/dist/runtime/node/console.mjs
var workerdConsole, assert, clear2, context, count2, countReset2, createTask2, debug2, dir2, dirxml2, error2, group2, groupCollapsed2, groupEnd2, info2, log2, profile2, profileEnd2, table2, time2, timeEnd2, timeLog2, timeStamp2, trace2, warn2, console_default;
var init_console2 = __esm({
  "../../../../../../../../home/mohayyad/.bun/install/global/node_modules/@cloudflare/unenv-preset/dist/runtime/node/console.mjs"() {
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    init_console();
    workerdConsole = globalThis["console"];
    ({
      assert,
      clear: clear2,
      context: (
        // @ts-expect-error undocumented public API
        context
      ),
      count: count2,
      countReset: countReset2,
      createTask: (
        // @ts-expect-error undocumented public API
        createTask2
      ),
      debug: debug2,
      dir: dir2,
      dirxml: dirxml2,
      error: error2,
      group: group2,
      groupCollapsed: groupCollapsed2,
      groupEnd: groupEnd2,
      info: info2,
      log: log2,
      profile: profile2,
      profileEnd: profileEnd2,
      table: table2,
      time: time2,
      timeEnd: timeEnd2,
      timeLog: timeLog2,
      timeStamp: timeStamp2,
      trace: trace2,
      warn: warn2
    } = workerdConsole);
    Object.assign(workerdConsole, {
      Console,
      _ignoreErrors,
      _stderr,
      _stderrErrorHandler,
      _stdout,
      _stdoutErrorHandler,
      _times
    });
    console_default = workerdConsole;
  }
});

// ../../../../../../../../home/mohayyad/.bun/install/global/node_modules/wrangler/_virtual_unenv_global_polyfill-@cloudflare-unenv-preset-node-console
var init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console = __esm({
  "../../../../../../../../home/mohayyad/.bun/install/global/node_modules/wrangler/_virtual_unenv_global_polyfill-@cloudflare-unenv-preset-node-console"() {
    init_console2();
    globalThis.console = console_default;
  }
});

// ../../../../../../../../home/mohayyad/.bun/install/global/node_modules/unenv/dist/runtime/node/internal/process/hrtime.mjs
var hrtime;
var init_hrtime = __esm({
  "../../../../../../../../home/mohayyad/.bun/install/global/node_modules/unenv/dist/runtime/node/internal/process/hrtime.mjs"() {
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    hrtime = /* @__PURE__ */ Object.assign(/* @__PURE__ */ __name(function hrtime2(startTime) {
      const now = Date.now();
      const seconds = Math.trunc(now / 1e3);
      const nanos = now % 1e3 * 1e6;
      if (startTime) {
        let diffSeconds = seconds - startTime[0];
        let diffNanos = nanos - startTime[0];
        if (diffNanos < 0) {
          diffSeconds = diffSeconds - 1;
          diffNanos = 1e9 + diffNanos;
        }
        return [diffSeconds, diffNanos];
      }
      return [seconds, nanos];
    }, "hrtime"), { bigint: /* @__PURE__ */ __name(function bigint() {
      return BigInt(Date.now() * 1e6);
    }, "bigint") });
  }
});

// ../../../../../../../../home/mohayyad/.bun/install/global/node_modules/unenv/dist/runtime/node/internal/tty/read-stream.mjs
var ReadStream;
var init_read_stream = __esm({
  "../../../../../../../../home/mohayyad/.bun/install/global/node_modules/unenv/dist/runtime/node/internal/tty/read-stream.mjs"() {
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    ReadStream = class {
      static {
        __name(this, "ReadStream");
      }
      fd;
      isRaw = false;
      isTTY = false;
      constructor(fd) {
        this.fd = fd;
      }
      setRawMode(mode) {
        this.isRaw = mode;
        return this;
      }
    };
  }
});

// ../../../../../../../../home/mohayyad/.bun/install/global/node_modules/unenv/dist/runtime/node/internal/tty/write-stream.mjs
var WriteStream;
var init_write_stream = __esm({
  "../../../../../../../../home/mohayyad/.bun/install/global/node_modules/unenv/dist/runtime/node/internal/tty/write-stream.mjs"() {
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    WriteStream = class {
      static {
        __name(this, "WriteStream");
      }
      fd;
      columns = 80;
      rows = 24;
      isTTY = false;
      constructor(fd) {
        this.fd = fd;
      }
      clearLine(dir3, callback) {
        callback && callback();
        return false;
      }
      clearScreenDown(callback) {
        callback && callback();
        return false;
      }
      cursorTo(x, y, callback) {
        callback && typeof callback === "function" && callback();
        return false;
      }
      moveCursor(dx, dy, callback) {
        callback && callback();
        return false;
      }
      getColorDepth(env2) {
        return 1;
      }
      hasColors(count3, env2) {
        return false;
      }
      getWindowSize() {
        return [this.columns, this.rows];
      }
      write(str, encoding, cb) {
        if (str instanceof Uint8Array) {
          str = new TextDecoder().decode(str);
        }
        try {
          console.log(str);
        } catch {
        }
        cb && typeof cb === "function" && cb();
        return false;
      }
    };
  }
});

// ../../../../../../../../home/mohayyad/.bun/install/global/node_modules/unenv/dist/runtime/node/tty.mjs
var init_tty = __esm({
  "../../../../../../../../home/mohayyad/.bun/install/global/node_modules/unenv/dist/runtime/node/tty.mjs"() {
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    init_read_stream();
    init_write_stream();
  }
});

// ../../../../../../../../home/mohayyad/.bun/install/global/node_modules/unenv/dist/runtime/node/internal/process/node-version.mjs
var NODE_VERSION;
var init_node_version = __esm({
  "../../../../../../../../home/mohayyad/.bun/install/global/node_modules/unenv/dist/runtime/node/internal/process/node-version.mjs"() {
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    NODE_VERSION = "22.14.0";
  }
});

// ../../../../../../../../home/mohayyad/.bun/install/global/node_modules/unenv/dist/runtime/node/internal/process/process.mjs
import { EventEmitter } from "node:events";
var Process;
var init_process = __esm({
  "../../../../../../../../home/mohayyad/.bun/install/global/node_modules/unenv/dist/runtime/node/internal/process/process.mjs"() {
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    init_tty();
    init_utils();
    init_node_version();
    Process = class _Process extends EventEmitter {
      static {
        __name(this, "Process");
      }
      env;
      hrtime;
      nextTick;
      constructor(impl) {
        super();
        this.env = impl.env;
        this.hrtime = impl.hrtime;
        this.nextTick = impl.nextTick;
        for (const prop of [...Object.getOwnPropertyNames(_Process.prototype), ...Object.getOwnPropertyNames(EventEmitter.prototype)]) {
          const value = this[prop];
          if (typeof value === "function") {
            this[prop] = value.bind(this);
          }
        }
      }
      // --- event emitter ---
      emitWarning(warning, type, code) {
        console.warn(`${code ? `[${code}] ` : ""}${type ? `${type}: ` : ""}${warning}`);
      }
      emit(...args) {
        return super.emit(...args);
      }
      listeners(eventName) {
        return super.listeners(eventName);
      }
      // --- stdio (lazy initializers) ---
      #stdin;
      #stdout;
      #stderr;
      get stdin() {
        return this.#stdin ??= new ReadStream(0);
      }
      get stdout() {
        return this.#stdout ??= new WriteStream(1);
      }
      get stderr() {
        return this.#stderr ??= new WriteStream(2);
      }
      // --- cwd ---
      #cwd = "/";
      chdir(cwd2) {
        this.#cwd = cwd2;
      }
      cwd() {
        return this.#cwd;
      }
      // --- dummy props and getters ---
      arch = "";
      platform = "";
      argv = [];
      argv0 = "";
      execArgv = [];
      execPath = "";
      title = "";
      pid = 200;
      ppid = 100;
      get version() {
        return `v${NODE_VERSION}`;
      }
      get versions() {
        return { node: NODE_VERSION };
      }
      get allowedNodeEnvironmentFlags() {
        return /* @__PURE__ */ new Set();
      }
      get sourceMapsEnabled() {
        return false;
      }
      get debugPort() {
        return 0;
      }
      get throwDeprecation() {
        return false;
      }
      get traceDeprecation() {
        return false;
      }
      get features() {
        return {};
      }
      get release() {
        return {};
      }
      get connected() {
        return false;
      }
      get config() {
        return {};
      }
      get moduleLoadList() {
        return [];
      }
      constrainedMemory() {
        return 0;
      }
      availableMemory() {
        return 0;
      }
      uptime() {
        return 0;
      }
      resourceUsage() {
        return {};
      }
      // --- noop methods ---
      ref() {
      }
      unref() {
      }
      // --- unimplemented methods ---
      umask() {
        throw createNotImplementedError("process.umask");
      }
      getBuiltinModule() {
        return void 0;
      }
      getActiveResourcesInfo() {
        throw createNotImplementedError("process.getActiveResourcesInfo");
      }
      exit() {
        throw createNotImplementedError("process.exit");
      }
      reallyExit() {
        throw createNotImplementedError("process.reallyExit");
      }
      kill() {
        throw createNotImplementedError("process.kill");
      }
      abort() {
        throw createNotImplementedError("process.abort");
      }
      dlopen() {
        throw createNotImplementedError("process.dlopen");
      }
      setSourceMapsEnabled() {
        throw createNotImplementedError("process.setSourceMapsEnabled");
      }
      loadEnvFile() {
        throw createNotImplementedError("process.loadEnvFile");
      }
      disconnect() {
        throw createNotImplementedError("process.disconnect");
      }
      cpuUsage() {
        throw createNotImplementedError("process.cpuUsage");
      }
      setUncaughtExceptionCaptureCallback() {
        throw createNotImplementedError("process.setUncaughtExceptionCaptureCallback");
      }
      hasUncaughtExceptionCaptureCallback() {
        throw createNotImplementedError("process.hasUncaughtExceptionCaptureCallback");
      }
      initgroups() {
        throw createNotImplementedError("process.initgroups");
      }
      openStdin() {
        throw createNotImplementedError("process.openStdin");
      }
      assert() {
        throw createNotImplementedError("process.assert");
      }
      binding() {
        throw createNotImplementedError("process.binding");
      }
      // --- attached interfaces ---
      permission = { has: /* @__PURE__ */ notImplemented("process.permission.has") };
      report = {
        directory: "",
        filename: "",
        signal: "SIGUSR2",
        compact: false,
        reportOnFatalError: false,
        reportOnSignal: false,
        reportOnUncaughtException: false,
        getReport: /* @__PURE__ */ notImplemented("process.report.getReport"),
        writeReport: /* @__PURE__ */ notImplemented("process.report.writeReport")
      };
      finalization = {
        register: /* @__PURE__ */ notImplemented("process.finalization.register"),
        unregister: /* @__PURE__ */ notImplemented("process.finalization.unregister"),
        registerBeforeExit: /* @__PURE__ */ notImplemented("process.finalization.registerBeforeExit")
      };
      memoryUsage = Object.assign(() => ({
        arrayBuffers: 0,
        rss: 0,
        external: 0,
        heapTotal: 0,
        heapUsed: 0
      }), { rss: /* @__PURE__ */ __name(() => 0, "rss") });
      // --- undefined props ---
      mainModule = void 0;
      domain = void 0;
      // optional
      send = void 0;
      exitCode = void 0;
      channel = void 0;
      getegid = void 0;
      geteuid = void 0;
      getgid = void 0;
      getgroups = void 0;
      getuid = void 0;
      setegid = void 0;
      seteuid = void 0;
      setgid = void 0;
      setgroups = void 0;
      setuid = void 0;
      // internals
      _events = void 0;
      _eventsCount = void 0;
      _exiting = void 0;
      _maxListeners = void 0;
      _debugEnd = void 0;
      _debugProcess = void 0;
      _fatalException = void 0;
      _getActiveHandles = void 0;
      _getActiveRequests = void 0;
      _kill = void 0;
      _preload_modules = void 0;
      _rawDebug = void 0;
      _startProfilerIdleNotifier = void 0;
      _stopProfilerIdleNotifier = void 0;
      _tickCallback = void 0;
      _disconnect = void 0;
      _handleQueue = void 0;
      _pendingMessage = void 0;
      _channel = void 0;
      _send = void 0;
      _linkedBinding = void 0;
    };
  }
});

// ../../../../../../../../home/mohayyad/.bun/install/global/node_modules/@cloudflare/unenv-preset/dist/runtime/node/process.mjs
var globalProcess, getBuiltinModule, workerdProcess, isWorkerdProcessV2, unenvProcess, exit, features, platform, env, hrtime3, nextTick, _channel, _disconnect, _events, _eventsCount, _handleQueue, _maxListeners, _pendingMessage, _send, assert2, disconnect, mainModule, _debugEnd, _debugProcess, _exiting, _fatalException, _getActiveHandles, _getActiveRequests, _kill, _linkedBinding, _preload_modules, _rawDebug, _startProfilerIdleNotifier, _stopProfilerIdleNotifier, _tickCallback, abort, addListener, allowedNodeEnvironmentFlags, arch, argv, argv0, availableMemory, binding, channel, chdir, config, connected, constrainedMemory, cpuUsage, cwd, debugPort, dlopen, domain, emit, emitWarning, eventNames, execArgv, execPath, exitCode, finalization, getActiveResourcesInfo, getegid, geteuid, getgid, getgroups, getMaxListeners, getuid, hasUncaughtExceptionCaptureCallback, initgroups, kill, listenerCount, listeners, loadEnvFile, memoryUsage, moduleLoadList, off, on, once, openStdin, permission, pid, ppid, prependListener, prependOnceListener, rawListeners, reallyExit, ref, release, removeAllListeners, removeListener, report, resourceUsage, send, setegid, seteuid, setgid, setgroups, setMaxListeners, setSourceMapsEnabled, setuid, setUncaughtExceptionCaptureCallback, sourceMapsEnabled, stderr, stdin, stdout, throwDeprecation, title, traceDeprecation, umask, unref, uptime, version, versions, _process, process_default;
var init_process2 = __esm({
  "../../../../../../../../home/mohayyad/.bun/install/global/node_modules/@cloudflare/unenv-preset/dist/runtime/node/process.mjs"() {
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    init_hrtime();
    init_process();
    globalProcess = globalThis["process"];
    getBuiltinModule = globalProcess.getBuiltinModule;
    workerdProcess = getBuiltinModule("node:process");
    isWorkerdProcessV2 = globalThis.Cloudflare.compatibilityFlags.enable_nodejs_process_v2;
    unenvProcess = new Process({
      env: globalProcess.env,
      // `hrtime` is only available from workerd process v2
      hrtime: isWorkerdProcessV2 ? workerdProcess.hrtime : hrtime,
      // `nextTick` is available from workerd process v1
      nextTick: workerdProcess.nextTick
    });
    ({ exit, features, platform } = workerdProcess);
    ({
      env: (
        // Always implemented by workerd
        env
      ),
      hrtime: (
        // Only implemented in workerd v2
        hrtime3
      ),
      nextTick: (
        // Always implemented by workerd
        nextTick
      )
    } = unenvProcess);
    ({
      _channel,
      _disconnect,
      _events,
      _eventsCount,
      _handleQueue,
      _maxListeners,
      _pendingMessage,
      _send,
      assert: assert2,
      disconnect,
      mainModule
    } = unenvProcess);
    ({
      _debugEnd: (
        // @ts-expect-error `_debugEnd` is missing typings
        _debugEnd
      ),
      _debugProcess: (
        // @ts-expect-error `_debugProcess` is missing typings
        _debugProcess
      ),
      _exiting: (
        // @ts-expect-error `_exiting` is missing typings
        _exiting
      ),
      _fatalException: (
        // @ts-expect-error `_fatalException` is missing typings
        _fatalException
      ),
      _getActiveHandles: (
        // @ts-expect-error `_getActiveHandles` is missing typings
        _getActiveHandles
      ),
      _getActiveRequests: (
        // @ts-expect-error `_getActiveRequests` is missing typings
        _getActiveRequests
      ),
      _kill: (
        // @ts-expect-error `_kill` is missing typings
        _kill
      ),
      _linkedBinding: (
        // @ts-expect-error `_linkedBinding` is missing typings
        _linkedBinding
      ),
      _preload_modules: (
        // @ts-expect-error `_preload_modules` is missing typings
        _preload_modules
      ),
      _rawDebug: (
        // @ts-expect-error `_rawDebug` is missing typings
        _rawDebug
      ),
      _startProfilerIdleNotifier: (
        // @ts-expect-error `_startProfilerIdleNotifier` is missing typings
        _startProfilerIdleNotifier
      ),
      _stopProfilerIdleNotifier: (
        // @ts-expect-error `_stopProfilerIdleNotifier` is missing typings
        _stopProfilerIdleNotifier
      ),
      _tickCallback: (
        // @ts-expect-error `_tickCallback` is missing typings
        _tickCallback
      ),
      abort,
      addListener,
      allowedNodeEnvironmentFlags,
      arch,
      argv,
      argv0,
      availableMemory,
      binding: (
        // @ts-expect-error `binding` is missing typings
        binding
      ),
      channel,
      chdir,
      config,
      connected,
      constrainedMemory,
      cpuUsage,
      cwd,
      debugPort,
      dlopen,
      domain: (
        // @ts-expect-error `domain` is missing typings
        domain
      ),
      emit,
      emitWarning,
      eventNames,
      execArgv,
      execPath,
      exitCode,
      finalization,
      getActiveResourcesInfo,
      getegid,
      geteuid,
      getgid,
      getgroups,
      getMaxListeners,
      getuid,
      hasUncaughtExceptionCaptureCallback,
      initgroups: (
        // @ts-expect-error `initgroups` is missing typings
        initgroups
      ),
      kill,
      listenerCount,
      listeners,
      loadEnvFile,
      memoryUsage,
      moduleLoadList: (
        // @ts-expect-error `moduleLoadList` is missing typings
        moduleLoadList
      ),
      off,
      on,
      once,
      openStdin: (
        // @ts-expect-error `openStdin` is missing typings
        openStdin
      ),
      permission,
      pid,
      ppid,
      prependListener,
      prependOnceListener,
      rawListeners,
      reallyExit: (
        // @ts-expect-error `reallyExit` is missing typings
        reallyExit
      ),
      ref,
      release,
      removeAllListeners,
      removeListener,
      report,
      resourceUsage,
      send,
      setegid,
      seteuid,
      setgid,
      setgroups,
      setMaxListeners,
      setSourceMapsEnabled,
      setuid,
      setUncaughtExceptionCaptureCallback,
      sourceMapsEnabled,
      stderr,
      stdin,
      stdout,
      throwDeprecation,
      title,
      traceDeprecation,
      umask,
      unref,
      uptime,
      version,
      versions
    } = isWorkerdProcessV2 ? workerdProcess : unenvProcess);
    _process = {
      abort,
      addListener,
      allowedNodeEnvironmentFlags,
      hasUncaughtExceptionCaptureCallback,
      setUncaughtExceptionCaptureCallback,
      loadEnvFile,
      sourceMapsEnabled,
      arch,
      argv,
      argv0,
      chdir,
      config,
      connected,
      constrainedMemory,
      availableMemory,
      cpuUsage,
      cwd,
      debugPort,
      dlopen,
      disconnect,
      emit,
      emitWarning,
      env,
      eventNames,
      execArgv,
      execPath,
      exit,
      finalization,
      features,
      getBuiltinModule,
      getActiveResourcesInfo,
      getMaxListeners,
      hrtime: hrtime3,
      kill,
      listeners,
      listenerCount,
      memoryUsage,
      nextTick,
      on,
      off,
      once,
      pid,
      platform,
      ppid,
      prependListener,
      prependOnceListener,
      rawListeners,
      release,
      removeAllListeners,
      removeListener,
      report,
      resourceUsage,
      setMaxListeners,
      setSourceMapsEnabled,
      stderr,
      stdin,
      stdout,
      title,
      throwDeprecation,
      traceDeprecation,
      umask,
      uptime,
      version,
      versions,
      // @ts-expect-error old API
      domain,
      initgroups,
      moduleLoadList,
      reallyExit,
      openStdin,
      assert: assert2,
      binding,
      send,
      exitCode,
      channel,
      getegid,
      geteuid,
      getgid,
      getgroups,
      getuid,
      setegid,
      seteuid,
      setgid,
      setgroups,
      setuid,
      permission,
      mainModule,
      _events,
      _eventsCount,
      _exiting,
      _maxListeners,
      _debugEnd,
      _debugProcess,
      _fatalException,
      _getActiveHandles,
      _getActiveRequests,
      _kill,
      _preload_modules,
      _rawDebug,
      _startProfilerIdleNotifier,
      _stopProfilerIdleNotifier,
      _tickCallback,
      _disconnect,
      _handleQueue,
      _pendingMessage,
      _channel,
      _send,
      _linkedBinding
    };
    process_default = _process;
  }
});

// ../../../../../../../../home/mohayyad/.bun/install/global/node_modules/wrangler/_virtual_unenv_global_polyfill-@cloudflare-unenv-preset-node-process
var init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process = __esm({
  "../../../../../../../../home/mohayyad/.bun/install/global/node_modules/wrangler/_virtual_unenv_global_polyfill-@cloudflare-unenv-preset-node-process"() {
    init_process2();
    globalThis.process = process_default;
  }
});

// wrangler-modules-watch:wrangler:modules-watch
var init_wrangler_modules_watch = __esm({
  "wrangler-modules-watch:wrangler:modules-watch"() {
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
  }
});

// ../../../../../../../../home/mohayyad/.bun/install/global/node_modules/wrangler/templates/modules-watch-stub.js
var init_modules_watch_stub = __esm({
  "../../../../../../../../home/mohayyad/.bun/install/global/node_modules/wrangler/templates/modules-watch-stub.js"() {
    init_wrangler_modules_watch();
  }
});

// node_modules/mongoose/dist/browser.umd.js
var require_browser_umd = __commonJS({
  "node_modules/mongoose/dist/browser.umd.js"(exports, module) {
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    !function(t, e) {
      "object" == typeof exports && "object" == typeof module ? module.exports = e() : "function" == typeof define && define.amd ? define([], e) : "object" == typeof exports ? exports.mongoose = e() : t.mongoose = e();
    }("undefined" != typeof self ? self : exports, () => (() => {
      var t = { 118: (t2) => {
        "use strict";
        t2.exports = function(t3) {
          return t3 != t3;
        };
      }, 170: (t2, e2, r2) => {
        "use strict";
        function n(t3) {
          return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
            return typeof t4;
          } : function(t4) {
            return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
          }, n(t3);
        }
        __name(n, "n");
        var o = r2(3609), i = r2(8995), s = r2(7768), a = r2(7236), u = /* @__PURE__ */ new Set(["$and", "$or"]), c = /* @__PURE__ */ new Set(["$cmp", "$eq", "$lt", "$lte", "$gt", "$gte"]), l = /* @__PURE__ */ new Set(["$multiply", "$divide", "$log", "$mod", "$trunc", "$avg", "$max", "$min", "$stdDevPop", "$stdDevSamp", "$sum"]), f = /* @__PURE__ */ new Set(["$abs", "$exp", "$ceil", "$floor", "$ln", "$log10", "$sqrt", "$sin", "$cos", "$tan", "$asin", "$acos", "$atan", "$atan2", "$asinh", "$acosh", "$atanh", "$sinh", "$cosh", "$tanh", "$degreesToRadians", "$radiansToDegrees"]), p = /* @__PURE__ */ new Set(["$arrayElemAt", "$first", "$last"]), h = /* @__PURE__ */ new Set(["$year", "$month", "$week", "$dayOfMonth", "$dayOfYear", "$hour", "$minute", "$second", "$isoDayOfWeek", "$isoWeekYear", "$isoWeek", "$millisecond"]), y = /* @__PURE__ */ new Set(["$not"]);
        function d(t3, e3, r3) {
          if (g(t3) || null === t3) return t3;
          null != t3.$cond ? Array.isArray(t3.$cond) ? t3.$cond = t3.$cond.map(function(t4) {
            return d(t4, e3, r3);
          }) : (t3.$cond.if = d(t3.$cond.if, e3, r3), t3.$cond.then = d(t3.$cond.then, e3, r3), t3.$cond.else = d(t3.$cond.else, e3, r3)) : null != t3.$ifNull ? t3.$ifNull.map(function(t4) {
            return d(t4, e3, r3);
          }) : null != t3.$switch && (Array.isArray(t3.$switch.branches) && (t3.$switch.branches = t3.$switch.branches.map(function(t4) {
            return d(t4, e3, r3);
          })), "default" in t3.$switch && (t3.$switch.default = d(t3.$switch.default, e3, r3)));
          for (var n2 = 0, s2 = Object.keys(t3); n2 < s2.length; n2++) {
            var p2 = s2[n2];
            u.has(p2) ? t3[p2] = t3[p2].map(function(t4) {
              return d(t4, e3, r3);
            }) : c.has(p2) ? t3[p2] = v(t3[p2], e3, r3) : l.has(p2) ? t3[p2] = m(t3[p2]) : f.has(p2) ? t3[p2] = b(t3[p2]) : y.has(p2) && (t3[p2] = d(t3[p2], e3, r3));
          }
          if (t3.$in && (t3.$in = function(t4, e4, r4) {
            var n3 = t4[1];
            if (!g(n3)) return t4;
            var o2 = t4[0], s3 = e4.path(n3.slice(1));
            if (null !== s3) {
              if (!s3.$isMongooseArray) throw new Error("Path must be an array for $in");
              return [s3.$isMongooseDocumentArray ? s3.$embeddedSchemaType.cast(o2) : s3.caster.cast(o2), n3];
            }
            if (false === r4) return t4;
            if ("throw" === r4) throw new i("$in");
          }(t3.$in, e3, r3)), t3.$size && (t3.$size = b(t3.$size)), t3.$round) {
            var h2 = t3.$round;
            if (!Array.isArray(h2) || h2.length < 1 || h2.length > 2) throw new o("Array", h2, "$round");
            t3.$round = h2.map(function(t4) {
              return b(t4);
            });
          }
          return a(t3), t3;
        }
        __name(d, "d");
        function b(t3) {
          if (!_(t3)) return t3;
          try {
            return s(t3);
          } catch (e3) {
            throw new o("Number", t3);
          }
        }
        __name(b, "b");
        function m(t3) {
          if (!Array.isArray(t3)) {
            if (!_(t3)) return t3;
            try {
              return s(t3);
            } catch (e3) {
              throw new o("Number", t3);
            }
          }
          return t3.map(function(t4) {
            if (!_(t4)) return t4;
            try {
              return s(t4);
            } catch (e3) {
              throw new o("Number", t4);
            }
          });
        }
        __name(m, "m");
        function v(t3, e3, r3) {
          if (!Array.isArray(t3) || 2 !== t3.length) throw new Error("Comparison operator must be an array of length 2");
          t3[0] = d(t3[0], e3, r3);
          var a2 = t3[0];
          if (_(t3[1])) {
            var u2 = null, c2 = null, l2 = null;
            if (g(a2)) u2 = a2.slice(1), c2 = e3.path(u2);
            else if ("object" === n(a2) && null != a2) for (var f2 = 0, y2 = Object.keys(a2); f2 < y2.length; f2++) {
              var b2 = y2[f2];
              h.has(b2) && g(a2[b2]) ? (u2 = a2[b2].slice(1) + "." + b2, l2 = s) : p.has(b2) && g(a2[b2]) && (u2 = a2[b2].slice(1) + "." + b2, null != (c2 = e3.path(a2[b2].slice(1))) && (c2.$isMongooseDocumentArray ? c2 = c2.$embeddedSchemaType : c2.$isMongooseArray && (c2 = c2.caster)));
            }
            var m2 = "object" === n(t3[1]) && null != t3[1] && null != t3[1].$literal;
            if (null != c2) t3[1] = m2 ? { $literal: c2.cast(t3[1].$literal) } : c2.cast(t3[1]);
            else if (null != l2) if (m2) try {
              t3[1] = { $literal: l2(t3[1].$literal) };
            } catch (e4) {
              throw new o(l2.name.replace(/^cast/, ""), t3[1], u2 + ".$literal");
            }
            else try {
              t3[1] = l2(t3[1]);
            } catch (e4) {
              throw new o(l2.name.replace(/^cast/, ""), t3[1], u2);
            }
            else {
              if (null != u2 && true === r3) return;
              if (null != u2 && "throw" === r3) throw new i(u2);
            }
          } else t3[1] = d(t3[1]);
          return t3;
        }
        __name(v, "v");
        function g(t3) {
          return "string" == typeof t3 && "$" === t3[0];
        }
        __name(g, "g");
        function _(t3) {
          return !("string" == typeof t3 && "$" === t3[0] || "object" === n(t3) && null !== t3 && Object.keys(t3).find(function(t4) {
            return "$" === t4[0];
          }) && null == t3.$literal);
        }
        __name(_, "_");
        t2.exports = function(t3, e3, r3) {
          if ("boolean" == typeof t3) return t3;
          if ("object" !== n(t3) || null === t3) throw new Error("`$expr` must be an object or boolean literal");
          return d(t3, e3, r3);
        };
      }, 209: (t2, e2, r2) => {
        "use strict";
        function n(t3) {
          return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
            return typeof t4;
          } : function(t4) {
            return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
          }, n(t3);
        }
        __name(n, "n");
        var o = r2(2403), i = r2(5825), s = r2(6583);
        t2.exports = o ? function(t3) {
          return o(t3);
        } : i ? function(t3) {
          if (!t3 || "object" !== n(t3) && "function" != typeof t3) throw new TypeError("getProto: not an object");
          return i(t3);
        } : s ? function(t3) {
          return s(t3);
        } : null;
      }, 241: (t2, e2, r2) => {
        "use strict";
        function n(t3) {
          return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
            return typeof t4;
          } : function(t4) {
            return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
          }, n(t3);
        }
        __name(n, "n");
        function o() {
          try {
            var t3 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch (t4) {
          }
          return (o = /* @__PURE__ */ __name(function() {
            return !!t3;
          }, "o"))();
        }
        __name(o, "o");
        function i(t3) {
          return i = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t4) {
            return t4.__proto__ || Object.getPrototypeOf(t4);
          }, i(t3);
        }
        __name(i, "i");
        function s(t3, e3) {
          return s = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t4, e4) {
            return t4.__proto__ = e4, t4;
          }, s(t3, e3);
        }
        __name(s, "s");
        var a = function(t3) {
          function e3() {
            return function(t4, e4) {
              if (!(t4 instanceof e4)) throw new TypeError("Cannot call a class as a function");
            }(this, e3), function(t4, e4, r4) {
              return e4 = i(e4), function(t5, e5) {
                if (e5 && ("object" == n(e5) || "function" == typeof e5)) return e5;
                if (void 0 !== e5) throw new TypeError("Derived constructors may only return object or undefined");
                return function(t6) {
                  if (void 0 === t6) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                  return t6;
                }(t5);
              }(t4, o() ? Reflect.construct(e4, r4 || [], i(t4).constructor) : e4.apply(t4, r4));
            }(this, e3, arguments);
          }
          __name(e3, "e");
          return function(t4, e4) {
            if ("function" != typeof e4 && null !== e4) throw new TypeError("Super expression must either be null or a function");
            t4.prototype = Object.create(e4 && e4.prototype, { constructor: { value: t4, writable: true, configurable: true } }), Object.defineProperty(t4, "prototype", { writable: false }), e4 && s(t4, e4);
          }(e3, t3), r3 = e3, Object.defineProperty(r3, "prototype", { writable: false }), r3;
          var r3;
        }(r2(8879)), u = r2(5761);
        Object.defineProperty(a.prototype, "of", u), t2.exports = a;
      }, 354: (t2) => {
        function e2(t3) {
          return e2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
            return typeof t4;
          } : function(t4) {
            return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
          }, e2(t3);
        }
        __name(e2, "e");
        var r2 = 1e3, n = 60 * r2, o = 60 * n, i = 24 * o, s = 7 * i;
        function a(t3, e3, r3, n2) {
          var o2 = e3 >= 1.5 * r3;
          return Math.round(t3 / r3) + " " + n2 + (o2 ? "s" : "");
        }
        __name(a, "a");
        t2.exports = function(t3, u) {
          u = u || {};
          var c, l, f = e2(t3);
          if ("string" === f && t3.length > 0) return function(t4) {
            if (!((t4 = String(t4)).length > 100)) {
              var e3 = /^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(t4);
              if (e3) {
                var a2 = parseFloat(e3[1]);
                switch ((e3[2] || "ms").toLowerCase()) {
                  case "years":
                  case "year":
                  case "yrs":
                  case "yr":
                  case "y":
                    return 315576e5 * a2;
                  case "weeks":
                  case "week":
                  case "w":
                    return a2 * s;
                  case "days":
                  case "day":
                  case "d":
                    return a2 * i;
                  case "hours":
                  case "hour":
                  case "hrs":
                  case "hr":
                  case "h":
                    return a2 * o;
                  case "minutes":
                  case "minute":
                  case "mins":
                  case "min":
                  case "m":
                    return a2 * n;
                  case "seconds":
                  case "second":
                  case "secs":
                  case "sec":
                  case "s":
                    return a2 * r2;
                  case "milliseconds":
                  case "millisecond":
                  case "msecs":
                  case "msec":
                  case "ms":
                    return a2;
                  default:
                    return;
                }
              }
            }
          }(t3);
          if ("number" === f && isFinite(t3)) return u.long ? (c = t3, (l = Math.abs(c)) >= i ? a(c, l, i, "day") : l >= o ? a(c, l, o, "hour") : l >= n ? a(c, l, n, "minute") : l >= r2 ? a(c, l, r2, "second") : c + " ms") : function(t4) {
            var e3 = Math.abs(t4);
            return e3 >= i ? Math.round(t4 / i) + "d" : e3 >= o ? Math.round(t4 / o) + "h" : e3 >= n ? Math.round(t4 / n) + "m" : e3 >= r2 ? Math.round(t4 / r2) + "s" : t4 + "ms";
          }(t3);
          throw new Error("val is not a non-empty string or a valid number. val=" + JSON.stringify(t3));
        };
      }, 433: (t2, e2, r2) => {
        "use strict";
        function n(t3) {
          return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
            return typeof t4;
          } : function(t4) {
            return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
          }, n(t3);
        }
        __name(n, "n");
        function o(t3, e3) {
          var r3 = Object.keys(t3);
          if (Object.getOwnPropertySymbols) {
            var n2 = Object.getOwnPropertySymbols(t3);
            e3 && (n2 = n2.filter(function(e4) {
              return Object.getOwnPropertyDescriptor(t3, e4).enumerable;
            })), r3.push.apply(r3, n2);
          }
          return r3;
        }
        __name(o, "o");
        function i(t3) {
          for (var e3 = 1; e3 < arguments.length; e3++) {
            var r3 = null != arguments[e3] ? arguments[e3] : {};
            e3 % 2 ? o(Object(r3), true).forEach(function(e4) {
              s(t3, e4, r3[e4]);
            }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t3, Object.getOwnPropertyDescriptors(r3)) : o(Object(r3)).forEach(function(e4) {
              Object.defineProperty(t3, e4, Object.getOwnPropertyDescriptor(r3, e4));
            });
          }
          return t3;
        }
        __name(i, "i");
        function s(t3, e3, r3) {
          return (e3 = function(t4) {
            var e4 = function(t5) {
              if ("object" != n(t5) || !t5) return t5;
              var e5 = t5[Symbol.toPrimitive];
              if (void 0 !== e5) {
                var r4 = e5.call(t5, "string");
                if ("object" != n(r4)) return r4;
                throw new TypeError("@@toPrimitive must return a primitive value.");
              }
              return String(t5);
            }(t4);
            return "symbol" == n(e4) ? e4 : e4 + "";
          }(e3)) in t3 ? Object.defineProperty(t3, e3, { value: r3, enumerable: true, configurable: true, writable: true }) : t3[e3] = r3, t3;
        }
        __name(s, "s");
        var a = r2(3609), u = r2(6426), c = r2(5413), l = r2(4327), f = r2(9460);
        function p(t3, e3) {
          u.call(this, t3, e3, "Int32");
        }
        __name(p, "p");
        p.schemaName = "Int32", p.defaultOptions = {}, p.prototype = Object.create(u.prototype), p.prototype.constructor = p, p._cast = c, p.set = u.set, p.setters = [], p.get = u.get, p._defaultCaster = function(t3) {
          if (null != t3 && ("number" != typeof t3 || t3 !== (0 | t3) || t3 < -2147483648 || t3 > 2147483647)) throw new Error();
          return t3;
        }, p.cast = function(t3) {
          return 0 === arguments.length || (false === t3 && (t3 = this._defaultCaster), this._cast = t3), this._cast;
        }, p._checkRequired = function(t3) {
          return null != t3;
        }, p.checkRequired = u.checkRequired, p.prototype.checkRequired = function(t3) {
          return this.constructor._checkRequired(t3);
        }, p.prototype.cast = function(t3) {
          var e3;
          e3 = "function" == typeof this._castFunction ? this._castFunction : "function" == typeof this.constructor.cast ? this.constructor.cast() : p.cast();
          try {
            return e3(t3);
          } catch (e4) {
            throw new a("Int32", t3, this.path, e4, this);
          }
        };
        var h = i(i({}, u.prototype.$conditionalHandlers), {}, { $gt: y, $gte: y, $lt: y, $lte: y, $bitsAllClear: f, $bitsAnyClear: f, $bitsAllSet: f, $bitsAnySet: f });
        function y(t3, e3) {
          return this.castForQuery(null, t3, e3);
        }
        __name(y, "y");
        Object.defineProperty(p.prototype, "$conditionalHandlers", { enumerable: false, value: h }), p.prototype.castForQuery = function(t3, e3, r3) {
          var n2;
          if (null != t3) return (n2 = this.$conditionalHandlers[t3]) ? n2.call(this, e3) : this.applySetters(e3, r3);
          try {
            return this.applySetters(e3, r3);
          } catch (t4) {
            throw t4 instanceof a && t4.path === this.path && null != this.$fullPath && (t4.path = this.$fullPath), t4;
          }
        }, p.prototype.toJSONSchema = function(t3) {
          var e3 = this.options.required && "function" != typeof this.options.required;
          return l("number", "int", null == t3 ? void 0 : t3.useBsonType, e3);
        }, p.prototype.autoEncryptionType = function() {
          return "int";
        }, t2.exports = p;
      }, 486: (t2) => {
        "use strict";
        t2.exports = function(t3) {
          var e2 = { _id: { auto: true } };
          e2._id[t3.options.typeKey] = "ObjectId", t3.add(e2);
        };
      }, 533: (t2, e2, r2) => {
        "use strict";
        var n = r2(8213), o = r2(7352);
        t2.exports = function(t3, e3) {
          if ("string" != typeof t3 && "function" != typeof t3) throw new n('Invalid ref at path "' + e3 + '". Got ' + o.inspect(t3, { depth: 0 }));
        };
      }, 542: (t2) => {
        "use strict";
        function e2(t3) {
          return e2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
            return typeof t4;
          } : function(t4) {
            return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
          }, e2(t3);
        }
        __name(e2, "e");
        t2.exports = function(t3) {
          return !!t3 && ("object" === e2(t3) || "function" == typeof t3) && "function" == typeof t3.then;
        };
      }, 608: (t2, e2, r2) => {
        "use strict";
        var n = r2(5832).hp;
        t2.exports = function(t3) {
          return n.isBuffer(t3) || "[object Object]" === Object.prototype.toString.call(t3);
        };
      }, 622: (t2, e2, r2) => {
        "use strict";
        function n(t3, e3) {
          var r3 = "undefined" != typeof Symbol && t3[Symbol.iterator] || t3["@@iterator"];
          if (!r3) {
            if (Array.isArray(t3) || (r3 = function(t4, e4) {
              if (t4) {
                if ("string" == typeof t4) return o(t4, e4);
                var r4 = {}.toString.call(t4).slice(8, -1);
                return "Object" === r4 && t4.constructor && (r4 = t4.constructor.name), "Map" === r4 || "Set" === r4 ? Array.from(t4) : "Arguments" === r4 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r4) ? o(t4, e4) : void 0;
              }
            }(t3)) || e3 && t3 && "number" == typeof t3.length) {
              r3 && (t3 = r3);
              var n2 = 0, i2 = /* @__PURE__ */ __name(function() {
              }, "i");
              return { s: i2, n: /* @__PURE__ */ __name(function() {
                return n2 >= t3.length ? { done: true } : { done: false, value: t3[n2++] };
              }, "n"), e: /* @__PURE__ */ __name(function(t4) {
                throw t4;
              }, "e"), f: i2 };
            }
            throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }
          var s2, a2 = true, u2 = false;
          return { s: /* @__PURE__ */ __name(function() {
            r3 = r3.call(t3);
          }, "s"), n: /* @__PURE__ */ __name(function() {
            var t4 = r3.next();
            return a2 = t4.done, t4;
          }, "n"), e: /* @__PURE__ */ __name(function(t4) {
            u2 = true, s2 = t4;
          }, "e"), f: /* @__PURE__ */ __name(function() {
            try {
              a2 || null == r3.return || r3.return();
            } finally {
              if (u2) throw s2;
            }
          }, "f") };
        }
        __name(n, "n");
        function o(t3, e3) {
          (null == e3 || e3 > t3.length) && (e3 = t3.length);
          for (var r3 = 0, n2 = Array(e3); r3 < e3; r3++) n2[r3] = t3[r3];
          return n2;
        }
        __name(o, "o");
        var i = r2(4009), s = r2(8768), a = r2(7930).modelSymbol;
        function u(t3, e3) {
          this.path = e3, this.getters = [], this.setters = [], this.options = Object.assign({}, t3);
        }
        __name(u, "u");
        u.prototype._applyDefaultGetters = function() {
          if (!(this.getters.length > 0 || this.setters.length > 0)) {
            var t3 = "$" + this.path;
            this.getters.push(function() {
              return this.$locals[t3];
            }), this.setters.push(function(e3) {
              this.$locals[t3] = e3;
            });
          }
        }, u.prototype.clone = function() {
          var t3 = new u(this.options, this.path);
          return t3.getters = [].concat(this.getters), t3.setters = [].concat(this.setters), t3;
        }, u.prototype.get = function(t3) {
          return this.getters.push(t3), this;
        }, u.prototype.set = function(t3) {
          return this.setters.push(t3), this;
        }, u.prototype.applyGetters = function(t3, e3) {
          s.hasUserDefinedProperty(this.options, ["ref", "refPath"]) && e3.$$populatedVirtuals && e3.$$populatedVirtuals.hasOwnProperty(this.path) && (t3 = e3.$$populatedVirtuals[this.path]);
          var r3, o2 = t3, i2 = n(this.getters);
          try {
            for (i2.s(); !(r3 = i2.n()).done; ) o2 = r3.value.call(e3, o2, this, e3);
          } catch (t4) {
            i2.e(t4);
          } finally {
            i2.f();
          }
          return o2;
        }, u.prototype.applySetters = function(t3, e3) {
          var r3, o2 = t3, i2 = n(this.setters);
          try {
            for (i2.s(); !(r3 = i2.n()).done; ) o2 = r3.value.call(e3, o2, this, e3);
          } catch (t4) {
            i2.e(t4);
          } finally {
            i2.f();
          }
          return o2;
        }, u.prototype._getModelNamesForPopulate = function(t3) {
          if (this.options.refPath) return i(this.options.refPath, t3, this.path);
          var e3;
          return null == (e3 = "function" != typeof this.options.ref || this.options.ref[a] ? this.options.ref : this.options.ref.call(t3, t3)) || Array.isArray(e3) ? e3 : [e3];
        }, t2.exports = u;
      }, 668: (t2, e2, r2) => {
        "use strict";
        var n = Array.prototype.slice, o = r2(6312), i = Object.keys, s = i ? function(t3) {
          return i(t3);
        } : r2(6544), a = Object.keys;
        s.shim = function() {
          if (Object.keys) {
            var t3 = function() {
              var t4 = Object.keys(arguments);
              return t4 && t4.length === arguments.length;
            }(1, 2);
            t3 || (Object.keys = function(t4) {
              return o(t4) ? a(n.call(t4)) : a(t4);
            });
          } else Object.keys = s;
          return Object.keys || s;
        }, t2.exports = s;
      }, 674: (t2, e2, r2) => {
        "use strict";
        var n = r2(3414);
        t2.exports = function(t3) {
          return n(t3) || 0 === t3 ? t3 : t3 < 0 ? -1 : 1;
        };
      }, 766: (t2, e2) => {
        "use strict";
        var r2 = t2.exports = {};
        r2.DocumentNotFoundError = null, r2.general = {}, r2.general.default = "Validator failed for path `{PATH}` with value `{VALUE}`", r2.general.required = "Path `{PATH}` is required.", r2.Number = {}, r2.Number.min = "Path `{PATH}` ({VALUE}) is less than minimum allowed value ({MIN}).", r2.Number.max = "Path `{PATH}` ({VALUE}) is more than maximum allowed value ({MAX}).", r2.Number.enum = "`{VALUE}` is not a valid enum value for path `{PATH}`.", r2.Date = {}, r2.Date.min = "Path `{PATH}` ({VALUE}) is before minimum allowed value ({MIN}).", r2.Date.max = "Path `{PATH}` ({VALUE}) is after maximum allowed value ({MAX}).", r2.String = {}, r2.String.enum = "`{VALUE}` is not a valid enum value for path `{PATH}`.", r2.String.match = "Path `{PATH}` is invalid ({VALUE}).", r2.String.minlength = "Path `{PATH}` (`{VALUE}`, length {LENGTH}) is shorter than the minimum allowed length ({MINLENGTH}).", r2.String.maxlength = "Path `{PATH}` (`{VALUE}`, length {LENGTH}) is longer than the maximum allowed length ({MAXLENGTH}).";
      }, 783: (t2) => {
        "use strict";
        t2.exports = ReferenceError;
      }, 791: (t2, e2, r2) => {
        "use strict";
        function n(t3, e3) {
          var r3 = "undefined" != typeof Symbol && t3[Symbol.iterator] || t3["@@iterator"];
          if (!r3) {
            if (Array.isArray(t3) || (r3 = function(t4, e4) {
              if (t4) {
                if ("string" == typeof t4) return o(t4, e4);
                var r4 = {}.toString.call(t4).slice(8, -1);
                return "Object" === r4 && t4.constructor && (r4 = t4.constructor.name), "Map" === r4 || "Set" === r4 ? Array.from(t4) : "Arguments" === r4 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r4) ? o(t4, e4) : void 0;
              }
            }(t3)) || e3 && t3 && "number" == typeof t3.length) {
              r3 && (t3 = r3);
              var n2 = 0, i2 = /* @__PURE__ */ __name(function() {
              }, "i");
              return { s: i2, n: /* @__PURE__ */ __name(function() {
                return n2 >= t3.length ? { done: true } : { done: false, value: t3[n2++] };
              }, "n"), e: /* @__PURE__ */ __name(function(t4) {
                throw t4;
              }, "e"), f: i2 };
            }
            throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }
          var s, a = true, u = false;
          return { s: /* @__PURE__ */ __name(function() {
            r3 = r3.call(t3);
          }, "s"), n: /* @__PURE__ */ __name(function() {
            var t4 = r3.next();
            return a = t4.done, t4;
          }, "n"), e: /* @__PURE__ */ __name(function(t4) {
            u = true, s = t4;
          }, "e"), f: /* @__PURE__ */ __name(function() {
            try {
              a || null == r3.return || r3.return();
            } finally {
              if (u) throw s;
            }
          }, "f") };
        }
        __name(n, "n");
        function o(t3, e3) {
          (null == e3 || e3 > t3.length) && (e3 = t3.length);
          for (var r3 = 0, n2 = Array(e3); r3 < e3; r3++) n2[r3] = t3[r3];
          return n2;
        }
        __name(o, "o");
        var i = r2(3703);
        t2.exports = function(t3, e3, r3) {
          var o2, s = null != r3 ? Object.keys(i(t3.tree, r3, {})) : Object.keys(t3.tree), a = new Set(Object.keys(e3));
          if (a.size > 1) {
            o2 = /* @__PURE__ */ new Set();
            var u, c = n(s);
            try {
              for (c.s(); !(u = c.n()).done; ) {
                var l = u.value;
                a.has(l) && o2.add(l);
              }
            } catch (t4) {
              c.e(t4);
            } finally {
              c.f();
            }
            var f, p = n(a);
            try {
              for (p.s(); !(f = p.n()).done; ) {
                var h = f.value;
                o2.has(h) || o2.add(h);
              }
            } catch (t4) {
              p.e(t4);
            } finally {
              p.f();
            }
            o2 = Array.from(o2);
          } else o2 = Array.from(a);
          return o2;
        };
      }, 863: (t2, e2, r2) => {
        "use strict";
        var n = r2(3305), o = r2(5549);
        t2.exports = function(t3) {
          if (null == t3) return t3;
          if (n(t3, "ObjectId")) return t3;
          if (t3._id) {
            if (n(t3._id, "ObjectId")) return t3._id;
            if (t3._id.toString instanceof Function) return new o(t3._id.toString());
          }
          return t3.toString instanceof Function ? new o(t3.toString()) : new o(t3);
        };
      }, 953: (t2, e2, r2) => {
        "use strict";
        var n = r2(5484);
        t2.exports = function() {
          return n() && !!Symbol.toStringTag;
        };
      }, 988: (t2) => {
        "use strict";
        var e2 = Object.defineProperty || false;
        if (e2) try {
          e2({}, "a", { value: 1 });
        } catch (t3) {
          e2 = false;
        }
        t2.exports = e2;
      }, 1007: (t2, e2, r2) => {
        "use strict";
        function n(t3) {
          return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
            return typeof t4;
          } : function(t4) {
            return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
          }, n(t3);
        }
        __name(n, "n");
        function o() {
          try {
            var t3 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch (t4) {
          }
          return (o = /* @__PURE__ */ __name(function() {
            return !!t3;
          }, "o"))();
        }
        __name(o, "o");
        function i(t3) {
          return i = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t4) {
            return t4.__proto__ || Object.getPrototypeOf(t4);
          }, i(t3);
        }
        __name(i, "i");
        function s(t3, e3) {
          return s = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t4, e4) {
            return t4.__proto__ = e4, t4;
          }, s(t3, e3);
        }
        __name(s, "s");
        var a = function(t3) {
          function e3() {
            return function(t4, e4) {
              if (!(t4 instanceof e4)) throw new TypeError("Cannot call a class as a function");
            }(this, e3), function(t4, e4, r4) {
              return e4 = i(e4), function(t5, e5) {
                if (e5 && ("object" == n(e5) || "function" == typeof e5)) return e5;
                if (void 0 !== e5) throw new TypeError("Derived constructors may only return object or undefined");
                return function(t6) {
                  if (void 0 === t6) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                  return t6;
                }(t5);
              }(t4, o() ? Reflect.construct(e4, r4 || [], i(t4).constructor) : e4.apply(t4, r4));
            }(this, e3, arguments);
          }
          __name(e3, "e");
          return function(t4, e4) {
            if ("function" != typeof e4 && null !== e4) throw new TypeError("Super expression must either be null or a function");
            t4.prototype = Object.create(e4 && e4.prototype, { constructor: { value: t4, writable: true, configurable: true } }), Object.defineProperty(t4, "prototype", { writable: false }), e4 && s(t4, e4);
          }(e3, t3), r3 = e3, Object.defineProperty(r3, "prototype", { writable: false }), r3;
          var r3;
        }(r2(8879)), u = r2(5761);
        Object.defineProperty(a.prototype, "min", u), Object.defineProperty(a.prototype, "max", u), Object.defineProperty(a.prototype, "enum", u), Object.defineProperty(a.prototype, "populate", u), t2.exports = a;
      }, 1058: (t2, e2, r2) => {
        "use strict";
        var n = r2(2696);
        t2.exports = function(t3, e3) {
          if (null == t3) return null;
          for (var r3 = 0, o = Object.keys(t3); r3 < o.length; r3++) {
            var i = t3[o[r3]];
            if (i.schema && i.schema.discriminatorMapping && n(i.schema.discriminatorMapping.value, e3)) return i;
          }
          return null;
        };
      }, 1091: (t2) => {
        "use strict";
        function e2(t3) {
          return e2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
            return typeof t4;
          } : function(t4) {
            return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
          }, e2(t3);
        }
        __name(e2, "e");
        t2.exports = function(t3) {
          return null != t3 && "object" === e2(t3) && null == t3.$slice && null == t3.$elemMatch && null == t3.$meta && null == t3.$;
        };
      }, 1129: (t2, e2, r2) => {
        "use strict";
        function n(t3) {
          return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
            return typeof t4;
          } : function(t4) {
            return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
          }, n(t3);
        }
        __name(n, "n");
        function o() {
          try {
            var t3 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch (t4) {
          }
          return (o = /* @__PURE__ */ __name(function() {
            return !!t3;
          }, "o"))();
        }
        __name(o, "o");
        function i(t3) {
          return i = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t4) {
            return t4.__proto__ || Object.getPrototypeOf(t4);
          }, i(t3);
        }
        __name(i, "i");
        function s(t3, e3) {
          return s = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t4, e4) {
            return t4.__proto__ = e4, t4;
          }, s(t3, e3);
        }
        __name(s, "s");
        var a = r2(8213), u = r2(7352), c = function(t3) {
          function e3(t4, r4, s2, c2) {
            var l;
            !function(t5, e4) {
              if (!(t5 instanceof e4)) throw new TypeError("Cannot call a class as a function");
            }(this, e3);
            var f = a.messages;
            return (l = function(t5, e4, r5) {
              return e4 = i(e4), function(t6, e5) {
                if (e5 && ("object" == n(e5) || "function" == typeof e5)) return e5;
                if (void 0 !== e5) throw new TypeError("Derived constructors may only return object or undefined");
                return function(t7) {
                  if (void 0 === t7) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                  return t7;
                }(t6);
              }(t5, o() ? Reflect.construct(e4, r5 || [], i(t5).constructor) : e4.apply(t5, r5));
            }(this, e3, [null != f.DocumentNotFoundError ? "function" == typeof f.DocumentNotFoundError ? f.DocumentNotFoundError(t4, r4) : f.DocumentNotFoundError : 'No document found for query "' + u.inspect(t4) + '" on model "' + r4 + '"'])).result = c2, l.numAffected = s2, l.filter = t4, l.query = t4, l;
          }
          __name(e3, "e");
          return function(t4, e4) {
            if ("function" != typeof e4 && null !== e4) throw new TypeError("Super expression must either be null or a function");
            t4.prototype = Object.create(e4 && e4.prototype, { constructor: { value: t4, writable: true, configurable: true } }), Object.defineProperty(t4, "prototype", { writable: false }), e4 && s(t4, e4);
          }(e3, t3), r3 = e3, Object.defineProperty(r3, "prototype", { writable: false }), r3;
          var r3;
        }(a);
        Object.defineProperty(c.prototype, "name", { value: "DocumentNotFoundError" }), t2.exports = c;
      }, 1199: (t2) => {
        "use strict";
        t2.exports = function(t3, e2) {
          var r2 = Object.keys(t3), n = Object.keys(e2);
          if (r2.length !== n.length) return false;
          for (var o = 0; o < r2.length; o++) {
            var i = r2[o];
            if (i !== n[o] || t3[i] !== e2[i]) return false;
          }
          return true;
        };
      }, 1226: (t2) => {
        "use strict";
        t2.exports = function(t3) {
          return null == t3 ? null : Object.keys(t3)[0];
        };
      }, 1243: (t2, e2) => {
        "use strict";
        e2.isMongooseArray = function(t3) {
          return Array.isArray(t3) && t3.isMongooseArray;
        };
      }, 1244: (t2, e2, r2) => {
        "use strict";
        var n = r2(3609);
        t2.exports = function(t3, e3) {
          if (null == t3) return t3;
          if (t3._id && "string" == typeof t3._id) return t3._id;
          if (t3.toString && t3.toString !== Object.prototype.toString && !Array.isArray(t3)) return t3.toString();
          throw new n("string", t3, e3);
        };
      }, 1260: (t2, e2) => {
        "use strict";
        var r2 = Object.freeze(["countDocuments", "distinct", "estimatedDocumentCount", "find", "findOne", "findOneAndReplace", "findOneAndUpdate", "replaceOne", "updateMany", "updateOne", "deleteMany", "deleteOne", "findOneAndDelete"]).concat(["validate"]);
        e2.Ut = r2;
      }, 1313: (t2, e2, r2) => {
        "use strict";
        var n = r2(486);
        t2.exports = function(t3, e3) {
          return null == e3 || null == e3._id || (t3 = t3.clone(), e3._id ? t3.paths._id || (n(t3), t3.options._id = true) : (t3.remove("_id"), t3.options._id = false)), t3;
        };
      }, 1344: (t2, e2, r2) => {
        "use strict";
        t2.exports = r2(6353).UUID;
      }, 1347: (t2, e2) => {
        "use strict";
        e2.isMongooseDocumentArray = function(t3) {
          return Array.isArray(t3) && t3.isMongooseDocumentArray;
        };
      }, 1350: (t2, e2, r2) => {
        "use strict";
        function n(t3) {
          return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
            return typeof t4;
          } : function(t4) {
            return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
          }, n(t3);
        }
        __name(n, "n");
        function o() {
          try {
            var t3 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch (t4) {
          }
          return (o = /* @__PURE__ */ __name(function() {
            return !!t3;
          }, "o"))();
        }
        __name(o, "o");
        function i(t3) {
          return i = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t4) {
            return t4.__proto__ || Object.getPrototypeOf(t4);
          }, i(t3);
        }
        __name(i, "i");
        function s(t3, e3) {
          return s = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t4, e4) {
            return t4.__proto__ = e4, t4;
          }, s(t3, e3);
        }
        __name(s, "s");
        var a = function(t3) {
          function e3(t4, r4, s2) {
            return function(t5, e4) {
              if (!(t5 instanceof e4)) throw new TypeError("Cannot call a class as a function");
            }(this, e3), function(t5, e4, r5) {
              return e4 = i(e4), function(t6, e5) {
                if (e5 && ("object" == n(e5) || "function" == typeof e5)) return e5;
                if (void 0 !== e5) throw new TypeError("Derived constructors may only return object or undefined");
                return function(t7) {
                  if (void 0 === t7) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                  return t7;
                }(t6);
              }(t5, o() ? Reflect.construct(e4, r5 || [], i(t5).constructor) : e4.apply(t5, r5));
            }(this, e3, ['Parameter "' + r4 + '" to ' + s2 + '() must be an object, got "' + t4.toString() + '" (type ' + n(t4) + ")"]);
          }
          __name(e3, "e");
          return function(t4, e4) {
            if ("function" != typeof e4 && null !== e4) throw new TypeError("Super expression must either be null or a function");
            t4.prototype = Object.create(e4 && e4.prototype, { constructor: { value: t4, writable: true, configurable: true } }), Object.defineProperty(t4, "prototype", { writable: false }), e4 && s(t4, e4);
          }(e3, t3), r3 = e3, Object.defineProperty(r3, "prototype", { writable: false }), r3;
          var r3;
        }(r2(8213));
        Object.defineProperty(a.prototype, "name", { value: "ObjectParameterError" }), t2.exports = a;
      }, 1417: (t2, e2, r2) => {
        "use strict";
        function n(t3) {
          return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
            return typeof t4;
          } : function(t4) {
            return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
          }, n(t3);
        }
        __name(n, "n");
        function o() {
          try {
            var t3 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch (t4) {
          }
          return (o = /* @__PURE__ */ __name(function() {
            return !!t3;
          }, "o"))();
        }
        __name(o, "o");
        function i(t3) {
          return i = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t4) {
            return t4.__proto__ || Object.getPrototypeOf(t4);
          }, i(t3);
        }
        __name(i, "i");
        function s(t3, e3) {
          return s = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t4, e4) {
            return t4.__proto__ = e4, t4;
          }, s(t3, e3);
        }
        __name(s, "s");
        var a = function(t3) {
          function e3(t4) {
            return function(t5, e4) {
              if (!(t5 instanceof e4)) throw new TypeError("Cannot call a class as a function");
            }(this, e3), function(t5, e4, r4) {
              return e4 = i(e4), function(t6, e5) {
                if (e5 && ("object" == n(e5) || "function" == typeof e5)) return e5;
                if (void 0 !== e5) throw new TypeError("Derived constructors may only return object or undefined");
                return function(t7) {
                  if (void 0 === t7) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                  return t7;
                }(t6);
              }(t5, o() ? Reflect.construct(e4, r4 || [], i(t5).constructor) : e4.apply(t5, r4));
            }(this, e3, ["For your own good, using `document.save()` to update an array which was selected using an $elemMatch projection OR populated using skip, limit, query conditions, or exclusion of the _id field when the operation results in a $pop or $set of the entire array is not supported. The following path(s) would have been modified unsafely:\n  " + t4.join("\n  ") + "\nUse Model.updateOne() to update these arrays instead."]);
          }
          __name(e3, "e");
          return function(t4, e4) {
            if ("function" != typeof e4 && null !== e4) throw new TypeError("Super expression must either be null or a function");
            t4.prototype = Object.create(e4 && e4.prototype, { constructor: { value: t4, writable: true, configurable: true } }), Object.defineProperty(t4, "prototype", { writable: false }), e4 && s(t4, e4);
          }(e3, t3), r3 = e3, Object.defineProperty(r3, "prototype", { writable: false }), r3;
          var r3;
        }(r2(8213));
        Object.defineProperty(a.prototype, "name", { value: "DivergentArrayError" }), t2.exports = a;
      }, 1464: (t2, e2, r2) => {
        "use strict";
        var n = r2(5807);
        if (n) try {
          n([], "length");
        } catch (t3) {
          n = null;
        }
        t2.exports = n;
      }, 1469: (t2, e2, r2) => {
        "use strict";
        function n(t3) {
          return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
            return typeof t4;
          } : function(t4) {
            return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
          }, n(t3);
        }
        __name(n, "n");
        function o(t3, e3) {
          var r3 = Object.keys(t3);
          if (Object.getOwnPropertySymbols) {
            var n2 = Object.getOwnPropertySymbols(t3);
            e3 && (n2 = n2.filter(function(e4) {
              return Object.getOwnPropertyDescriptor(t3, e4).enumerable;
            })), r3.push.apply(r3, n2);
          }
          return r3;
        }
        __name(o, "o");
        function i(t3, e3, r3) {
          return (e3 = function(t4) {
            var e4 = function(t5) {
              if ("object" != n(t5) || !t5) return t5;
              var e5 = t5[Symbol.toPrimitive];
              if (void 0 !== e5) {
                var r4 = e5.call(t5, "string");
                if ("object" != n(r4)) return r4;
                throw new TypeError("@@toPrimitive must return a primitive value.");
              }
              return String(t5);
            }(t4);
            return "symbol" == n(e4) ? e4 : e4 + "";
          }(e3)) in t3 ? Object.defineProperty(t3, e3, { value: r3, enumerable: true, configurable: true, writable: true }) : t3[e3] = r3, t3;
        }
        __name(i, "i");
        function s() {
          var t3, e3, r3 = "function" == typeof Symbol ? Symbol : {}, n2 = r3.iterator || "@@iterator", o2 = r3.toStringTag || "@@toStringTag";
          function i2(r4, n3, o3, i3) {
            var s2 = n3 && n3.prototype instanceof c2 ? n3 : c2, l3 = Object.create(s2.prototype);
            return a(l3, "_invoke", function(r5, n4, o4) {
              var i4, s3, a2, c3 = 0, l4 = o4 || [], f3 = false, p3 = { p: 0, n: 0, v: t3, a: h3, f: h3.bind(t3, 4), d: /* @__PURE__ */ __name(function(e4, r6) {
                return i4 = e4, s3 = 0, a2 = t3, p3.n = r6, u2;
              }, "d") };
              function h3(r6, n5) {
                for (s3 = r6, a2 = n5, e3 = 0; !f3 && c3 && !o5 && e3 < l4.length; e3++) {
                  var o5, i5 = l4[e3], h4 = p3.p, y3 = i5[2];
                  r6 > 3 ? (o5 = y3 === n5) && (a2 = i5[(s3 = i5[4]) ? 5 : (s3 = 3, 3)], i5[4] = i5[5] = t3) : i5[0] <= h4 && ((o5 = r6 < 2 && h4 < i5[1]) ? (s3 = 0, p3.v = n5, p3.n = i5[1]) : h4 < y3 && (o5 = r6 < 3 || i5[0] > n5 || n5 > y3) && (i5[4] = r6, i5[5] = n5, p3.n = y3, s3 = 0));
                }
                if (o5 || r6 > 1) return u2;
                throw f3 = true, n5;
              }
              __name(h3, "h");
              return function(o5, l5, y3) {
                if (c3 > 1) throw TypeError("Generator is already running");
                for (f3 && 1 === l5 && h3(l5, y3), s3 = l5, a2 = y3; (e3 = s3 < 2 ? t3 : a2) || !f3; ) {
                  i4 || (s3 ? s3 < 3 ? (s3 > 1 && (p3.n = -1), h3(s3, a2)) : p3.n = a2 : p3.v = a2);
                  try {
                    if (c3 = 2, i4) {
                      if (s3 || (o5 = "next"), e3 = i4[o5]) {
                        if (!(e3 = e3.call(i4, a2))) throw TypeError("iterator result is not an object");
                        if (!e3.done) return e3;
                        a2 = e3.value, s3 < 2 && (s3 = 0);
                      } else 1 === s3 && (e3 = i4.return) && e3.call(i4), s3 < 2 && (a2 = TypeError("The iterator does not provide a '" + o5 + "' method"), s3 = 1);
                      i4 = t3;
                    } else if ((e3 = (f3 = p3.n < 0) ? a2 : r5.call(n4, p3)) !== u2) break;
                  } catch (e4) {
                    i4 = t3, s3 = 1, a2 = e4;
                  } finally {
                    c3 = 1;
                  }
                }
                return { value: e3, done: f3 };
              };
            }(r4, o3, i3), true), l3;
          }
          __name(i2, "i");
          var u2 = {};
          function c2() {
          }
          __name(c2, "c");
          function l2() {
          }
          __name(l2, "l");
          function f2() {
          }
          __name(f2, "f");
          e3 = Object.getPrototypeOf;
          var p2 = [][n2] ? e3(e3([][n2]())) : (a(e3 = {}, n2, function() {
            return this;
          }), e3), h2 = f2.prototype = c2.prototype = Object.create(p2);
          function y2(t4) {
            return Object.setPrototypeOf ? Object.setPrototypeOf(t4, f2) : (t4.__proto__ = f2, a(t4, o2, "GeneratorFunction")), t4.prototype = Object.create(h2), t4;
          }
          __name(y2, "y");
          return l2.prototype = f2, a(h2, "constructor", f2), a(f2, "constructor", l2), l2.displayName = "GeneratorFunction", a(f2, o2, "GeneratorFunction"), a(h2), a(h2, o2, "Generator"), a(h2, n2, function() {
            return this;
          }), a(h2, "toString", function() {
            return "[object Generator]";
          }), (s = /* @__PURE__ */ __name(function() {
            return { w: i2, m: y2 };
          }, "s"))();
        }
        __name(s, "s");
        function a(t3, e3, r3, n2) {
          var o2 = Object.defineProperty;
          try {
            o2({}, "", {});
          } catch (t4) {
            o2 = 0;
          }
          a = /* @__PURE__ */ __name(function(t4, e4, r4, n3) {
            function i2(e5, r5) {
              a(t4, e5, function(t5) {
                return this._invoke(e5, r5, t5);
              });
            }
            __name(i2, "i");
            e4 ? o2 ? o2(t4, e4, { value: r4, enumerable: !n3, configurable: !n3, writable: !n3 }) : t4[e4] = r4 : (i2("next", 0), i2("throw", 1), i2("return", 2));
          }, "a"), a(t3, e3, r3, n2);
        }
        __name(a, "a");
        function u(t3) {
          return function(t4) {
            if (Array.isArray(t4)) return f(t4);
          }(t3) || function(t4) {
            if ("undefined" != typeof Symbol && null != t4[Symbol.iterator] || null != t4["@@iterator"]) return Array.from(t4);
          }(t3) || l(t3) || function() {
            throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }();
        }
        __name(u, "u");
        function c(t3, e3) {
          var r3 = "undefined" != typeof Symbol && t3[Symbol.iterator] || t3["@@iterator"];
          if (!r3) {
            if (Array.isArray(t3) || (r3 = l(t3)) || e3 && t3 && "number" == typeof t3.length) {
              r3 && (t3 = r3);
              var n2 = 0, o2 = /* @__PURE__ */ __name(function() {
              }, "o");
              return { s: o2, n: /* @__PURE__ */ __name(function() {
                return n2 >= t3.length ? { done: true } : { done: false, value: t3[n2++] };
              }, "n"), e: /* @__PURE__ */ __name(function(t4) {
                throw t4;
              }, "e"), f: o2 };
            }
            throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }
          var i2, s2 = true, a2 = false;
          return { s: /* @__PURE__ */ __name(function() {
            r3 = r3.call(t3);
          }, "s"), n: /* @__PURE__ */ __name(function() {
            var t4 = r3.next();
            return s2 = t4.done, t4;
          }, "n"), e: /* @__PURE__ */ __name(function(t4) {
            a2 = true, i2 = t4;
          }, "e"), f: /* @__PURE__ */ __name(function() {
            try {
              s2 || null == r3.return || r3.return();
            } finally {
              if (a2) throw i2;
            }
          }, "f") };
        }
        __name(c, "c");
        function l(t3, e3) {
          if (t3) {
            if ("string" == typeof t3) return f(t3, e3);
            var r3 = {}.toString.call(t3).slice(8, -1);
            return "Object" === r3 && t3.constructor && (r3 = t3.constructor.name), "Map" === r3 || "Set" === r3 ? Array.from(t3) : "Arguments" === r3 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r3) ? f(t3, e3) : void 0;
          }
        }
        __name(l, "l");
        function f(t3, e3) {
          (null == e3 || e3 > t3.length) && (e3 = t3.length);
          for (var r3 = 0, n2 = Array(e3); r3 < e3; r3++) n2[r3] = t3[r3];
          return n2;
        }
        __name(f, "f");
        var p = r2(5022), h = r2(8442), y = r2(4450), d = r2(2068).X, b = r2(3703), m = r2(8768), v = r2(4301), g = { toJSON: true, toObject: true, _id: true, id: true, virtuals: true, methods: true, statics: true };
        t2.exports = function(t3, e3, r3, n2, a2, l2, f2) {
          if (!r3 || !r3.instanceOfSchema) throw new Error("You must pass a valid discriminator Schema");
          if (l2 = null == l2 || l2, t3.schema.discriminatorMapping && !t3.schema.discriminatorMapping.isRoot) throw new Error('Discriminator "' + e3 + '" can only be a discriminator of the root model');
          if (a2) {
            var _ = b(t3.base, "options.applyPluginsToDiscriminators", false) || !l2;
            t3.base._applyPlugins(r3, { skipTopLevel: !_ });
          } else l2 || h(r3);
          var w = t3.schema.options.discriminatorKey, O = t3.schema.path(w);
          if (null != O) m.hasUserDefinedProperty(O.options, "select") || (O.options.select = true), O.options.$skipDiscriminatorCheck = true;
          else {
            var S = {};
            S[w] = { default: void 0, select: true, $skipDiscriminatorCheck: true }, S[w][t3.schema.options.typeKey] = String, t3.schema.add(S), d({ prop: w, prototype: t3.prototype, options: t3.schema.options });
          }
          if (r3.path(w) && true !== r3.path(w).options.$skipDiscriminatorCheck) throw new Error('Discriminator "' + e3 + '" cannot have field with name "' + w + '"');
          var $ = e3;
          if (("string" == typeof n2 && n2.length || null != n2) && ($ = n2), function(t4, e4) {
            var r4 = s().m(l3);
            if (null != t4.encryptionType() || null != e4.encryptionType()) {
              var n3, o2 = c(l3(a3(t4), a3(e4)));
              try {
                for (o2.s(); !(n3 = o2.n()).done; ) {
                  var i2 = n3.value;
                  if (t4._hasEncryptedField(i2) && e4._hasEncryptedField(i2)) throw new Error("encrypted fields cannot be declared on both the base schema and the child schema in a discriminator. path=".concat(i2));
                  if (t4._hasEncryptedField(i2) || e4._hasEncryptedField(i2)) throw new Error("encrypted fields cannot have the same path as a non-encrypted field for discriminators. path=".concat(i2));
                }
              } catch (t5) {
                o2.e(t5);
              } finally {
                o2.f();
              }
            }
            function a3(t5) {
              return [].concat(u(Object.keys(t5.paths)), u(Object.keys(t5.singleNestedPaths)));
            }
            __name(a3, "a");
            function l3(t5, e5) {
              var n4, o3, i3, a4, u2;
              return s().w(function(r5) {
                for (; ; ) switch (r5.p = r5.n) {
                  case 0:
                    n4 = new Set(t5), o3 = c(e5), r5.p = 1, o3.s();
                  case 2:
                    if ((i3 = o3.n()).done) {
                      r5.n = 4;
                      break;
                    }
                    if (a4 = i3.value, !n4.has(a4)) {
                      r5.n = 3;
                      break;
                    }
                    return r5.n = 3, a4;
                  case 3:
                    r5.n = 2;
                    break;
                  case 4:
                    r5.n = 6;
                    break;
                  case 5:
                    r5.p = 5, u2 = r5.v, o3.e(u2);
                  case 6:
                    return r5.p = 6, o3.f(), r5.f(6);
                  case 7:
                    return r5.a(2);
                }
              }, r4, null, [[1, 5, 6, 7]]);
            }
            __name(l3, "l");
          }(t3.schema, r3), function(e4, r4) {
            e4._baseSchema = r4, r4.paths._id && r4.paths._id.options && !r4.paths._id.options.auto && e4.remove("_id");
            for (var n3 = [], s2 = 0, u2 = Object.keys(r4.paths); s2 < u2.length; s2++) {
              var f3 = u2[s2];
              if (e4.nested[f3]) n3.push(f3);
              else if (-1 !== f3.indexOf(".")) {
                var h2, d2 = "", b2 = c(f3.split(".").slice(0, -1));
                try {
                  for (b2.s(); !(h2 = b2.n()).done; ) {
                    var _2 = h2.value;
                    d2 += (d2.length ? "." : "") + _2, (e4.paths[d2] instanceof p || e4.singleNestedPaths[d2] instanceof p) && n3.push(f3);
                  }
                } catch (t4) {
                  b2.e(t4);
                } finally {
                  b2.f();
                }
              }
            }
            e4.obj = function(t4) {
              for (var e5 = 1; e5 < arguments.length; e5++) {
                var r5 = null != arguments[e5] ? arguments[e5] : {};
                e5 % 2 ? o(Object(r5), true).forEach(function(e6) {
                  i(t4, e6, r5[e6]);
                }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t4, Object.getOwnPropertyDescriptors(r5)) : o(Object(r5)).forEach(function(e6) {
                  Object.defineProperty(t4, e6, Object.getOwnPropertyDescriptor(r5, e6));
                });
              }
              return t4;
            }({}, e4.obj), v(e4, r4), e4._gatherChildSchemas();
            for (var S2 = 0, j = n3; S2 < j.length; S2++) {
              var P = j[S2];
              delete e4.paths[P];
            }
            e4.childSchemas.forEach(function(t4) {
              t4.model.prototype.$__setSchema(t4.schema);
            });
            var A = {};
            A[w] = { default: $, select: true, set: /* @__PURE__ */ __name(function(t4) {
              if (t4 === $ || Array.isArray($) && m.deepEqual(t4, $)) return $;
              throw new Error(`Can't set discriminator key "` + w + '"');
            }, "set"), $skipDiscriminatorCheck: true }, A[w][e4.options.typeKey] = O ? O.options[e4.options.typeKey] : String, e4.add(A), e4.discriminatorMapping = { key: w, value: $, isRoot: false }, r4.options.collection && (e4.options.collection = r4.options.collection);
            var E = e4.options.toJSON, x = e4.options.toObject, T = e4.options._id, k = e4.options.id, N = Object.keys(e4.options);
            e4.options.discriminatorKey = r4.options.discriminatorKey;
            for (var I = e4._userProvidedOptions, B = 0, M = N; B < M.length; B++) {
              var D = M[B];
              if (!g[D] && D in I && !m.deepEqual(e4.options[D], r4.options[D])) throw new Error("Can't customize discriminator option " + D + " (can only modify " + Object.keys(g).join(", ") + ")");
            }
            e4.options = y(r4.options);
            for (var R = 0, U = Object.keys(I); R < U.length; R++) {
              var C = U[R];
              e4.options[C] = I[C];
            }
            E && (e4.options.toJSON = E), x && (e4.options.toObject = x), void 0 !== T && (e4.options._id = T), e4.options.id = k, l2 && (e4.s.hooks = t3.schema.s.hooks.merge(e4.s.hooks)), a2 && (e4.plugins = Array.prototype.slice.call(r4.plugins)), e4.callQueue = r4.callQueue.concat(e4.callQueue), delete e4._requiredpaths;
          }(r3, t3.schema), t3.discriminators || (t3.discriminators = {}), t3.schema.discriminatorMapping || (t3.schema.discriminatorMapping = { key: w, value: null, isRoot: true }), t3.schema.discriminators || (t3.schema.discriminators = {}), t3.schema.discriminators[e3] = r3, t3.discriminators[e3] && !r3.options.overwriteModels && !f2) throw new Error('Discriminator with name "' + e3 + '" already exists');
          return r3;
        };
      }, 1505: (t2) => {
        "use strict";
        t2.exports = function(t3, e2, r2, n, o) {
          var i = null != e2 && false === e2.updatedAt, s = null != e2 && false === e2.createdAt, a = null != r2 ? r2() : t3.ownerDocument().constructor.base.now();
          if (!s && (t3.isNew || t3.$isSubdocument) && n && !t3.$__getValue(n) && t3.$__isSelected(n) && t3.$set(n, a, void 0, { overwriteImmutable: true }), !i && o && (t3.isNew || t3.$isModified())) {
            var u = a;
            t3.isNew && null != n && (u = t3.$__getValue(n)), t3.$set(o, u);
          }
        };
      }, 1635: (t2, e2, r2) => {
        "use strict";
        function n(t3) {
          return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
            return typeof t4;
          } : function(t4) {
            return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
          }, n(t3);
        }
        __name(n, "n");
        function o() {
          try {
            var t3 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch (t4) {
          }
          return (o = /* @__PURE__ */ __name(function() {
            return !!t3;
          }, "o"))();
        }
        __name(o, "o");
        function i(t3) {
          return i = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t4) {
            return t4.__proto__ || Object.getPrototypeOf(t4);
          }, i(t3);
        }
        __name(i, "i");
        function s(t3, e3) {
          return s = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t4, e4) {
            return t4.__proto__ = e4, t4;
          }, s(t3, e3);
        }
        __name(s, "s");
        var a = function(t3) {
          function e3(t4) {
            return function(t5, e4) {
              if (!(t5 instanceof e4)) throw new TypeError("Cannot call a class as a function");
            }(this, e3), function(t5, e4, r4) {
              return e4 = i(e4), function(t6, e5) {
                if (e5 && ("object" == n(e5) || "function" == typeof e5)) return e5;
                if (void 0 !== e5) throw new TypeError("Derived constructors may only return object or undefined");
                return function(t7) {
                  if (void 0 === t7) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                  return t7;
                }(t6);
              }(t5, o() ? Reflect.construct(e4, r4 || [], i(t5).constructor) : e4.apply(t5, r4));
            }(this, e3, ["Can't validate() the same doc multiple times in parallel. Document: " + t4._doc._id]);
          }
          __name(e3, "e");
          return function(t4, e4) {
            if ("function" != typeof e4 && null !== e4) throw new TypeError("Super expression must either be null or a function");
            t4.prototype = Object.create(e4 && e4.prototype, { constructor: { value: t4, writable: true, configurable: true } }), Object.defineProperty(t4, "prototype", { writable: false }), e4 && s(t4, e4);
          }(e3, t3), r3 = e3, Object.defineProperty(r3, "prototype", { writable: false }), r3;
          var r3;
        }(r2(8213));
        Object.defineProperty(a.prototype, "name", { value: "ParallelValidateError" }), t2.exports = a;
      }, 1679: (t2) => {
        "function" == typeof Object.create ? t2.exports = function(t3, e2) {
          e2 && (t3.super_ = e2, t3.prototype = Object.create(e2.prototype, { constructor: { value: t3, enumerable: false, writable: true, configurable: true } }));
        } : t2.exports = function(t3, e2) {
          if (e2) {
            t3.super_ = e2;
            var r2 = /* @__PURE__ */ __name(function() {
            }, "r");
            r2.prototype = e2.prototype, t3.prototype = new r2(), t3.prototype.constructor = t3;
          }
        };
      }, 1697: (t2) => {
        "use strict";
        t2.exports = Math.max;
      }, 1732: (t2, e2, r2) => {
        "use strict";
        function n(t3) {
          return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
            return typeof t4;
          } : function(t4) {
            return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
          }, n(t3);
        }
        __name(n, "n");
        function o(t3, e3) {
          var r3 = Object.keys(t3);
          if (Object.getOwnPropertySymbols) {
            var n2 = Object.getOwnPropertySymbols(t3);
            e3 && (n2 = n2.filter(function(e4) {
              return Object.getOwnPropertyDescriptor(t3, e4).enumerable;
            })), r3.push.apply(r3, n2);
          }
          return r3;
        }
        __name(o, "o");
        function i(t3) {
          for (var e3 = 1; e3 < arguments.length; e3++) {
            var r3 = null != arguments[e3] ? arguments[e3] : {};
            e3 % 2 ? o(Object(r3), true).forEach(function(e4) {
              s(t3, e4, r3[e4]);
            }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t3, Object.getOwnPropertyDescriptors(r3)) : o(Object(r3)).forEach(function(e4) {
              Object.defineProperty(t3, e4, Object.getOwnPropertyDescriptor(r3, e4));
            });
          }
          return t3;
        }
        __name(i, "i");
        function s(t3, e3, r3) {
          return (e3 = function(t4) {
            var e4 = function(t5) {
              if ("object" != n(t5) || !t5) return t5;
              var e5 = t5[Symbol.toPrimitive];
              if (void 0 !== e5) {
                var r4 = e5.call(t5, "string");
                if ("object" != n(r4)) return r4;
                throw new TypeError("@@toPrimitive must return a primitive value.");
              }
              return String(t5);
            }(t4);
            return "symbol" == n(e4) ? e4 : e4 + "";
          }(e3)) in t3 ? Object.defineProperty(t3, e3, { value: r3, enumerable: true, configurable: true, writable: true }) : t3[e3] = r3, t3;
        }
        __name(s, "s");
        var a = r2(3609), u = r2(6426), c = r2(3704), l = r2(4327);
        function f(t3, e3) {
          u.call(this, t3, e3, "Double");
        }
        __name(f, "f");
        function p(t3) {
          return this.cast(t3);
        }
        __name(p, "p");
        f.schemaName = "Double", f.defaultOptions = {}, f.prototype = Object.create(u.prototype), f.prototype.constructor = f, f._cast = c, f.set = u.set, f.setters = [], f.get = u.get, f._defaultCaster = function(t3) {
          if (null != t3 && "Double" !== t3._bsontype) throw new Error();
          return t3;
        }, f.cast = function(t3) {
          return 0 === arguments.length || (false === t3 && (t3 = this._defaultCaster), this._cast = t3), this._cast;
        }, f._checkRequired = function(t3) {
          return null != t3;
        }, f.checkRequired = u.checkRequired, f.prototype.checkRequired = function(t3) {
          return this.constructor._checkRequired(t3);
        }, f.prototype.cast = function(t3) {
          var e3;
          e3 = "function" == typeof this._castFunction ? this._castFunction : "function" == typeof this.constructor.cast ? this.constructor.cast() : f.cast();
          try {
            return e3(t3);
          } catch (e4) {
            throw new a("Double", t3, this.path, e4, this);
          }
        };
        var h = i(i({}, u.prototype.$conditionalHandlers), {}, { $gt: p, $gte: p, $lt: p, $lte: p });
        Object.defineProperty(f.prototype, "$conditionalHandlers", { enumerable: false, value: h }), f.prototype.toJSONSchema = function(t3) {
          var e3 = this.options.required && "function" != typeof this.options.required;
          return l("number", "double", null == t3 ? void 0 : t3.useBsonType, e3);
        }, f.prototype.autoEncryptionType = function() {
          return "double";
        }, t2.exports = f;
      }, 1793: (t2, e2, r2) => {
        "use strict";
        var n = r2(7300), o = r2(2789);
        t2.exports = /* @__PURE__ */ __name(function t3(e3) {
          if (null == e3) return null;
          var r3 = Object.keys(e3), i = null;
          if (1 === r3.length && "_id" === r3[0]) i = !e3._id;
          else for (var s = 0; s < r3.length; ++s) {
            var a, u = r3[s];
            if ("_id" !== u && n(e3[u]) && null != (i = o(e3[u]) ? null !== (a = t3(e3[u])) && void 0 !== a ? a : i : !e3[u])) break;
          }
          return i;
        }, "t");
      }, 1824: (t2, e2, r2) => {
        "use strict";
        function n(t3) {
          return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
            return typeof t4;
          } : function(t4) {
            return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
          }, n(t3);
        }
        __name(n, "n");
        var o = r2(3703);
        t2.exports = function(t3, e3, r3, i, s, a) {
          var u = i, c = u, l = o(s, "timestamps", true);
          if (!l || null == u) return i;
          var f, p, h, y = null != l && false === l.createdAt, d = null != l && false === l.updatedAt;
          if (a) return i && i.$set && (i = i.$set, u.$set = {}, c = u.$set), d || !r3 || i[r3] || (c[r3] = t3), y || !e3 || i[e3] || (c[e3] = t3), u;
          if (i = i || {}, Array.isArray(u)) return null == r3 || u.push({ $set: (f = {}, p = r3, h = t3, (p = function(t4) {
            var e4 = function(t5) {
              if ("object" != n(t5) || !t5) return t5;
              var e5 = t5[Symbol.toPrimitive];
              if (void 0 !== e5) {
                var r4 = e5.call(t5, "string");
                if ("object" != n(r4)) return r4;
                throw new TypeError("@@toPrimitive must return a primitive value.");
              }
              return String(t5);
            }(t4);
            return "symbol" == n(e4) ? e4 : e4 + "";
          }(p)) in f ? Object.defineProperty(f, p, { value: h, enumerable: true, configurable: true, writable: true }) : f[p] = h, f) }), u;
          if (u.$set = u.$set || {}, !d && r3 && (!i.$currentDate || !i.$currentDate[r3])) {
            var b = false;
            if (-1 !== r3.indexOf(".")) for (var m = r3.split("."), v = 1; v < m.length; ++v) {
              var g = m.slice(-v).join("."), _ = m.slice(0, -v).join(".");
              if (null != i[_]) {
                i[_][g] = t3, b = true;
                break;
              }
              if (i.$set && i.$set[_]) {
                i.$set[_][g] = t3, b = true;
                break;
              }
            }
            b || (u.$set[r3] = t3), u.hasOwnProperty(r3) && delete u[r3];
          }
          if (!y && e3) {
            i[e3] && delete i[e3], i.$set && i.$set[e3] && delete i.$set[e3];
            var w = false;
            if (-1 !== e3.indexOf(".")) for (var O = e3.split("."), S = 1; S < O.length; ++S) {
              var $ = O.slice(-S).join("."), j = O.slice(0, -S).join(".");
              if (null != i[j]) {
                i[j][$] = t3, w = true;
                break;
              }
              if (i.$set && i.$set[j]) {
                i.$set[j][$] = t3, w = true;
                break;
              }
            }
            w || (u.$setOnInsert = u.$setOnInsert || {}, u.$setOnInsert[e3] = t3);
          }
          return 0 === Object.keys(u.$set).length && delete u.$set, u;
        };
      }, 1849: (t2, e2, r2) => {
        "use strict";
        function n(t3, e3) {
          (null == e3 || e3 > t3.length) && (e3 = t3.length);
          for (var r3 = 0, n2 = Array(e3); r3 < e3; r3++) n2[r3] = t3[r3];
          return n2;
        }
        __name(n, "n");
        var o = r2(8768);
        t2.exports = function(t3, e3) {
          if (null != t3._doc._id && null != e3 && 0 !== e3.length) {
            var r3, i = String(t3._doc._id), s = function(t4, e4) {
              var r4 = "undefined" != typeof Symbol && t4[Symbol.iterator] || t4["@@iterator"];
              if (!r4) {
                if (Array.isArray(t4) || (r4 = function(t5, e5) {
                  if (t5) {
                    if ("string" == typeof t5) return n(t5, e5);
                    var r5 = {}.toString.call(t5).slice(8, -1);
                    return "Object" === r5 && t5.constructor && (r5 = t5.constructor.name), "Map" === r5 || "Set" === r5 ? Array.from(t5) : "Arguments" === r5 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r5) ? n(t5, e5) : void 0;
                  }
                }(t4)) || e4 && t4 && "number" == typeof t4.length) {
                  r4 && (t4 = r4);
                  var o2 = 0, i2 = /* @__PURE__ */ __name(function() {
                  }, "i");
                  return { s: i2, n: /* @__PURE__ */ __name(function() {
                    return o2 >= t4.length ? { done: true } : { done: false, value: t4[o2++] };
                  }, "n"), e: /* @__PURE__ */ __name(function(t5) {
                    throw t5;
                  }, "e"), f: i2 };
                }
                throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
              }
              var s2, a2 = true, u2 = false;
              return { s: /* @__PURE__ */ __name(function() {
                r4 = r4.call(t4);
              }, "s"), n: /* @__PURE__ */ __name(function() {
                var t5 = r4.next();
                return a2 = t5.done, t5;
              }, "n"), e: /* @__PURE__ */ __name(function(t5) {
                u2 = true, s2 = t5;
              }, "e"), f: /* @__PURE__ */ __name(function() {
                try {
                  a2 || null == r4.return || r4.return();
                } finally {
                  if (u2) throw s2;
                }
              }, "f") };
            }(e3);
            try {
              for (s.s(); !(r3 = s.n()).done; ) {
                var a = r3.value;
                if (!a.isVirtual) for (var u = a.path.split("."), c = 0; c < u.length - 1; ++c) {
                  var l = u.slice(0, c + 1).join("."), f = u.slice(c + 1).join("."), p = t3.get(l);
                  if (null != p && o.isMongooseDocumentArray(p)) {
                    for (var h = 0; h < p.length; ++h) p[h] && p[h].populated(f, null == a._docs[i] ? void 0 : a._docs[i][h], a);
                    break;
                  }
                }
              }
            } catch (t4) {
              s.e(t4);
            } finally {
              s.f();
            }
          }
        };
      }, 1875: (t2) => {
        "use strict";
        t2.exports = function(t3) {
          for (var e2, r2 = Object.keys(t3.errors || {}), n = r2.length, o = [], i = 0; i < n; ++i) e2 = r2[i], t3 !== t3.errors[e2] && o.push(e2 + ": " + t3.errors[e2].message);
          return o.join(", ");
        };
      }, 1898: (t2, e2, r2) => {
        "use strict";
        e2.saveSubdocs = r2(4432), e2.sharding = r2(2824), e2.trackTransaction = r2(5889), e2.validateBeforeSave = r2(9848);
      }, 1905: (t2, e2, r2) => {
        "use strict";
        var n, o = r2(3071), i = r2(2724)(/^\s*(?:function)?\*/), s = r2(953)(), a = r2(209), u = o("Object.prototype.toString"), c = o("Function.prototype.toString");
        t2.exports = function(t3) {
          if ("function" != typeof t3) return false;
          if (i(c(t3))) return true;
          if (!s) return "[object GeneratorFunction]" === u(t3);
          if (!a) return false;
          if (void 0 === n) {
            var e3 = function() {
              if (!s) return false;
              try {
                return Function("return function*() {}")();
              } catch (t4) {
              }
            }();
            n = !!e3 && a(e3);
          }
          return a(t3) === n;
        };
      }, 2003: (t2, e2, r2) => {
        "use strict";
        var n = r2(3703), o = r2(608), i = r2(2423);
        t2.exports = function(t3) {
          var e3 = [], r3 = /* @__PURE__ */ new WeakMap(), s = t3.constructor.indexTypes, a = /* @__PURE__ */ new Map();
          return (/* @__PURE__ */ __name(function t4(u, c, l) {
            if (!r3.has(u)) {
              r3.set(u, true), c = c || "";
              for (var f = 0, p = Object.keys(u.paths); f < p.length; f++) {
                var h = p[f], y = u.paths[h];
                if (null == l || !l.paths[h]) {
                  if (null != y._duplicateKeyErrorMessage && (u._duplicateKeyErrorMessagesByPath = u._duplicateKeyErrorMessagesByPath || {}, u._duplicateKeyErrorMessagesByPath[h] = y._duplicateKeyErrorMessage), y.$isMongooseDocumentArray || y.$isSingleNested) {
                    if (true !== n(y, "options.excludeIndexes") && true !== n(y, "schemaOptions.excludeIndexes") && true !== n(y, "schema.options.excludeIndexes") && t4(y.schema, c + h + "."), null != y.schema.discriminators) for (var d = y.schema.discriminators, b = 0, m = Object.keys(d); b < m.length; b++) {
                      t4(d[m[b]], c + h + ".", y.schema);
                    }
                    if (y.$isMongooseDocumentArray) continue;
                  }
                  var v = y._index || y.caster && y.caster._index;
                  if (false !== v && null != v) {
                    var g = {}, _ = o(v), w = _ ? v : {}, O = "string" == typeof v ? v : !!_ && v.type;
                    if (O && -1 !== s.indexOf(O)) g[c + h] = O;
                    else if (w.text) g[c + h] = "text", delete w.text;
                    else {
                      var S;
                      S = "descending" === v || "desc" === v || "ascending" !== v && "asc" !== v && -1 === Number(v), g[c + h] = S ? -1 : 1;
                    }
                    delete w.type, "background" in w || (w.background = true), null != u.options.autoIndex && (w._autoIndex = u.options.autoIndex);
                    var $ = w && w.name;
                    "string" == typeof $ && a.has($) ? Object.assign(a.get($), g) : (e3.push([g, w]), a.set($, g));
                  }
                }
              }
              r3.delete(u), c ? function(t5, r4) {
                for (var n2 = t5._indexes, o2 = n2.length, i2 = 0; i2 < o2; ++i2) {
                  for (var s2 = n2[i2][0], a2 = n2[i2][1], u2 = Object.keys(s2), c2 = u2.length, l2 = {}, f2 = 0; f2 < c2; ++f2) {
                    var p2 = u2[f2];
                    l2[r4 + p2] = s2[p2];
                  }
                  var h2 = Object.assign({}, a2);
                  if (null != a2 && null != a2.partialFilterExpression) {
                    h2.partialFilterExpression = {};
                    for (var y2 = a2.partialFilterExpression, d2 = 0, b2 = Object.keys(y2); d2 < b2.length; d2++) {
                      var m2 = b2[d2];
                      h2.partialFilterExpression[r4 + m2] = y2[m2];
                    }
                  }
                  e3.push([l2, h2]);
                }
              }(u, c) : (u._indexes.forEach(function(t5) {
                var e4 = t5[1];
                "background" in e4 || (e4.background = true), i(u, e4);
              }), e3 = e3.concat(u._indexes));
            }
          }, "t"))(t3), e3;
        };
      }, 2064: (t2, e2, r2) => {
        "use strict";
        var n = r2(2273), o = r2(9122), i = r2(4756), s = r2(2481), a = r2(9247), u = o(s(), Object);
        n(u, { getPolyfill: s, implementation: i, shim: a }), t2.exports = u;
      }, 2068: (t2, e2, r2) => {
        "use strict";
        var n, o = r2(4450), i = r2(7930).documentSchemaSymbol, s = r2(3303)._, a = r2(8768), u = r2(7930).getSymbol, c = r2(7930).scopeSymbol, l = a.isPOJO;
        e2.w = h, e2.X = y;
        var f = Object.freeze({ minimize: true, virtuals: false, getters: false, transform: false }), p = Object.freeze({ noDottedPath: true });
        function h(t3, e3, o2, i2) {
          n = n || r2(2400);
          for (var s2 = i2.typeKey, a2 = 0, u2 = Object.keys(t3); a2 < u2.length; a2++) {
            var c2 = u2[a2], f2 = t3[c2];
            y({ prop: c2, subprops: l(f2) && Object.keys(f2).length > 0 && (!f2[s2] || "type" === s2 && l(f2.type) && f2.type.type) ? f2 : null, prototype: e3, prefix: o2, options: i2 });
          }
        }
        __name(h, "h");
        function y(t3) {
          var e3 = t3.prop, a2 = t3.subprops, l2 = t3.prototype, y2 = t3.prefix, d = t3.options;
          n = n || r2(2400);
          var b = (y2 ? y2 + "." : "") + e3, m = (y2 = y2 || "") ? Object.freeze({}) : p;
          a2 ? Object.defineProperty(l2, e3, { enumerable: true, configurable: true, get: /* @__PURE__ */ __name(function() {
            var t4, e4, r3 = this;
            if (this.$__.getters || (this.$__.getters = {}), !this.$__.getters[b]) {
              var s2 = Object.create(n.prototype, (t4 = this, e4 = {}, Object.getOwnPropertyNames(t4).forEach(function(r4) {
                -1 === ["isNew", "$__", "$errors", "errors", "_doc", "$locals", "$op", "__parentArray", "__index", "$isDocumentArrayElement"].indexOf(r4) || (e4[r4] = Object.getOwnPropertyDescriptor(t4, r4), e4[r4].enumerable = false);
              }), e4));
              y2 || (s2.$__[c] = this), s2.$__.nestedPath = b, Object.defineProperty(s2, "schema", { enumerable: false, configurable: true, writable: false, value: l2.schema }), Object.defineProperty(s2, "$__schema", { enumerable: false, configurable: true, writable: false, value: l2.schema }), Object.defineProperty(s2, i, { enumerable: false, configurable: true, writable: false, value: l2.schema }), Object.defineProperty(s2, "toObject", { enumerable: false, configurable: true, writable: false, value: /* @__PURE__ */ __name(function() {
                return o(r3.get(b, null, { virtuals: this && this.schema && this.schema.options && this.schema.options.toObject && this.schema.options.toObject.virtuals || null }));
              }, "value") }), Object.defineProperty(s2, "$__get", { enumerable: false, configurable: true, writable: false, value: /* @__PURE__ */ __name(function() {
                return r3.get(b, null, { virtuals: this && this.schema && this.schema.options && this.schema.options.toObject && this.schema.options.toObject.virtuals || null });
              }, "value") }), Object.defineProperty(s2, "toJSON", { enumerable: false, configurable: true, writable: false, value: /* @__PURE__ */ __name(function() {
                return r3.get(b, null, { virtuals: this && this.schema && this.schema.options && this.schema.options.toJSON && this.schema.options.toJSON.virtuals || null });
              }, "value") }), Object.defineProperty(s2, "$__isNested", { enumerable: false, configurable: true, writable: false, value: true }), Object.defineProperty(s2, "$isEmpty", { enumerable: false, configurable: true, writable: false, value: /* @__PURE__ */ __name(function() {
                return 0 === Object.keys(this.get(b, null, f) || {}).length;
              }, "value") }), Object.defineProperty(s2, "$__parent", { enumerable: false, configurable: true, writable: false, value: this }), h(a2, s2, b, d), this.$__.getters[b] = s2;
            }
            return this.$__.getters[b];
          }, "get"), set: /* @__PURE__ */ __name(function(t4) {
            null != t4 && t4.$__isNested ? t4 = t4.$__get() : t4 instanceof n && !t4.$__isNested && (t4 = t4.$toObject(s)), (this.$__[c] || this).$set(b, t4);
          }, "set") }) : Object.defineProperty(l2, e3, { enumerable: true, configurable: true, get: /* @__PURE__ */ __name(function() {
            return this[u].call(this.$__[c] || this, b, null, m);
          }, "get"), set: /* @__PURE__ */ __name(function(t4) {
            this.$set.call(this.$__[c] || this, b, t4);
          }, "set") });
        }
        __name(y, "y");
      }, 2069: (t2, e2, r2) => {
        "use strict";
        function n(t3) {
          return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
            return typeof t4;
          } : function(t4) {
            return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
          }, n(t3);
        }
        __name(n, "n");
        function o(t3, e3) {
          for (var r3 = 0; r3 < e3.length; r3++) {
            var n2 = e3[r3];
            n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(t3, s(n2.key), n2);
          }
        }
        __name(o, "o");
        function i(t3, e3, r3) {
          return e3 && o(t3.prototype, e3), r3 && o(t3, r3), Object.defineProperty(t3, "prototype", { writable: false }), t3;
        }
        __name(i, "i");
        function s(t3) {
          var e3 = function(t4) {
            if ("object" != n(t4) || !t4) return t4;
            var e4 = t4[Symbol.toPrimitive];
            if (void 0 !== e4) {
              var r3 = e4.call(t4, "string");
              if ("object" != n(r3)) return r3;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(t4);
          }(t3);
          return "symbol" == n(e3) ? e3 : e3 + "";
        }
        __name(s, "s");
        var a = r2(5761), u = i(/* @__PURE__ */ __name(function t3(e3) {
          !function(t4, e4) {
            if (!(t4 instanceof e4)) throw new TypeError("Cannot call a class as a function");
          }(this, t3), Object.assign(this, e3), null != e3 && null != e3.options && (this.options = Object.assign({}, e3.options));
        }, "t"));
        Object.defineProperty(u.prototype, "ref", a), Object.defineProperty(u.prototype, "refPath", a), Object.defineProperty(u.prototype, "localField", a), Object.defineProperty(u.prototype, "foreignField", a), Object.defineProperty(u.prototype, "justOne", a), Object.defineProperty(u.prototype, "count", a), Object.defineProperty(u.prototype, "match", a), Object.defineProperty(u.prototype, "options", a), Object.defineProperty(u.prototype, "skip", a), Object.defineProperty(u.prototype, "limit", a), Object.defineProperty(u.prototype, "perDocumentLimit", a), t2.exports = u;
      }, 2073: (t2) => {
        "use strict";
        t2.exports = /* @__PURE__ */ __name(function t3(e2) {
          if (!Array.isArray(e2)) return { min: 0, max: 0, containsNonArrayItem: true };
          if (0 === e2.length) return { min: 1, max: 1, containsNonArrayItem: false };
          if (1 === e2.length && !Array.isArray(e2[0])) return { min: 1, max: 1, containsNonArrayItem: false };
          for (var r2 = t3(e2[0]), n = 1; n < e2.length; ++n) {
            var o = t3(e2[n]);
            o.min < r2.min && (r2.min = o.min), o.max > r2.max && (r2.max = o.max), r2.containsNonArrayItem = r2.containsNonArrayItem || o.containsNonArrayItem;
          }
          return r2.min = r2.min + 1, r2.max = r2.max + 1, r2;
        }, "t");
      }, 2081: (t2, e2, r2) => {
        "use strict";
        function n(t3) {
          return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
            return typeof t4;
          } : function(t4) {
            return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
          }, n(t3);
        }
        __name(n, "n");
        function o(t3, e3) {
          var r3 = "undefined" != typeof Symbol && t3[Symbol.iterator] || t3["@@iterator"];
          if (!r3) {
            if (Array.isArray(t3) || (r3 = function(t4, e4) {
              if (t4) {
                if ("string" == typeof t4) return i(t4, e4);
                var r4 = {}.toString.call(t4).slice(8, -1);
                return "Object" === r4 && t4.constructor && (r4 = t4.constructor.name), "Map" === r4 || "Set" === r4 ? Array.from(t4) : "Arguments" === r4 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r4) ? i(t4, e4) : void 0;
              }
            }(t3)) || e3 && t3 && "number" == typeof t3.length) {
              r3 && (t3 = r3);
              var n2 = 0, o2 = /* @__PURE__ */ __name(function() {
              }, "o");
              return { s: o2, n: /* @__PURE__ */ __name(function() {
                return n2 >= t3.length ? { done: true } : { done: false, value: t3[n2++] };
              }, "n"), e: /* @__PURE__ */ __name(function(t4) {
                throw t4;
              }, "e"), f: o2 };
            }
            throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }
          var s2, a2 = true, u2 = false;
          return { s: /* @__PURE__ */ __name(function() {
            r3 = r3.call(t3);
          }, "s"), n: /* @__PURE__ */ __name(function() {
            var t4 = r3.next();
            return a2 = t4.done, t4;
          }, "n"), e: /* @__PURE__ */ __name(function(t4) {
            u2 = true, s2 = t4;
          }, "e"), f: /* @__PURE__ */ __name(function() {
            try {
              a2 || null == r3.return || r3.return();
            } finally {
              if (u2) throw s2;
            }
          }, "f") };
        }
        __name(o, "o");
        function i(t3, e3) {
          (null == e3 || e3 > t3.length) && (e3 = t3.length);
          for (var r3 = 0, n2 = Array(e3); r3 < e3; r3++) n2[r3] = t3[r3];
          return n2;
        }
        __name(i, "i");
        function s(t3, e3) {
          for (var r3 = 0; r3 < e3.length; r3++) {
            var n2 = e3[r3];
            n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(t3, a(n2.key), n2);
          }
        }
        __name(s, "s");
        function a(t3) {
          var e3 = function(t4) {
            if ("object" != n(t4) || !t4) return t4;
            var e4 = t4[Symbol.toPrimitive];
            if (void 0 !== e4) {
              var r3 = e4.call(t4, "string");
              if ("object" != n(r3)) return r3;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(t4);
          }(t3);
          return "symbol" == n(e3) ? e3 : e3 + "";
        }
        __name(a, "a");
        function u(t3, e3, r3, n2) {
          var o2 = c(h(1 & n2 ? t3.prototype : t3), e3, r3);
          return 2 & n2 && "function" == typeof o2 ? function(t4) {
            return o2.apply(r3, t4);
          } : o2;
        }
        __name(u, "u");
        function c() {
          return c = "undefined" != typeof Reflect && Reflect.get ? Reflect.get.bind() : function(t3, e3, r3) {
            var n2 = function(t4, e4) {
              for (; !{}.hasOwnProperty.call(t4, e4) && null !== (t4 = h(t4)); ) ;
              return t4;
            }(t3, e3);
            if (n2) {
              var o2 = Object.getOwnPropertyDescriptor(n2, e3);
              return o2.get ? o2.get.call(arguments.length < 3 ? t3 : r3) : o2.value;
            }
          }, c.apply(null, arguments);
        }
        __name(c, "c");
        function l(t3) {
          var e3 = "function" == typeof Map ? /* @__PURE__ */ new Map() : void 0;
          return l = /* @__PURE__ */ __name(function(t4) {
            if (null === t4 || !function(t5) {
              try {
                return -1 !== Function.toString.call(t5).indexOf("[native code]");
              } catch (e4) {
                return "function" == typeof t5;
              }
            }(t4)) return t4;
            if ("function" != typeof t4) throw new TypeError("Super expression must either be null or a function");
            if (void 0 !== e3) {
              if (e3.has(t4)) return e3.get(t4);
              e3.set(t4, r3);
            }
            function r3() {
              return function(t5, e4, r4) {
                if (f()) return Reflect.construct.apply(null, arguments);
                var n2 = [null];
                n2.push.apply(n2, e4);
                var o2 = new (t5.bind.apply(t5, n2))();
                return r4 && p(o2, r4.prototype), o2;
              }(t4, arguments, h(this).constructor);
            }
            __name(r3, "r");
            return r3.prototype = Object.create(t4.prototype, { constructor: { value: r3, enumerable: false, writable: true, configurable: true } }), p(r3, t4);
          }, "l"), l(t3);
        }
        __name(l, "l");
        function f() {
          try {
            var t3 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch (t4) {
          }
          return (f = /* @__PURE__ */ __name(function() {
            return !!t3;
          }, "f"))();
        }
        __name(f, "f");
        function p(t3, e3) {
          return p = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t4, e4) {
            return t4.__proto__ = e4, t4;
          }, p(t3, e3);
        }
        __name(p, "p");
        function h(t3) {
          return h = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t4) {
            return t4.__proto__ || Object.getPrototypeOf(t4);
          }, h(t3);
        }
        __name(h, "h");
        var y = r2(5022), d = r2(8213), b = r2(4450), m = r2(8768).deepEqual, v = r2(8260), g = r2(3216), _ = r2(7352), w = r2(2793), O = r2(3305), S = r2(4473), $ = r2(7930).populateModelSymbol, j = function(t3) {
          function e3(t4, r4, o2, i3) {
            var s2;
            return function(t5, e4) {
              if (!(t5 instanceof e4)) throw new TypeError("Cannot call a class as a function");
            }(this, e3), "Object" === v(t4) && (t4 = Object.keys(t4).reduce(function(e4, r5) {
              return e4.concat([[r5, t4[r5]]]);
            }, [])), (s2 = function(t5, e4, r5) {
              return e4 = h(e4), function(t6, e5) {
                if (e5 && ("object" == n(e5) || "function" == typeof e5)) return e5;
                if (void 0 !== e5) throw new TypeError("Derived constructors may only return object or undefined");
                return function(t7) {
                  if (void 0 === t7) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                  return t7;
                }(t6);
              }(t5, f() ? Reflect.construct(e4, r5 || [], h(t5).constructor) : e4.apply(t5, r5));
            }(this, e3, [t4])).$__parent = null != o2 && null != o2.$__ ? o2 : null, s2.$__path = r4, s2.$__schemaType = null == i3 ? new y(r4) : i3, s2.$__runDeferred(), s2;
          }
          __name(e3, "e");
          return function(t4, e4) {
            if ("function" != typeof e4 && null !== e4) throw new TypeError("Super expression must either be null or a function");
            t4.prototype = Object.create(e4 && e4.prototype, { constructor: { value: t4, writable: true, configurable: true } }), Object.defineProperty(t4, "prototype", { writable: false }), e4 && p(t4, e4);
          }(e3, t3), r3 = e3, i2 = [{ key: "$init", value: /* @__PURE__ */ __name(function(t4, r4) {
            P(t4), u(e3, "set", this, 3)([t4, r4]), null != r4 && r4.$isSingleNested && (r4.$basePath = this.$__path + "." + t4);
          }, "value") }, { key: "$__set", value: /* @__PURE__ */ __name(function(t4, r4) {
            u(e3, "set", this, 3)([t4, r4]);
          }, "value") }, { key: "get", value: /* @__PURE__ */ __name(function(t4, r4) {
            return O(t4, "ObjectId") && (t4 = t4.toString()), false === (r4 = r4 || {}).getters ? u(e3, "get", this, 3)([t4]) : this.$__schemaType.applyGetters(u(e3, "get", this, 3)([t4]), this.$__parent);
          }, "value") }, { key: "set", value: /* @__PURE__ */ __name(function(t4, r4) {
            if (O(t4, "ObjectId") && (t4 = t4.toString()), P(t4), r4 = g(r4), null == this.$__schemaType) return this.$__deferred = this.$__deferred || [], void this.$__deferred.push({ key: t4, value: r4 });
            var n2, o2 = this.$__parent, i3 = null != o2 && o2.$__ && o2.$__.populated ? o2.$populated(l2.call(this), true) || o2.$populated(this.$__path, true) : null, s2 = this.get(t4);
            if (null != i3) {
              if (this.$__schemaType.$isSingleNested) throw new d("Cannot manually populate single nested subdoc underneath Map " + 'at path "'.concat(this.$__path, '". Try using an array instead of a Map.'));
              Array.isArray(r4) && this.$__schemaType.$isMongooseArray ? r4 = r4.map(function(t5) {
                return null == t5.$__ && (t5 = new i3.options[$](t5)), t5.$__.wasPopulated = { value: t5._doc._id }, t5;
              }) : null != r4 && (null == r4.$__ && (r4 = new i3.options[$](r4)), r4.$__.wasPopulated = { value: r4._doc._id });
            } else try {
              var a2 = this.$__schemaType.$isMongooseDocumentArray || this.$__schemaType.$isSingleNested || this.$__schemaType.$isMongooseArray || this.$__schemaType.$isSchemaMap ? { path: l2.call(this) } : null;
              r4 = this.$__schemaType.applySetters(r4, this.$__parent, false, this.get(t4), a2);
            } catch (t5) {
              if (null != this.$__parent && null != this.$__parent.$__) return void this.$__parent.invalidate(l2.call(this), t5);
              throw t5;
            }
            if (u(e3, "set", this, 3)([t4, r4]), null != o2 && null != o2.$__ && !m(r4, s2)) {
              var c2 = l2.call(this);
              o2.markModified(c2), (this.$__schemaType.$isMongooseDocumentArray || this.$__schemaType.$isSingleNested) && S(o2, c2);
            }
            function l2() {
              return n2 || (n2 = this.$__path + "." + t4);
            }
            __name(l2, "l");
          }, "value") }, { key: "clear", value: /* @__PURE__ */ __name(function() {
            u(e3, "clear", this, 3)([]);
            var t4 = this.$__parent;
            null != t4 && t4.markModified(this.$__path);
          }, "value") }, { key: "delete", value: /* @__PURE__ */ __name(function(t4) {
            return O(t4, "ObjectId") && (t4 = t4.toString()), this.set(t4, void 0), u(e3, "delete", this, 3)([t4]);
          }, "value") }, { key: "toBSON", value: /* @__PURE__ */ __name(function() {
            return new Map(this);
          }, "value") }, { key: "toObject", value: /* @__PURE__ */ __name(function(t4) {
            if (t4 && t4.flattenMaps) {
              var e4, r4 = {}, n2 = o(this.keys());
              try {
                for (n2.s(); !(e4 = n2.n()).done; ) {
                  var i3 = e4.value;
                  r4[i3] = b(this.get(i3), t4);
                }
              } catch (t5) {
                n2.e(t5);
              } finally {
                n2.f();
              }
              return r4;
            }
            return new Map(this);
          }, "value") }, { key: "$toObject", value: /* @__PURE__ */ __name(function() {
            return this.constructor.prototype.toObject.apply(this, arguments);
          }, "value") }, { key: "toJSON", value: /* @__PURE__ */ __name(function(t4) {
            if ("boolean" != typeof (t4 && t4.flattenMaps) || t4.flattenMaps) {
              var e4, r4 = {}, n2 = o(this.keys());
              try {
                for (n2.s(); !(e4 = n2.n()).done; ) {
                  var i3 = e4.value;
                  r4[i3] = b(this.get(i3), t4);
                }
              } catch (t5) {
                n2.e(t5);
              } finally {
                n2.f();
              }
              return r4;
            }
            return new Map(this);
          }, "value") }, { key: "inspect", value: /* @__PURE__ */ __name(function() {
            return new Map(this);
          }, "value") }, { key: "$__runDeferred", value: /* @__PURE__ */ __name(function() {
            if (this.$__deferred) {
              var t4, e4 = o(this.$__deferred);
              try {
                for (e4.s(); !(t4 = e4.n()).done; ) {
                  var r4 = t4.value;
                  this.set(r4.key, r4.value);
                }
              } catch (t5) {
                e4.e(t5);
              } finally {
                e4.f();
              }
              this.$__deferred = null;
            }
          }, "value") }], i2 && s(r3.prototype, i2), Object.defineProperty(r3, "prototype", { writable: false }), r3;
          var r3, i2;
        }(l(Map));
        function P(t3) {
          var e3 = n(t3);
          if ("string" !== e3) throw new TypeError("Mongoose maps only support string keys, got ".concat(e3));
          if (t3.startsWith("$")) throw new Error('Mongoose maps do not support keys that start with "$", got "'.concat(t3, '"'));
          if (t3.includes(".")) throw new Error('Mongoose maps do not support keys that contain ".", got "'.concat(t3, '"'));
          if (w.has(t3)) throw new Error('Mongoose maps do not support reserved key name "'.concat(t3, '"'));
        }
        __name(P, "P");
        _.inspect.custom && Object.defineProperty(j.prototype, _.inspect.custom, { enumerable: false, writable: false, configurable: false, value: j.prototype.inspect }), Object.defineProperty(j.prototype, "$__set", { enumerable: false, writable: true, configurable: false }), Object.defineProperty(j.prototype, "$__parent", { enumerable: false, writable: true, configurable: false }), Object.defineProperty(j.prototype, "$__path", { enumerable: false, writable: true, configurable: false }), Object.defineProperty(j.prototype, "$__schemaType", { enumerable: false, writable: true, configurable: false }), Object.defineProperty(j.prototype, "$isMongooseMap", { enumerable: false, writable: false, configurable: false, value: true }), Object.defineProperty(j.prototype, "$__deferredCalls", { enumerable: false, writable: false, configurable: false, value: true }), t2.exports = j;
      }, 2097: (t2, e2, r2) => {
        "use strict";
        function n(t3) {
          return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
            return typeof t4;
          } : function(t4) {
            return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
          }, n(t3);
        }
        __name(n, "n");
        function o(t3, e3) {
          (null == e3 || e3 > t3.length) && (e3 = t3.length);
          for (var r3 = 0, n2 = Array(e3); r3 < e3; r3++) n2[r3] = t3[r3];
          return n2;
        }
        __name(o, "o");
        function i(t3, e3, r3) {
          return (e3 = function(t4) {
            var e4 = function(t5) {
              if ("object" != n(t5) || !t5) return t5;
              var e5 = t5[Symbol.toPrimitive];
              if (void 0 !== e5) {
                var r4 = e5.call(t5, "string");
                if ("object" != n(r4)) return r4;
                throw new TypeError("@@toPrimitive must return a primitive value.");
              }
              return String(t5);
            }(t4);
            return "symbol" == n(e4) ? e4 : e4 + "";
          }(e3)) in t3 ? Object.defineProperty(t3, e3, { value: r3, enumerable: true, configurable: true, writable: true }) : t3[e3] = r3, t3;
        }
        __name(i, "i");
        var s = r2(9166), a = r2(1824), u = r2(3703), c = r2(3696), l = r2(1505), f = r2(7160), p = /* @__PURE__ */ new Set(["replaceOne", "findOneAndReplace"]);
        t2.exports = function(t3, e3) {
          var r3 = t3.childSchemas.find(function(t4) {
            return !!t4.schema.options.timestamps;
          });
          if (e3 || r3) {
            var n2 = c(e3, "createdAt"), h = c(e3, "updatedAt"), y = null != e3 && e3.hasOwnProperty("currentTime") ? e3.currentTime : null, d = {};
            if (t3.$timestamps = { createdAt: n2, updatedAt: h }, n2 && !t3.paths[n2]) {
              var b = null != t3.base ? t3.base.get("timestamps.createdAt.immutable") : null, m = null == b || b;
              d[n2] = i(i({}, t3.options.typeKey || "type", Date), "immutable", m);
            }
            h && !t3.paths[h] && (d[h] = Date), t3.add(d), t3.pre("save", function(t4) {
              var e4 = u(this, "$__.saveOptions.timestamps");
              if (false === e4) return t4();
              l(this, e4, y, n2, h), t4();
            }), t3.methods.initializeTimestamps = function() {
              var t4 = null != y ? y() : this.constructor.base.now();
              if (n2 && !this.get(n2) && this.$set(n2, t4), h && !this.get(h) && this.$set(h, t4), this.$isSubdocument) return this;
              var e4, r4 = function(t5, e5) {
                var r5 = "undefined" != typeof Symbol && t5[Symbol.iterator] || t5["@@iterator"];
                if (!r5) {
                  if (Array.isArray(t5) || (r5 = function(t6, e6) {
                    if (t6) {
                      if ("string" == typeof t6) return o(t6, e6);
                      var r6 = {}.toString.call(t6).slice(8, -1);
                      return "Object" === r6 && t6.constructor && (r6 = t6.constructor.name), "Map" === r6 || "Set" === r6 ? Array.from(t6) : "Arguments" === r6 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r6) ? o(t6, e6) : void 0;
                    }
                  }(t5)) || e5 && t5 && "number" == typeof t5.length) {
                    r5 && (t5 = r5);
                    var n3 = 0, i3 = /* @__PURE__ */ __name(function() {
                    }, "i");
                    return { s: i3, n: /* @__PURE__ */ __name(function() {
                      return n3 >= t5.length ? { done: true } : { done: false, value: t5[n3++] };
                    }, "n"), e: /* @__PURE__ */ __name(function(t6) {
                      throw t6;
                    }, "e"), f: i3 };
                  }
                  throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
                }
                var s2, a2 = true, u2 = false;
                return { s: /* @__PURE__ */ __name(function() {
                  r5 = r5.call(t5);
                }, "s"), n: /* @__PURE__ */ __name(function() {
                  var t6 = r5.next();
                  return a2 = t6.done, t6;
                }, "n"), e: /* @__PURE__ */ __name(function(t6) {
                  u2 = true, s2 = t6;
                }, "e"), f: /* @__PURE__ */ __name(function() {
                  try {
                    a2 || null == r5.return || r5.return();
                  } finally {
                    if (u2) throw s2;
                  }
                }, "f") };
              }(this.$getAllSubdocs());
              try {
                for (r4.s(); !(e4 = r4.n()).done; ) {
                  var i2 = e4.value;
                  i2.initializeTimestamps && i2.initializeTimestamps();
                }
              } catch (t5) {
                r4.e(t5);
              } finally {
                r4.f();
              }
              return this;
            }, g[f.builtInMiddleware] = true;
            var v = { query: true, model: false };
            t3.pre("findOneAndReplace", v, g), t3.pre("findOneAndUpdate", v, g), t3.pre("replaceOne", v, g), t3.pre("update", v, g), t3.pre("updateOne", v, g), t3.pre("updateMany", v, g);
          }
          function g(t4) {
            var e4 = null != y ? y() : this.model.base.now();
            p.has(this.op) && null == this.getUpdate() && this.setUpdate({}), a(e4, n2, h, this.getUpdate(), this._mongooseOptions, p.has(this.op)), s(e4, this.getUpdate(), this.model.schema), t4();
          }
          __name(g, "g");
        };
      }, 2134: (t2, e2, r2) => {
        "use strict";
        var n = r2(5832).hp;
        function o(t3) {
          return o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
            return typeof t4;
          } : function(t4) {
            return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
          }, o(t3);
        }
        __name(o, "o");
        function i(t3, e3) {
          var r3 = Object.keys(t3);
          if (Object.getOwnPropertySymbols) {
            var n2 = Object.getOwnPropertySymbols(t3);
            e3 && (n2 = n2.filter(function(e4) {
              return Object.getOwnPropertyDescriptor(t3, e4).enumerable;
            })), r3.push.apply(r3, n2);
          }
          return r3;
        }
        __name(i, "i");
        function s(t3) {
          for (var e3 = 1; e3 < arguments.length; e3++) {
            var r3 = null != arguments[e3] ? arguments[e3] : {};
            e3 % 2 ? i(Object(r3), true).forEach(function(e4) {
              a(t3, e4, r3[e4]);
            }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t3, Object.getOwnPropertyDescriptors(r3)) : i(Object(r3)).forEach(function(e4) {
              Object.defineProperty(t3, e4, Object.getOwnPropertyDescriptor(r3, e4));
            });
          }
          return t3;
        }
        __name(s, "s");
        function a(t3, e3, r3) {
          return (e3 = function(t4) {
            var e4 = function(t5) {
              if ("object" != o(t5) || !t5) return t5;
              var e5 = t5[Symbol.toPrimitive];
              if (void 0 !== e5) {
                var r4 = e5.call(t5, "string");
                if ("object" != o(r4)) return r4;
                throw new TypeError("@@toPrimitive must return a primitive value.");
              }
              return String(t5);
            }(t4);
            return "symbol" == o(e4) ? e4 : e4 + "";
          }(e3)) in t3 ? Object.defineProperty(t3, e3, { value: r3, enumerable: true, configurable: true, writable: true }) : t3[e3] = r3, t3;
        }
        __name(a, "a");
        var u = r2(6365), c = r2(6426), l = c.CastError, f = r2(8250), p = r2(4327), h = r2(8768), y = r2(9460), d = f.UUID_FORMAT, b = u.Binary;
        function m(t3) {
          var e3;
          return "string" != typeof t3 && null != t3 ? (e3 = t3.toString("hex")).substring(0, 8) + "-" + e3.substring(8, 12) + "-" + e3.substring(12, 16) + "-" + e3.substring(16, 20) + "-" + e3.substring(20, 32) : t3;
        }
        __name(m, "m");
        function v(t3, e3) {
          c.call(this, t3, e3, "UUID"), this.getters.push(function(t4) {
            return null != t4 && null != t4.$__ ? t4 : n.isBuffer(t4) ? m(t4) : t4 instanceof b ? m(t4.buffer) : h.isPOJO(t4) && "Buffer" === t4.type && Array.isArray(t4.data) ? m(n.from(t4.data)) : t4;
          });
        }
        __name(v, "v");
        function g(t3) {
          return this.cast(t3);
        }
        __name(g, "g");
        function _(t3) {
          var e3 = this;
          return t3.map(function(t4) {
            return e3.cast(t4);
          });
        }
        __name(_, "_");
        v.schemaName = "UUID", v.defaultOptions = {}, v.prototype = Object.create(c.prototype), v.prototype.constructor = v, v._cast = f, v.get = c.get, v.set = c.set, v.setters = [], v.cast = function(t3) {
          return 0 === arguments.length || (false === t3 && (t3 = this._defaultCaster), this._cast = t3), this._cast;
        }, v._checkRequired = function(t3) {
          return null != t3;
        }, v.checkRequired = c.checkRequired, v.prototype.checkRequired = function(t3) {
          return n.isBuffer(t3) && (t3 = m(t3)), null != t3 && d.test(t3);
        }, v.prototype.cast = function(t3, e3, r3, n2, o2) {
          if (h.isNonBuiltinObject(t3) && c._isRef(this, t3, e3, r3)) return this._castRef(t3, e3, r3, o2);
          var i2;
          i2 = "function" == typeof this._castFunction ? this._castFunction : "function" == typeof this.constructor.cast ? this.constructor.cast() : v.cast();
          try {
            return i2(t3);
          } catch (e4) {
            throw new l(v.schemaName, t3, this.path, e4, this);
          }
        };
        var w = s(s({}, c.prototype.$conditionalHandlers), {}, { $bitsAllClear: y, $bitsAnyClear: y, $bitsAllSet: y, $bitsAnySet: y, $all: _, $gt: g, $gte: g, $in: _, $lt: g, $lte: g, $ne: g, $nin: _ });
        Object.defineProperty(v.prototype, "$conditionalHandlers", { enumerable: false, value: w }), v.prototype.castForQuery = function(t3, e3, r3) {
          var n2;
          if (null != t3) {
            if (!(n2 = this.$conditionalHandlers[t3])) throw new Error("Can't use " + t3 + " with UUID.");
            return n2.call(this, e3, r3);
          }
          try {
            return this.applySetters(e3, r3);
          } catch (t4) {
            throw t4 instanceof l && t4.path === this.path && null != this.$fullPath && (t4.path = this.$fullPath), t4;
          }
        }, v.prototype.toJSONSchema = function(t3) {
          var e3 = this.options.required && "function" != typeof this.options.required;
          return p("string", "binData", null == t3 ? void 0 : t3.useBsonType, e3);
        }, v.prototype.autoEncryptionType = function() {
          return "binData";
        }, t2.exports = v;
      }, 2151: (t2) => {
        "use strict";
        t2.exports = Math.round;
      }, 2268: (t2) => {
        "use strict";
        t2.exports = TypeError;
      }, 2273: (t2, e2, r2) => {
        "use strict";
        function n(t3) {
          return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
            return typeof t4;
          } : function(t4) {
            return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
          }, n(t3);
        }
        __name(n, "n");
        var o = r2(668), i = "function" == typeof Symbol && "symbol" === n(Symbol("foo")), s = Object.prototype.toString, a = Array.prototype.concat, u = r2(6750), c = r2(3191)(), l = /* @__PURE__ */ __name(function(t3, e3, r3, n2) {
          if (e3 in t3) {
            if (true === n2) {
              if (t3[e3] === r3) return;
            } else if ("function" != typeof (o2 = n2) || "[object Function]" !== s.call(o2) || !n2()) return;
          }
          var o2;
          c ? u(t3, e3, r3, true) : u(t3, e3, r3);
        }, "l"), f = /* @__PURE__ */ __name(function(t3, e3) {
          var r3 = arguments.length > 2 ? arguments[2] : {}, n2 = o(e3);
          i && (n2 = a.call(n2, Object.getOwnPropertySymbols(e3)));
          for (var s2 = 0; s2 < n2.length; s2 += 1) l(t3, n2[s2], e3[n2[s2]], r3[n2[s2]]);
        }, "f");
        f.supportsDescriptors = !!c, t2.exports = f;
      }, 2307: (t2, e2, r2) => {
        "use strict";
        var n = r2(5832).hp;
        function o(t3, e3) {
          var r3 = Object.keys(t3);
          if (Object.getOwnPropertySymbols) {
            var n2 = Object.getOwnPropertySymbols(t3);
            e3 && (n2 = n2.filter(function(e4) {
              return Object.getOwnPropertyDescriptor(t3, e4).enumerable;
            })), r3.push.apply(r3, n2);
          }
          return r3;
        }
        __name(o, "o");
        function i(t3) {
          for (var e3 = 1; e3 < arguments.length; e3++) {
            var r3 = null != arguments[e3] ? arguments[e3] : {};
            e3 % 2 ? o(Object(r3), true).forEach(function(e4) {
              s(t3, e4, r3[e4]);
            }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t3, Object.getOwnPropertyDescriptors(r3)) : o(Object(r3)).forEach(function(e4) {
              Object.defineProperty(t3, e4, Object.getOwnPropertyDescriptor(r3, e4));
            });
          }
          return t3;
        }
        __name(i, "i");
        function s(t3, e3, r3) {
          return (e3 = function(t4) {
            var e4 = function(t5) {
              if ("object" != a(t5) || !t5) return t5;
              var e5 = t5[Symbol.toPrimitive];
              if (void 0 !== e5) {
                var r4 = e5.call(t5, "string");
                if ("object" != a(r4)) return r4;
                throw new TypeError("@@toPrimitive must return a primitive value.");
              }
              return String(t5);
            }(t4);
            return "symbol" == a(e4) ? e4 : e4 + "";
          }(e3)) in t3 ? Object.defineProperty(t3, e3, { value: r3, enumerable: true, configurable: true, writable: true }) : t3[e3] = r3, t3;
        }
        __name(s, "s");
        function a(t3) {
          return a = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
            return typeof t4;
          } : function(t4) {
            return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
          }, a(t3);
        }
        __name(a, "a");
        var u = r2(6365), c = r2(2945), l = r2(6426), f = r2(4327), p = r2(9460), h = r2(8768), y = u.Binary, d = l.CastError;
        function b(t3, e3) {
          l.call(this, t3, e3, "Buffer");
        }
        __name(b, "b");
        function m(t3, e3) {
          return this.castForQuery(null, t3, e3);
        }
        __name(m, "m");
        b.schemaName = "Buffer", b.defaultOptions = {}, b.prototype = Object.create(l.prototype), b.prototype.constructor = b, b.prototype.OptionsConstructor = c, b._checkRequired = function(t3) {
          return !(!t3 || !t3.length);
        }, b.set = l.set, b.setters = [], b.get = l.get, b.checkRequired = l.checkRequired, b.prototype.checkRequired = function(t3, e3) {
          return l._isRef(this, t3, e3, true) ? !!t3 : this.constructor._checkRequired(t3);
        }, b.prototype.cast = function(t3, e3, r3, o2, i2) {
          var s2;
          if (l._isRef(this, t3, e3, r3)) {
            if (t3 && t3.isMongooseBuffer) return t3;
            if (n.isBuffer(t3)) return t3 && t3.isMongooseBuffer || (t3 = new u(t3, [this.path, e3]), null != this.options.subtype && (t3._subtype = this.options.subtype)), t3;
            if (t3 instanceof y) {
              if (s2 = new u(t3.value(true), [this.path, e3]), "number" != typeof t3.sub_type) throw new d("Buffer", t3, this.path, null, this);
              return s2._subtype = t3.sub_type, s2;
            }
            if (null == t3 || h.isNonBuiltinObject(t3)) return this._castRef(t3, e3, r3, i2);
          }
          if (t3 && t3._id && (t3 = t3._id), t3 && t3.isMongooseBuffer) return t3;
          if (n.isBuffer(t3)) return t3 && t3.isMongooseBuffer || (t3 = new u(t3, [this.path, e3]), null != this.options.subtype && (t3._subtype = this.options.subtype)), t3;
          if (t3 instanceof y) {
            if (s2 = new u(t3.value(true), [this.path, e3]), "number" != typeof t3.sub_type) throw new d("Buffer", t3, this.path, null, this);
            return s2._subtype = t3.sub_type, s2;
          }
          if (null === t3) return t3;
          var c2 = a(t3);
          if ("string" === c2 || "number" === c2 || Array.isArray(t3) || "object" === c2 && "Buffer" === t3.type && Array.isArray(t3.data)) return "number" === c2 && (t3 = [t3]), s2 = new u(t3, [this.path, e3]), null != this.options.subtype && (s2._subtype = this.options.subtype), s2;
          if (h.isPOJO(t3) && (t3.$binary instanceof y || "string" == typeof t3.$binary)) {
            var f2 = this.cast(n.from(t3.$binary, "base64"));
            if (null != t3.$type) return f2._subtype = t3.$type, f2;
          }
          throw new d("Buffer", t3, this.path, null, this);
        }, b.prototype.subtype = function(t3) {
          return this.options.subtype = t3, this;
        };
        var v = i(i({}, l.prototype.$conditionalHandlers), {}, { $bitsAllClear: p, $bitsAnyClear: p, $bitsAllSet: p, $bitsAnySet: p, $gt: m, $gte: m, $lt: m, $lte: m });
        Object.defineProperty(b.prototype, "$conditionalHandlers", { enumerable: false, value: v }), b.prototype.castForQuery = function(t3, e3, r3) {
          var n2, o2;
          if (null != t3) {
            if (!(n2 = this.$conditionalHandlers[t3])) throw new Error("Can't use " + t3 + " with Buffer.");
            return n2.call(this, e3);
          }
          try {
            o2 = this.applySetters(e3, r3);
          } catch (t4) {
            throw t4 instanceof d && t4.path === this.path && null != this.$fullPath && (t4.path = this.$fullPath), t4;
          }
          return o2 ? o2.toObject({ transform: false, virtuals: false }) : o2;
        }, b.prototype.toJSONSchema = function(t3) {
          var e3 = this.options.required && "function" != typeof this.options.required;
          return f("string", "binData", null == t3 ? void 0 : t3.useBsonType, e3);
        }, b.prototype.autoEncryptionType = function() {
          return "binData";
        }, t2.exports = b;
      }, 2345: (t2, e2, r2) => {
        "use strict";
        function n(t3, e3) {
          var r3 = Object.keys(t3);
          if (Object.getOwnPropertySymbols) {
            var n2 = Object.getOwnPropertySymbols(t3);
            e3 && (n2 = n2.filter(function(e4) {
              return Object.getOwnPropertyDescriptor(t3, e4).enumerable;
            })), r3.push.apply(r3, n2);
          }
          return r3;
        }
        __name(n, "n");
        function o(t3) {
          for (var e3 = 1; e3 < arguments.length; e3++) {
            var r3 = null != arguments[e3] ? arguments[e3] : {};
            e3 % 2 ? n(Object(r3), true).forEach(function(e4) {
              i(t3, e4, r3[e4]);
            }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t3, Object.getOwnPropertyDescriptors(r3)) : n(Object(r3)).forEach(function(e4) {
              Object.defineProperty(t3, e4, Object.getOwnPropertyDescriptor(r3, e4));
            });
          }
          return t3;
        }
        __name(o, "o");
        function i(t3, e3, r3) {
          return (e3 = function(t4) {
            var e4 = function(t5) {
              if ("object" != s(t5) || !t5) return t5;
              var e5 = t5[Symbol.toPrimitive];
              if (void 0 !== e5) {
                var r4 = e5.call(t5, "string");
                if ("object" != s(r4)) return r4;
                throw new TypeError("@@toPrimitive must return a primitive value.");
              }
              return String(t5);
            }(t4);
            return "symbol" == s(e4) ? e4 : e4 + "";
          }(e3)) in t3 ? Object.defineProperty(t3, e3, { value: r3, enumerable: true, configurable: true, writable: true }) : t3[e3] = r3, t3;
        }
        __name(i, "i");
        function s(t3) {
          return s = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
            return typeof t4;
          } : function(t4) {
            return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
          }, s(t3);
        }
        __name(s, "s");
        var a = r2(3672), u = r2(3731), c = r2(6426), l = r2(2477), f = r2(4327), p = r2(8260), h = r2(8768), y = c.CastError;
        function d(t3, e3) {
          c.call(this, t3, e3, "Date");
        }
        __name(d, "d");
        function b(t3) {
          return this.cast(t3);
        }
        __name(b, "b");
        d.schemaName = "Date", d.defaultOptions = {}, d.prototype = Object.create(c.prototype), d.prototype.constructor = d, d.prototype.OptionsConstructor = u, d._cast = l, d.set = c.set, d.setters = [], d.get = c.get, d.cast = function(t3) {
          return 0 === arguments.length || (false === t3 && (t3 = this._defaultCaster), this._cast = t3), this._cast;
        }, d._defaultCaster = function(t3) {
          if (null != t3 && !(t3 instanceof Date)) throw new Error();
          return t3;
        }, d.prototype.expires = function(t3) {
          return "Object" !== p(this._index) && (this._index = {}), this._index.expires = t3, h.expires(this._index), this;
        }, d._checkRequired = function(t3) {
          return t3 instanceof Date;
        }, d.checkRequired = c.checkRequired, d.prototype.checkRequired = function(t3, e3) {
          return "object" === s(t3) && c._isRef(this, t3, e3, true) ? null != t3 : ("function" == typeof this.constructor.checkRequired ? this.constructor.checkRequired() : d.checkRequired())(t3);
        }, d.prototype.min = function(t3, e3) {
          if (this.minValidator && (this.validators = this.validators.filter(function(t4) {
            return t4.validator !== this.minValidator;
          }, this)), t3) {
            var r3 = e3 || a.messages.Date.min;
            "string" == typeof r3 && (r3 = r3.replace(/{MIN}/, t3 === Date.now ? "Date.now()" : t3.toString()));
            var n2 = this;
            this.validators.push({ validator: this.minValidator = function(e4) {
              var r4 = t3;
              "function" == typeof t3 && t3 !== Date.now && (r4 = r4.call(this));
              var o2 = r4 === Date.now ? r4() : n2.cast(r4);
              return null === e4 || e4.valueOf() >= o2.valueOf();
            }, message: r3, type: "min", min: t3 });
          }
          return this;
        }, d.prototype.max = function(t3, e3) {
          if (this.maxValidator && (this.validators = this.validators.filter(function(t4) {
            return t4.validator !== this.maxValidator;
          }, this)), t3) {
            var r3 = e3 || a.messages.Date.max;
            "string" == typeof r3 && (r3 = r3.replace(/{MAX}/, t3 === Date.now ? "Date.now()" : t3.toString()));
            var n2 = this;
            this.validators.push({ validator: this.maxValidator = function(e4) {
              var r4 = t3;
              "function" == typeof r4 && r4 !== Date.now && (r4 = r4.call(this));
              var o2 = r4 === Date.now ? r4() : n2.cast(r4);
              return null === e4 || e4.valueOf() <= o2.valueOf();
            }, message: r3, type: "max", max: t3 });
          }
          return this;
        }, d.prototype.cast = function(t3) {
          var e3;
          e3 = "function" == typeof this._castFunction ? this._castFunction : "function" == typeof this.constructor.cast ? this.constructor.cast() : d.cast();
          try {
            return e3(t3);
          } catch (e4) {
            throw new y("date", t3, this.path, e4, this);
          }
        };
        var m = o(o({}, c.prototype.$conditionalHandlers), {}, { $gt: b, $gte: b, $lt: b, $lte: b });
        Object.defineProperty(d.prototype, "$conditionalHandlers", { enumerable: false, value: m }), d.prototype.castForQuery = function(t3, e3, r3) {
          if (null == t3) try {
            return this.applySetters(e3, r3);
          } catch (t4) {
            throw t4 instanceof y && t4.path === this.path && null != this.$fullPath && (t4.path = this.$fullPath), t4;
          }
          var n2 = this.$conditionalHandlers[t3];
          if (!n2) throw new Error("Can't use " + t3 + " with Date.");
          return n2.call(this, e3);
        }, d.prototype.toJSONSchema = function(t3) {
          var e3 = this.options.required && "function" != typeof this.options.required;
          return f("string", "date", null == t3 ? void 0 : t3.useBsonType, e3);
        }, d.prototype.autoEncryptionType = function() {
          return "date";
        }, t2.exports = d;
      }, 2354: (t2, e2, r2) => {
        "use strict";
        var n = r2(6730);
        t2.exports = Function.prototype.bind || n;
      }, 2400: (t2, e2, r2) => {
        "use strict";
        var n = r2(5832).hp;
        function o(t3) {
          return function(t4) {
            if (Array.isArray(t4)) return y(t4);
          }(t3) || function(t4) {
            if ("undefined" != typeof Symbol && null != t4[Symbol.iterator] || null != t4["@@iterator"]) return Array.from(t4);
          }(t3) || h(t3) || function() {
            throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }();
        }
        __name(o, "o");
        function i() {
          var t3, e3, r3 = "function" == typeof Symbol ? Symbol : {}, n2 = r3.iterator || "@@iterator", o2 = r3.toStringTag || "@@toStringTag";
          function a2(r4, n3, o3, i2) {
            var a3 = n3 && n3.prototype instanceof c2 ? n3 : c2, l3 = Object.create(a3.prototype);
            return s(l3, "_invoke", function(r5, n4, o4) {
              var i3, s2, a4, c3 = 0, l4 = o4 || [], f3 = false, p3 = { p: 0, n: 0, v: t3, a: h3, f: h3.bind(t3, 4), d: /* @__PURE__ */ __name(function(e4, r6) {
                return i3 = e4, s2 = 0, a4 = t3, p3.n = r6, u2;
              }, "d") };
              function h3(r6, n5) {
                for (s2 = r6, a4 = n5, e3 = 0; !f3 && c3 && !o5 && e3 < l4.length; e3++) {
                  var o5, i4 = l4[e3], h4 = p3.p, y3 = i4[2];
                  r6 > 3 ? (o5 = y3 === n5) && (a4 = i4[(s2 = i4[4]) ? 5 : (s2 = 3, 3)], i4[4] = i4[5] = t3) : i4[0] <= h4 && ((o5 = r6 < 2 && h4 < i4[1]) ? (s2 = 0, p3.v = n5, p3.n = i4[1]) : h4 < y3 && (o5 = r6 < 3 || i4[0] > n5 || n5 > y3) && (i4[4] = r6, i4[5] = n5, p3.n = y3, s2 = 0));
                }
                if (o5 || r6 > 1) return u2;
                throw f3 = true, n5;
              }
              __name(h3, "h");
              return function(o5, l5, y3) {
                if (c3 > 1) throw TypeError("Generator is already running");
                for (f3 && 1 === l5 && h3(l5, y3), s2 = l5, a4 = y3; (e3 = s2 < 2 ? t3 : a4) || !f3; ) {
                  i3 || (s2 ? s2 < 3 ? (s2 > 1 && (p3.n = -1), h3(s2, a4)) : p3.n = a4 : p3.v = a4);
                  try {
                    if (c3 = 2, i3) {
                      if (s2 || (o5 = "next"), e3 = i3[o5]) {
                        if (!(e3 = e3.call(i3, a4))) throw TypeError("iterator result is not an object");
                        if (!e3.done) return e3;
                        a4 = e3.value, s2 < 2 && (s2 = 0);
                      } else 1 === s2 && (e3 = i3.return) && e3.call(i3), s2 < 2 && (a4 = TypeError("The iterator does not provide a '" + o5 + "' method"), s2 = 1);
                      i3 = t3;
                    } else if ((e3 = (f3 = p3.n < 0) ? a4 : r5.call(n4, p3)) !== u2) break;
                  } catch (e4) {
                    i3 = t3, s2 = 1, a4 = e4;
                  } finally {
                    c3 = 1;
                  }
                }
                return { value: e3, done: f3 };
              };
            }(r4, o3, i2), true), l3;
          }
          __name(a2, "a");
          var u2 = {};
          function c2() {
          }
          __name(c2, "c");
          function l2() {
          }
          __name(l2, "l");
          function f2() {
          }
          __name(f2, "f");
          e3 = Object.getPrototypeOf;
          var p2 = [][n2] ? e3(e3([][n2]())) : (s(e3 = {}, n2, function() {
            return this;
          }), e3), h2 = f2.prototype = c2.prototype = Object.create(p2);
          function y2(t4) {
            return Object.setPrototypeOf ? Object.setPrototypeOf(t4, f2) : (t4.__proto__ = f2, s(t4, o2, "GeneratorFunction")), t4.prototype = Object.create(h2), t4;
          }
          __name(y2, "y");
          return l2.prototype = f2, s(h2, "constructor", f2), s(f2, "constructor", l2), l2.displayName = "GeneratorFunction", s(f2, o2, "GeneratorFunction"), s(h2), s(h2, o2, "Generator"), s(h2, n2, function() {
            return this;
          }), s(h2, "toString", function() {
            return "[object Generator]";
          }), (i = /* @__PURE__ */ __name(function() {
            return { w: a2, m: y2 };
          }, "i"))();
        }
        __name(i, "i");
        function s(t3, e3, r3, n2) {
          var o2 = Object.defineProperty;
          try {
            o2({}, "", {});
          } catch (t4) {
            o2 = 0;
          }
          s = /* @__PURE__ */ __name(function(t4, e4, r4, n3) {
            function i2(e5, r5) {
              s(t4, e5, function(t5) {
                return this._invoke(e5, r5, t5);
              });
            }
            __name(i2, "i");
            e4 ? o2 ? o2(t4, e4, { value: r4, enumerable: !n3, configurable: !n3, writable: !n3 }) : t4[e4] = r4 : (i2("next", 0), i2("throw", 1), i2("return", 2));
          }, "s"), s(t3, e3, r3, n2);
        }
        __name(s, "s");
        function a(t3, e3, r3, n2, o2, i2, s2) {
          try {
            var a2 = t3[i2](s2), u2 = a2.value;
          } catch (t4) {
            return void r3(t4);
          }
          a2.done ? e3(u2) : Promise.resolve(u2).then(n2, o2);
        }
        __name(a, "a");
        function u(t3) {
          return function() {
            var e3 = this, r3 = arguments;
            return new Promise(function(n2, o2) {
              var i2 = t3.apply(e3, r3);
              function s2(t4) {
                a(i2, n2, o2, s2, u2, "next", t4);
              }
              __name(s2, "s");
              function u2(t4) {
                a(i2, n2, o2, s2, u2, "throw", t4);
              }
              __name(u2, "u");
              s2(void 0);
            });
          };
        }
        __name(u, "u");
        function c(t3, e3) {
          var r3 = Object.keys(t3);
          if (Object.getOwnPropertySymbols) {
            var n2 = Object.getOwnPropertySymbols(t3);
            e3 && (n2 = n2.filter(function(e4) {
              return Object.getOwnPropertyDescriptor(t3, e4).enumerable;
            })), r3.push.apply(r3, n2);
          }
          return r3;
        }
        __name(c, "c");
        function l(t3) {
          for (var e3 = 1; e3 < arguments.length; e3++) {
            var r3 = null != arguments[e3] ? arguments[e3] : {};
            e3 % 2 ? c(Object(r3), true).forEach(function(e4) {
              f(t3, e4, r3[e4]);
            }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t3, Object.getOwnPropertyDescriptors(r3)) : c(Object(r3)).forEach(function(e4) {
              Object.defineProperty(t3, e4, Object.getOwnPropertyDescriptor(r3, e4));
            });
          }
          return t3;
        }
        __name(l, "l");
        function f(t3, e3, r3) {
          return (e3 = function(t4) {
            var e4 = function(t5) {
              if ("object" != d(t5) || !t5) return t5;
              var e5 = t5[Symbol.toPrimitive];
              if (void 0 !== e5) {
                var r4 = e5.call(t5, "string");
                if ("object" != d(r4)) return r4;
                throw new TypeError("@@toPrimitive must return a primitive value.");
              }
              return String(t5);
            }(t4);
            return "symbol" == d(e4) ? e4 : e4 + "";
          }(e3)) in t3 ? Object.defineProperty(t3, e3, { value: r3, enumerable: true, configurable: true, writable: true }) : t3[e3] = r3, t3;
        }
        __name(f, "f");
        function p(t3, e3) {
          var r3 = "undefined" != typeof Symbol && t3[Symbol.iterator] || t3["@@iterator"];
          if (!r3) {
            if (Array.isArray(t3) || (r3 = h(t3)) || e3 && t3 && "number" == typeof t3.length) {
              r3 && (t3 = r3);
              var n2 = 0, o2 = /* @__PURE__ */ __name(function() {
              }, "o");
              return { s: o2, n: /* @__PURE__ */ __name(function() {
                return n2 >= t3.length ? { done: true } : { done: false, value: t3[n2++] };
              }, "n"), e: /* @__PURE__ */ __name(function(t4) {
                throw t4;
              }, "e"), f: o2 };
            }
            throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }
          var i2, s2 = true, a2 = false;
          return { s: /* @__PURE__ */ __name(function() {
            r3 = r3.call(t3);
          }, "s"), n: /* @__PURE__ */ __name(function() {
            var t4 = r3.next();
            return s2 = t4.done, t4;
          }, "n"), e: /* @__PURE__ */ __name(function(t4) {
            a2 = true, i2 = t4;
          }, "e"), f: /* @__PURE__ */ __name(function() {
            try {
              s2 || null == r3.return || r3.return();
            } finally {
              if (a2) throw i2;
            }
          }, "f") };
        }
        __name(p, "p");
        function h(t3, e3) {
          if (t3) {
            if ("string" == typeof t3) return y(t3, e3);
            var r3 = {}.toString.call(t3).slice(8, -1);
            return "Object" === r3 && t3.constructor && (r3 = t3.constructor.name), "Map" === r3 || "Set" === r3 ? Array.from(t3) : "Arguments" === r3 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r3) ? y(t3, e3) : void 0;
          }
        }
        __name(h, "h");
        function y(t3, e3) {
          (null == e3 || e3 > t3.length) && (e3 = t3.length);
          for (var r3 = 0, n2 = Array(e3); r3 < e3; r3++) n2[r3] = t3[r3];
          return n2;
        }
        __name(y, "y");
        function d(t3) {
          return d = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
            return typeof t4;
          } : function(t4) {
            return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
          }, d(t3);
        }
        __name(d, "d");
        var b, m, v, g = r2(1417), _ = r2(3550).EventEmitter, w = r2(4224), O = r2(6365), S = r2(3672), $ = r2(5022), j = r2(6140), P = r2(3441), A = r2(1350), E = r2(1635), x = r2(7058), T = r2(8995), k = r2(6949), N = r2(9538), I = r2(6814), B = r2(5335), M = r2(4473), D = r2(4450), R = r2(2068).w, U = r2(2068).X, C = r2(1226), F = r2(7430).B, L = r2(5152), V = r2(791), q = r2(2692), J = r2(3216), z = r2(2746), K = r2(3305), H = r2(7300), W = r2(1793), G = r2(5188), Q = r2(7352).inspect, Y = r2(3303)._, Z = r2(1849), X = r2(6451), tt = r2(5678), et = r2(6223), rt = r2(3892), nt = r2(8768), ot = r2(542), it = nt.deepEqual, st = nt.isMongooseObject, at = r2(7930).arrayAtomicsBackupSymbol, ut = r2(7930).arrayAtomicsSymbol, ct = r2(7930).documentArrayParent, lt = r2(7930).documentIsModified, ft = r2(7930).documentModifiedPaths, pt = r2(7930).documentSchemaSymbol, ht = r2(7930).getSymbol, yt = r2(7930).modelSymbol, dt = r2(7930).populateModelSymbol, bt = r2(7930).scopeSymbol, mt = r2(7160).schemaMixedSymbol, vt = r2(5346), gt = r2(7930).sessionNewDocuments, _t = nt.specialProperties;
        function wt(t3, e3, r3, n2) {
          if ("object" === d(r3) && null != r3 && (r3 = (n2 = r3).skipId), n2 = Object.assign({}, n2), null == this.$__schema) {
            var o2 = nt.isObject(e3) && !e3.instanceOfSchema ? new x(e3) : e3;
            this.$__setSchema(o2), e3 = r3, r3 = n2, n2 = arguments[4] || {};
          }
          if (this.$__ = new w(), null != n2.isNew && true !== n2.isNew && (this.$isNew = n2.isNew), null != n2.priorDoc && (this.$__.priorDoc = n2.priorDoc), r3 && (this.$__.skipId = r3), null != t3 && "object" !== d(t3)) throw new A(t3, "obj", "Document");
          var i2 = true;
          void 0 !== n2.defaults && (this.$__.defaults = n2.defaults, i2 = n2.defaults);
          var s2 = this.$__schema;
          "boolean" == typeof e3 || "throw" === e3 ? (true !== e3 && (this.$__.strictMode = e3), e3 = void 0) : true !== s2.options.strict && (this.$__.strictMode = s2.options.strict);
          var a2, u2 = p(s2.requiredPaths(true));
          try {
            for (u2.s(); !(a2 = u2.n()).done; ) {
              var c2 = a2.value;
              this.$__.activePaths.require(c2);
            }
          } catch (t4) {
            u2.e(t4);
          } finally {
            u2.f();
          }
          var l2 = null;
          nt.isPOJO(e3) && Object.keys(e3).length > 0 && (l2 = W(e3), this.$__.selected = e3, this.$__.exclude = l2);
          var f2 = false === l2 && e3 ? I(e3) : null;
          if (null == this._doc && (this.$__buildDoc(t3, e3, r3, l2, f2, false), i2 && B(this, e3, l2, f2, true, null, { skipParentChangeTracking: true })), t3 && (this.$__original_set ? this.$__original_set(t3, void 0, true, n2) : this.$set(t3, void 0, true, n2), t3 instanceof wt && (this.$isNew = t3.$isNew)), n2.willInit && i2 ? n2.skipDefaults && (this.$__.skipDefaults = n2.skipDefaults) : i2 && B(this, e3, l2, f2, false, n2.skipDefaults), !this.$__.strictMode && t3) {
            var h2 = this;
            Object.keys(this._doc).forEach(function(t4) {
              t4 in s2.tree || t4 in s2.methods || t4 in s2.virtuals || t4.startsWith("$") || U({ prop: t4, subprops: null, prototype: h2 });
            });
          }
          !function(t4) {
            var e4 = t4.$__schema && t4.$__schema.callQueue;
            if (e4.length) {
              var r4, n3 = p(e4);
              try {
                for (n3.s(); !(r4 = n3.n()).done; ) {
                  var o3 = r4.value;
                  "pre" !== o3[0] && "post" !== o3[0] && "on" !== o3[0] && t4[o3[0]].apply(t4, o3[1]);
                }
              } catch (t5) {
                n3.e(t5);
              } finally {
                n3.f();
              }
            }
          }(this);
        }
        __name(wt, "wt");
        for (var Ot in wt.prototype.$isMongooseDocumentPrototype = true, Object.defineProperty(wt.prototype, "isNew", { get: /* @__PURE__ */ __name(function() {
          return this.$isNew;
        }, "get"), set: /* @__PURE__ */ __name(function(t3) {
          this.$isNew = t3;
        }, "set") }), Object.defineProperty(wt.prototype, "errors", { get: /* @__PURE__ */ __name(function() {
          return this.$errors;
        }, "get"), set: /* @__PURE__ */ __name(function(t3) {
          this.$errors = t3;
        }, "set") }), wt.prototype.$isNew = true, nt.each(["on", "once", "emit", "listeners", "removeListener", "setMaxListeners", "removeAllListeners", "addListener"], function(t3) {
          wt.prototype[t3] = function() {
            if (!this.$__.emitter) {
              if ("emit" === t3) return;
              this.$__.emitter = new _(), this.$__.emitter.setMaxListeners(0);
            }
            return this.$__.emitter[t3].apply(this.$__.emitter, arguments);
          }, wt.prototype["$".concat(t3)] = wt.prototype[t3];
        }), wt.prototype.constructor = wt, _.prototype) wt[Ot] = _.prototype[Ot];
        function St(t3, e3, r3) {
          if (null != t3) for (var n2 = Object.keys(r3.$__schema.paths), o2 = n2.length, i2 = -1 === e3.indexOf(".") ? [e3] : e3.split("."), s2 = 0; s2 < o2; ++s2) {
            var a2 = "", u2 = n2[s2];
            if (u2.startsWith(e3 + ".")) {
              var c2 = r3.$__schema.paths[u2], l2 = c2.splitPath().slice(i2.length), f2 = l2.length;
              if (void 0 !== c2.defaultValue) for (var p2 = t3, h2 = 0; h2 < f2 && null != p2; ++h2) {
                var y2 = l2[h2];
                if (h2 === f2 - 1) {
                  if (void 0 !== p2[y2]) break;
                  try {
                    var d2 = c2.getDefault(r3, false);
                    void 0 !== d2 && (p2[y2] = d2);
                  } catch (t4) {
                    r3.invalidate(e3 + "." + a2, t4);
                    break;
                  }
                  break;
                }
                a2 += (a2.length ? "." : "") + y2, p2[y2] = p2[y2] || {}, p2 = p2[y2];
              }
            }
          }
        }
        __name(St, "St");
        function $t(t3, e3, r3, n2, o2) {
          o2 = o2 || "", null != e3.$__ && (e3 = e3._doc);
          for (var i2, s2, a2, u2 = Object.keys(e3), c2 = u2.length, l2 = t3.$__.strictMode, f2 = t3.$__schema, p2 = 0; p2 < c2; ++p2) if (a2 = u2[p2], !_t.has(a2) && (s2 = o2 ? o2 + a2 : a2, i2 = f2.path(s2), !f2.$isRootDiscriminator || t3.$__isSelected(s2))) {
            var h2 = e3[a2];
            if (!i2 && nt.isPOJO(h2)) r3[a2] || (r3[a2] = {}, l2 || a2 in f2.tree || a2 in f2.methods || a2 in f2.virtuals || (t3[a2] = r3[a2])), $t(t3, h2, r3[a2], n2, s2 + ".");
            else if (i2) {
              if (r3.hasOwnProperty(a2) && void 0 !== h2 && !n2.hydratedPopulatedDocs && delete r3[a2], null === h2) r3[a2] = i2._castNullish(null);
              else if (void 0 !== h2) {
                var y2 = null == h2.$__ ? null : h2.$__.wasPopulated;
                if (!i2 || y2 || n2.hydratedPopulatedDocs) if (i2 && n2.hydratedPopulatedDocs) {
                  var d2;
                  r3[a2] = i2.cast(h2, t3, true, void 0, { hydratedPopulatedDocs: true }), r3[a2] && r3[a2].$__ && r3[a2].$__.wasPopulated ? t3.$populated(s2, r3[a2].$__.wasPopulated.value, r3[a2].$__.wasPopulated.options) : Array.isArray(r3[a2]) && r3[a2].length && null !== (d2 = r3[a2][0]) && void 0 !== d2 && null !== (d2 = d2.$__) && void 0 !== d2 && d2.wasPopulated && t3.$populated(s2, r3[a2].map(function(t4) {
                    var e4;
                    return null == t4 || null === (e4 = t4.$__) || void 0 === e4 || null === (e4 = e4.wasPopulated) || void 0 === e4 ? void 0 : e4.value;
                  }).filter(function(t4) {
                    return null != t4;
                  }), r3[a2][0].$__.wasPopulated.options);
                } else r3[a2] = h2;
                else try {
                  n2 && n2.setters ? r3[a2] = i2.applySetters(h2, t3, false) : r3[a2] = i2.cast(h2, t3, true);
                } catch (e4) {
                  t3.invalidate(e4.path, new N({ path: e4.path, message: e4.message, type: "cast", value: e4.value, reason: e4 }));
                }
              }
              t3.$isModified(s2) || t3.$__.activePaths.init(s2);
            } else r3[a2] = h2, l2 || o2 || (t3[a2] = h2);
          }
        }
        __name($t, "$t");
        function jt(t3) {
          if (null == t3) return true;
          if ("object" !== d(t3) || Array.isArray(t3)) return false;
          for (var e3 = 0, r3 = Object.keys(t3); e3 < r3.length; e3++) if (!jt(t3[r3[e3]])) return false;
          return true;
        }
        __name(jt, "jt");
        function Pt(t3, e3, r3, n2) {
          var o2 = {};
          !function(t4) {
            var e4 = Object.keys(t4.$__.activePaths.getStatePaths("require")), r4 = 0, n3 = e4.length;
            for (r4 = 0; r4 < n3; ++r4) {
              var o3 = e4[r4], i3 = t4.$__schema.path(o3);
              if (null != i3 && "function" == typeof i3.originalRequiredValue) {
                t4.$__.cachedRequired = t4.$__.cachedRequired || {};
                try {
                  t4.$__.cachedRequired[o3] = i3.originalRequiredValue.call(t4, t4);
                } catch (e5) {
                  t4.invalidate(o3, e5);
                }
              }
            }
          }(t3);
          var i2 = new Set(Object.keys(t3.$__.activePaths.getStatePaths("require")).filter(function(e4) {
            return !(!t3.$__isSelected(e4) && !t3.$isModified(e4)) && !e4.endsWith(".$*") && (null == t3.$__.cachedRequired || !(e4 in t3.$__.cachedRequired) || t3.$__.cachedRequired[e4]);
          }));
          function s2(t4) {
            t4.endsWith(".$*") || i2.add(t4);
          }
          __name(s2, "s");
          if (Object.keys(t3.$__.activePaths.getStatePaths("init")).forEach(s2), Object.keys(t3.$__.activePaths.getStatePaths("modify")).forEach(s2), Object.keys(t3.$__.activePaths.getStatePaths("default")).forEach(s2), !n2) {
            for (var a2 = [], u2 = 0, c2 = Object.keys(t3.$__schema.paths); u2 < c2.length; u2++) {
              var l2 = c2[u2], f2 = t3.$__schema.path(l2);
              if (f2.$isSingleNested) {
                var h2 = t3.$get(l2);
                h2 && a2.push(h2);
              } else if (f2.$isMongooseDocumentArray) {
                var y2 = t3.$get(l2);
                if (y2 && y2.length) {
                  var d2, b2 = p(y2);
                  try {
                    for (b2.s(); !(d2 = b2.n()).done; ) {
                      var m2 = d2.value;
                      m2 && a2.push(m2);
                    }
                  } catch (t4) {
                    b2.e(t4);
                  } finally {
                    b2.f();
                  }
                }
              }
            }
            for (var v2 = t3.modifiedPaths(), g2 = 0, _2 = a2; g2 < _2.length; g2++) {
              var w2 = _2[g2];
              if (w2.$basePath) {
                var O2, S2 = w2.$__pathRelativeToParent(), $2 = p(w2.modifiedPaths());
                try {
                  for ($2.s(); !(O2 = $2.n()).done; ) {
                    var j2 = O2.value;
                    i2.delete(S2 + "." + j2);
                  }
                } catch (t4) {
                  $2.e(t4);
                } finally {
                  $2.f();
                }
                var P2 = w2.$parent();
                if (null == P2) throw new Error("Cannot validate subdocument that does not have a parent");
                !t3.$isModified(S2, null, v2) || P2.$__.activePaths.getStatePaths("modify").hasOwnProperty(S2) || P2.$isDefault(S2) || (i2.add(S2), null == t3.$__.pathsToScopes && (t3.$__.pathsToScopes = {}), t3.$__.pathsToScopes[S2] = w2.$isDocumentArrayElement ? w2.__parentArray : w2.$parent(), o2[S2] = { skipSchemaValidators: true }, w2.$isDocumentArrayElement && null != w2.__index && (o2[S2].index = w2.__index));
              }
            }
          }
          var A2, E2 = p(i2);
          try {
            for (E2.s(); !(A2 = E2.n()).done; ) {
              var x2 = A2.value, T2 = t3.$__schema.path(x2);
              if (T2) {
                if (T2.$isMongooseDocumentArray) {
                  var k2, N2 = p(i2);
                  try {
                    for (N2.s(); !(k2 = N2.n()).done; ) {
                      var I2 = k2.value;
                      (null == I2 || I2.startsWith(T2.path + ".")) && i2.delete(I2);
                    }
                  } catch (t4) {
                    N2.e(t4);
                  } finally {
                    N2.f();
                  }
                }
                (T2.caster || 0 !== T2.validators.length || T2.$parentSchemaDocArray) && (!T2.$isMongooseArray || T2.$isMongooseDocumentArray || T2.$embeddedSchemaType.$isMongooseArray || 0 !== T2.validators.length || 0 !== T2.$embeddedSchemaType.validators.length) || i2.delete(x2);
              }
            }
          } catch (t4) {
            E2.e(t4);
          } finally {
            E2.f();
          }
          Array.isArray(e3) ? i2 = function(t4, e4) {
            var r4, n3 = new Set(e4), o3 = /* @__PURE__ */ new Map([]), i3 = p(e4);
            try {
              for (i3.s(); !(r4 = i3.n()).done; ) {
                var s3 = r4.value;
                if (-1 !== s3.indexOf(".")) for (var a3 = s3.split("."), u3 = a3[0], c3 = 1; c3 < a3.length; ++c3) o3.set(u3, s3), u3 = u3 + "." + a3[c3];
              }
            } catch (t5) {
              i3.e(t5);
            } finally {
              i3.f();
            }
            var l3, f3 = /* @__PURE__ */ new Set(), h3 = p(t4);
            try {
              for (h3.s(); !(l3 = h3.n()).done; ) {
                var y3 = l3.value;
                n3.has(y3) ? f3.add(y3) : o3.has(y3) && f3.add(o3.get(y3));
              }
            } catch (t5) {
              h3.e(t5);
            } finally {
              h3.f();
            }
            return f3;
          }(i2, e3) : Array.isArray(r3) && (i2 = function(t4, e4) {
            return e4 = new Set(e4), t4 = Array.from(t4).filter(function(t5) {
              return !e4.has(t5);
            }), new Set(t4);
          }(i2, r3)), function(t4, e4) {
            var r4, n3 = p(e4);
            try {
              for (n3.s(); !(r4 = n3.n()).done; ) {
                var o3 = r4.value, i3 = t4.$__schema.path(o3);
                i3 && i3.$isMongooseArray && (Array.isArray(i3) || !i3.$isMongooseDocumentArray || i3 && i3.schemaOptions && i3.schemaOptions.required) && (!i3.$isMongooseArray || i3.$isMongooseDocumentArray || i3.$embeddedSchemaType.$isMongooseArray || 0 !== i3.$embeddedSchemaType.validators.length) && At(t4.$__getValue(o3), e4, o3);
              }
            } catch (t5) {
              n3.e(t5);
            } finally {
              n3.f();
            }
          }(t3, i2);
          var B2, M2 = { skipArrays: true }, D2 = p(i2);
          try {
            for (D2.s(); !(B2 = D2.n()).done; ) {
              var R2 = B2.value;
              if (t3.$__schema.nested[R2]) {
                var U2 = t3.$__getValue(R2);
                st(U2) && (U2 = U2.toObject({ transform: false }));
                var C2 = F(U2, R2, M2, t3.$__schema);
                Object.keys(C2).filter(function(e4) {
                  return !t3.$__schema.singleNestedPaths.hasOwnProperty(e4);
                }).forEach(s2);
              }
            }
          } catch (t4) {
            D2.e(t4);
          } finally {
            D2.f();
          }
          var L2, V2 = p(i2);
          try {
            for (V2.s(); !(L2 = V2.n()).done; ) {
              var q2 = L2.value, J2 = t3.$__schema.path(q2);
              if (J2 && (J2.$parentSchemaDocArray && "string" == typeof J2.$parentSchemaDocArray.path && i2.add(J2.$parentSchemaDocArray.path), J2.$isSchemaMap)) {
                var z2 = t3.$__getValue(q2);
                if (null != z2) {
                  var K2, H2 = p(z2.keys());
                  try {
                    for (H2.s(); !(K2 = H2.n()).done; ) {
                      var W2 = K2.value;
                      i2.add(q2 + "." + W2);
                    }
                  } catch (t4) {
                    H2.e(t4);
                  } finally {
                    H2.f();
                  }
                }
              }
            }
          } catch (t4) {
            V2.e(t4);
          } finally {
            V2.f();
          }
          return [i2 = Array.from(i2), o2];
        }
        __name(Pt, "Pt");
        function At(t3, e3, r3) {
          if (null != t3) for (var n2 = t3.length, o2 = 0; o2 < n2; ++o2) Array.isArray(t3[o2]) ? At(t3[o2], e3, r3 + "." + o2) : e3.add(r3 + "." + o2);
        }
        __name(At, "At");
        function Et(t3, e3, r3, n2) {
          var o2, i2, s2, a2 = t3.$__schema, u2 = a2.virtuals, c2 = Object.keys(u2), l2 = c2.length, f2 = l2, p2 = t3._doc, h2 = "boolean" != typeof (n2 && n2.aliases) || n2.aliases;
          r3 = r3 || {};
          var y2 = null;
          if (Array.isArray(r3.virtuals)) y2 = new Set(r3.virtuals);
          else if (r3.virtuals && r3.virtuals.pathsToSkip) {
            y2 = new Set(c2);
            for (var d2 = 0; d2 < r3.virtuals.pathsToSkip.length; d2++) y2.has(r3.virtuals.pathsToSkip[d2]) && y2.delete(r3.virtuals.pathsToSkip[d2]);
          }
          if (!p2) return e3;
          for (l2 = 0; l2 < f2; ++l2) if (o2 = c2[l2], (null == y2 || y2.has(o2)) && (h2 || !a2.aliases.hasOwnProperty(o2))) {
            if (i2 = o2, null != r3.path) {
              if (!o2.startsWith(r3.path + ".")) continue;
              i2 = o2.substring(r3.path.length + 1);
            }
            if (-1 !== i2.indexOf(".") || i2 !== o2) {
              var b2 = i2.split(".");
              if (void 0 !== (s2 = D(t3.get(o2), r3))) {
                var m2 = b2.length;
                p2 = e3;
                for (var v2 = 0; v2 < m2 - 1; ++v2) p2[b2[v2]] = p2[b2[v2]] || {}, p2 = p2[b2[v2]];
                p2[b2[m2 - 1]] = s2;
              }
            } else {
              if (void 0 === (s2 = u2[o2].applyGetters(void 0, t3))) continue;
              s2 = D(s2, r3), e3[i2] = s2;
            }
          }
          return e3;
        }
        __name(Et, "Et");
        function xt(t3, e3) {
          if (ot(e3)) throw new Error("`transform` function must be synchronous, but the transform on path `" + t3 + "` returned a promise.");
        }
        __name(xt, "xt");
        function Tt(t3, e3, r3) {
          var n2 = t3.$populated(e3, true);
          if (!n2 && t3.$__.selected) {
            var o2 = e3.split(".")[0];
            if (t3.$__.selected[o2 + ".$"]) return o2;
          }
          if (n2 && nt.isMongooseArray(r3) && (n2.options.match || n2.options.options && nt.object.hasOwnProperty(n2.options.options, "limit") || n2.options.options && n2.options.options.skip || n2.options.select && (0 === n2.options.select._id || /\s?-_id\s?/.test(n2.options.select)))) {
            var i2 = r3[ut];
            if (0 === Object.keys(i2).length || i2.$set || i2.$pop) return e3;
          }
        }
        __name(Tt, "Tt");
        function kt(t3, e3, r3, n2, o2, i2) {
          if (i2 || (i2 = "$set"), r3[i2] || (r3[i2] = {}), r3[i2][n2.path] = o2, false !== t3.$__schema.options.versionKey && !function(t4, e4) {
            var r4 = t4.$__schema.options.skipVersioning;
            return !!r4 && r4[e4 = e4.replace(/\.\d+\./, ".")];
          }(t3, n2.path) && 3 & ~t3.$__.version && !t3.$__schema.options.optimisticConcurrency) {
            switch (i2) {
              case "$set":
              case "$unset":
              case "$pop":
              case "$pull":
              case "$pullAll":
              case "$push":
              case "$addToSet":
              case "$inc":
                break;
              default:
                return;
            }
            "$push" === i2 || "$addToSet" === i2 || "$pullAll" === i2 || "$pull" === i2 ? /\.\d+\.|\.\d+$/.test(n2.path) ? t3.$__.version = 3 : t3.$__.version = 2 : /^\$p/.test(i2) || Array.isArray(o2) ? t3.$__.version = 3 : /\.\d+\.|\.\d+$/.test(n2.path) && (t3.$__.version = 1);
          }
        }
        __name(kt, "kt");
        function Nt(t3, e3, r3, n2, o2) {
          if (!r3.$set || !r3.$set[n2.path]) if ("function" != typeof o2.$__getAtomics) {
            var i2, s2, a2 = o2[ut], u2 = Object.keys(a2), c2 = u2.length;
            if (0 === c2) return nt.isMongooseObject(o2) ? o2 = o2.toObject({ depopulate: 1, _isNested: true }) : o2.valueOf && (o2 = o2.valueOf()), kt(t3, 0, r3, n2, o2);
            for (; c2--; ) i2 = a2[s2 = u2[c2]], nt.isMongooseObject(i2) ? i2 = i2.toObject({ depopulate: true, transform: false, _isNested: true }) : Array.isArray(i2) ? i2 = i2.map(l2) : i2.valueOf && (i2 = i2.valueOf()), "$addToSet" === s2 && (i2 = { $each: i2 }), kt(t3, 0, r3, n2, i2, s2);
          } else o2.$__getAtomics().forEach(function(e4) {
            var o3 = e4[0], i3 = e4[1];
            kt(t3, 0, r3, n2, i3, o3);
          });
          function l2(t4) {
            return nt.isMongooseObject(t4) ? t4.toObject({ depopulate: 1, _isNested: true }) : t4;
          }
          __name(l2, "l");
        }
        __name(Nt, "Nt");
        wt.prototype.$__schema, wt.prototype.schema, Object.defineProperty(wt.prototype, "$locals", { configurable: false, enumerable: false, get: /* @__PURE__ */ __name(function() {
          return null == this.$__.locals && (this.$__.locals = {}), this.$__.locals;
        }, "get"), set: /* @__PURE__ */ __name(function(t3) {
          this.$__.locals = t3;
        }, "set") }), wt.prototype.isNew, Object.defineProperty(wt.prototype, "$where", { configurable: false, enumerable: false, writable: true }), wt.prototype.id, wt.prototype.$errors, Object.defineProperty(wt.prototype, "$op", { get: /* @__PURE__ */ __name(function() {
          return this.$__.op || null;
        }, "get"), set: /* @__PURE__ */ __name(function(t3) {
          this.$__.op = t3;
        }, "set") }), wt.prototype.$__buildDoc = function(t3, e3, r3, n2, o2) {
          for (var i2 = {}, s2 = Object.keys(this.$__schema.paths).filter(function(t4) {
            return !t4.includes("$*");
          }), a2 = s2.length, u2 = 0; u2 < a2; ++u2) {
            var c2 = s2[u2];
            if ("_id" === c2) {
              if (r3) continue;
              if (t3 && "_id" in t3) continue;
            }
            for (var l2 = this.$__schema.paths[c2].splitPath(), f2 = l2.length, p2 = f2 - 1, h2 = "", y2 = i2, d2 = false, b2 = 0; b2 < f2; ++b2) {
              var m2 = l2[b2];
              if (h2.length ? h2 += "." + m2 : h2 = m2, true === n2) {
                if (h2 in e3) break;
              } else if (false === n2 && e3 && !d2) {
                if (h2 in e3) d2 = true;
                else if (!o2[h2]) break;
              }
              b2 < p2 && (y2 = y2[m2] || (y2[m2] = {}));
            }
          }
          this._doc = i2;
        }, wt.prototype.toBSON = function() {
          return this.toObject(Y);
        }, wt.prototype.init = function(t3, e3, r3) {
          return "function" == typeof e3 && (r3 = e3, e3 = null), this.$__init(t3, e3), r3 && r3(null, this), this;
        }, wt.prototype.$init = function() {
          return this.constructor.prototype.init.apply(this, arguments);
        }, wt.prototype.$__init = function(t3, e3) {
          if (this.$isNew = false, e3 = e3 || {}, null != t3._id && e3.populated && e3.populated.length) {
            var r3, n2 = String(t3._id), o2 = p(e3.populated);
            try {
              for (o2.s(); !(r3 = o2.n()).done; ) {
                var i2 = r3.value;
                if (i2.isVirtual ? this.$populated(i2.path, nt.getValue(i2.path, t3), i2) : this.$populated(i2.path, i2._docs[n2], i2), null != i2._childDocs) {
                  var s2, a2 = p(i2._childDocs);
                  try {
                    for (a2.s(); !(s2 = a2.n()).done; ) {
                      var u2 = s2.value;
                      null != u2 && null != u2.$__ && (u2.$__.parent = this);
                    }
                  } catch (t4) {
                    a2.e(t4);
                  } finally {
                    a2.f();
                  }
                  i2._childDocs = [];
                }
              }
            } catch (t4) {
              o2.e(t4);
            } finally {
              o2.f();
            }
          }
          $t(this, t3, this._doc, e3), Z(this, e3.populated), this.$emit("init", this), this.constructor.emit("init", this);
          var c2 = false === this.$__.exclude && this.$__.selected ? I(this.$__.selected) : null;
          return B(this, this.$__.selected, this.$__.exclude, c2, false, this.$__.skipDefaults), this;
        }, wt.prototype.updateOne = function(t3, e3, r3) {
          var n2 = this.constructor.updateOne({ _id: this._doc._id }, t3, e3), o2 = this;
          return n2.pre(function(t4) {
            o2.constructor._middleware.execPre("updateOne", o2, [o2], t4);
          }), n2.post(function(t4) {
            o2.constructor._middleware.execPost("updateOne", o2, [o2], {}, t4);
          }), null != this.$session() && ("session" in n2.options || (n2.options.session = this.$session())), null != r3 ? n2.exec(r3) : n2;
        }, wt.prototype.replaceOne = function() {
          var t3 = Array.prototype.slice.call(arguments);
          return t3.unshift({ _id: this._doc._id }), this.constructor.replaceOne.apply(this.constructor, t3);
        }, wt.prototype.$session = function(t3) {
          if (0 === arguments.length) return null != this.$__.session && this.$__.session.hasEnded ? (this.$__.session = null, null) : this.$__.session;
          if (null != t3 && t3.hasEnded) throw new S("Cannot set a document's session to a session that has ended. Make sure you haven't called `endSession()` on the session you are passing to `$session()`.");
          if (null != t3 || null != this.$__.session) {
            if (this.$__.session = t3, !this.$isSubdocument) {
              var e3, r3 = p(this.$getAllSubdocs());
              try {
                for (r3.s(); !(e3 = r3.n()).done; ) e3.value.$session(t3);
              } catch (t4) {
                r3.e(t4);
              } finally {
                r3.f();
              }
            }
            return t3;
          }
        }, wt.prototype.$timestamps = function(t3) {
          return 0 === arguments.length ? null != this.$__.timestamps ? this.$__.timestamps : this.$__schema ? this.$__schema.options.timestamps : void 0 : (t3 !== this.$timestamps() && (this.$__.timestamps = t3), this);
        }, wt.prototype.overwrite = function(t3) {
          for (var e3 = 0, r3 = Array.from(new Set(Object.keys(this._doc).concat(Object.keys(t3)))); e3 < r3.length; e3++) {
            var n2 = r3[e3];
            "_id" !== n2 && (this.$__schema.options.versionKey && n2 === this.$__schema.options.versionKey || this.$__schema.options.discriminatorKey && n2 === this.$__schema.options.discriminatorKey || this.$set(n2, t3[n2]));
          }
          return this;
        }, wt.prototype.$set = function(t3, e3, r3, n2) {
          var o2 = this;
          nt.isPOJO(r3) && (n2 = r3, r3 = void 0);
          var i2, s2, a2, u2, c2 = n2 && n2.merge, h2 = r3 && true !== r3, y2 = true === r3, b2 = 0, m2 = n2 && "strict" in n2, v2 = m2 ? n2.strict : this.$__.strictMode;
          if (h2 && ((this.$__.adhocPaths || (this.$__.adhocPaths = {}))[t3] = this.$__schema.interpretAsType(t3, r3, this.$__schema.options)), null == t3) {
            var g2 = [e3, t3];
            t3 = g2[0], e3 = g2[1];
          } else if ("string" != typeof t3) {
            if (t3 instanceof wt && (t3 = t3.$__isNested ? t3.toObject() : t3.$__schema === this.$__schema ? Et(t3, l({}, t3._doc)) : t3._doc), null == t3) {
              var _2 = [e3, t3];
              t3 = _2[0], e3 = _2[1];
            }
            u2 = e3 ? e3 + "." : "";
            var w2 = (i2 = V(this.$__schema, t3)).length, O2 = n2 && n2._skipMinimizeTopLevel || false;
            if (0 === w2 && O2) return delete n2._skipMinimizeTopLevel, e3 && this.$set(e3, {}), this;
            n2 = Object.assign({}, n2, { _skipMinimizeTopLevel: false });
            for (var j2 = 0; j2 < w2; ++j2) {
              a2 = i2[j2];
              var A2 = u2 ? u2 + a2 : a2;
              s2 = this.$__schema.pathType(A2);
              var E2 = t3[a2];
              if (true !== r3 || u2 || null == E2 || "nested" !== s2 || null == this._doc[a2] || delete this._doc[a2], nt.isNonBuiltinObject(E2) && "nested" === s2) this.$set(A2, E2, y2, n2), St(this.$get(A2), A2, this);
              else if (v2) {
                if (y2 && void 0 === E2 && void 0 !== this.$get(A2)) continue;
                if ("adhocOrUndefined" === s2 && (s2 = L(this, A2, { typeOnly: true })), "real" === s2 || "virtual" === s2) this.$set(A2, E2, y2, n2);
                else if ("nested" === s2 && E2 instanceof wt) this.$set(A2, E2.toObject({ transform: false }), y2, n2);
                else {
                  if ("throw" === v2) throw "nested" === s2 ? new P(a2, E2) : new T(a2);
                  "nested" === s2 && null == E2 && this.$set(A2, E2, y2, n2);
                }
              } else this.$set(A2, E2, y2, n2);
            }
            for (var x2 = {}, k2 = Object.keys(this.$__schema.tree), N2 = 0, I2 = k2.length; N2 < I2; ++N2) (a2 = k2[N2]) && this._doc.hasOwnProperty(a2) && (x2[a2] = void 0);
            return this._doc = Object.assign(x2, this._doc), this;
          }
          var B2 = this.$__schema.pathType(t3), D2 = null;
          if ("adhocOrUndefined" === B2 && (D2 = -1 === t3.indexOf(".") ? [t3] : t3.split("."), B2 = L(this, D2, { typeOnly: true })), "adhocOrUndefined" === B2 && !m2) {
            null == D2 && (D2 = -1 === t3.indexOf(".") ? [t3] : t3.split("."));
            var R2 = q(this.$__schema, D2);
            void 0 !== R2 && (v2 = R2);
          }
          e3 = J(e3, true);
          var U2, C2 = null != o2.$__.priorDoc ? o2.$__.priorDoc.$__getValue(t3) : y2 ? void 0 : o2.$__getValue(t3);
          if ("nested" === B2 && e3) {
            if ("object" === d(e3) && null != e3) {
              if (null != e3.$__ && (e3 = e3.toObject(Y)), null == e3) return this.invalidate(t3, new S.CastError("Object", e3, t3)), this;
              var F2 = this.$isModified(t3), z2 = null != this.$__.savedState && this.$__.savedState.hasOwnProperty(t3);
              if (null != this.$__.savedState && !this.$isNew && !this.$__.savedState.hasOwnProperty(t3)) {
                var K2 = this.$__getValue(t3);
                this.$__.savedState[t3] = K2;
                for (var H2 = 0, W2 = Object.keys(K2 || {}); H2 < W2.length; H2++) {
                  var G2 = W2[H2];
                  this.$__.savedState[t3 + "." + G2] = K2[G2];
                }
              }
              if (c2) return this.$set(e3, t3, y2, n2);
              this.$__setValue(t3, null), M(this, t3);
              var Q2 = V(this.$__schema, e3, t3);
              this.$__setValue(t3, {});
              var Z2, X2 = p(Q2);
              try {
                for (X2.s(); !(Z2 = X2.n()).done; ) {
                  var et2 = Z2.value;
                  this.$set(t3 + "." + et2, e3[et2], y2, l(l({}, n2), {}, { _skipMarkModified: true }));
                }
              } catch (t4) {
                X2.e(t4);
              } finally {
                X2.f();
              }
              return null == C2 || F2 && !z2 || !nt.deepEqual(z2 ? this.$__.savedState[t3] : C2, e3) ? this.markModified(t3) : this.unmarkModified(t3), this;
            }
            return this.invalidate(t3, new S.CastError("Object", e3, t3)), this;
          }
          if (null == D2 && (D2 = -1 === t3.indexOf(".") ? [t3] : t3.split(".")), "string" == typeof this.$__schema.aliases[D2[0]] && (D2[0] = this.$__schema.aliases[D2[0]]), "adhocOrUndefined" === B2 && v2) {
            var rt2;
            for (b2 = 0; b2 < D2.length; ++b2) {
              var ot2 = D2.slice(0, b2 + 1).join(".");
              if (b2 + 1 < D2.length && "virtual" === this.$__schema.pathType(ot2)) return tt.set(t3, e3, this), this;
              if (null != (U2 = this.$__schema.path(ot2))) {
                if (U2 instanceof $) {
                  rt2 = true;
                  break;
                }
                if (U2.$isSchemaMap && U2.$__schemaType instanceof $ && b2 < D2.length - 1) {
                  rt2 = true, U2 = U2.$__schemaType;
                  break;
                }
              }
            }
            if (null == U2 && (U2 = L(this, t3)), !rt2 && !U2) {
              if ("throw" === v2) throw new T(t3);
              return this;
            }
          } else {
            if ("virtual" === B2) return (U2 = this.$__schema.virtualpath(t3)).applySetters(e3, this), this;
            U2 = this.$__path(t3);
          }
          var it2, st2 = this._doc, at2 = "";
          for (b2 = 0; b2 < D2.length - 1; ++b2) st2 = st2 instanceof Map ? st2.get(D2[b2]) : st2[D2[b2]], at2 += (0 !== at2.length ? "." : "") + D2[b2], st2 || (this.$set(at2, {}), this.$__isSelected(at2) || this.unmarkModified(at2), st2 = this.$__getValue(at2));
          if (D2.length <= 1) it2 = t3;
          else {
            var ut2 = D2.length;
            for (b2 = 0; b2 < ut2; ++b2) {
              var ct2 = D2.slice(0, b2 + 1).join(".");
              if (null === this.$get(ct2, null, { getters: false })) {
                it2 = ct2;
                break;
              }
            }
            it2 || (it2 = t3);
          }
          if (!U2) return this.$__set(it2, t3, n2, y2, D2, U2, e3, C2), "nested" === B2 && null == e3 && M(this, t3), this;
          if ((U2.$isSingleNested || U2.$isMongooseArray) && function(t4, e4) {
            if (t4.$__.validationError) {
              for (var r4 = 0, n3 = Object.keys(t4.$__.validationError.errors); r4 < n3.length; r4++) {
                var o3 = n3[r4];
                o3.startsWith(e4 + ".") && delete t4.$__.validationError.errors[o3];
              }
              0 === Object.keys(t4.$__.validationError.errors).length && (t4.$__.validationError = null);
            }
          }(this, t3), null != e3 && c2 && U2.$isSingleNested) {
            e3 instanceof wt && (e3 = e3.toObject({ virtuals: false, transform: false }));
            for (var lt2 = 0, ft2 = Object.keys(e3); lt2 < ft2.length; lt2++) {
              var pt2 = ft2[lt2];
              this.$set(t3 + "." + pt2, e3[pt2], y2, n2);
            }
            return this;
          }
          var ht2 = true;
          try {
            var bt2, mt2 = function() {
              if (null == U2.options) return false;
              if (!(e3 instanceof wt)) return false;
              var t4 = e3.constructor, r4 = "function" != typeof U2.options.ref || U2.options.ref[yt] ? U2.options.ref : U2.options.ref.call(o2, o2), n3 = (null == r4 ? void 0 : r4.modelName) || r4;
              if (null != n3 && (n3 === t4.modelName || n3 === t4.baseModelName)) return true;
              var i3 = U2.options.refPath;
              if (null == i3) return false;
              var s3 = e3.get(i3);
              return s3 === t4.modelName || s3 === t4.baseModelName;
            }(), _t2 = false;
            if (mt2 && e3 instanceof wt && (!e3.$__.wasPopulated || nt.deepEqual(e3.$__.wasPopulated.value, e3._doc._id))) {
              var Ot2 = U2 && U2.$isSingleNested ? U2.cast(e3, this) : e3._doc._id;
              this.$populated(t3, Ot2, f({}, dt, e3.constructor)), e3.$__.wasPopulated = { value: Ot2 }, _t2 = true;
            }
            var $t2 = this.$__schema.options.typeKey;
            if (U2.options && Array.isArray(U2.options[$t2]) && U2.options[$t2].length && U2.options[$t2][0] && U2.options[$t2][0].ref && function(t4, e4) {
              if (!Array.isArray(t4)) return false;
              if (0 === t4.length) return false;
              var r4, n3 = p(t4);
              try {
                for (n3.s(); !(r4 = n3.n()).done; ) {
                  var o3 = r4.value;
                  if (!(o3 instanceof wt)) return false;
                  if (null == o3.constructor.modelName) return false;
                  if (o3.constructor.modelName != e4 && o3.constructor.baseModelName != e4) return false;
                }
              } catch (t5) {
                n3.e(t5);
              } finally {
                n3.f();
              }
              return true;
            }(e3, U2.options[$t2][0].ref)) {
              bt2 = f({}, dt, e3[0].constructor), this.$populated(t3, e3.map(function(t4) {
                return t4._doc._id;
              }), bt2);
              var jt2, Pt2 = p(e3);
              try {
                for (Pt2.s(); !(jt2 = Pt2.n()).done; ) {
                  var At2 = jt2.value;
                  At2.$__.wasPopulated = { value: At2._doc._id };
                }
              } catch (t4) {
                Pt2.e(t4);
              } finally {
                Pt2.f();
              }
              _t2 = true;
            }
            if (!mt2 || !U2.$isSingleNested || !e3.$__) {
              var xt2 = this;
              null != this.$__schema.singleNestedPaths[t3] && D2.length > 1 && (xt2 = vt(this, D2, this.schema)), e3 = null != n2 && n2.overwriteImmutable ? U2.applySetters(e3, xt2, false, C2, { path: t3, overwriteImmutable: true }) : U2.applySetters(e3, xt2, false, C2, { path: t3 });
            }
            if (Array.isArray(e3) && !Array.isArray(U2) && U2.$isMongooseDocumentArray && 0 !== e3.length && null != e3[0] && null != e3[0].$__ && null != e3[0].$__.populated) {
              for (var Tt2 = Object.keys(e3[0].$__.populated), kt2 = function() {
                var r4 = It[Nt2];
                o2.$populated(t3 + "." + r4, e3.map(function(t4) {
                  return t4.$populated(r4);
                }), e3[0].$__.populated[r4].options);
              }, Nt2 = 0, It = Tt2; Nt2 < It.length; Nt2++) kt2();
              _t2 = true;
            }
            if (!_t2 && this.$__.populated) {
              if (Array.isArray(e3) && this.$__.populated[t3]) for (var Bt = 0; Bt < e3.length; ++Bt) e3[Bt] instanceof wt && e3.set(Bt, e3[Bt]._doc._id, true);
              delete this.$__.populated[t3];
            }
            null != e3 && U2.$isSingleNested && function(t4, e4, r4) {
              var n3 = e4.schema;
              if (null != n3) for (var o3 = 0, i3 = Object.keys(n3.paths); o3 < i3.length; o3++) {
                var s3 = i3[o3], a3 = n3.paths[s3];
                if (null != a3.$immutableSetter) {
                  var u3 = null == r4 ? void 0 : r4.$__getValue(s3);
                  a3.$immutableSetter.call(t4, u3);
                }
              }
            }(e3, U2, C2), this.$markValid(t3);
          } catch (r4) {
            r4 instanceof S.StrictModeError && r4.isImmutableError ? this.invalidate(t3, r4) : r4 instanceof S.CastError ? (this.invalidate(r4.path, r4), r4.$originalErrorPath && this.invalidate(t3, new S.CastError(U2.instance, e3, t3, r4.$originalErrorPath))) : this.invalidate(t3, new S.CastError(U2.instance, e3, t3, r4)), ht2 = false;
          }
          if (ht2) {
            var Mt, Dt = null, Rt = null;
            if (!y2) {
              var Ut = this.$isSubdocument ? this.ownerDocument() : this;
              Dt = Ut.$__.savedState, Rt = this.$isSubdocument ? this.$__.fullPath + "." + t3 : t3, Ut.$__saveInitialState(Rt);
            }
            this.$__set(it2, t3, n2, y2, D2, U2, e3, C2);
            var Ct = !(null === (Mt = this.$__.session) || void 0 === Mt || !Mt.transaction), Ft = this.$__.session && this.$__.session[gt] && this.$__.session[gt].has(this) && this.$__.session[gt].get(this).modifiedPaths && !this.$__.session[gt].get(this).modifiedPaths.has(Rt);
            null != Dt && Dt.hasOwnProperty(Rt) && (!Ct || Ft) && nt.deepEqual(e3, Dt[Rt]) && this.unmarkModified(t3);
          }
          return (U2.$isSingleNested && (this.isDirectModified(t3) || null == e3) || U2.$isSchemaMap && null == e3) && M(this, t3), this;
        }, wt.prototype.set = wt.prototype.$set, wt.prototype.$__shouldModify = function(t3, e3, r3, n2, o2, i2, s2, a2) {
          return !(r3 && r3._skipMarkModified || !this.$isNew && !(e3 in this.$__.activePaths.getStatePaths("modify")) && (void 0 !== s2 || this.$__isSelected(e3)) && (void 0 === s2 && e3 in this.$__.activePaths.getStatePaths("default") || this.$populated(e3) && s2 instanceof wt && it(s2._doc._id, a2) || it(s2, void 0 !== a2 ? a2 : nt.getValue(e3, this)) && (n2 || null == s2 || !(e3 in this.$__.activePaths.getStatePaths("default")) || !it(s2, i2.getDefault(this, n2)))));
        }, wt.prototype.$__set = function(t3, e3, n2, o2, i2, s2, a2, u2) {
          v = v || r2(6547);
          var c2 = this.$__shouldModify(t3, e3, n2, o2, i2, s2, a2, u2);
          c2 ? (this.$__.primitiveAtomics && this.$__.primitiveAtomics[e3] && (delete this.$__.primitiveAtomics[e3], 0 === Object.keys(this.$__.primitiveAtomics).length && delete this.$__.primitiveAtomics), this.markModified(t3), m || (m = r2(7557)), a2 && nt.isMongooseArray(a2) && (a2._registerAtomic("$set", a2), nt.isMongooseDocumentArray(a2) && a2.forEach(function(t4) {
            t4 && t4.__parentArray && (t4.__parentArray = a2);
          }))) : Array.isArray(a2) && Array.isArray(u2) && nt.isMongooseArray(a2) && nt.isMongooseArray(u2) && (a2[ut] = u2[ut], a2[at] = u2[at], nt.isMongooseDocumentArray(a2) && a2.forEach(function(t4) {
            null != t4 && (t4.$isNew = false);
          }));
          for (var l2 = this._doc, f2 = 0, p2 = i2.length, h2 = ""; f2 < p2; f2++) {
            var y2 = f2 + 1 === p2;
            if (h2 += h2 ? "." + i2[f2] : i2[f2], !_t.has(i2[f2])) if (y2) l2 instanceof Map ? l2.set(i2[f2], a2) : l2.$isSingleNested ? (i2[f2] in l2 || (l2[i2[f2]] = a2), l2._doc[i2[f2]] = a2, c2 && l2.markModified(i2[f2])) : l2[i2[f2]] = a2;
            else {
              var d2 = l2 instanceof Map, b2 = d2 ? l2.get(i2[f2]) : l2[i2[f2]];
              nt.isPOJO(b2) || b2 && b2 instanceof v || b2 && !Array.isArray(b2) && b2.$isSingleNested || b2 && Array.isArray(b2) ? l2 = b2 : null == b2 ? (b2 = {}, d2 ? l2.set(i2[f2], b2) : l2[i2[f2]] = b2, l2 = b2) : l2 = b2;
            }
          }
        }, wt.prototype.$__getValue = function(t3) {
          if ("string" != typeof t3 && !Array.isArray(t3)) throw new TypeError('Invalid `path`. Must be either string or array. Got "'.concat(t3, '" (type ').concat(d(t3), ")"));
          return nt.getValue(t3, this._doc);
        }, wt.prototype.$inc = function(t3, e3) {
          var r3 = this;
          if (null == e3 && (e3 = 1), Array.isArray(t3)) return t3.forEach(function(t4) {
            return r3.$inc(t4, e3);
          }), this;
          var n2 = this.$__path(t3);
          if (null == n2) {
            if ("throw" === this.$__.strictMode) throw new T(t3);
            if (true === this.$__.strictMode) return this;
          } else if ("Number" !== n2.instance) return this.invalidate(t3, new S.CastError(n2.instance, e3, t3)), this;
          var o2 = this.$__getValue(t3) || 0, i2 = false, s2 = null, a2 = e3;
          try {
            e3 = n2.cast(e3), a2 = (s2 = n2.applySetters(o2 + e3, this)) - o2, i2 = true;
          } catch (r4) {
            this.invalidate(t3, new S.CastError("number", e3, t3, r4));
          }
          return i2 && (this.$__.primitiveAtomics = this.$__.primitiveAtomics || {}, null == this.$__.primitiveAtomics[t3] ? this.$__.primitiveAtomics[t3] = { $inc: a2 } : this.$__.primitiveAtomics[t3].$inc += a2, this.markModified(t3), this.$__setValue(t3, s2)), this;
        }, wt.prototype.$__setValue = function(t3, e3) {
          return nt.setValue(t3, e3, this._doc), this;
        }, wt.prototype.get = function(t3, e3, r3) {
          var n2;
          null == r3 && (r3 = {}), e3 && (n2 = this.$__schema.interpretAsType(t3, e3, this.$__schema.options));
          var o2 = r3.noDottedPath, i2 = o2 ? this.$__schema.paths[t3] : this.$__path(t3);
          if (null == i2 && null != (i2 = this.$__schema.virtualpath(t3))) return i2.applyGetters(void 0, this);
          if (o2) {
            var s2 = this._doc[t3];
            return n2 && (s2 = n2.cast(s2)), null != i2 && false !== r3.getters ? i2.applyGetters(s2, this) : s2;
          }
          if (null != i2 && "Mixed" === i2.instance) {
            var a2 = this.$__schema.virtualpath(t3);
            null != a2 && (i2 = a2);
          }
          var u2 = -1 !== t3.indexOf("."), c2 = this._doc, l2 = u2 ? t3.split(".") : [t3];
          "string" == typeof this.$__schema.aliases[l2[0]] && (l2[0] = this.$__schema.aliases[l2[0]]);
          for (var f2 = 0, p2 = l2.length; f2 < p2; f2++) c2 && c2._doc && (c2 = c2._doc), c2 = null == c2 ? void 0 : c2 instanceof Map ? c2.get(l2[f2], { getters: false }) : f2 === p2 - 1 ? nt.getValue(l2[f2], c2) : c2[l2[f2]];
          if (n2 && (c2 = n2.cast(c2)), null != i2 && false !== r3.getters) c2 = i2.applyGetters(c2, this);
          else if (this.$__schema.nested[t3] && r3.virtuals) return Et(this, D(c2) || {}, { path: t3 });
          return c2;
        }, wt.prototype[ht] = wt.prototype.get, wt.prototype.$get = wt.prototype.get, wt.prototype.$__path = function(t3) {
          var e3 = this.$__.adhocPaths;
          return (e3 && e3.hasOwnProperty(t3) ? e3[t3] : null) || this.$__schema.path(t3);
        }, wt.prototype.markModified = function(t3, e3) {
          this.$__saveInitialState(t3), this.$__.activePaths.modify(t3), null == e3 || this.$isSubdocument || (this.$__.pathsToScopes = this.$__pathsToScopes || {}, this.$__.pathsToScopes[t3] = e3);
        }, wt.prototype.$__saveInitialState = function(t3) {
          var e3 = this.$__.savedState, r3 = t3;
          if (null != e3) {
            var n2 = r3.indexOf("."), o2 = -1 === n2 ? r3 : r3.slice(0, n2);
            e3.hasOwnProperty(o2) || (e3[o2] = D(this.$__getValue(o2)));
          }
        }, wt.prototype.unmarkModified = function(t3) {
          this.$__.activePaths.init(t3), null != this.$__.pathsToScopes && delete this.$__.pathsToScopes[t3];
        }, wt.prototype.$ignore = function(t3) {
          this.$__.activePaths.ignore(t3);
        }, wt.prototype.directModifiedPaths = function() {
          return Object.keys(this.$__.activePaths.getStatePaths("modify"));
        }, wt.prototype.$isEmpty = function(t3) {
          var e3 = { minimize: true, virtuals: false, getters: false, transform: false };
          if (0 !== arguments.length) {
            var r3 = this.$get(t3);
            return null == r3 || "object" === d(r3) && (nt.isPOJO(r3) ? jt(r3) : 0 === Object.keys(r3.toObject(e3)).length);
          }
          return 0 === Object.keys(this.toObject(e3)).length;
        }, wt.prototype.modifiedPaths = function(t3) {
          t3 = t3 || {};
          var e3 = Object.keys(this.$__.activePaths.getStatePaths("modify")), r3 = /* @__PURE__ */ new Set(), n2 = 0, o2 = 0, i2 = e3.length;
          for (n2 = 0; n2 < i2; ++n2) {
            var s2 = e3[n2], a2 = et(s2), u2 = a2.length;
            for (o2 = 0; o2 < u2; ++o2) r3.add(a2[o2]);
            if (t3.includeChildren) {
              var c2 = 0, l2 = this.$get(s2);
              if ("object" === d(l2) && null !== l2) {
                l2._doc && (l2 = l2._doc);
                var f2 = l2.length;
                if (Array.isArray(l2)) for (c2 = 0; c2 < f2; ++c2) {
                  var p2 = s2 + "." + c2;
                  if (!r3.has(p2) && (r3.add(p2), null != l2[c2] && l2[c2].$__)) {
                    var h2 = l2[c2].modifiedPaths(), y2 = 0, b2 = h2.length;
                    for (y2 = 0; y2 < b2; ++y2) r3.add(p2 + "." + h2[y2]);
                  }
                }
                else {
                  var m2 = Object.keys(l2), v2 = 0, g2 = m2.length;
                  for (v2 = 0; v2 < g2; ++v2) r3.add(s2 + "." + m2[v2]);
                }
              }
            }
          }
          return Array.from(r3);
        }, wt.prototype[ft] = wt.prototype.modifiedPaths, wt.prototype.isModified = function(t3, e3, r3) {
          var n2 = this;
          if (t3) {
            var o2 = e3 && e3.ignoreAtomics, i2 = this.$__.activePaths.states.modify;
            if (null == i2) return false;
            "string" == typeof t3 && (t3 = -1 === t3.indexOf(" ") ? [t3] : t3.split(" "));
            var s2, a2 = p(t3);
            try {
              for (a2.s(); !(s2 = a2.n()).done; ) if (null != i2[s2.value]) return true;
            } catch (t4) {
              a2.e(t4);
            } finally {
              a2.f();
            }
            var u2 = r3 || this[ft](), c2 = t3.some(function(t4) {
              return !!~u2.indexOf(t4);
            }), l2 = Object.keys(i2);
            return o2 && (l2 = l2.filter(function(t4) {
              var e4 = n2.$__getValue(t4);
              return null == e4 || null == e4[ut] || void 0 !== e4[ut].$set;
            })), c2 || t3.some(function(t4) {
              return l2.some(function(e4) {
                return e4 === t4 || t4.startsWith(e4 + ".");
              });
            });
          }
          return this.$__.activePaths.some("modify");
        }, wt.prototype.$isModified = wt.prototype.isModified, wt.prototype[lt] = wt.prototype.isModified, wt.prototype.$isDefault = function(t3) {
          var e3 = this;
          if (null == t3) return this.$__.activePaths.some("default");
          if ("string" == typeof t3 && -1 === t3.indexOf(" ")) return this.$__.activePaths.getStatePaths("default").hasOwnProperty(t3);
          var r3 = t3;
          return Array.isArray(r3) || (r3 = r3.split(" ")), r3.some(function(t4) {
            return e3.$__.activePaths.getStatePaths("default").hasOwnProperty(t4);
          });
        }, wt.prototype.$isDeleted = function(t3) {
          return 0 === arguments.length ? !!this.$__.isDeleted : (this.$__.isDeleted = !!t3, this);
        }, wt.prototype.isDirectModified = function(t3) {
          var e3 = this;
          if (null == t3) return this.$__.activePaths.some("modify");
          if ("string" == typeof t3 && -1 === t3.indexOf(" ")) {
            var r3 = this.$__.activePaths.getStatePaths("modify").hasOwnProperty(t3);
            if (r3 || -1 === t3.indexOf(".")) return r3;
            for (var n2 = t3.split("."), o2 = 0; o2 < n2.length - 1; ++o2) {
              var i2 = n2.slice(0, o2 + 1).join("."), s2 = this.$get(i2);
              if (null != s2 && null != s2.$__ && s2.isDirectModified(n2.slice(o2 + 1).join("."))) return true;
            }
            return false;
          }
          var a2 = t3;
          return "string" == typeof a2 && (a2 = a2.split(" ")), a2.some(function(t4) {
            return e3.isDirectModified(t4);
          });
        }, wt.prototype.isInit = function(t3) {
          var e3 = this;
          if (null == t3) return this.$__.activePaths.some("init");
          if ("string" == typeof t3 && -1 === t3.indexOf(" ")) return this.$__.activePaths.getStatePaths("init").hasOwnProperty(t3);
          var r3 = t3;
          return Array.isArray(r3) || (r3 = r3.split(" ")), r3.some(function(t4) {
            return e3.$__.activePaths.getStatePaths("init").hasOwnProperty(t4);
          });
        }, wt.prototype.isSelected = function(t3) {
          var e3 = this;
          if (null == this.$__.selected) return true;
          if (!t3) return false;
          if ("_id" === t3) return 0 !== this.$__.selected._id;
          if (-1 !== t3.indexOf(" ") && (t3 = t3.split(" ")), Array.isArray(t3)) return t3.some(function(t4) {
            return e3.$__isSelected(t4);
          });
          var r3 = Object.keys(this.$__.selected), n2 = null;
          if (1 === r3.length && "_id" === r3[0]) return 0 === this.$__.selected._id;
          for (var o2 = 0, i2 = r3; o2 < i2.length; o2++) {
            var s2 = i2[o2];
            if ("_id" !== s2 && H(this.$__.selected[s2])) {
              n2 = !!this.$__.selected[s2];
              break;
            }
          }
          if (null === n2) return true;
          if (t3 in this.$__.selected) return n2;
          for (var a2 = t3 + ".", u2 = 0, c2 = r3; u2 < c2.length; u2++) {
            var l2 = c2[u2];
            if ("_id" !== l2) {
              if (l2.startsWith(a2)) return n2 || l2 !== a2;
              if (a2.startsWith(l2 + ".")) return n2;
            }
          }
          return !n2;
        }, wt.prototype.$__isSelected = wt.prototype.isSelected, wt.prototype.isDirectSelected = function(t3) {
          var e3 = this;
          if (null == this.$__.selected) return true;
          if ("_id" === t3) return 0 !== this.$__.selected._id;
          if (-1 !== t3.indexOf(" ") && (t3 = t3.split(" ")), Array.isArray(t3)) return t3.some(function(t4) {
            return e3.isDirectSelected(t4);
          });
          var r3 = Object.keys(this.$__.selected), n2 = null;
          if (1 === r3.length && "_id" === r3[0]) return 0 === this.$__.selected._id;
          for (var o2 = 0, i2 = r3; o2 < i2.length; o2++) {
            var s2 = i2[o2];
            if ("_id" !== s2 && H(this.$__.selected[s2])) {
              n2 = !!this.$__.selected[s2];
              break;
            }
          }
          return null === n2 || (this.$__.selected.hasOwnProperty(t3) ? n2 : !n2);
        }, wt.prototype.validate = function() {
          var t3 = u(i().m(/* @__PURE__ */ __name(function t4(e3, r3) {
            var n2, o2, s2 = this, a2 = arguments;
            return i().w(function(t5) {
              for (; ; ) switch (t5.n) {
                case 0:
                  if ("function" != typeof e3 && "function" != typeof r3 && "function" != typeof a2[2]) {
                    t5.n = 1;
                    break;
                  }
                  throw new S("Document.prototype.validate() no longer accepts a callback");
                case 1:
                  if (this.$op = "validate", 1 === a2.length && ("object" !== d(a2[0]) || Array.isArray(a2[0]) || (r3 = a2[0], e3 = null)), r3 && "string" == typeof r3.pathsToSkip && (n2 = -1 === r3.pathsToSkip.indexOf(" "), r3.pathsToSkip = n2 ? [r3.pathsToSkip] : r3.pathsToSkip.split(" ")), o2 = r3 && r3._skipParallelValidateCheck, null == this.$isSubdocument) {
                    t5.n = 2;
                    break;
                  }
                  t5.n = 4;
                  break;
                case 2:
                  if (!this.$__.validating || o2) {
                    t5.n = 3;
                    break;
                  }
                  throw new E(this);
                case 3:
                  o2 || (this.$__.validating = true);
                case 4:
                  return t5.a(2, new Promise(function(t6, n3) {
                    s2.$__validate(e3, r3, function(e4) {
                      if (s2.$op = null, s2.$__.validating = null, null != e4) return n3(e4);
                      t6();
                    });
                  }));
              }
            }, t4, this);
          }, "t")));
          return function(e3, r3) {
            return t3.apply(this, arguments);
          };
        }(), wt.prototype.$validate = wt.prototype.validate, wt.prototype.$__validate = function(t3, e3, r3) {
          var n2, i2 = this;
          this.$__.saveOptions && this.$__.saveOptions.pathsToSave && !t3 ? t3 = o(this.$__.saveOptions.pathsToSave) : "function" == typeof t3 ? (r3 = t3, e3 = null, t3 = null) : "function" == typeof e3 && (r3 = e3, e3 = null);
          var s2, a2 = e3 && "object" === d(e3) && "validateModifiedOnly" in e3, u2 = e3 && e3.pathsToSkip || null;
          s2 = a2 ? !!e3.validateModifiedOnly : this.$__schema.options.validateModifiedOnly;
          var c2 = e3 && e3.validateAllPaths;
          if (c2) {
            if (u2) throw new TypeError("Cannot set both `validateAllPaths` and `pathsToSkip`");
            if (t3) throw new TypeError("Cannot set both `validateAllPaths` and `pathsToValidate`");
            if (a2 && s2) throw new TypeError("Cannot set both `validateAllPaths` and `validateModifiedOnly`");
          }
          var f2, h2, y2 = this, b2 = /* @__PURE__ */ __name(function() {
            var t4 = i2.$__.validationError;
            if (i2.$__.validationError = null, i2.$__.validating = null, s2 && null != t4) {
              for (var e4 = 0, r4 = Object.keys(t4.errors); e4 < r4.length; e4++) {
                var n3 = r4[e4];
                i2.$isModified(n3) || delete t4.errors[n3];
              }
              0 === Object.keys(t4.errors).length && (t4 = void 0);
            }
            if (i2.$__.cachedRequired = {}, i2.$emit("validate", y2), i2.constructor.emit("validate", y2), t4) {
              for (var o2 in t4.errors) !i2[ct] && t4.errors[o2] instanceof S.CastError && i2.invalidate(o2, t4.errors[o2]);
              return t4;
            }
          }, "b");
          if (c2) {
            var m2, v2 = p(f2 = new Set(Object.keys(this.$__schema.paths)));
            try {
              for (v2.s(); !(m2 = v2.n()).done; ) {
                var g2 = m2.value, _2 = this.$__schema.path(g2);
                if (_2 && _2.$isMongooseArray) {
                  var w2 = this.$__getValue(g2);
                  w2 && At(w2, f2, g2);
                }
              }
            } catch (t4) {
              v2.e(t4);
            } finally {
              v2.f();
            }
            f2 = o(f2), h2 = {};
          } else {
            var O2 = Pt(this, t3, u2, e3 && e3._nestedValidate);
            f2 = s2 ? O2[0].filter(function(t4) {
              return i2.$isModified(t4);
            }) : O2[0], h2 = O2[1];
          }
          if ("string" == typeof t3 && (t3 = t3.split(" ")), 0 === f2.length) return z(function() {
            var t4 = b2();
            if (t4) return y2.$__schema.s.hooks.execPost("validate:error", y2, [y2], { error: t4 }, function(t5) {
              r3(t5);
            });
            r3(null, y2);
          });
          var $2 = {}, j2 = 0, P2 = null === (n2 = this.$__.saveOptions) || void 0 === n2 ? void 0 : n2.pathsToSave;
          if (Array.isArray(P2)) {
            P2 = new Set(P2);
            var A2, E2 = p(f2);
            try {
              for (E2.s(); !(A2 = E2.n()).done; ) {
                var x2 = A2.value;
                P2.has(x2) && I2(x2);
              }
            } catch (t4) {
              E2.e(t4);
            } finally {
              E2.f();
            }
          } else {
            var T2, N2 = p(f2);
            try {
              for (N2.s(); !(T2 = N2.n()).done; ) I2(T2.value);
            } catch (t4) {
              N2.e(t4);
            } finally {
              N2.f();
            }
          }
          function I2(t4) {
            null == t4 || $2[t4] || ($2[t4] = true, j2++, z(function() {
              var e4 = y2.$__schema.path(t4);
              if (!e4) return --j2 || B2();
              if (y2.$isValid(t4)) {
                if (null != e4[mt] && t4 !== e4.path) return --j2 || B2();
                var r4, n3 = y2.$__getValue(t4);
                (r4 = y2.$populated(t4)) ? n3 = r4 : null != n3 && null != n3.$__ && n3.$__.wasPopulated && (n3 = n3._doc._id);
                var o2 = null != y2.$__.pathsToScopes && t4 in y2.$__.pathsToScopes ? y2.$__.pathsToScopes[t4] : y2, i3 = l(l({}, h2[t4]), {}, { path: t4, validateAllPaths: c2, _nestedValidate: true });
                e4.doValidate(n3, function(r5) {
                  if (r5) {
                    if ((e4.$isSingleNested || e4.$isArraySubdocument || e4.$isMongooseDocumentArray) && r5 instanceof k) return --j2 || B2();
                    y2.invalidate(t4, r5, void 0, true);
                  }
                  --j2 || B2();
                }, o2, i3);
              } else --j2 || B2();
            }));
          }
          __name(I2, "I");
          function B2() {
            var t4 = b2();
            if (t4) return y2.$__schema.s.hooks.execPost("validate:error", y2, [y2], { error: t4 }, function(t5) {
              r3(t5);
            });
            r3(null, y2);
          }
          __name(B2, "B");
        }, wt.prototype.validateSync = function(t3, e3) {
          var r3, n2 = this, i2 = this;
          1 !== arguments.length || "object" !== d(arguments[0]) || Array.isArray(arguments[0]) || (e3 = arguments[0], t3 = null), r3 = e3 && "object" === d(e3) && "validateModifiedOnly" in e3 ? !!e3.validateModifiedOnly : this.$__schema.options.validateModifiedOnly;
          var s2, a2, u2 = e3 && e3.pathsToSkip, c2 = e3 && e3.validateAllPaths;
          if (c2) {
            if (u2) throw new TypeError("Cannot set both `validateAllPaths` and `pathsToSkip`");
            if (t3) throw new TypeError("Cannot set both `validateAllPaths` and `pathsToValidate`");
          }
          if ("string" == typeof t3) {
            var l2 = -1 === t3.indexOf(" ");
            t3 = l2 ? [t3] : t3.split(" ");
          } else "string" == typeof u2 && -1 !== u2.indexOf(" ") && (u2 = u2.split(" "));
          if (c2) {
            var f2, h2 = p(s2 = new Set(Object.keys(this.$__schema.paths)));
            try {
              for (h2.s(); !(f2 = h2.n()).done; ) {
                var y2 = f2.value, b2 = this.$__schema.path(y2);
                if (b2 && b2.$isMongooseArray) {
                  var m2 = this.$__getValue(y2);
                  m2 && At(m2, s2, y2);
                }
              }
            } catch (A3) {
              h2.e(A3);
            } finally {
              h2.f();
            }
            s2 = o(s2), a2 = {};
          } else {
            var v2 = Pt(this, t3, u2);
            s2 = r3 ? v2[0].filter(function(t4) {
              return n2.$isModified(t4);
            }) : v2[0], a2 = v2[1];
          }
          for (var g2 = {}, _2 = 0, w2 = s2.length; _2 < w2; ++_2) {
            var O2 = s2[_2];
            if (!g2[O2]) {
              g2[O2] = true;
              var $2 = i2.$__schema.path(O2);
              if ($2 && i2.$isValid(O2)) {
                var j2 = i2.$__getValue(O2), P2 = $2.doValidateSync(j2, i2, { skipSchemaValidators: a2[O2], path: O2, validateModifiedOnly: r3, validateAllPaths: c2 });
                if (P2) {
                  if (($2.$isSingleNested || $2.$isArraySubdocument || $2.$isMongooseDocumentArray) && P2 instanceof k) continue;
                  i2.invalidate(O2, P2, void 0, true);
                }
              }
            }
          }
          var A2 = i2.$__.validationError;
          if (i2.$__.validationError = void 0, i2.$emit("validate", i2), i2.constructor.emit("validate", i2), A2) for (var E2 in A2.errors) A2.errors[E2] instanceof S.CastError && i2.invalidate(E2, A2.errors[E2]);
          return A2;
        }, wt.prototype.invalidate = function(t3, e3, r3, n2) {
          if (this.$__.validationError || (this.$__.validationError = new k(this)), !this.$__.validationError.errors[t3]) return e3 && "string" != typeof e3 || (e3 = new N({ path: t3, message: e3, type: n2 || "user defined", value: r3 })), this.$__.validationError === e3 || this.$__.validationError.addError(t3, e3), this.$__.validationError;
        }, wt.prototype.$markValid = function(t3) {
          this.$__.validationError && this.$__.validationError.errors[t3] && (delete this.$__.validationError.errors[t3], 0 === Object.keys(this.$__.validationError.errors).length && (this.$__.validationError = null));
        }, wt.prototype.$isValid = function(t3) {
          var e3 = this;
          return null == this.$__.validationError || 0 === Object.keys(this.$__.validationError.errors).length || null != t3 && (-1 !== t3.indexOf(" ") && (t3 = t3.split(" ")), Array.isArray(t3) ? t3.some(function(t4) {
            return null == e3.$__.validationError.errors[t4];
          }) : null == this.$__.validationError.errors[t3]);
        }, wt.prototype.$__reset = function() {
          var t3, e3 = this.$isSubdocument ? null : this.$getAllSubdocs({ useCache: true });
          if (e3 && e3.length > 0) {
            var r3, n2 = p(e3);
            try {
              for (n2.s(); !(r3 = n2.n()).done; ) r3.value.$__reset();
            } catch (t4) {
              n2.e(t4);
            } finally {
              n2.f();
            }
          }
          return this.$__dirty().forEach(function(t4) {
            var e4 = t4.value;
            e4 && e4[ut] && (e4[at] = e4[ut], e4[ut] = {});
          }), this.$__.backup = {}, this.$__.backup.activePaths = { modify: Object.assign({}, this.$__.activePaths.getStatePaths("modify")), default: Object.assign({}, this.$__.activePaths.getStatePaths("default")) }, this.$__.backup.validationError = this.$__.validationError, this.$__.backup.errors = this.$errors, this.$__.activePaths.clear("modify"), this.$__.activePaths.clear("default"), this.$__.validationError = void 0, this.$errors = void 0, t3 = this, this.$__schema.requiredPaths().forEach(function(e4) {
            t3.$__.activePaths.require(e4);
          }), this;
        }, wt.prototype.$__undoReset = function() {
          if (null != this.$__.backup && null != this.$__.backup.activePaths) {
            this.$__.activePaths.states.modify = this.$__.backup.activePaths.modify, this.$__.activePaths.states.default = this.$__.backup.activePaths.default, this.$__.validationError = this.$__.backup.validationError, this.$errors = this.$__.backup.errors;
            var t3, e3 = p(this.$__dirty());
            try {
              for (e3.s(); !(t3 = e3.n()).done; ) {
                var r3 = t3.value.value;
                r3 && r3[ut] && r3[at] && (r3[ut] = r3[at]);
              }
            } catch (t4) {
              e3.e(t4);
            } finally {
              e3.f();
            }
            if (!this.$isSubdocument) {
              var n2, o2 = p(this.$getAllSubdocs());
              try {
                for (o2.s(); !(n2 = o2.n()).done; ) n2.value.$__undoReset();
              } catch (t4) {
                o2.e(t4);
              } finally {
                o2.f();
              }
            }
          }
        }, wt.prototype.$__dirty = function() {
          var t3 = this, e3 = this.$__.activePaths.map("modify", function(e4) {
            return { path: e4, value: t3.$__getValue(e4), schema: t3.$__path(e4) };
          });
          e3 = e3.concat(this.$__.activePaths.map("default", function(e4) {
            if ("_id" !== e4 && null != t3.$__getValue(e4)) return { path: e4, value: t3.$__getValue(e4), schema: t3.$__path(e4) };
          }));
          var r3 = new Map(e3.filter(function(t4) {
            return null != t4;
          }).map(function(t4) {
            return [t4.path, t4.value];
          })), n2 = [];
          return e3.forEach(function(t4) {
            if (t4) {
              for (var e4 = null, o2 = et(t4.path), i2 = 0; i2 < o2.length - 1; i2++) if (r3.has(o2[i2])) {
                e4 = r3.get(o2[i2]);
                break;
              }
              null == e4 ? n2.push(t4) : null != e4 && null != e4[ut] && e4.hasAtomics() && (e4[ut] = {}, e4[ut].$set = e4);
            }
          }), n2;
        }, wt.prototype.$__setSchema = function(t3) {
          R(t3.tree, this, void 0, t3.options);
          for (var e3 = 0, r3 = Object.keys(t3.virtuals); e3 < r3.length; e3++) {
            var n2 = r3[e3];
            t3.virtuals[n2]._applyDefaultGetters();
          }
          null == t3.path("schema") && (this.schema = t3), this.$__schema = t3, this[pt] = t3;
        }, wt.prototype.$__getArrayPathsToValidate = function() {
          return b || (b = r2(4878)), this.$__.activePaths.map("init", "modify", function(t3) {
            return this.$__getValue(t3);
          }.bind(this)).filter(function(t3) {
            return t3 && Array.isArray(t3) && nt.isMongooseDocumentArray(t3) && t3.length;
          }).reduce(function(t3, e3) {
            return t3.concat(e3);
          }, []).filter(function(t3) {
            return t3;
          });
        }, wt.prototype.$getAllSubdocs = function(t3) {
          var e3;
          if (null != t3 && t3.useCache && null !== (e3 = this.$__.saveOptions) && void 0 !== e3 && e3.__subdocs) return this.$__.saveOptions.__subdocs;
          b || (b = r2(4878)), v = v || r2(6547);
          var n2 = [];
          return (/* @__PURE__ */ __name(function t4(e4) {
            var r3, o2 = [], i2 = p(e4.$__schema.childSchemas);
            try {
              for (i2.s(); !(r3 = i2.n()).done; ) {
                var s2 = r3.value.model, a2 = e4.$__getValue(s2.path);
                if (null != a2) {
                  if (a2.$__ && o2.push(a2), Array.isArray(a2)) {
                    var u2, c2 = p(a2);
                    try {
                      for (c2.s(); !(u2 = c2.n()).done; ) {
                        var l2 = u2.value;
                        null != l2 && l2.$__ && o2.push(l2);
                      }
                    } catch (t5) {
                      c2.e(t5);
                    } finally {
                      c2.f();
                    }
                  }
                  if (a2 instanceof Map) {
                    var f2, h2 = p(a2.values());
                    try {
                      for (h2.s(); !(f2 = h2.n()).done; ) {
                        var y2 = f2.value;
                        null != y2 && y2.$__ && o2.push(y2);
                      }
                    } catch (t5) {
                      h2.e(t5);
                    } finally {
                      h2.f();
                    }
                  }
                }
              }
            } catch (t5) {
              i2.e(t5);
            } finally {
              i2.f();
            }
            for (var d2 = 0, b2 = o2; d2 < b2.length; d2++) t4(b2[d2]);
            n2.push.apply(n2, o2);
          }, "t"))(this), this.$__.saveOptions && (this.$__.saveOptions.__subdocs = n2), n2;
        }, wt.prototype.$__handleReject = function(t3) {
          this.$listeners("error").length ? this.$emit("error", t3) : this.constructor.listeners && this.constructor.listeners("error").length && this.constructor.emit("error", t3);
        }, wt.prototype.$toObject = function(t3, e3) {
          var r3, n2, o2, i2, s2, a2, u2, c2, f2, p2, h2, y2, b2, m2, v2, g2 = this.$__schema._defaultToObjectOptions(e3), _2 = this.$__hasOnlyPrimitiveValues();
          (t3 = nt.isPOJO(t3) ? l({}, t3) : {})._calledWithOptions = t3._calledWithOptions || l({}, t3), v2 = null != t3._calledWithOptions.minimize ? t3.minimize : null != (null === (r3 = this.$__schemaTypeOptions) || void 0 === r3 ? void 0 : r3.minimize) ? this.$__schemaTypeOptions.minimize : null != g2 && null != g2.minimize ? g2.minimize : this.$__schema.options.minimize, t3.minimize = v2, _2 || (t3._seen = t3._seen || /* @__PURE__ */ new Map());
          var w2 = null !== (n2 = null !== (o2 = null !== (i2 = t3._calledWithOptions.depopulate) && void 0 !== i2 ? i2 : null == g2 ? void 0 : g2.depopulate) && void 0 !== o2 ? o2 : t3.depopulate) && void 0 !== n2 && n2;
          if (w2 && t3._isNested && this.$__.wasPopulated) return D(this.$__.wasPopulated.value || this._doc._id, t3);
          if (w2 && (t3.depopulate = true), null != g2) for (var O2 = 0, S2 = Object.keys(g2); O2 < S2.length; O2++) {
            var $2 = S2[O2];
            null == t3[$2] && (t3[$2] = g2[$2]);
          }
          t3._isNested = true, t3.json = e3, t3.minimize = v2;
          var j2 = t3._parentOptions;
          t3._parentOptions = this.$isSubdocument ? t3 : null;
          var P2, A2 = null !== (s2 = null !== (a2 = null !== (u2 = t3._calledWithOptions.schemaFieldsOnly) && void 0 !== u2 ? u2 : t3.schemaFieldsOnly) && void 0 !== a2 ? a2 : g2.schemaFieldsOnly) && void 0 !== s2 && s2;
          if (_2 && !t3.flattenObjectIds) P2 = this.$__toObjectShallow(A2);
          else if (A2) {
            P2 = {};
            for (var E2 = 0, x2 = Object.keys(this.$__schema.paths); E2 < x2.length; E2++) {
              var T2 = x2[E2], k2 = this.$__getValue(T2);
              if (void 0 !== k2) {
                var N2 = T2, I2 = P2;
                if (-1 !== T2.indexOf(".")) {
                  var B2 = T2.split(".");
                  N2 = B2[B2.length - 1];
                  for (var M2 = 0; M2 < B2.length - 1; ++M2) {
                    var R2;
                    I2[B2[M2]] = null !== (R2 = I2[B2[M2]]) && void 0 !== R2 ? R2 : {}, I2 = I2[B2[M2]];
                  }
                }
                I2[N2] = null !== k2 ? D(k2, t3) : null;
              }
            }
          } else P2 = D(this._doc, t3) || {};
          var U2 = null !== (c2 = null !== (f2 = null !== (p2 = t3._calledWithOptions.getters) && void 0 !== p2 ? p2 : t3.getters) && void 0 !== f2 ? f2 : g2.getters) && void 0 !== c2 && c2;
          U2 && (function(t4, e4) {
            var r4, n3, o3 = t4.$__schema, i3 = Object.keys(o3.paths), s3 = i3.length, a3 = t4._doc;
            if (!a3) return e4;
            for (; s3--; ) {
              var u3 = (r4 = i3[s3]).split("."), c3 = u3.length, l2 = c3 - 1, f3 = e4, p3 = void 0;
              if (a3 = t4._doc, t4.$__isSelected(r4)) for (var h3 = 0; h3 < c3 && (n3 = a3[p3 = u3[h3]], null == f3 || "object" === d(f3)); ++h3) {
                if (h3 === l2) {
                  if (f3[p3] = o3.paths[r4].applyGetters(f3[p3], t4), Array.isArray(f3[p3]) && o3.paths[r4].$embeddedSchemaType) for (var y3 = 0; y3 < f3[p3].length; ++y3) f3[p3][y3] = o3.paths[r4].$embeddedSchemaType.applyGetters(f3[p3][y3], t4);
                } else {
                  if (null == n3) {
                    p3 in a3 && (f3[p3] = n3);
                    break;
                  }
                  f3 = f3[p3] || (f3[p3] = {});
                }
                a3 = n3;
              }
            }
          }(this, P2), t3.minimize && (P2 = X(P2) || {}));
          var C2 = null !== (h2 = null !== (y2 = null !== (b2 = t3._calledWithOptions.virtuals) && void 0 !== b2 ? b2 : g2.virtuals) && void 0 !== y2 ? y2 : null == j2 ? void 0 : j2.virtuals) && void 0 !== h2 ? h2 : void 0;
          (C2 || U2 && false !== C2) && Et(this, P2, t3, t3), false === t3.versionKey && this.$__schema.options.versionKey && delete P2[this.$__schema.options.versionKey];
          var F2 = null === (m2 = t3._calledWithOptions.transform) || void 0 === m2 || m2, L2 = void 0;
          if (true === F2 ? L2 = g2.transform : "function" == typeof F2 && (L2 = F2), F2 && function(t4, e4) {
            var r4 = t4.$__schema, n3 = Object.keys(r4.paths || {});
            if (!t4._doc) return e4;
            for (var o3 = 0, i3 = n3; o3 < i3.length; o3++) {
              var s3, a3, u3, c3, l2, f3 = i3[o3], p3 = r4.paths[f3], h3 = null !== (s3 = p3.options.transform) && void 0 !== s3 ? s3 : null === (a3 = p3.constructor) || void 0 === a3 || null === (a3 = a3.defaultOptions) || void 0 === a3 ? void 0 : a3.transform, y3 = null !== (u3 = null === (c3 = p3.$embeddedSchemaType) || void 0 === c3 || null === (c3 = c3.options) || void 0 === c3 ? void 0 : c3.transform) && void 0 !== u3 ? u3 : null === (l2 = p3.$embeddedSchemaType) || void 0 === l2 || null === (l2 = l2.constructor) || void 0 === l2 || null === (l2 = l2.defaultOptions) || void 0 === l2 ? void 0 : l2.transform;
              if ("function" == typeof h3) {
                var d2 = t4.$get(f3);
                if (void 0 === d2) continue;
                var b3 = h3.call(t4, d2);
                xt(f3, b3), nt.setValue(f3, b3, e4);
              } else if ("function" == typeof y3) {
                var m3 = t4.$get(f3);
                if (void 0 === m3) continue;
                for (var v3 = [].concat(m3), g3 = 0; g3 < v3.length; ++g3) {
                  var _3 = y3.call(t4, v3[g3]);
                  v3[g3] = _3, xt(f3, _3);
                }
                e4[f3] = v3;
              }
            }
          }(this, P2), t3.useProjection && function(t4, e4) {
            var r4 = t4.$__schema, n3 = Object.keys(r4.paths || {});
            if (!t4._doc) return e4;
            var o3 = t4.$__.selected;
            if (void 0 === o3 && (o3 = {}, rt.applyPaths(o3, r4)), null == o3 || 0 === Object.keys(o3).length) return e4;
            for (var i3 = 0, s3 = n3; i3 < s3.length; i3++) {
              var a3 = s3[i3];
              null == o3[a3] || o3[a3] || delete e4[a3];
            }
          }(this, P2), "function" == typeof L2) {
            var V2 = L2(this, P2, t3);
            void 0 !== V2 && (P2 = V2);
          }
          return P2;
        }, wt.prototype.$__toObjectShallow = function(t3) {
          var e3 = {};
          if (null != this._doc) {
            var r3, n2 = p(t3 ? Object.keys(this.$__schema.paths) : Object.keys(this._doc));
            try {
              for (n2.s(); !(r3 = n2.n()).done; ) {
                var o2 = r3.value, i2 = this._doc[o2];
                i2 instanceof Date ? e3[o2] = new Date(i2) : void 0 !== i2 && (e3[o2] = i2);
              }
            } catch (t4) {
              n2.e(t4);
            } finally {
              n2.f();
            }
          }
          return e3;
        }, wt.prototype.toObject = function(t3) {
          return this.$toObject(t3);
        }, wt.prototype.toJSON = function(t3) {
          return this.$toObject(t3, true);
        }, wt.prototype.ownerDocument = function() {
          return this;
        }, wt.prototype.parent = function() {
          return this.$isSubdocument || this.$__.wasPopulated ? this.$__.parent : this;
        }, wt.prototype.$parent = wt.prototype.parent, wt.prototype.inspect = function(t3) {
          var e3;
          nt.isPOJO(t3) && ((e3 = t3).minimize = false);
          var r3 = arguments.length > 0 ? this.toObject(e3) : this.toObject();
          return null == r3 ? "MongooseDocument { " + r3 + " }" : r3;
        }, Q.custom && (wt.prototype[Q.custom] = wt.prototype.inspect), wt.prototype.toString = function() {
          var t3 = this.inspect();
          return "string" == typeof t3 ? t3 : Q(t3);
        }, wt.prototype.equals = function(t3) {
          if (!t3) return false;
          var e3 = this.$__getValue("_id"), r3 = null != t3.$__ ? t3.$__getValue("_id") : t3;
          return e3 || r3 ? e3 && e3.equals ? e3.equals(r3) : e3 === r3 : it(this, t3);
        }, wt.prototype.populate = function() {
          var t3 = u(i().m(/* @__PURE__ */ __name(function t4() {
            var e3, r3, n2, o2, s2, a2, u2, c2, l2, f2, h2 = arguments;
            return i().w(function(t5) {
              for (; ; ) switch (t5.n) {
                case 0:
                  if (e3 = {}, "function" != typeof (r3 = Array.prototype.slice.call(h2))[r3.length - 1]) {
                    t5.n = 1;
                    break;
                  }
                  throw new S("Document.prototype.populate() no longer accepts a callback");
                case 1:
                  if (0 !== r3.length) {
                    n2 = nt.populate.apply(null, r3), o2 = p(n2);
                    try {
                      for (o2.s(); !(s2 = o2.n()).done; ) a2 = s2.value, e3[a2.path] = a2;
                    } catch (t6) {
                      o2.e(t6);
                    } finally {
                      o2.f();
                    }
                  }
                  return u2 = nt.object.vals(e3), c2 = this.constructor, this.$__isNested && (c2 = this.$__[bt].constructor, l2 = this.$__.nestedPath, u2.forEach(function(t6) {
                    t6.path = l2 + "." + t6.path;
                  })), null != this.$session() && (f2 = this.$session(), u2.forEach(function(t6) {
                    null != t6.options ? "session" in t6.options || (t6.options.session = f2) : t6.options = { session: f2 };
                  })), u2.forEach(function(t6) {
                    t6._localModel = c2;
                  }), t5.a(2, c2.populate(this, u2));
              }
            }, t4, this);
          }, "t")));
          return function() {
            return t3.apply(this, arguments);
          };
        }(), wt.prototype.$getPopulatedDocs = function() {
          var t3 = [];
          null != this.$__.populated && (t3 = t3.concat(Object.keys(this.$__.populated)));
          var e3, r3 = [], n2 = p(t3);
          try {
            for (n2.s(); !(e3 = n2.n()).done; ) {
              var o2 = e3.value, i2 = this.$get(o2);
              Array.isArray(i2) ? r3 = r3.concat(i2) : i2 instanceof wt && r3.push(i2);
            }
          } catch (t4) {
            n2.e(t4);
          } finally {
            n2.f();
          }
          return r3;
        }, wt.prototype.populated = function(t3, e3, r3) {
          if (null == e3 || true === e3) {
            if (!this.$__.populated) return;
            if ("string" != typeof t3) return;
            var n2 = t3.endsWith(".$*") ? t3.replace(/\.\$\*$/, "") : t3, o2 = this.$__.populated[n2];
            return o2 ? true === e3 ? o2 : o2.value : void 0;
          }
          this.$__.populated || (this.$__.populated = {}), this.$__.populated[t3] = { value: e3, options: r3 };
          for (var i2 = t3.split("."), s2 = 0; s2 < i2.length - 1; ++s2) {
            var a2 = i2.slice(0, s2 + 1).join("."), u2 = this.$get(a2);
            if (null != u2 && null != u2.$__ && this.$populated(a2)) {
              var c2 = i2.slice(s2 + 1).join(".");
              u2.$populated(c2, e3, r3);
              break;
            }
          }
          return e3;
        }, wt.prototype.$populated = wt.prototype.populated, wt.prototype.$assertPopulated = function(t3, e3) {
          var r3 = this;
          if (Array.isArray(t3)) return t3.forEach(function(t4) {
            return r3.$assertPopulated(t4, e3);
          }), this;
          if (arguments.length > 1 && this.$set(e3), !this.$populated(t3)) throw new S('Expected path "'.concat(t3, '" to be populated'));
          return this;
        }, wt.prototype.depopulate = function(t3) {
          var e3;
          "string" == typeof t3 && (t3 = -1 === t3.indexOf(" ") ? [t3] : t3.split(" "));
          var r3 = this.$$populatedVirtuals ? Object.keys(this.$$populatedVirtuals) : [], n2 = this.$__ && this.$__.populated || {};
          if (0 === arguments.length) {
            var o2, i2 = p(r3);
            try {
              for (i2.s(); !(o2 = i2.n()).done; ) {
                var s2 = o2.value;
                delete this.$$populatedVirtuals[s2], delete this._doc[s2], delete n2[s2];
              }
            } catch (t4) {
              i2.e(t4);
            } finally {
              i2.f();
            }
            for (var a2 = 0, u2 = Object.keys(n2); a2 < u2.length; a2++) {
              var c2 = u2[a2];
              if (e3 = this.$populated(c2)) if (delete n2[c2], Array.isArray(e3)) {
                var l2 = nt.getValue(c2, this._doc);
                if (l2.isMongooseArray) for (var f2 = l2.__array, h2 = 0; h2 < f2.length; ++h2) {
                  var y2 = f2[h2];
                  null != y2 && (f2[h2] = y2 instanceof wt ? y2._doc._id : y2._id);
                }
                else nt.setValue(c2, e3, this._doc);
              } else nt.setValue(c2, e3, this._doc);
            }
            return this;
          }
          var d2, b2 = p(t3);
          try {
            for (b2.s(); !(d2 = b2.n()).done; ) {
              var m2 = d2.value;
              if (e3 = this.$populated(m2), delete n2[m2], -1 !== r3.indexOf(m2)) delete this.$$populatedVirtuals[m2], delete this._doc[m2];
              else if (e3) if (Array.isArray(e3)) {
                var v2 = nt.getValue(m2, this._doc);
                if (v2.isMongooseArray) for (var g2 = v2.__array, _2 = 0; _2 < g2.length; ++_2) {
                  var w2 = g2[_2];
                  null != w2 && (g2[_2] = w2 instanceof wt ? w2._doc._id : w2._id);
                }
                else nt.setValue(m2, e3, this._doc);
              } else nt.setValue(m2, e3, this._doc);
            }
          } catch (t4) {
            b2.e(t4);
          } finally {
            b2.f();
          }
          return this;
        }, wt.prototype.$__fullPath = function(t3) {
          return t3 || "";
        }, wt.prototype.getChanges = function() {
          var t3 = this.$__delta();
          return t3 ? t3[1] : {};
        }, wt.prototype.$__delta = function() {
          var t3 = this, e3 = this.$__dirty(), r3 = this.$__schema.options.optimisticConcurrency;
          if (r3) if (Array.isArray(r3)) {
            var o2 = new Set(r3);
            this.modifiedPaths().find(function(t4) {
              return o2.has(t4);
            }) && (this.$__.version = e3.length ? 3 : 1);
          } else this.$__.version = e3.length ? 3 : 1;
          if (e3.length || 3 === this.$__.version) {
            var i2 = {}, s2 = {}, a2 = e3.length, u2 = [], c2 = 0;
            for (i2._id = this._doc._id, null != (i2 && i2._id && i2._id.$__ || null) && (i2._id = i2._id.toObject({ transform: false, depopulate: true })); c2 < a2; ++c2) {
              var l2 = e3[c2], f2 = l2.value, p2 = Tt(this, l2.path, f2);
              if (p2) u2.push(p2);
              else {
                if (!this.$populated(l2.path, true) && this.$__.selected) {
                  var h2 = l2.path.split("."), y2 = h2[0];
                  if (this.$__.selected[y2] && this.$__.selected[y2].$elemMatch) {
                    if (!(h2.length > 1 && 0 == h2[1] && void 0 === i2[y2])) {
                      u2.push(l2.path);
                      continue;
                    }
                    i2[y2] = this.$__.selected[y2], h2[1] = "$", l2.path = h2.join(".");
                  }
                }
                if (this.$isDefault(l2.path) && this.$__.selected) {
                  if (-1 === l2.path.indexOf(".") && G(this.$__.selected, l2.path)) continue;
                  if (et(l2.path).find(function(e4) {
                    return G(t3.$__.isSelected, e4);
                  })) continue;
                }
                if (!u2.length) if (void 0 === f2) kt(this, 0, s2, l2, 1, "$unset");
                else if (null === f2) kt(this, 0, s2, l2, null);
                else if (nt.isMongooseArray(f2) && f2.$path() && f2[ut]) Nt(this, 0, s2, l2, f2);
                else if (f2[O.pathSymbol] && n.isBuffer(f2)) kt(this, 0, s2, l2, f2 = f2.toObject());
                else if (this.$__.primitiveAtomics && null != this.$__.primitiveAtomics[l2.path]) {
                  var d2 = this.$__.primitiveAtomics[l2.path], b2 = C(d2);
                  kt(this, 0, s2, l2, d2[b2], b2);
                } else kt(this, 0, s2, l2, f2 = D(f2, { depopulate: true, transform: false, virtuals: false, getters: false, omitUndefined: true, _isNested: true }));
              }
            }
            return u2.length ? new g(u2) : (this.$__.version && this.$__version(i2, s2), 0 === Object.keys(s2).length ? [i2, null] : [i2, s2]);
          }
        }, wt.prototype.$clone = function() {
          var t3 = new (0, this.constructor)();
          if (t3.$isNew = this.$isNew, this._doc && (t3._doc = D(this._doc, { retainDocuments: true })), this.$__) {
            var e3, r3 = new (0, this.$__.constructor)(), n2 = p(Object.getOwnPropertyNames(this.$__));
            try {
              for (n2.s(); !(e3 = n2.n()).done; ) {
                var o2 = e3.value;
                "activePaths" !== o2 && (r3[o2] = D(this.$__[o2]));
              }
            } catch (t4) {
              n2.e(t4);
            } finally {
              n2.f();
            }
            Object.assign(r3.activePaths, D(l({}, this.$__.activePaths))), t3.$__ = r3;
          }
          return t3;
        }, wt.prototype.$createModifiedPathsSnapshot = function() {
          var t3 = /* @__PURE__ */ new WeakMap();
          if (!this.$isSubdocument) {
            var e3, r3 = p(this.$getAllSubdocs());
            try {
              for (r3.s(); !(e3 = r3.n()).done; ) {
                var n2 = e3.value;
                t3.set(n2, n2.$__.activePaths.clone());
              }
            } catch (t4) {
              r3.e(t4);
            } finally {
              r3.f();
            }
          }
          return new j(t3, this.$__.activePaths.clone(), this.$__.version);
        }, wt.prototype.$restoreModifiedPathsSnapshot = function(t3) {
          if (this.$__.activePaths = t3.activePaths.clone(), this.$__.version = t3.version, !this.$isSubdocument) {
            var e3, r3 = p(this.$getAllSubdocs());
            try {
              for (r3.s(); !(e3 = r3.n()).done; ) {
                var n2 = e3.value;
                t3.subdocSnapshot.has(n2) && (n2.$__.activePaths = t3.subdocSnapshot.get(n2));
              }
            } catch (t4) {
              r3.e(t4);
            } finally {
              r3.f();
            }
          }
          return this;
        }, wt.prototype.$clearModifiedPaths = function() {
          if (this.$__.activePaths.clear("modify"), this.$__.activePaths.clear("init"), this.$__.version = 0, !this.$isSubdocument) {
            var t3, e3 = p(this.$getAllSubdocs());
            try {
              for (e3.s(); !(t3 = e3.n()).done; ) t3.value.$clearModifiedPaths();
            } catch (t4) {
              e3.e(t4);
            } finally {
              e3.f();
            }
          }
          return this;
        }, wt.prototype.$__hasOnlyPrimitiveValues = function() {
          return !this.$__.populated && !this.$__.wasPopulated && (null == this._doc || Object.values(this._doc).every(function(t3) {
            return null == t3 || "object" !== d(t3) || nt.isNativeObject(t3) && !Array.isArray(t3) || K(t3, "ObjectId") || K(t3, "Decimal128");
          }));
        }, wt.VERSION_WHERE = 1, wt.VERSION_INC = 2, wt.VERSION_ALL = 3, wt.ValidationError = k, t2.exports = wt;
      }, 2401: (t2) => {
        "use strict";
        t2.exports = Math.floor;
      }, 2402: (t2, e2, r2) => {
        "use strict";
        function n(t3) {
          return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
            return typeof t4;
          } : function(t4) {
            return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
          }, n(t3);
        }
        __name(n, "n");
        function o(t3) {
          return o = "function" == typeof Symbol && "symbol" === n(Symbol.iterator) ? function(t4) {
            return n(t4);
          } : function(t4) {
            return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : n(t4);
          }, o(t3);
        }
        __name(o, "o");
        var i, s, a = r2(3743).codes, u = a.ERR_AMBIGUOUS_ARGUMENT, c = a.ERR_INVALID_ARG_TYPE, l = a.ERR_INVALID_ARG_VALUE, f = a.ERR_INVALID_RETURN_VALUE, p = a.ERR_MISSING_ARGS, h = r2(9068), y = r2(7352).inspect, d = r2(7352).types, b = d.isPromise, m = d.isRegExp, v = Object.assign ? Object.assign : r2(6182).assign, g = Object.is ? Object.is : r2(2064);
        function _() {
          var t3 = r2(6193);
          i = t3.isDeepEqual, s = t3.isDeepStrictEqual;
        }
        __name(_, "_");
        /* @__PURE__ */ new Map();
        var w = false, O = t2.exports = P, S = {};
        function $(t3) {
          if (t3.message instanceof Error) throw t3.message;
          throw new h(t3);
        }
        __name($, "$");
        function j(t3, e3, r3, n2) {
          if (!r3) {
            var o2 = false;
            if (0 === e3) o2 = true, n2 = "No value argument passed to `assert.ok()`";
            else if (n2 instanceof Error) throw n2;
            var i2 = new h({ actual: r3, expected: true, message: n2, operator: "==", stackStartFn: t3 });
            throw i2.generatedMessage = o2, i2;
          }
        }
        __name(j, "j");
        function P() {
          for (var t3 = arguments.length, e3 = new Array(t3), r3 = 0; r3 < t3; r3++) e3[r3] = arguments[r3];
          j.apply(void 0, [P, e3.length].concat(e3));
        }
        __name(P, "P");
        O.fail = /* @__PURE__ */ __name(function t3(e3, r3, n2, o2, i2) {
          var s2, a2 = arguments.length;
          if (0 === a2 ? s2 = "Failed" : 1 === a2 ? (n2 = e3, e3 = void 0) : (false === w && (w = true, ({ env: {} }.emitWarning ? { env: {} }.emitWarning : console.warn.bind(console))("assert.fail() with more than one argument is deprecated. Please use assert.strictEqual() instead or only pass a message.", "DeprecationWarning", "DEP0094")), 2 === a2 && (o2 = "!=")), n2 instanceof Error) throw n2;
          var u2 = { actual: e3, expected: r3, operator: void 0 === o2 ? "fail" : o2, stackStartFn: i2 || t3 };
          void 0 !== n2 && (u2.message = n2);
          var c2 = new h(u2);
          throw s2 && (c2.message = s2, c2.generatedMessage = true), c2;
        }, "t"), O.AssertionError = h, O.ok = P, O.equal = /* @__PURE__ */ __name(function t3(e3, r3, n2) {
          if (arguments.length < 2) throw new p("actual", "expected");
          e3 != r3 && $({ actual: e3, expected: r3, message: n2, operator: "==", stackStartFn: t3 });
        }, "t"), O.notEqual = /* @__PURE__ */ __name(function t3(e3, r3, n2) {
          if (arguments.length < 2) throw new p("actual", "expected");
          e3 == r3 && $({ actual: e3, expected: r3, message: n2, operator: "!=", stackStartFn: t3 });
        }, "t"), O.deepEqual = /* @__PURE__ */ __name(function t3(e3, r3, n2) {
          if (arguments.length < 2) throw new p("actual", "expected");
          void 0 === i && _(), i(e3, r3) || $({ actual: e3, expected: r3, message: n2, operator: "deepEqual", stackStartFn: t3 });
        }, "t"), O.notDeepEqual = /* @__PURE__ */ __name(function t3(e3, r3, n2) {
          if (arguments.length < 2) throw new p("actual", "expected");
          void 0 === i && _(), i(e3, r3) && $({ actual: e3, expected: r3, message: n2, operator: "notDeepEqual", stackStartFn: t3 });
        }, "t"), O.deepStrictEqual = /* @__PURE__ */ __name(function t3(e3, r3, n2) {
          if (arguments.length < 2) throw new p("actual", "expected");
          void 0 === i && _(), s(e3, r3) || $({ actual: e3, expected: r3, message: n2, operator: "deepStrictEqual", stackStartFn: t3 });
        }, "t"), O.notDeepStrictEqual = /* @__PURE__ */ __name(function t3(e3, r3, n2) {
          if (arguments.length < 2) throw new p("actual", "expected");
          void 0 === i && _(), s(e3, r3) && $({ actual: e3, expected: r3, message: n2, operator: "notDeepStrictEqual", stackStartFn: t3 });
        }, "t"), O.strictEqual = /* @__PURE__ */ __name(function t3(e3, r3, n2) {
          if (arguments.length < 2) throw new p("actual", "expected");
          g(e3, r3) || $({ actual: e3, expected: r3, message: n2, operator: "strictEqual", stackStartFn: t3 });
        }, "t"), O.notStrictEqual = /* @__PURE__ */ __name(function t3(e3, r3, n2) {
          if (arguments.length < 2) throw new p("actual", "expected");
          g(e3, r3) && $({ actual: e3, expected: r3, message: n2, operator: "notStrictEqual", stackStartFn: t3 });
        }, "t");
        var A = /* @__PURE__ */ __name(function t3(e3, r3, n2) {
          var o2 = this;
          !function(t4, e4) {
            if (!(t4 instanceof e4)) throw new TypeError("Cannot call a class as a function");
          }(this, t3), r3.forEach(function(t4) {
            t4 in e3 && (void 0 !== n2 && "string" == typeof n2[t4] && m(e3[t4]) && e3[t4].test(n2[t4]) ? o2[t4] = n2[t4] : o2[t4] = e3[t4]);
          });
        }, "t");
        function E(t3, e3, r3, n2) {
          if ("function" != typeof e3) {
            if (m(e3)) return e3.test(t3);
            if (2 === arguments.length) throw new c("expected", ["Function", "RegExp"], e3);
            if ("object" !== o(t3) || null === t3) {
              var a2 = new h({ actual: t3, expected: e3, message: r3, operator: "deepStrictEqual", stackStartFn: n2 });
              throw a2.operator = n2.name, a2;
            }
            var u2 = Object.keys(e3);
            if (e3 instanceof Error) u2.push("name", "message");
            else if (0 === u2.length) throw new l("error", e3, "may not be an empty object");
            return void 0 === i && _(), u2.forEach(function(o2) {
              "string" == typeof t3[o2] && m(e3[o2]) && e3[o2].test(t3[o2]) || function(t4, e4, r4, n3, o3, i2) {
                if (!(r4 in t4) || !s(t4[r4], e4[r4])) {
                  if (!n3) {
                    var a3 = new A(t4, o3), u3 = new A(e4, o3, t4), c2 = new h({ actual: a3, expected: u3, operator: "deepStrictEqual", stackStartFn: i2 });
                    throw c2.actual = t4, c2.expected = e4, c2.operator = i2.name, c2;
                  }
                  $({ actual: t4, expected: e4, message: n3, operator: i2.name, stackStartFn: i2 });
                }
              }(t3, e3, o2, r3, u2, n2);
            }), true;
          }
          return void 0 !== e3.prototype && t3 instanceof e3 || !Error.isPrototypeOf(e3) && true === e3.call({}, t3);
        }
        __name(E, "E");
        function x(t3) {
          if ("function" != typeof t3) throw new c("fn", "Function", t3);
          try {
            t3();
          } catch (t4) {
            return t4;
          }
          return S;
        }
        __name(x, "x");
        function T(t3) {
          return b(t3) || null !== t3 && "object" === o(t3) && "function" == typeof t3.then && "function" == typeof t3.catch;
        }
        __name(T, "T");
        function k(t3) {
          return Promise.resolve().then(function() {
            var e3;
            if ("function" == typeof t3) {
              if (!T(e3 = t3())) throw new f("instance of Promise", "promiseFn", e3);
            } else {
              if (!T(t3)) throw new c("promiseFn", ["Function", "Promise"], t3);
              e3 = t3;
            }
            return Promise.resolve().then(function() {
              return e3;
            }).then(function() {
              return S;
            }).catch(function(t4) {
              return t4;
            });
          });
        }
        __name(k, "k");
        function N(t3, e3, r3, n2) {
          if ("string" == typeof r3) {
            if (4 === arguments.length) throw new c("error", ["Object", "Error", "Function", "RegExp"], r3);
            if ("object" === o(e3) && null !== e3) {
              if (e3.message === r3) throw new u("error/message", 'The error message "'.concat(e3.message, '" is identical to the message.'));
            } else if (e3 === r3) throw new u("error/message", 'The error "'.concat(e3, '" is identical to the message.'));
            n2 = r3, r3 = void 0;
          } else if (null != r3 && "object" !== o(r3) && "function" != typeof r3) throw new c("error", ["Object", "Error", "Function", "RegExp"], r3);
          if (e3 === S) {
            var i2 = "";
            r3 && r3.name && (i2 += " (".concat(r3.name, ")")), i2 += n2 ? ": ".concat(n2) : ".";
            var s2 = "rejects" === t3.name ? "rejection" : "exception";
            $({ actual: void 0, expected: r3, operator: t3.name, message: "Missing expected ".concat(s2).concat(i2), stackStartFn: t3 });
          }
          if (r3 && !E(e3, r3, n2, t3)) throw e3;
        }
        __name(N, "N");
        function I(t3, e3, r3, n2) {
          if (e3 !== S) {
            if ("string" == typeof r3 && (n2 = r3, r3 = void 0), !r3 || E(e3, r3)) {
              var o2 = n2 ? ": ".concat(n2) : ".", i2 = "doesNotReject" === t3.name ? "rejection" : "exception";
              $({ actual: e3, expected: r3, operator: t3.name, message: "Got unwanted ".concat(i2).concat(o2, "\n") + 'Actual message: "'.concat(e3 && e3.message, '"'), stackStartFn: t3 });
            }
            throw e3;
          }
        }
        __name(I, "I");
        function B() {
          for (var t3 = arguments.length, e3 = new Array(t3), r3 = 0; r3 < t3; r3++) e3[r3] = arguments[r3];
          j.apply(void 0, [B, e3.length].concat(e3));
        }
        __name(B, "B");
        O.throws = /* @__PURE__ */ __name(function t3(e3) {
          for (var r3 = arguments.length, n2 = new Array(r3 > 1 ? r3 - 1 : 0), o2 = 1; o2 < r3; o2++) n2[o2 - 1] = arguments[o2];
          N.apply(void 0, [t3, x(e3)].concat(n2));
        }, "t"), O.rejects = /* @__PURE__ */ __name(function t3(e3) {
          for (var r3 = arguments.length, n2 = new Array(r3 > 1 ? r3 - 1 : 0), o2 = 1; o2 < r3; o2++) n2[o2 - 1] = arguments[o2];
          return k(e3).then(function(e4) {
            return N.apply(void 0, [t3, e4].concat(n2));
          });
        }, "t"), O.doesNotThrow = /* @__PURE__ */ __name(function t3(e3) {
          for (var r3 = arguments.length, n2 = new Array(r3 > 1 ? r3 - 1 : 0), o2 = 1; o2 < r3; o2++) n2[o2 - 1] = arguments[o2];
          I.apply(void 0, [t3, x(e3)].concat(n2));
        }, "t"), O.doesNotReject = /* @__PURE__ */ __name(function t3(e3) {
          for (var r3 = arguments.length, n2 = new Array(r3 > 1 ? r3 - 1 : 0), o2 = 1; o2 < r3; o2++) n2[o2 - 1] = arguments[o2];
          return k(e3).then(function(e4) {
            return I.apply(void 0, [t3, e4].concat(n2));
          });
        }, "t"), O.ifError = /* @__PURE__ */ __name(function t3(e3) {
          if (null != e3) {
            var r3 = "ifError got unwanted exception: ";
            "object" === o(e3) && "string" == typeof e3.message ? 0 === e3.message.length && e3.constructor ? r3 += e3.constructor.name : r3 += e3.message : r3 += y(e3);
            var n2 = new h({ actual: e3, expected: null, operator: "ifError", message: r3, stackStartFn: t3 }), i2 = e3.stack;
            if ("string" == typeof i2) {
              var s2 = i2.split("\n");
              s2.shift();
              for (var a2 = n2.stack.split("\n"), u2 = 0; u2 < s2.length; u2++) {
                var c2 = a2.indexOf(s2[u2]);
                if (-1 !== c2) {
                  a2 = a2.slice(0, c2);
                  break;
                }
              }
              n2.stack = "".concat(a2.join("\n"), "\n").concat(s2.join("\n"));
            }
            throw n2;
          }
        }, "t"), O.strict = v(B, O, { equal: O.strictEqual, deepEqual: O.deepStrictEqual, notEqual: O.notStrictEqual, notDeepEqual: O.notDeepStrictEqual }), O.strict.strict = O.strict;
      }, 2403: (t2) => {
        "use strict";
        t2.exports = "undefined" != typeof Reflect && Reflect.getPrototypeOf || null;
      }, 2423: (t2) => {
        "use strict";
        t2.exports = function(t3, e2) {
          var r2 = t3.discriminatorMapping && t3.discriminatorMapping.value;
          if (r2 && !("sparse" in e2)) {
            var n = t3.options.discriminatorKey;
            e2.partialFilterExpression = e2.partialFilterExpression || {}, e2.partialFilterExpression[n] = r2;
          }
          return e2;
        };
      }, 2477: (t2, e2, r2) => {
        "use strict";
        var n = r2(2402);
        t2.exports = function(t3) {
          return null == t3 || "" === t3 ? null : t3 instanceof Date ? (n.ok(!isNaN(t3.valueOf())), t3) : (n.ok("boolean" != typeof t3), e3 = t3 instanceof Number || "number" == typeof t3 ? new Date(t3) : "string" == typeof t3 && !isNaN(Number(t3)) && (Number(t3) >= 275761 || Number(t3) < -271820) ? new Date(Number(t3)) : "function" == typeof t3.valueOf ? new Date(t3.valueOf()) : new Date(t3), isNaN(e3.valueOf()) ? void n.ok(false) : e3);
          var e3;
        };
      }, 2481: (t2, e2, r2) => {
        "use strict";
        var n = r2(4756);
        t2.exports = function() {
          return "function" == typeof Object.is ? Object.is : n;
        };
      }, 2486: (t2, e2) => {
        e2.read = function(t3, e3, r2, n, o) {
          var i, s, a = 8 * o - n - 1, u = (1 << a) - 1, c = u >> 1, l = -7, f = r2 ? o - 1 : 0, p = r2 ? -1 : 1, h = t3[e3 + f];
          for (f += p, i = h & (1 << -l) - 1, h >>= -l, l += a; l > 0; i = 256 * i + t3[e3 + f], f += p, l -= 8) ;
          for (s = i & (1 << -l) - 1, i >>= -l, l += n; l > 0; s = 256 * s + t3[e3 + f], f += p, l -= 8) ;
          if (0 === i) i = 1 - c;
          else {
            if (i === u) return s ? NaN : 1 / 0 * (h ? -1 : 1);
            s += Math.pow(2, n), i -= c;
          }
          return (h ? -1 : 1) * s * Math.pow(2, i - n);
        }, e2.write = function(t3, e3, r2, n, o, i) {
          var s, a, u, c = 8 * i - o - 1, l = (1 << c) - 1, f = l >> 1, p = 23 === o ? Math.pow(2, -24) - Math.pow(2, -77) : 0, h = n ? 0 : i - 1, y = n ? 1 : -1, d = e3 < 0 || 0 === e3 && 1 / e3 < 0 ? 1 : 0;
          for (e3 = Math.abs(e3), isNaN(e3) || e3 === 1 / 0 ? (a = isNaN(e3) ? 1 : 0, s = l) : (s = Math.floor(Math.log(e3) / Math.LN2), e3 * (u = Math.pow(2, -s)) < 1 && (s--, u *= 2), (e3 += s + f >= 1 ? p / u : p * Math.pow(2, 1 - f)) * u >= 2 && (s++, u /= 2), s + f >= l ? (a = 0, s = l) : s + f >= 1 ? (a = (e3 * u - 1) * Math.pow(2, o), s += f) : (a = e3 * Math.pow(2, f - 1) * Math.pow(2, o), s = 0)); o >= 8; t3[r2 + h] = 255 & a, h += y, a /= 256, o -= 8) ;
          for (s = s << o | a, c += o; c > 0; t3[r2 + h] = 255 & s, h += y, s /= 256, c -= 8) ;
          t3[r2 + h - y] |= 128 * d;
        };
      }, 2497: (t2, e2, r2) => {
        "use strict";
        var n = r2(1243).isMongooseArray;
        t2.exports = function(t3) {
          return null != t3 && (n(t3) || null != t3.$__ || t3.isMongooseBuffer || t3.$isMongooseMap);
        };
      }, 2555: (t2) => {
        "use strict";
        t2.exports = function(t3) {
          if (Array.isArray(t3)) {
            if (!t3.every(function(t4) {
              return "number" == typeof t4 || "string" == typeof t4;
            })) throw new Error("$type array values must be strings or numbers");
            return t3;
          }
          if ("number" != typeof t3 && "string" != typeof t3) throw new Error("$type parameter must be number, string, or array of numbers and strings");
          return t3;
        };
      }, 2580: (t2, e2, r2) => {
        "use strict";
        var n = r2(2400), o = r2(3550).EventEmitter, i = r2(3672), s = r2(7058), a = r2(5549), u = i.ValidationError, c = r2(4957), l = r2(608);
        function f(t3, e3, r3, o2, u2) {
          if (!(this instanceof f)) return new f(t3, e3, r3, o2, u2);
          if (l(e3) && !e3.instanceOfSchema && (e3 = new s(e3)), e3 = this.schema || e3, !this.schema && e3.options._id && void 0 === (t3 = t3 || {})._id && (t3._id = new a()), !e3) throw new i.MissingSchemaError();
          for (var p in this.$__setSchema(e3), n.call(this, t3, r3, o2, u2), c(this, e3, { decorateDoc: true }), e3.methods) this[p] = e3.methods[p];
          for (var h in e3.statics) this[h] = e3.statics[h];
        }
        __name(f, "f");
        f.prototype = Object.create(n.prototype), f.prototype.constructor = f, f.events = new o(), f.$emitter = new o(), ["on", "once", "emit", "listeners", "removeListener", "setMaxListeners", "removeAllListeners", "addListener"].forEach(function(t3) {
          f[t3] = function() {
            return f.$emitter[t3].apply(f.$emitter, arguments);
          };
        }), f.ValidationError = u, t2.exports = f;
      }, 2653: (t2) => {
        "use strict";
        t2.exports = ["Float16Array", "Float32Array", "Float64Array", "Int8Array", "Int16Array", "Int32Array", "Uint8Array", "Uint8ClampedArray", "Uint16Array", "Uint32Array", "BigInt64Array", "BigUint64Array"];
      }, 2692: (t2) => {
        "use strict";
        t2.exports = function(t3, e2) {
          if (1 !== e2.length) {
            for (var r2 = e2[0], n = void 0, o = 0; o < e2.length - 1; ++o) {
              var i = t3.path(r2);
              i && i.schema ? (n = i.schema.options.strict, t3 = i.schema, r2 = i.$isMongooseDocumentArray && !isNaN(e2[o + 1]) ? "" : e2[o + 1]) : r2 += r2.length ? "." + e2[o + 1] : e2[o + 1];
            }
            return n;
          }
        };
      }, 2696: (t2, e2, r2) => {
        "use strict";
        var n = r2(3305);
        t2.exports = function(t3, e3) {
          return "string" == typeof t3 && "string" == typeof e3 || "number" == typeof t3 && "number" == typeof e3 ? t3 === e3 : !(!n(t3, "ObjectId") || !n(e3, "ObjectId")) && t3.toString() === e3.toString();
        };
      }, 2724: (t2, e2, r2) => {
        "use strict";
        var n = r2(3071), o = r2(9344), i = n("RegExp.prototype.exec"), s = r2(2268);
        t2.exports = function(t3) {
          if (!o(t3)) throw new s("`regex` must be a RegExp");
          return function(e3) {
            return null !== i(t3, e3);
          };
        };
      }, 2746: (t2) => {
        "use strict";
        var e2 = "function" == typeof { env: {} }.nextTick ? { env: {} }.nextTick.bind({ env: {} }) : function(t3) {
          return setTimeout(t3, 0);
        };
        t2.exports = function(t3) {
          return e2(t3);
        };
      }, 2789: (t2) => {
        "use strict";
        function e2(t3) {
          return e2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
            return typeof t4;
          } : function(t4) {
            return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
          }, e2(t3);
        }
        __name(e2, "e");
        t2.exports = function(t3) {
          if (null == t3 || "object" !== e2(t3)) return false;
          var r2 = Object.getPrototypeOf(t3);
          return !r2 || "Object" === r2.constructor.name;
        };
      }, 2793: (t2) => {
        "use strict";
        t2.exports = /* @__PURE__ */ new Set(["__proto__", "constructor", "prototype"]);
      }, 2822: (t2, e2, r2) => {
        "use strict";
        t2.exports = r2(6353).Double;
      }, 2824: (t2, e2, r2) => {
        "use strict";
        var n = r2(7930).objectIdSymbol, o = r2(8768);
        function i() {
          var t3, e3;
          if (this.$__.shardval) {
            e3 = (t3 = Object.keys(this.$__.shardval)).length, this.$where = this.$where || {};
            for (var r3 = 0; r3 < e3; ++r3) this.$where[t3[r3]] = this.$__.shardval[t3[r3]];
          }
        }
        __name(i, "i");
        function s() {
          var t3 = this.$__schema.options.shardKey || this.$__schema.options.shardkey;
          if (o.isPOJO(t3)) for (var e3, r3 = this.$__.shardval = {}, i2 = Object.keys(t3), s2 = i2.length, a = 0; a < s2; ++a) null == (e3 = this.$__getValue(i2[a])) ? r3[i2[a]] = e3 : o.isMongooseObject(e3) ? r3[i2[a]] = e3.toObject({ depopulate: true, _isNested: true }) : e3 instanceof Date || e3[n] ? r3[i2[a]] = e3 : "function" == typeof e3.valueOf ? r3[i2[a]] = e3.valueOf() : r3[i2[a]] = e3;
        }
        __name(s, "s");
        t2.exports = function(t3) {
          t3.post("init", function() {
            return s.call(this), this;
          }), t3.pre("save", function(t4) {
            i.call(this), t4();
          }), t3.pre("remove", function(t4) {
            i.call(this), t4();
          }), t3.post("save", function() {
            s.call(this);
          });
        }, t2.exports.storeShard = s;
      }, 2900: (t2, e2, r2) => {
        "use strict";
        var n = r2(8260);
        t2.exports = function(t3) {
          if ("TopologyDescription" !== n(t3)) return false;
          var e3 = Array.from(t3.servers.values());
          return e3.length > 0 && e3.every(function(t4) {
            return "Unknown" === t4.type;
          });
        };
      }, 2914: (t2, e2, r2) => {
        function n(t3) {
          return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
            return typeof t4;
          } : function(t4) {
            return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
          }, n(t3);
        }
        __name(n, "n");
        var o = r2(7860), i = ["__proto__", "constructor", "prototype"];
        function s(t3, e3, r3, n2, o2, i2) {
          for (var a2, u = 0; u < t3.length && u < e3.length; ++u) a2 = t3[u], Array.isArray(a2) && Array.isArray(e3[u]) ? s(a2, e3[u], r3, n2, o2, i2) : a2 && (n2 ? n2(a2, r3, i2(e3[u])) : (a2[o2] && (a2 = a2[o2]), a2[r3] = i2(e3[u])));
        }
        __name(s, "s");
        function a(t3) {
          return t3;
        }
        __name(a, "a");
        e2.get = function(t3, r3, i2, s2) {
          var u;
          "function" == typeof i2 && (i2.length < 2 ? (s2 = i2, i2 = void 0) : (u = i2, i2 = void 0)), s2 || (s2 = a);
          var c = "string" == typeof t3 ? o(t3) : t3;
          if (!Array.isArray(c)) throw new TypeError("Invalid `path`. Must be either string or array");
          for (var l, f = r3, p = 0; p < c.length; ++p) {
            if (l = c[p], "string" != typeof c[p] && "number" != typeof c[p]) throw new TypeError("Each segment of path to `get()` must be a string or number, got " + n(c[p]));
            if (Array.isArray(f) && !/^\d+$/.test(l)) {
              var h = c.slice(p);
              return [].concat(f).map(function(t4) {
                return t4 ? e2.get(h, t4, i2 || u, s2) : s2(void 0);
              });
            }
            if (u) f = u(f, l);
            else {
              var y = i2 && f[i2] ? f[i2] : f;
              f = y instanceof Map ? y.get(l) : y[l];
            }
            if (!f) return s2(f);
          }
          return s2(f);
        }, e2.has = function(t3, e3) {
          var r3 = "string" == typeof t3 ? o(t3) : t3;
          if (!Array.isArray(r3)) throw new TypeError("Invalid `path`. Must be either string or array");
          for (var i2 = r3.length, s2 = e3, a2 = 0; a2 < i2; ++a2) {
            if ("string" != typeof r3[a2] && "number" != typeof r3[a2]) throw new TypeError("Each segment of path to `has()` must be a string or number, got " + n(r3[a2]));
            if (null == s2 || "object" !== n(s2) || !(r3[a2] in s2)) return false;
            s2 = s2[r3[a2]];
          }
          return true;
        }, e2.unset = function(t3, e3) {
          var r3 = "string" == typeof t3 ? o(t3) : t3;
          if (!Array.isArray(r3)) throw new TypeError("Invalid `path`. Must be either string or array");
          for (var s2 = r3.length, a2 = e3, u = 0; u < s2; ++u) {
            if (null == a2 || "object" !== n(a2) || !(r3[u] in a2)) return false;
            if ("string" != typeof r3[u] && "number" != typeof r3[u]) throw new TypeError("Each segment of path to `unset()` must be a string or number, got " + n(r3[u]));
            if (-1 !== i.indexOf(r3[u])) return false;
            if (u === s2 - 1) return delete a2[r3[u]], true;
            a2 = a2 instanceof Map ? a2.get(r3[u]) : a2[r3[u]];
          }
          return true;
        }, e2.set = function(t3, r3, u, c, l, f) {
          var p;
          "function" == typeof c && (c.length < 2 ? (l = c, c = void 0) : (p = c, c = void 0)), l || (l = a);
          var h = "string" == typeof t3 ? o(t3) : t3;
          if (!Array.isArray(h)) throw new TypeError("Invalid `path`. Must be either string or array");
          if (null != u) {
            for (var y = 0; y < h.length; ++y) {
              if ("string" != typeof h[y] && "number" != typeof h[y]) throw new TypeError("Each segment of path to `set()` must be a string or number, got " + n(h[y]));
              if (-1 !== i.indexOf(h[y])) return;
            }
            for (var d, b = f || /\$/.test(t3) && false !== f, m = u, v = (y = 0, h.length - 1); y < v; ++y) if ("$" != (d = h[y])) {
              if (Array.isArray(m) && !/^\d+$/.test(d)) {
                var g = h.slice(y);
                if (!b && Array.isArray(r3)) for (var _ = 0; _ < m.length && _ < r3.length; ++_) e2.set(g, r3[_], m[_], c || p, l, b);
                else for (_ = 0; _ < m.length; ++_) e2.set(g, r3, m[_], c || p, l, b);
                return;
              }
              if (p) m = p(m, d);
              else {
                var w = c && m[c] ? m[c] : m;
                m = w instanceof Map ? w.get(d) : w[d];
              }
              if (!m) return;
            } else if (y == v - 1) break;
            if (d = h[v], c && m[c] && (m = m[c]), Array.isArray(m) && !/^\d+$/.test(d)) if (!b && Array.isArray(r3)) s(m, r3, d, p, c, l);
            else for (_ = 0; _ < m.length; ++_) {
              var O = m[_];
              O && (p ? p(O, d, l(r3)) : (O[c] && (O = O[c]), O[d] = l(r3)));
            }
            else p ? p(m, d, l(r3)) : m instanceof Map ? m.set(d, l(r3)) : m[d] = l(r3);
          }
        }, e2.stringToParts = o;
      }, 2945: (t2, e2, r2) => {
        "use strict";
        function n(t3) {
          return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
            return typeof t4;
          } : function(t4) {
            return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
          }, n(t3);
        }
        __name(n, "n");
        function o() {
          try {
            var t3 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch (t4) {
          }
          return (o = /* @__PURE__ */ __name(function() {
            return !!t3;
          }, "o"))();
        }
        __name(o, "o");
        function i(t3) {
          return i = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t4) {
            return t4.__proto__ || Object.getPrototypeOf(t4);
          }, i(t3);
        }
        __name(i, "i");
        function s(t3, e3) {
          return s = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t4, e4) {
            return t4.__proto__ = e4, t4;
          }, s(t3, e3);
        }
        __name(s, "s");
        var a = function(t3) {
          function e3() {
            return function(t4, e4) {
              if (!(t4 instanceof e4)) throw new TypeError("Cannot call a class as a function");
            }(this, e3), function(t4, e4, r4) {
              return e4 = i(e4), function(t5, e5) {
                if (e5 && ("object" == n(e5) || "function" == typeof e5)) return e5;
                if (void 0 !== e5) throw new TypeError("Derived constructors may only return object or undefined");
                return function(t6) {
                  if (void 0 === t6) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                  return t6;
                }(t5);
              }(t4, o() ? Reflect.construct(e4, r4 || [], i(t4).constructor) : e4.apply(t4, r4));
            }(this, e3, arguments);
          }
          __name(e3, "e");
          return function(t4, e4) {
            if ("function" != typeof e4 && null !== e4) throw new TypeError("Super expression must either be null or a function");
            t4.prototype = Object.create(e4 && e4.prototype, { constructor: { value: t4, writable: true, configurable: true } }), Object.defineProperty(t4, "prototype", { writable: false }), e4 && s(t4, e4);
          }(e3, t3), r3 = e3, Object.defineProperty(r3, "prototype", { writable: false }), r3;
          var r3;
        }(r2(8879)), u = r2(5761);
        Object.defineProperty(a.prototype, "subtype", u), t2.exports = a;
      }, 3071: (t2, e2, r2) => {
        "use strict";
        var n = r2(6400), o = r2(8863), i = o([n("%String.prototype.indexOf%")]);
        t2.exports = function(t3, e3) {
          var r3 = n(t3, !!e3);
          return "function" == typeof r3 && i(t3, ".prototype.") > -1 ? o([r3]) : r3;
        };
      }, 3091: (t2, e2, r2) => {
        "use strict";
        function n(t3) {
          return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
            return typeof t4;
          } : function(t4) {
            return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
          }, n(t3);
        }
        __name(n, "n");
        function o(t3, e3) {
          var r3 = Object.keys(t3);
          if (Object.getOwnPropertySymbols) {
            var n2 = Object.getOwnPropertySymbols(t3);
            e3 && (n2 = n2.filter(function(e4) {
              return Object.getOwnPropertyDescriptor(t3, e4).enumerable;
            })), r3.push.apply(r3, n2);
          }
          return r3;
        }
        __name(o, "o");
        function i(t3) {
          for (var e3 = 1; e3 < arguments.length; e3++) {
            var r3 = null != arguments[e3] ? arguments[e3] : {};
            e3 % 2 ? o(Object(r3), true).forEach(function(e4) {
              s(t3, e4, r3[e4]);
            }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t3, Object.getOwnPropertyDescriptors(r3)) : o(Object(r3)).forEach(function(e4) {
              Object.defineProperty(t3, e4, Object.getOwnPropertyDescriptor(r3, e4));
            });
          }
          return t3;
        }
        __name(i, "i");
        function s(t3, e3, r3) {
          return (e3 = function(t4) {
            var e4 = function(t5) {
              if ("object" != n(t5) || !t5) return t5;
              var e5 = t5[Symbol.toPrimitive];
              if (void 0 !== e5) {
                var r4 = e5.call(t5, "string");
                if ("object" != n(r4)) return r4;
                throw new TypeError("@@toPrimitive must return a primitive value.");
              }
              return String(t5);
            }(t4);
            return "symbol" == n(e4) ? e4 : e4 + "";
          }(e3)) in t3 ? Object.defineProperty(t3, e3, { value: r3, enumerable: true, configurable: true, writable: true }) : t3[e3] = r3, t3;
        }
        __name(s, "s");
        var a, u = r2(4625), c = r2(6426), l = r2(863), f = r2(4327), p = r2(8260), h = r2(5549), y = r2(3305), d = r2(8768), b = c.CastError;
        function m(t3, e3) {
          var r3 = "string" == typeof t3 && 24 === t3.length && /^[a-f0-9]+$/i.test(t3), n2 = e3 && e3.suppressWarning;
          !r3 && void 0 !== t3 || n2 || d.warn("mongoose: To create a new ObjectId please try `Mongoose.Types.ObjectId` instead of using `Mongoose.Schema.ObjectId`. Set the `suppressWarning` option if you're trying to create a hex char path in your schema."), c.call(this, t3, e3, "ObjectId");
        }
        __name(m, "m");
        function v(t3) {
          return this.cast(t3);
        }
        __name(v, "v");
        m.schemaName = "ObjectId", m.defaultOptions = {}, m.prototype = Object.create(c.prototype), m.prototype.constructor = m, m.prototype.OptionsConstructor = u, m.get = c.get, m.set = c.set, m.setters = [], m.prototype.auto = function(t3) {
          return t3 && (this.default(_), this.set(w)), this;
        }, m._checkRequired = function(t3) {
          return y(t3, "ObjectId");
        }, m._cast = l, m.cast = function(t3) {
          return 0 === arguments.length || (false === t3 && (t3 = this._defaultCaster), this._cast = t3), this._cast;
        }, m._defaultCaster = function(t3) {
          if (!y(t3, "ObjectId")) throw new Error(t3 + " is not an instance of ObjectId");
          return t3;
        }, m.checkRequired = c.checkRequired, m.prototype.checkRequired = function(t3, e3) {
          return c._isRef(this, t3, e3, true) ? !!t3 : ("function" == typeof this.constructor.checkRequired ? this.constructor.checkRequired() : m.checkRequired())(t3);
        }, m.prototype.cast = function(t3, e3, r3, n2, o2) {
          if (!y(t3, "ObjectId") && c._isRef(this, t3, e3, r3)) {
            if ("objectid" === (p(t3) || "").toLowerCase()) return new h(t3.toHexString());
            if (null == t3 || d.isNonBuiltinObject(t3)) return this._castRef(t3, e3, r3, o2);
          }
          var i2;
          i2 = "function" == typeof this._castFunction ? this._castFunction : "function" == typeof this.constructor.cast ? this.constructor.cast() : m.cast();
          try {
            return i2(t3);
          } catch (e4) {
            throw new b("ObjectId", t3, this.path, e4, this);
          }
        };
        var g = i(i({}, c.prototype.$conditionalHandlers), {}, { $gt: v, $gte: v, $lt: v, $lte: v });
        function _() {
          return new h();
        }
        __name(_, "_");
        function w(t3) {
          return a || (a = r2(2400)), this instanceof a && void 0 === t3 ? new h() : t3;
        }
        __name(w, "w");
        Object.defineProperty(m.prototype, "$conditionalHandlers", { enumerable: false, value: g }), _.$runBeforeSetters = true, m.prototype.toJSONSchema = function(t3) {
          var e3 = this.options.required && "function" != typeof this.options.required || "_id" === this.path;
          return f("string", "objectId", null == t3 ? void 0 : t3.useBsonType, e3);
        }, m.prototype.autoEncryptionType = function() {
          return "objectId";
        }, t2.exports = m;
      }, 3123: (t2) => {
        "use strict";
        t2.exports = Function.prototype.call;
      }, 3191: (t2, e2, r2) => {
        "use strict";
        var n = r2(988), o = /* @__PURE__ */ __name(function() {
          return !!n;
        }, "o");
        o.hasArrayLengthDefineBug = function() {
          if (!n) return null;
          try {
            return 1 !== n([], "length", { value: 1 }).length;
          } catch (t3) {
            return true;
          }
        }, t2.exports = o;
      }, 3216: (t2, e2, r2) => {
        "use strict";
        function n(t3, e3) {
          var r3 = Object.keys(t3);
          if (Object.getOwnPropertySymbols) {
            var n2 = Object.getOwnPropertySymbols(t3);
            e3 && (n2 = n2.filter(function(e4) {
              return Object.getOwnPropertyDescriptor(t3, e4).enumerable;
            })), r3.push.apply(r3, n2);
          }
          return r3;
        }
        __name(n, "n");
        function o(t3) {
          for (var e3 = 1; e3 < arguments.length; e3++) {
            var r3 = null != arguments[e3] ? arguments[e3] : {};
            e3 % 2 ? n(Object(r3), true).forEach(function(e4) {
              i(t3, e4, r3[e4]);
            }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t3, Object.getOwnPropertyDescriptors(r3)) : n(Object(r3)).forEach(function(e4) {
              Object.defineProperty(t3, e4, Object.getOwnPropertyDescriptor(r3, e4));
            });
          }
          return t3;
        }
        __name(o, "o");
        function i(t3, e3, r3) {
          return (e3 = function(t4) {
            var e4 = function(t5) {
              if ("object" != s(t5) || !t5) return t5;
              var e5 = t5[Symbol.toPrimitive];
              if (void 0 !== e5) {
                var r4 = e5.call(t5, "string");
                if ("object" != s(r4)) return r4;
                throw new TypeError("@@toPrimitive must return a primitive value.");
              }
              return String(t5);
            }(t4);
            return "symbol" == s(e4) ? e4 : e4 + "";
          }(e3)) in t3 ? Object.defineProperty(t3, e3, { value: r3, enumerable: true, configurable: true, writable: true }) : t3[e3] = r3, t3;
        }
        __name(i, "i");
        function s(t3) {
          return s = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
            return typeof t4;
          } : function(t4) {
            return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
          }, s(t3);
        }
        __name(s, "s");
        var a = r2(8768), u = /* @__PURE__ */ new Set(["__index", "__parentArray", "_doc"]);
        t2.exports = function(t3, e3) {
          if (a.isPOJO(t3) && null != t3.$__ && null != t3._doc) {
            if (e3) {
              for (var r3 = {}, n2 = 0, i2 = Object.keys(t3); n2 < i2.length; n2++) {
                var c = i2[n2];
                "symbol" !== s(c) && "$" !== c[0] && (u.has(c) || (r3[c] = t3[c]));
              }
              return o(o({}, t3._doc), r3);
            }
            return t3._doc;
          }
          return t3;
        };
      }, 3279: (t2) => {
        "use strict";
        t2.exports = Function.prototype.apply;
      }, 3303: (t2, e2) => {
        "use strict";
        e2._ = { transform: false, virtuals: false, getters: false, _skipDepopulateTopLevel: true, depopulate: true, flattenDecimals: false, useProjection: false, versionKey: true, flattenObjectIds: false };
      }, 3305: (t2) => {
        "use strict";
        t2.exports = function(t3, e2) {
          return null != t3 && t3._bsontype === e2;
        };
      }, 3318: (t2, e2, r2) => {
        "use strict";
        function n(t3) {
          return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
            return typeof t4;
          } : function(t4) {
            return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
          }, n(t3);
        }
        __name(n, "n");
        function o(t3, e3) {
          var r3 = Object.keys(t3);
          if (Object.getOwnPropertySymbols) {
            var n2 = Object.getOwnPropertySymbols(t3);
            e3 && (n2 = n2.filter(function(e4) {
              return Object.getOwnPropertyDescriptor(t3, e4).enumerable;
            })), r3.push.apply(r3, n2);
          }
          return r3;
        }
        __name(o, "o");
        function i(t3) {
          for (var e3 = 1; e3 < arguments.length; e3++) {
            var r3 = null != arguments[e3] ? arguments[e3] : {};
            e3 % 2 ? o(Object(r3), true).forEach(function(e4) {
              s(t3, e4, r3[e4]);
            }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t3, Object.getOwnPropertyDescriptors(r3)) : o(Object(r3)).forEach(function(e4) {
              Object.defineProperty(t3, e4, Object.getOwnPropertyDescriptor(r3, e4));
            });
          }
          return t3;
        }
        __name(i, "i");
        function s(t3, e3, r3) {
          return (e3 = function(t4) {
            var e4 = function(t5) {
              if ("object" != n(t5) || !t5) return t5;
              var e5 = t5[Symbol.toPrimitive];
              if (void 0 !== e5) {
                var r4 = e5.call(t5, "string");
                if ("object" != n(r4)) return r4;
                throw new TypeError("@@toPrimitive must return a primitive value.");
              }
              return String(t5);
            }(t4);
            return "symbol" == n(e4) ? e4 : e4 + "";
          }(e3)) in t3 ? Object.defineProperty(t3, e3, { value: r3, enumerable: true, configurable: true, writable: true }) : t3[e3] = r3, t3;
        }
        __name(s, "s");
        var a = r2(3609), u = r2(6426), c = r2(4058), l = r2(4327);
        function f(t3, e3) {
          u.call(this, t3, e3, "BigInt");
        }
        __name(f, "f");
        f.schemaName = "BigInt", f.defaultOptions = {}, f.prototype = Object.create(u.prototype), f.prototype.constructor = f, f._cast = c, f.set = u.set, f.setters = [], f.get = u.get, f.cast = function(t3) {
          return 0 === arguments.length || (false === t3 && (t3 = this._defaultCaster), this._cast = t3), this._cast;
        }, f._checkRequired = function(t3) {
          return null != t3;
        }, f.checkRequired = u.checkRequired, f.prototype.checkRequired = function(t3) {
          return this.constructor._checkRequired(t3);
        }, f.prototype.cast = function(t3) {
          var e3;
          e3 = "function" == typeof this._castFunction ? this._castFunction : "function" == typeof this.constructor.cast ? this.constructor.cast() : f.cast();
          try {
            return e3(t3);
          } catch (e4) {
            throw new a("BigInt", t3, this.path, e4, this);
          }
        };
        var p = i(i({}, u.prototype.$conditionalHandlers), {}, { $gt: h, $gte: h, $lt: h, $lte: h });
        function h(t3, e3) {
          return this.castForQuery(null, t3, e3);
        }
        __name(h, "h");
        Object.defineProperty(f.prototype, "$conditionalHandlers", { enumerable: false, value: p }), f.prototype.castForQuery = function(t3, e3, r3) {
          var n2;
          if (null != t3) return (n2 = this.$conditionalHandlers[t3]) ? n2.call(this, e3) : this.applySetters(e3, r3);
          try {
            return this.applySetters(e3, r3);
          } catch (t4) {
            throw t4 instanceof a && t4.path === this.path && null != this.$fullPath && (t4.path = this.$fullPath), t4;
          }
        }, f.prototype._castNullish = function(t3) {
          return void 0 === t3 || ("function" == typeof this.constructor.cast ? this.constructor.cast() : f.cast()), t3;
        }, f.prototype.toJSONSchema = function(t3) {
          var e3 = this.options.required && "function" != typeof this.options.required;
          return l("string", "long", null == t3 ? void 0 : t3.useBsonType, e3);
        }, f.prototype.autoEncryptionType = function() {
          return "long";
        }, t2.exports = f;
      }, 3381: (t2) => {
        "use strict";
        function e2() {
          return null != this._id ? this._id.toString() : null;
        }
        __name(e2, "e");
        t2.exports = function(t3) {
          return !t3.paths.id && t3.paths._id && t3.options.id ? (t3.aliases && t3.aliases.id || t3.virtual("id").get(e2), t3) : t3;
        };
      }, 3388: (t2) => {
        "use strict";
        t2.exports = "undefined" != typeof Reflect && Reflect && Reflect.apply;
      }, 3414: (t2) => {
        "use strict";
        t2.exports = Number.isNaN || function(t3) {
          return t3 != t3;
        };
      }, 3426: (t2, e2, r2) => {
        "use strict";
        var n = r2(2653), o = "undefined" == typeof globalThis ? r2.g : globalThis;
        t2.exports = function() {
          for (var t3 = [], e3 = 0; e3 < n.length; e3++) "function" == typeof o[n[e3]] && (t3[t3.length] = n[e3]);
          return t3;
        };
      }, 3441: (t2, e2, r2) => {
        "use strict";
        function n(t3) {
          return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
            return typeof t4;
          } : function(t4) {
            return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
          }, n(t3);
        }
        __name(n, "n");
        function o() {
          try {
            var t3 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch (t4) {
          }
          return (o = /* @__PURE__ */ __name(function() {
            return !!t3;
          }, "o"))();
        }
        __name(o, "o");
        function i(t3) {
          return i = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t4) {
            return t4.__proto__ || Object.getPrototypeOf(t4);
          }, i(t3);
        }
        __name(i, "i");
        function s(t3, e3) {
          return s = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t4, e4) {
            return t4.__proto__ = e4, t4;
          }, s(t3, e3);
        }
        __name(s, "s");
        var a = function(t3) {
          function e3(t4, r4) {
            var s2;
            !function(t5, e4) {
              if (!(t5 instanceof e4)) throw new TypeError("Cannot call a class as a function");
            }(this, e3);
            var a2 = Array.isArray(r4) ? "array" : "primitive value";
            return (s2 = function(t5, e4, r5) {
              return e4 = i(e4), function(t6, e5) {
                if (e5 && ("object" == n(e5) || "function" == typeof e5)) return e5;
                if (void 0 !== e5) throw new TypeError("Derived constructors may only return object or undefined");
                return function(t7) {
                  if (void 0 === t7) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                  return t7;
                }(t6);
              }(t5, o() ? Reflect.construct(e4, r5 || [], i(t5).constructor) : e4.apply(t5, r5));
            }(this, e3, ["Tried to set nested object field `" + t4 + "` to ".concat(a2, " `") + r4 + "`"])).path = t4, s2;
          }
          __name(e3, "e");
          return function(t4, e4) {
            if ("function" != typeof e4 && null !== e4) throw new TypeError("Super expression must either be null or a function");
            t4.prototype = Object.create(e4 && e4.prototype, { constructor: { value: t4, writable: true, configurable: true } }), Object.defineProperty(t4, "prototype", { writable: false }), e4 && s(t4, e4);
          }(e3, t3), r3 = e3, Object.defineProperty(r3, "prototype", { writable: false }), r3;
          var r3;
        }(r2(8213));
        Object.defineProperty(a.prototype, "name", { value: "ObjectExpectedError" }), t2.exports = a;
      }, 3550: (t2) => {
        "use strict";
        function e2(t3) {
          return e2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
            return typeof t4;
          } : function(t4) {
            return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
          }, e2(t3);
        }
        __name(e2, "e");
        var r2, n = "object" === ("undefined" == typeof Reflect ? "undefined" : e2(Reflect)) ? Reflect : null, o = n && "function" == typeof n.apply ? n.apply : function(t3, e3, r3) {
          return Function.prototype.apply.call(t3, e3, r3);
        };
        r2 = n && "function" == typeof n.ownKeys ? n.ownKeys : Object.getOwnPropertySymbols ? function(t3) {
          return Object.getOwnPropertyNames(t3).concat(Object.getOwnPropertySymbols(t3));
        } : function(t3) {
          return Object.getOwnPropertyNames(t3);
        };
        var i = Number.isNaN || function(t3) {
          return t3 != t3;
        };
        function s() {
          s.init.call(this);
        }
        __name(s, "s");
        t2.exports = s, t2.exports.once = function(t3, e3) {
          return new Promise(function(r3, n2) {
            function o2(r4) {
              t3.removeListener(e3, i2), n2(r4);
            }
            __name(o2, "o");
            function i2() {
              "function" == typeof t3.removeListener && t3.removeListener("error", o2), r3([].slice.call(arguments));
            }
            __name(i2, "i");
            b(t3, e3, i2, { once: true }), "error" !== e3 && function(t4, e4) {
              "function" == typeof t4.on && b(t4, "error", e4, { once: true });
            }(t3, o2);
          });
        }, s.EventEmitter = s, s.prototype._events = void 0, s.prototype._eventsCount = 0, s.prototype._maxListeners = void 0;
        var a = 10;
        function u(t3) {
          if ("function" != typeof t3) throw new TypeError('The "listener" argument must be of type Function. Received type ' + e2(t3));
        }
        __name(u, "u");
        function c(t3) {
          return void 0 === t3._maxListeners ? s.defaultMaxListeners : t3._maxListeners;
        }
        __name(c, "c");
        function l(t3, e3, r3, n2) {
          var o2, i2, s2, a2;
          if (u(r3), void 0 === (i2 = t3._events) ? (i2 = t3._events = /* @__PURE__ */ Object.create(null), t3._eventsCount = 0) : (void 0 !== i2.newListener && (t3.emit("newListener", e3, r3.listener ? r3.listener : r3), i2 = t3._events), s2 = i2[e3]), void 0 === s2) s2 = i2[e3] = r3, ++t3._eventsCount;
          else if ("function" == typeof s2 ? s2 = i2[e3] = n2 ? [r3, s2] : [s2, r3] : n2 ? s2.unshift(r3) : s2.push(r3), (o2 = c(t3)) > 0 && s2.length > o2 && !s2.warned) {
            s2.warned = true;
            var l2 = new Error("Possible EventEmitter memory leak detected. " + s2.length + " " + String(e3) + " listeners added. Use emitter.setMaxListeners() to increase limit");
            l2.name = "MaxListenersExceededWarning", l2.emitter = t3, l2.type = e3, l2.count = s2.length, a2 = l2, console && console.warn && console.warn(a2);
          }
          return t3;
        }
        __name(l, "l");
        function f() {
          if (!this.fired) return this.target.removeListener(this.type, this.wrapFn), this.fired = true, 0 === arguments.length ? this.listener.call(this.target) : this.listener.apply(this.target, arguments);
        }
        __name(f, "f");
        function p(t3, e3, r3) {
          var n2 = { fired: false, wrapFn: void 0, target: t3, type: e3, listener: r3 }, o2 = f.bind(n2);
          return o2.listener = r3, n2.wrapFn = o2, o2;
        }
        __name(p, "p");
        function h(t3, e3, r3) {
          var n2 = t3._events;
          if (void 0 === n2) return [];
          var o2 = n2[e3];
          return void 0 === o2 ? [] : "function" == typeof o2 ? r3 ? [o2.listener || o2] : [o2] : r3 ? function(t4) {
            for (var e4 = new Array(t4.length), r4 = 0; r4 < e4.length; ++r4) e4[r4] = t4[r4].listener || t4[r4];
            return e4;
          }(o2) : d(o2, o2.length);
        }
        __name(h, "h");
        function y(t3) {
          var e3 = this._events;
          if (void 0 !== e3) {
            var r3 = e3[t3];
            if ("function" == typeof r3) return 1;
            if (void 0 !== r3) return r3.length;
          }
          return 0;
        }
        __name(y, "y");
        function d(t3, e3) {
          for (var r3 = new Array(e3), n2 = 0; n2 < e3; ++n2) r3[n2] = t3[n2];
          return r3;
        }
        __name(d, "d");
        function b(t3, r3, n2, o2) {
          if ("function" == typeof t3.on) o2.once ? t3.once(r3, n2) : t3.on(r3, n2);
          else {
            if ("function" != typeof t3.addEventListener) throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type ' + e2(t3));
            t3.addEventListener(r3, /* @__PURE__ */ __name(function e3(i2) {
              o2.once && t3.removeEventListener(r3, e3), n2(i2);
            }, "e"));
          }
        }
        __name(b, "b");
        Object.defineProperty(s, "defaultMaxListeners", { enumerable: true, get: /* @__PURE__ */ __name(function() {
          return a;
        }, "get"), set: /* @__PURE__ */ __name(function(t3) {
          if ("number" != typeof t3 || t3 < 0 || i(t3)) throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' + t3 + ".");
          a = t3;
        }, "set") }), s.init = function() {
          void 0 !== this._events && this._events !== Object.getPrototypeOf(this)._events || (this._events = /* @__PURE__ */ Object.create(null), this._eventsCount = 0), this._maxListeners = this._maxListeners || void 0;
        }, s.prototype.setMaxListeners = function(t3) {
          if ("number" != typeof t3 || t3 < 0 || i(t3)) throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received ' + t3 + ".");
          return this._maxListeners = t3, this;
        }, s.prototype.getMaxListeners = function() {
          return c(this);
        }, s.prototype.emit = function(t3) {
          for (var e3 = [], r3 = 1; r3 < arguments.length; r3++) e3.push(arguments[r3]);
          var n2 = "error" === t3, i2 = this._events;
          if (void 0 !== i2) n2 = n2 && void 0 === i2.error;
          else if (!n2) return false;
          if (n2) {
            var s2;
            if (e3.length > 0 && (s2 = e3[0]), s2 instanceof Error) throw s2;
            var a2 = new Error("Unhandled error." + (s2 ? " (" + s2.message + ")" : ""));
            throw a2.context = s2, a2;
          }
          var u2 = i2[t3];
          if (void 0 === u2) return false;
          if ("function" == typeof u2) o(u2, this, e3);
          else {
            var c2 = u2.length, l2 = d(u2, c2);
            for (r3 = 0; r3 < c2; ++r3) o(l2[r3], this, e3);
          }
          return true;
        }, s.prototype.addListener = function(t3, e3) {
          return l(this, t3, e3, false);
        }, s.prototype.on = s.prototype.addListener, s.prototype.prependListener = function(t3, e3) {
          return l(this, t3, e3, true);
        }, s.prototype.once = function(t3, e3) {
          return u(e3), this.on(t3, p(this, t3, e3)), this;
        }, s.prototype.prependOnceListener = function(t3, e3) {
          return u(e3), this.prependListener(t3, p(this, t3, e3)), this;
        }, s.prototype.removeListener = function(t3, e3) {
          var r3, n2, o2, i2, s2;
          if (u(e3), void 0 === (n2 = this._events)) return this;
          if (void 0 === (r3 = n2[t3])) return this;
          if (r3 === e3 || r3.listener === e3) 0 === --this._eventsCount ? this._events = /* @__PURE__ */ Object.create(null) : (delete n2[t3], n2.removeListener && this.emit("removeListener", t3, r3.listener || e3));
          else if ("function" != typeof r3) {
            for (o2 = -1, i2 = r3.length - 1; i2 >= 0; i2--) if (r3[i2] === e3 || r3[i2].listener === e3) {
              s2 = r3[i2].listener, o2 = i2;
              break;
            }
            if (o2 < 0) return this;
            0 === o2 ? r3.shift() : function(t4, e4) {
              for (; e4 + 1 < t4.length; e4++) t4[e4] = t4[e4 + 1];
              t4.pop();
            }(r3, o2), 1 === r3.length && (n2[t3] = r3[0]), void 0 !== n2.removeListener && this.emit("removeListener", t3, s2 || e3);
          }
          return this;
        }, s.prototype.off = s.prototype.removeListener, s.prototype.removeAllListeners = function(t3) {
          var e3, r3, n2;
          if (void 0 === (r3 = this._events)) return this;
          if (void 0 === r3.removeListener) return 0 === arguments.length ? (this._events = /* @__PURE__ */ Object.create(null), this._eventsCount = 0) : void 0 !== r3[t3] && (0 === --this._eventsCount ? this._events = /* @__PURE__ */ Object.create(null) : delete r3[t3]), this;
          if (0 === arguments.length) {
            var o2, i2 = Object.keys(r3);
            for (n2 = 0; n2 < i2.length; ++n2) "removeListener" !== (o2 = i2[n2]) && this.removeAllListeners(o2);
            return this.removeAllListeners("removeListener"), this._events = /* @__PURE__ */ Object.create(null), this._eventsCount = 0, this;
          }
          if ("function" == typeof (e3 = r3[t3])) this.removeListener(t3, e3);
          else if (void 0 !== e3) for (n2 = e3.length - 1; n2 >= 0; n2--) this.removeListener(t3, e3[n2]);
          return this;
        }, s.prototype.listeners = function(t3) {
          return h(this, t3, true);
        }, s.prototype.rawListeners = function(t3) {
          return h(this, t3, false);
        }, s.listenerCount = function(t3, e3) {
          return "function" == typeof t3.listenerCount ? t3.listenerCount(e3) : y.call(t3, e3);
        }, s.prototype.listenerCount = y, s.prototype.eventNames = function() {
          return this._eventsCount > 0 ? r2(this._events) : [];
        };
      }, 3609: (t2, e2, r2) => {
        "use strict";
        function n(t3) {
          return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
            return typeof t4;
          } : function(t4) {
            return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
          }, n(t3);
        }
        __name(n, "n");
        function o(t3, e3) {
          for (var r3 = 0; r3 < e3.length; r3++) {
            var n2 = e3[r3];
            n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(t3, i(n2.key), n2);
          }
        }
        __name(o, "o");
        function i(t3) {
          var e3 = function(t4) {
            if ("object" != n(t4) || !t4) return t4;
            var e4 = t4[Symbol.toPrimitive];
            if (void 0 !== e4) {
              var r3 = e4.call(t4, "string");
              if ("object" != n(r3)) return r3;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(t4);
          }(t3);
          return "symbol" == n(e3) ? e3 : e3 + "";
        }
        __name(i, "i");
        function s(t3, e3, r3) {
          return e3 = c(e3), function(t4, e4) {
            if (e4 && ("object" == n(e4) || "function" == typeof e4)) return e4;
            if (void 0 !== e4) throw new TypeError("Derived constructors may only return object or undefined");
            return a(t4);
          }(t3, u() ? Reflect.construct(e3, r3 || [], c(t3).constructor) : e3.apply(t3, r3));
        }
        __name(s, "s");
        function a(t3) {
          if (void 0 === t3) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
          return t3;
        }
        __name(a, "a");
        function u() {
          try {
            var t3 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch (t4) {
          }
          return (u = /* @__PURE__ */ __name(function() {
            return !!t3;
          }, "u"))();
        }
        __name(u, "u");
        function c(t3) {
          return c = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t4) {
            return t4.__proto__ || Object.getPrototypeOf(t4);
          }, c(t3);
        }
        __name(c, "c");
        function l(t3, e3) {
          return l = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t4, e4) {
            return t4.__proto__ = e4, t4;
          }, l(t3, e3);
        }
        __name(l, "l");
        var f = r2(8213), p = r2(7352), h = function(t3) {
          function e3(t4, r4, n3, o2, i2) {
            var u2;
            if (function(t5, e4) {
              if (!(t5 instanceof e4)) throw new TypeError("Cannot call a class as a function");
            }(this, e3), arguments.length > 0) {
              var c2 = d(r4);
              (u2 = s(this, e3, [m(null, t4, r4, n3, b(i2), c2, o2)])).init(t4, r4, n3, o2, i2);
            } else u2 = s(this, e3, [m()]);
            return a(u2);
          }
          __name(e3, "e");
          return function(t4, e4) {
            if ("function" != typeof e4 && null !== e4) throw new TypeError("Super expression must either be null or a function");
            t4.prototype = Object.create(e4 && e4.prototype, { constructor: { value: t4, writable: true, configurable: true } }), Object.defineProperty(t4, "prototype", { writable: false }), e4 && l(t4, e4);
          }(e3, t3), r3 = e3, (n2 = [{ key: "toJSON", value: /* @__PURE__ */ __name(function() {
            return { stringValue: this.stringValue, valueType: this.valueType, kind: this.kind, value: this.value, path: this.path, reason: this.reason, name: this.name, message: this.message };
          }, "value") }, { key: "init", value: /* @__PURE__ */ __name(function(t4, e4, r4, n3, o2) {
            this.stringValue = y(e4), this.messageFormat = b(o2), this.kind = t4, this.value = e4, this.path = r4, this.reason = n3, this.valueType = d(e4);
          }, "value") }, { key: "copy", value: /* @__PURE__ */ __name(function(t4) {
            this.messageFormat = t4.messageFormat, this.stringValue = t4.stringValue, this.kind = t4.kind, this.value = t4.value, this.path = t4.path, this.reason = t4.reason, this.message = t4.message, this.valueType = t4.valueType;
          }, "value") }, { key: "setModel", value: /* @__PURE__ */ __name(function(t4) {
            this.message = m(t4, this.kind, this.value, this.path, this.messageFormat, this.valueType);
          }, "value") }]) && o(r3.prototype, n2), Object.defineProperty(r3, "prototype", { writable: false }), r3;
          var r3, n2;
        }(f);
        function y(t3) {
          var e3 = p.inspect(t3);
          return (e3 = e3.replace(/^'|'$/g, '"')).startsWith('"') || (e3 = '"' + e3 + '"'), e3;
        }
        __name(y, "y");
        function d(t3) {
          if (null == t3) return "" + t3;
          var e3 = n(t3);
          return "object" !== e3 || "function" != typeof t3.constructor ? e3 : t3.constructor.name;
        }
        __name(d, "d");
        function b(t3) {
          var e3 = t3 && t3._castErrorMessage || null;
          if ("string" == typeof e3 || "function" == typeof e3) return e3;
        }
        __name(b, "b");
        function m(t3, e3, r3, n2, o2, i2, s2) {
          if ("string" == typeof o2) {
            var a2 = y(r3), u2 = o2.replace("{KIND}", e3).replace("{VALUE}", a2).replace("{PATH}", n2);
            return null != t3 && (u2 = u2.replace("{MODEL}", t3.modelName)), u2;
          }
          if ("function" == typeof o2) return o2(r3, n2, t3, e3);
          var c2 = "Cast to " + e3 + " failed for value " + y(r3) + (i2 ? " (type " + i2 + ")" : "") + ' at path "' + n2 + '"';
          return null != t3 && (c2 += ' for model "' + t3.modelName + '"'), null != s2 && "function" == typeof s2.constructor && "AssertionError" !== s2.constructor.name && "Error" !== s2.constructor.name && (c2 += ' because of "' + s2.constructor.name + '"'), c2;
        }
        __name(m, "m");
        Object.defineProperty(h.prototype, "name", { value: "CastError" }), t2.exports = h;
      }, 3622: (t2) => {
        "use strict";
        function e2(t3) {
          return e2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
            return typeof t4;
          } : function(t4) {
            return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
          }, e2(t3);
        }
        __name(e2, "e");
        t2.exports = function(t3, r2, n) {
          if (null == t3) return t3;
          if (null != t3._doc && (t3 = t3._doc), arguments.length >= 3) {
            if ("object" !== e2(t3)) return;
            if (void 0 === n) return;
            return t3 instanceof Map ? t3.set(r2, n) : t3[r2] = n, n;
          }
          return "$*" === r2 ? t3 instanceof Map ? Array.from(t3.values()) : Object.keys(t3).map(function(e3) {
            return t3[e3];
          }) : t3 instanceof Map ? t3.get(r2) : t3[r2];
        };
      }, 3644: (t2, e2, r2) => {
        "use strict";
        function n(t3) {
          return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
            return typeof t4;
          } : function(t4) {
            return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
          }, n(t3);
        }
        __name(n, "n");
        function o() {
          try {
            var t3 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch (t4) {
          }
          return (o = /* @__PURE__ */ __name(function() {
            return !!t3;
          }, "o"))();
        }
        __name(o, "o");
        function i(t3) {
          return i = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t4) {
            return t4.__proto__ || Object.getPrototypeOf(t4);
          }, i(t3);
        }
        __name(i, "i");
        function s(t3, e3) {
          return s = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t4, e4) {
            return t4.__proto__ = e4, t4;
          }, s(t3, e3);
        }
        __name(s, "s");
        var a = function(t3) {
          function e3(t4) {
            return function(t5, e4) {
              if (!(t5 instanceof e4)) throw new TypeError("Cannot call a class as a function");
            }(this, e3), function(t5, e4, r4) {
              return e4 = i(e4), function(t6, e5) {
                if (e5 && ("object" == n(e5) || "function" == typeof e5)) return e5;
                if (void 0 !== e5) throw new TypeError("Derived constructors may only return object or undefined");
                return function(t7) {
                  if (void 0 === t7) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                  return t7;
                }(t6);
              }(t5, o() ? Reflect.construct(e4, r4 || [], i(t5).constructor) : e4.apply(t5, r4));
            }(this, e3, ["Cannot overwrite `" + t4 + "` model once compiled."]);
          }
          __name(e3, "e");
          return function(t4, e4) {
            if ("function" != typeof e4 && null !== e4) throw new TypeError("Super expression must either be null or a function");
            t4.prototype = Object.create(e4 && e4.prototype, { constructor: { value: t4, writable: true, configurable: true } }), Object.defineProperty(t4, "prototype", { writable: false }), e4 && s(t4, e4);
          }(e3, t3), r3 = e3, Object.defineProperty(r3, "prototype", { writable: false }), r3;
          var r3;
        }(r2(8213));
        Object.defineProperty(a.prototype, "name", { value: "OverwriteModelError" }), t2.exports = a;
      }, 3660: (t2, e2, r2) => {
        "use strict";
        function n(t3, e3) {
          var r3 = Object.keys(t3);
          if (Object.getOwnPropertySymbols) {
            var n2 = Object.getOwnPropertySymbols(t3);
            e3 && (n2 = n2.filter(function(e4) {
              return Object.getOwnPropertyDescriptor(t3, e4).enumerable;
            })), r3.push.apply(r3, n2);
          }
          return r3;
        }
        __name(n, "n");
        function o(t3) {
          for (var e3 = 1; e3 < arguments.length; e3++) {
            var r3 = null != arguments[e3] ? arguments[e3] : {};
            e3 % 2 ? n(Object(r3), true).forEach(function(e4) {
              i(t3, e4, r3[e4]);
            }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t3, Object.getOwnPropertyDescriptors(r3)) : n(Object(r3)).forEach(function(e4) {
              Object.defineProperty(t3, e4, Object.getOwnPropertyDescriptor(r3, e4));
            });
          }
          return t3;
        }
        __name(o, "o");
        function i(t3, e3, r3) {
          return (e3 = function(t4) {
            var e4 = function(t5) {
              if ("object" != s(t5) || !t5) return t5;
              var e5 = t5[Symbol.toPrimitive];
              if (void 0 !== e5) {
                var r4 = e5.call(t5, "string");
                if ("object" != s(r4)) return r4;
                throw new TypeError("@@toPrimitive must return a primitive value.");
              }
              return String(t5);
            }(t4);
            return "symbol" == s(e4) ? e4 : e4 + "";
          }(e3)) in t3 ? Object.defineProperty(t3, e3, { value: r3, enumerable: true, configurable: true, writable: true }) : t3[e3] = r3, t3;
        }
        __name(i, "i");
        function s(t3) {
          return s = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
            return typeof t4;
          } : function(t4) {
            return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
          }, s(t3);
        }
        __name(s, "s");
        var a = r2(3672), u = r2(1007), c = r2(6426), l = r2(7768), f = r2(4327), p = r2(9460), h = r2(8768), y = c.CastError;
        function d(t3, e3) {
          c.call(this, t3, e3, "Number");
        }
        __name(d, "d");
        function b(t3) {
          return this.cast(t3);
        }
        __name(b, "b");
        d.get = c.get, d.set = c.set, d.setters = [], d._cast = l, d.cast = function(t3) {
          return 0 === arguments.length || (false === t3 && (t3 = this._defaultCaster), this._cast = t3), this._cast;
        }, d._defaultCaster = function(t3) {
          if ("number" != typeof t3) throw new Error();
          return t3;
        }, d.schemaName = "Number", d.defaultOptions = {}, d.prototype = Object.create(c.prototype), d.prototype.constructor = d, d.prototype.OptionsConstructor = u, d._checkRequired = function(t3) {
          return "number" == typeof t3 || t3 instanceof Number;
        }, d.checkRequired = c.checkRequired, d.prototype.checkRequired = function(t3, e3) {
          return "object" === s(t3) && c._isRef(this, t3, e3, true) ? null != t3 : ("function" == typeof this.constructor.checkRequired ? this.constructor.checkRequired() : d.checkRequired())(t3);
        }, d.prototype.min = function(t3, e3) {
          if (this.minValidator && (this.validators = this.validators.filter(function(t4) {
            return t4.validator !== this.minValidator;
          }, this)), null != t3) {
            var r3 = e3 || a.messages.Number.min;
            r3 = r3.replace(/{MIN}/, t3), this.validators.push({ validator: this.minValidator = function(e4) {
              return null == e4 || e4 >= t3;
            }, message: r3, type: "min", min: t3 });
          }
          return this;
        }, d.prototype.max = function(t3, e3) {
          if (this.maxValidator && (this.validators = this.validators.filter(function(t4) {
            return t4.validator !== this.maxValidator;
          }, this)), null != t3) {
            var r3 = e3 || a.messages.Number.max;
            r3 = r3.replace(/{MAX}/, t3), this.validators.push({ validator: this.maxValidator = function(e4) {
              return null == e4 || e4 <= t3;
            }, message: r3, type: "max", max: t3 });
          }
          return this;
        }, d.prototype.enum = function(t3, e3) {
          return this.enumValidator && (this.validators = this.validators.filter(function(t4) {
            return t4.validator !== this.enumValidator;
          }, this)), Array.isArray(t3) || (h.isPOJO(t3) && null != t3.values ? (e3 = t3.message, t3 = t3.values) : "number" == typeof t3 && (t3 = Array.prototype.slice.call(arguments), e3 = null), h.isPOJO(t3) && (t3 = Object.values(t3)), e3 = e3 || a.messages.Number.enum), e3 = null == e3 ? a.messages.Number.enum : e3, this.enumValidator = function(e4) {
            return null == e4 || -1 !== t3.indexOf(e4);
          }, this.validators.push({ validator: this.enumValidator, message: e3, type: "enum", enumValues: t3 }), this;
        }, d.prototype.cast = function(t3, e3, r3, n2, o2) {
          if ("number" != typeof t3 && c._isRef(this, t3, e3, r3) && (null == t3 || h.isNonBuiltinObject(t3))) return this._castRef(t3, e3, r3, o2);
          var i2, s2 = t3 && void 0 !== t3._id ? t3._id : t3;
          i2 = "function" == typeof this._castFunction ? this._castFunction : "function" == typeof this.constructor.cast ? this.constructor.cast() : d.cast();
          try {
            return i2(s2);
          } catch (t4) {
            throw new y("Number", s2, this.path, t4, this);
          }
        };
        var m = o(o({}, c.prototype.$conditionalHandlers), {}, { $bitsAllClear: p, $bitsAnyClear: p, $bitsAllSet: p, $bitsAnySet: p, $gt: b, $gte: b, $lt: b, $lte: b, $mod: /* @__PURE__ */ __name(function(t3) {
          var e3 = this;
          return Array.isArray(t3) ? t3.map(function(t4) {
            return e3.cast(t4);
          }) : [this.cast(t3)];
        }, "$mod") });
        Object.defineProperty(d.prototype, "$conditionalHandlers", { enumerable: false, value: m }), d.prototype.castForQuery = function(t3, e3, r3) {
          var n2;
          if (null != t3) {
            if (!(n2 = this.$conditionalHandlers[t3])) throw new y("number", e3, this.path, null, this);
            return n2.call(this, e3, r3);
          }
          try {
            e3 = this.applySetters(e3, r3);
          } catch (t4) {
            throw t4 instanceof y && t4.path === this.path && null != this.$fullPath && (t4.path = this.$fullPath), t4;
          }
          return e3;
        }, d.prototype.toJSONSchema = function(t3) {
          var e3 = this.options.required && "function" != typeof this.options.required || "_id" === this.path;
          return f("number", "number", null == t3 ? void 0 : t3.useBsonType, e3);
        }, t2.exports = d;
      }, 3672: (t2, e2, r2) => {
        "use strict";
        var n = r2(8213);
        t2.exports = n, n.messages = r2(766), n.Messages = n.messages, n.CastError = r2(3609), n.DocumentNotFoundError = r2(1129), n.ValidationError = r2(6949), n.ValidatorError = r2(9538), n.VersionError = r2(6996), n.ParallelSaveError = r2(3940), n.OverwriteModelError = r2(3644), n.MissingSchemaError = r2(8063), n.MongooseBulkSaveIncompleteError = r2(8517), n.MongooseServerSelectionError = r2(7219), n.DivergentArrayError = r2(1417), n.StrictModeError = r2(8995), n.StrictPopulateError = r2(6801);
      }, 3696: (t2) => {
        "use strict";
        t2.exports = function(t3, e2) {
          return null == t3 ? null : "boolean" == typeof t3 ? e2 : "boolean" == typeof t3[e2] ? t3[e2] ? e2 : null : e2 in t3 ? t3[e2] : e2;
        };
      }, 3703: (t2) => {
        "use strict";
        function e2(t3, e3) {
          (null == e3 || e3 > t3.length) && (e3 = t3.length);
          for (var r3 = 0, n = Array(e3); r3 < e3; r3++) n[r3] = t3[r3];
          return n;
        }
        __name(e2, "e");
        function r2(t3, e3) {
          return null == t3 ? t3 : t3 instanceof Map ? t3.get(e3) : t3[e3];
        }
        __name(r2, "r");
        t2.exports = function(t3, n, o) {
          var i, s = false;
          if ("string" == typeof n) {
            if (-1 === n.indexOf(".")) {
              var a = r2(t3, n);
              return null == a ? o : a;
            }
            i = n.split(".");
          } else if (s = true, 1 === (i = n).length) {
            var u = r2(t3, i[0]);
            return null == u ? o : u;
          }
          var c, l = n, f = t3, p = function(t4, r3) {
            var n2 = "undefined" != typeof Symbol && t4[Symbol.iterator] || t4["@@iterator"];
            if (!n2) {
              if (Array.isArray(t4) || (n2 = function(t5, r4) {
                if (t5) {
                  if ("string" == typeof t5) return e2(t5, r4);
                  var n3 = {}.toString.call(t5).slice(8, -1);
                  return "Object" === n3 && t5.constructor && (n3 = t5.constructor.name), "Map" === n3 || "Set" === n3 ? Array.from(t5) : "Arguments" === n3 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n3) ? e2(t5, r4) : void 0;
                }
              }(t4)) || r3 && t4 && "number" == typeof t4.length) {
                n2 && (t4 = n2);
                var o2 = 0, i2 = /* @__PURE__ */ __name(function() {
                }, "i");
                return { s: i2, n: /* @__PURE__ */ __name(function() {
                  return o2 >= t4.length ? { done: true } : { done: false, value: t4[o2++] };
                }, "n"), e: /* @__PURE__ */ __name(function(t5) {
                  throw t5;
                }, "e"), f: i2 };
              }
              throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
            }
            var s2, a2 = true, u2 = false;
            return { s: /* @__PURE__ */ __name(function() {
              n2 = n2.call(t4);
            }, "s"), n: /* @__PURE__ */ __name(function() {
              var t5 = n2.next();
              return a2 = t5.done, t5;
            }, "n"), e: /* @__PURE__ */ __name(function(t5) {
              u2 = true, s2 = t5;
            }, "e"), f: /* @__PURE__ */ __name(function() {
              try {
                a2 || null == n2.return || n2.return();
              } finally {
                if (u2) throw s2;
              }
            }, "f") };
          }(i);
          try {
            for (p.s(); !(c = p.n()).done; ) {
              var h = c.value;
              if (null == f) return o;
              if (!s && null != f[l]) return f[l];
              f = r2(f, h), s || (l = l.substr(h.length + 1));
            }
          } catch (t4) {
            p.e(t4);
          } finally {
            p.f();
          }
          return null == f ? o : f;
        };
      }, 3704: (t2, e2, r2) => {
        "use strict";
        function n(t3) {
          return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
            return typeof t4;
          } : function(t4) {
            return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
          }, n(t3);
        }
        __name(n, "n");
        var o = r2(2402), i = r2(6353), s = r2(3305);
        t2.exports = function(t3) {
          if (null == t3 || "" === t3) return null;
          var e3;
          if (s(t3, "Long")) e3 = t3.toNumber();
          else if ("string" == typeof t3) try {
            return i.Double.fromString(t3);
          } catch (t4) {
            o.ok(false);
          }
          else if ("object" === n(t3)) {
            var r3, a = null !== (r3 = t3.valueOf()) && void 0 !== r3 ? r3 : t3.toString();
            if ("string" == typeof a) try {
              return i.Double.fromString(t3);
            } catch (t4) {
              o.ok(false);
            }
            else e3 = Number(a);
          } else e3 = Number(t3);
          return new i.Double(e3);
        };
      }, 3731: (t2, e2, r2) => {
        "use strict";
        function n(t3) {
          return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
            return typeof t4;
          } : function(t4) {
            return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
          }, n(t3);
        }
        __name(n, "n");
        function o() {
          try {
            var t3 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch (t4) {
          }
          return (o = /* @__PURE__ */ __name(function() {
            return !!t3;
          }, "o"))();
        }
        __name(o, "o");
        function i(t3) {
          return i = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t4) {
            return t4.__proto__ || Object.getPrototypeOf(t4);
          }, i(t3);
        }
        __name(i, "i");
        function s(t3, e3) {
          return s = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t4, e4) {
            return t4.__proto__ = e4, t4;
          }, s(t3, e3);
        }
        __name(s, "s");
        var a = function(t3) {
          function e3() {
            return function(t4, e4) {
              if (!(t4 instanceof e4)) throw new TypeError("Cannot call a class as a function");
            }(this, e3), function(t4, e4, r4) {
              return e4 = i(e4), function(t5, e5) {
                if (e5 && ("object" == n(e5) || "function" == typeof e5)) return e5;
                if (void 0 !== e5) throw new TypeError("Derived constructors may only return object or undefined");
                return function(t6) {
                  if (void 0 === t6) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                  return t6;
                }(t5);
              }(t4, o() ? Reflect.construct(e4, r4 || [], i(t4).constructor) : e4.apply(t4, r4));
            }(this, e3, arguments);
          }
          __name(e3, "e");
          return function(t4, e4) {
            if ("function" != typeof e4 && null !== e4) throw new TypeError("Super expression must either be null or a function");
            t4.prototype = Object.create(e4 && e4.prototype, { constructor: { value: t4, writable: true, configurable: true } }), Object.defineProperty(t4, "prototype", { writable: false }), e4 && s(t4, e4);
          }(e3, t3), r3 = e3, Object.defineProperty(r3, "prototype", { writable: false }), r3;
          var r3;
        }(r2(8879)), u = r2(5761);
        Object.defineProperty(a.prototype, "min", u), Object.defineProperty(a.prototype, "max", u), Object.defineProperty(a.prototype, "expires", u), t2.exports = a;
      }, 3743: (t2, e2, r2) => {
        "use strict";
        function n(t3) {
          return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
            return typeof t4;
          } : function(t4) {
            return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
          }, n(t3);
        }
        __name(n, "n");
        function o(t3) {
          return o = "function" == typeof Symbol && "symbol" === n(Symbol.iterator) ? function(t4) {
            return n(t4);
          } : function(t4) {
            return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : n(t4);
          }, o(t3);
        }
        __name(o, "o");
        function i(t3) {
          return i = Object.setPrototypeOf ? Object.getPrototypeOf : function(t4) {
            return t4.__proto__ || Object.getPrototypeOf(t4);
          }, i(t3);
        }
        __name(i, "i");
        function s(t3, e3) {
          return s = Object.setPrototypeOf || function(t4, e4) {
            return t4.__proto__ = e4, t4;
          }, s(t3, e3);
        }
        __name(s, "s");
        var a, u, c = {};
        function l(t3, e3, r3) {
          r3 || (r3 = Error);
          var n2 = function(r4) {
            function n3(r5, s2, a2) {
              var u2;
              return function(t4, e4) {
                if (!(t4 instanceof e4)) throw new TypeError("Cannot call a class as a function");
              }(this, n3), u2 = function(t4, e4) {
                return !e4 || "object" !== o(e4) && "function" != typeof e4 ? function(t5) {
                  if (void 0 === t5) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                  return t5;
                }(t4) : e4;
              }(this, i(n3).call(this, function(t4, r6, n4) {
                return "string" == typeof e3 ? e3 : e3(t4, r6, n4);
              }(r5, s2, a2))), u2.code = t3, u2;
            }
            __name(n3, "n");
            return function(t4, e4) {
              if ("function" != typeof e4 && null !== e4) throw new TypeError("Super expression must either be null or a function");
              t4.prototype = Object.create(e4 && e4.prototype, { constructor: { value: t4, writable: true, configurable: true } }), e4 && s(t4, e4);
            }(n3, r4), n3;
          }(r3);
          c[t3] = n2;
        }
        __name(l, "l");
        function f(t3, e3) {
          if (Array.isArray(t3)) {
            var r3 = t3.length;
            return t3 = t3.map(function(t4) {
              return String(t4);
            }), r3 > 2 ? "one of ".concat(e3, " ").concat(t3.slice(0, r3 - 1).join(", "), ", or ") + t3[r3 - 1] : 2 === r3 ? "one of ".concat(e3, " ").concat(t3[0], " or ").concat(t3[1]) : "of ".concat(e3, " ").concat(t3[0]);
          }
          return "of ".concat(e3, " ").concat(String(t3));
        }
        __name(f, "f");
        l("ERR_AMBIGUOUS_ARGUMENT", 'The "%s" argument is ambiguous. %s', TypeError), l("ERR_INVALID_ARG_TYPE", function(t3, e3, n2) {
          var i2, s2, u2, c2, l2;
          if (void 0 === a && (a = r2(2402)), a("string" == typeof t3, "'name' must be a string"), "string" == typeof e3 && (s2 = "not ", e3.substr(0, 4) === s2) ? (i2 = "must not be", e3 = e3.replace(/^not /, "")) : i2 = "must be", function(t4, e4, r3) {
            return (void 0 === r3 || r3 > t4.length) && (r3 = t4.length), t4.substring(r3 - 9, r3) === e4;
          }(t3, " argument")) u2 = "The ".concat(t3, " ").concat(i2, " ").concat(f(e3, "type"));
          else {
            var p = ("number" != typeof l2 && (l2 = 0), l2 + 1 > (c2 = t3).length || -1 === c2.indexOf(".", l2) ? "argument" : "property");
            u2 = 'The "'.concat(t3, '" ').concat(p, " ").concat(i2, " ").concat(f(e3, "type"));
          }
          return u2 + ". Received type ".concat(o(n2));
        }, TypeError), l("ERR_INVALID_ARG_VALUE", function(t3, e3) {
          var n2 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : "is invalid";
          void 0 === u && (u = r2(7352));
          var o2 = u.inspect(e3);
          return o2.length > 128 && (o2 = "".concat(o2.slice(0, 128), "...")), "The argument '".concat(t3, "' ").concat(n2, ". Received ").concat(o2);
        }, TypeError, RangeError), l("ERR_INVALID_RETURN_VALUE", function(t3, e3, r3) {
          var n2;
          return n2 = r3 && r3.constructor && r3.constructor.name ? "instance of ".concat(r3.constructor.name) : "type ".concat(o(r3)), "Expected ".concat(t3, ' to be returned from the "').concat(e3, '"') + " function but got ".concat(n2, ".");
        }, TypeError), l("ERR_MISSING_ARGS", function() {
          for (var t3 = arguments.length, e3 = new Array(t3), n2 = 0; n2 < t3; n2++) e3[n2] = arguments[n2];
          void 0 === a && (a = r2(2402)), a(e3.length > 0, "At least one arg needs to be specified");
          var o2 = "The ", i2 = e3.length;
          switch (e3 = e3.map(function(t4) {
            return '"'.concat(t4, '"');
          }), i2) {
            case 1:
              o2 += "".concat(e3[0], " argument");
              break;
            case 2:
              o2 += "".concat(e3[0], " and ").concat(e3[1], " arguments");
              break;
            default:
              o2 += e3.slice(0, i2 - 1).join(", "), o2 += ", and ".concat(e3[i2 - 1], " arguments");
          }
          return "".concat(o2, " must be specified");
        }, TypeError), t2.exports.codes = c;
      }, 3777: (t2, e2, r2) => {
        "use strict";
        var n = r2(9809), o = Object.prototype.toString, i = Object.prototype.hasOwnProperty;
        t2.exports = function(t3, e3, r3) {
          if (!n(e3)) throw new TypeError("iterator must be a function");
          var s, a;
          arguments.length >= 3 && (s = r3), a = t3, "[object Array]" === o.call(a) ? function(t4, e4, r4) {
            for (var n2 = 0, o2 = t4.length; n2 < o2; n2++) i.call(t4, n2) && (null == r4 ? e4(t4[n2], n2, t4) : e4.call(r4, t4[n2], n2, t4));
          }(t3, e3, s) : "string" == typeof t3 ? function(t4, e4, r4) {
            for (var n2 = 0, o2 = t4.length; n2 < o2; n2++) null == r4 ? e4(t4.charAt(n2), n2, t4) : e4.call(r4, t4.charAt(n2), n2, t4);
          }(t3, e3, s) : function(t4, e4, r4) {
            for (var n2 in t4) i.call(t4, n2) && (null == r4 ? e4(t4[n2], n2, t4) : e4.call(r4, t4[n2], n2, t4));
          }(t3, e3, s);
        };
      }, 3892: (t2, e2, r2) => {
        "use strict";
        function n(t3) {
          return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
            return typeof t4;
          } : function(t4) {
            return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
          }, n(t3);
        }
        __name(n, "n");
        function o(t3, e3) {
          var r3 = "undefined" != typeof Symbol && t3[Symbol.iterator] || t3["@@iterator"];
          if (!r3) {
            if (Array.isArray(t3) || (r3 = function(t4, e4) {
              if (t4) {
                if ("string" == typeof t4) return i(t4, e4);
                var r4 = {}.toString.call(t4).slice(8, -1);
                return "Object" === r4 && t4.constructor && (r4 = t4.constructor.name), "Map" === r4 || "Set" === r4 ? Array.from(t4) : "Arguments" === r4 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r4) ? i(t4, e4) : void 0;
              }
            }(t3)) || e3 && t3 && "number" == typeof t3.length) {
              r3 && (t3 = r3);
              var n2 = 0, o2 = /* @__PURE__ */ __name(function() {
              }, "o");
              return { s: o2, n: /* @__PURE__ */ __name(function() {
                return n2 >= t3.length ? { done: true } : { done: false, value: t3[n2++] };
              }, "n"), e: /* @__PURE__ */ __name(function(t4) {
                throw t4;
              }, "e"), f: o2 };
            }
            throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }
          var s2, a2 = true, u2 = false;
          return { s: /* @__PURE__ */ __name(function() {
            r3 = r3.call(t3);
          }, "s"), n: /* @__PURE__ */ __name(function() {
            var t4 = r3.next();
            return a2 = t4.done, t4;
          }, "n"), e: /* @__PURE__ */ __name(function(t4) {
            u2 = true, s2 = t4;
          }, "e"), f: /* @__PURE__ */ __name(function() {
            try {
              a2 || null == r3.return || r3.return();
            } finally {
              if (u2) throw s2;
            }
          }, "f") };
        }
        __name(o, "o");
        function i(t3, e3) {
          (null == e3 || e3 > t3.length) && (e3 = t3.length);
          for (var r3 = 0, n2 = Array(e3); r3 < e3; r3++) n2[r3] = t3[r3];
          return n2;
        }
        __name(i, "i");
        function s(t3, e3) {
          var r3 = Object.keys(t3);
          if (Object.getOwnPropertySymbols) {
            var n2 = Object.getOwnPropertySymbols(t3);
            e3 && (n2 = n2.filter(function(e4) {
              return Object.getOwnPropertyDescriptor(t3, e4).enumerable;
            })), r3.push.apply(r3, n2);
          }
          return r3;
        }
        __name(s, "s");
        function a(t3) {
          for (var e3 = 1; e3 < arguments.length; e3++) {
            var r3 = null != arguments[e3] ? arguments[e3] : {};
            e3 % 2 ? s(Object(r3), true).forEach(function(e4) {
              u(t3, e4, r3[e4]);
            }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t3, Object.getOwnPropertyDescriptors(r3)) : s(Object(r3)).forEach(function(e4) {
              Object.defineProperty(t3, e4, Object.getOwnPropertyDescriptor(r3, e4));
            });
          }
          return t3;
        }
        __name(a, "a");
        function u(t3, e3, r3) {
          return (e3 = function(t4) {
            var e4 = function(t5) {
              if ("object" != n(t5) || !t5) return t5;
              var e5 = t5[Symbol.toPrimitive];
              if (void 0 !== e5) {
                var r4 = e5.call(t5, "string");
                if ("object" != n(r4)) return r4;
                throw new TypeError("@@toPrimitive must return a primitive value.");
              }
              return String(t5);
            }(t4);
            return "symbol" == n(e4) ? e4 : e4 + "";
          }(e3)) in t3 ? Object.defineProperty(t3, e3, { value: r3, enumerable: true, configurable: true, writable: true }) : t3[e3] = r3, t3;
        }
        __name(u, "u");
        var c = r2(6948), l = r2(3916), f = r2(3703), p = r2(1058), h = r2(7300), y = r2(4450), d = r2(6665);
        e2.preparePopulationOptionsMQ = function(t3, e3) {
          var r3, n2 = t3._mongooseOptions.populate, o2 = Object.keys(n2).reduce(function(t4, e4) {
            return t4.concat([n2[e4]]);
          }, []);
          null != e3.lean && o2.filter(function(t4) {
            return null == (t4 && t4.options && t4.options.lean);
          }).forEach((r3 = e3.lean, function(t4) {
            t4.options || (t4.options = {}), null != r3 && Array.isArray(r3.virtuals) && ((r3 = Object.assign({}, r3)).virtuals = r3.virtuals.filter(function(e4) {
              return "string" == typeof e4 && e4.startsWith(t4.path + ".");
            }).map(function(e4) {
              return e4.slice(t4.path.length + 1);
            })), t4.options.lean = r3;
          }));
          var i2 = t3 && t3.options && t3.options.session || null;
          null != i2 && o2.forEach(function(t4) {
            null != t4.options ? "session" in t4.options || (t4.options.session = i2) : t4.options = { session: i2 };
          });
          for (var s2 = t3._fieldsForExec(), u2 = 0; u2 < o2.length; ++u2) o2[u2] instanceof c ? o2[u2] = new c(a(a({}, o2[u2]), {}, { _queryProjection: s2, _localModel: t3.model })) : (o2[u2]._queryProjection = s2, o2[u2]._localModel = t3.model);
          return o2;
        }, e2.createModel = function(t3, r3, n2, o2, i2) {
          t3.hooks.execPreSync("createModel", r3);
          var s2 = t3.schema ? t3.schema.discriminatorMapping : null, a2 = s2 && s2.isRoot ? s2.key : null, u2 = r3[a2];
          if (a2 && u2 && t3.discriminators) {
            var c2 = t3.discriminators[u2] || p(t3.discriminators, u2);
            if (c2) {
              var l2 = y(o2);
              return e2.applyPaths(l2, c2.schema), new c2(void 0, l2, true);
            }
          }
          var f2 = { skipId: true, isNew: false, willInit: true };
          return null != i2 && "defaults" in i2 && (f2.defaults = i2.defaults), new t3(void 0, n2, f2);
        }, e2.createModelAndInit = function(t3, r3, n2, o2, i2, s2, a2) {
          var u2 = s2 ? { populated: s2 } : void 0, c2 = e2.createModel(t3, r3, n2, o2, i2);
          try {
            c2.$init(r3, u2, a2);
          } catch (t4) {
            a2(t4, c2);
          }
        }, e2.applyPaths = function(t3, e3, r3) {
          var i2, s2, a2 = /* @__PURE__ */ new Set();
          if (t3) {
            s2 = Object.keys(t3);
            for (var u2 = [], c2 = 0; c2 < s2.length; ++c2) {
              var p2 = s2[c2];
              "-" === s2[c2][0] && (delete t3[p2], "-_id" === p2 ? t3._id = 0 : u2.push(p2.slice(1)));
            }
            s2 = Object.keys(t3);
            for (var y2 = 0; y2 < s2.length; ++y2) if ("+" !== s2[y2][0]) {
              var b = t3[s2[y2]];
              if (h(b) && !("_id" === s2[y2] && s2.length > 1) && (!(s2[y2] === e3.options.discriminatorKey && s2.length > 1 && null != b) || b)) {
                i2 = !b;
                break;
              }
            }
            for (var m = 0, v = u2; m < v.length; m++) {
              var g = v[m], _ = e3.path(g);
              _ && _.selected && false === i2 ? _ && _.selected && false === i2 && a2.add(g) : (t3[g] = 0, i2 = true);
            }
          }
          var w = [], O = [], S = [];
          switch ((/* @__PURE__ */ __name(function e4(r4, n2) {
            if (n2 || (n2 = ""), -1 !== S.indexOf(r4)) return [];
            S.push(r4);
            var o2 = [];
            return r4.eachPath(function(r5, s3) {
              if (n2 && (r5 = n2 + "." + r5), s3.$isSchemaMap || r5.endsWith(".$*")) {
                var a3 = t3 && "+" + r5 in t3;
                s3.options && false === s3.options.select && !a3 && O.push(r5);
              } else {
                var u3 = D(r5, s3);
                if (null != u3 || Array.isArray(s3) || !s3.$isMongooseArray || s3.$isMongooseDocumentArray || (u3 = D(r5, s3.caster)), null != u3 && o2.push(u3), s3.schema) {
                  var c3 = e4(s3.schema, r5);
                  false === i2 && l(t3, r5, s3.schema, w, c3);
                }
              }
            }), S.pop(), o2;
          }, "e"))(e3), i2) {
            case true:
              var $, j = o(O);
              try {
                for (j.s(); !($ = j.n()).done; ) {
                  var P = $.value;
                  t3[P] = 0;
                }
              } catch (t4) {
                j.e(t4);
              } finally {
                j.f();
              }
              break;
            case false:
              e3 && e3.paths._id && e3.paths._id.options && false === e3.paths._id.options.select && (t3._id = 0);
              var A, E = o(w);
              try {
                for (E.s(); !(A = E.n()).done; ) {
                  var x = A.value;
                  a2.has(x) || d(t3, x) || (t3[x] = t3[x] || 1);
                }
              } catch (t4) {
                E.e(t4);
              } finally {
                E.f();
              }
              break;
            case void 0:
              if (null == t3) break;
              for (var T = 0, k = Object.keys(t3 || {}); T < k.length; T++) {
                var N = k[T];
                N.startsWith("+") && delete t3[N];
              }
              var I, B = o(O);
              try {
                for (B.s(); !(I = B.n()).done; ) {
                  var M = I.value;
                  null == t3[M] && (t3[M] = 0);
                }
              } catch (t4) {
                B.e(t4);
              } finally {
                B.f();
              }
          }
          function D(o2, a3) {
            if (null != t3 && "boolean" == typeof a3.selected) if (false === a3.selected && t3[o2]) r3 && (t3[o2] = 0);
            else if (i2 || !a3.selected || o2 !== e3.options.discriminatorKey || null == t3[o2] || t3[o2]) {
              if (false !== i2 || !a3.selected || null == t3[o2] || t3[o2]) {
                var u3 = "+" + o2;
                if (t3 && u3 in t3) return delete t3[u3], void (false === i2 && s2.length > 1 && !~s2.indexOf(o2) && !r3 ? t3[o2] = 1 : null == i2 && r3 && false === a3.selected && (t3[o2] = 0));
                for (var c3 = o2.split("."), l2 = "", p3 = 0; p3 < c3.length; ++p3) if (l2 += l2.length ? "." + c3[p3] : c3[p3], -1 !== O.indexOf(l2)) return;
                if (!i2 && a3 && a3.options && a3.options.$skipDiscriminatorCheck) for (var h2 = "", y3 = 0; y3 < c3.length; ++y3) {
                  h2 += (0 === h2.length ? "" : ".") + c3[y3];
                  var d2 = f(t3, h2, false) || f(t3, h2 + ".$", false);
                  if (d2 && "object" !== n(d2)) return;
                }
                return (a3.selected ? w : O).push(o2), o2;
              }
              delete t3[o2];
            } else delete t3[o2];
          }
          __name(D, "D");
        };
      }, 3900: (t2, e2, r2) => {
        "use strict";
        var n = r2(6400), o = r2(6750), i = r2(3191)(), s = r2(1464), a = r2(2268), u = n("%Math.floor%");
        t2.exports = function(t3, e3) {
          if ("function" != typeof t3) throw new a("`fn` is not a function");
          if ("number" != typeof e3 || e3 < 0 || e3 > 4294967295 || u(e3) !== e3) throw new a("`length` must be a positive 32-bit integer");
          var r3 = arguments.length > 2 && !!arguments[2], n2 = true, c = true;
          if ("length" in t3 && s) {
            var l = s(t3, "length");
            l && !l.configurable && (n2 = false), l && !l.writable && (c = false);
          }
          return (n2 || c || !r3) && (i ? o(t3, "length", e3, true, true) : o(t3, "length", e3)), t3;
        };
      }, 3916: (t2) => {
        "use strict";
        t2.exports = function(t3, e2, r2, n, o) {
          var i = Object.keys(t3).reduce(function(t4, r3) {
            return t4 || r3.startsWith(e2 + ".");
          }, false), s = e2 + "." + r2.options.discriminatorKey;
          i || 1 !== o.length || o[0] !== s || n.splice(n.indexOf(s), 1);
        };
      }, 3940: (t2, e2, r2) => {
        "use strict";
        function n(t3) {
          return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
            return typeof t4;
          } : function(t4) {
            return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
          }, n(t3);
        }
        __name(n, "n");
        function o() {
          try {
            var t3 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch (t4) {
          }
          return (o = /* @__PURE__ */ __name(function() {
            return !!t3;
          }, "o"))();
        }
        __name(o, "o");
        function i(t3) {
          return i = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t4) {
            return t4.__proto__ || Object.getPrototypeOf(t4);
          }, i(t3);
        }
        __name(i, "i");
        function s(t3, e3) {
          return s = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t4, e4) {
            return t4.__proto__ = e4, t4;
          }, s(t3, e3);
        }
        __name(s, "s");
        var a = function(t3) {
          function e3(t4) {
            return function(t5, e4) {
              if (!(t5 instanceof e4)) throw new TypeError("Cannot call a class as a function");
            }(this, e3), function(t5, e4, r4) {
              return e4 = i(e4), function(t6, e5) {
                if (e5 && ("object" == n(e5) || "function" == typeof e5)) return e5;
                if (void 0 !== e5) throw new TypeError("Derived constructors may only return object or undefined");
                return function(t7) {
                  if (void 0 === t7) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                  return t7;
                }(t6);
              }(t5, o() ? Reflect.construct(e4, r4 || [], i(t5).constructor) : e4.apply(t5, r4));
            }(this, e3, ["Can't save() the same doc multiple times in parallel. Document: " + t4._doc._id]);
          }
          __name(e3, "e");
          return function(t4, e4) {
            if ("function" != typeof e4 && null !== e4) throw new TypeError("Super expression must either be null or a function");
            t4.prototype = Object.create(e4 && e4.prototype, { constructor: { value: t4, writable: true, configurable: true } }), Object.defineProperty(t4, "prototype", { writable: false }), e4 && s(t4, e4);
          }(e3, t3), r3 = e3, Object.defineProperty(r3, "prototype", { writable: false }), r3;
          var r3;
        }(r2(8213));
        Object.defineProperty(a.prototype, "name", { value: "ParallelSaveError" }), t2.exports = a;
      }, 4009: (t2, e2, r2) => {
        "use strict";
        var n = r2(8213), o = r2(5188), i = r2(3622), s = r2(5678), a = r2(7352), u = r2(8768), c = /(\.\d+$|\.\d+\.)/g;
        t2.exports = function(t3, e3, r3, l, f) {
          if (null == t3) return [];
          if ("string" == typeof t3 && null != f && o(f, t3)) throw new n("refPath `" + t3 + "` must not be excluded in projection, got " + a.inspect(f));
          if (c.test(r3)) {
            var p = r3.split(c);
            if ("" === p[p.length - 1]) throw new Error("Can't populate individual element in an array");
            for (var h = "", y = t3, d = 0; d < p.length; d += 2) {
              var b = p[d];
              if (!y.startsWith(b + ".")) {
                if (d === p.length - 1) {
                  h += y, y = "";
                  break;
                }
                throw new Error("Could not normalize ref path, chunk " + b + " not in populated path");
              }
              h += y.substring(0, b.length) + p[d + 1], y = y.substring(b.length + 1);
            }
            var m = s.get(h, e3, i), v = Array.isArray(m) ? m : [m];
            return u.array.flatten(v);
          }
          var g = s.get(t3, e3, i);
          return null != l && l.virtuals.hasOwnProperty(t3) ? [l.virtuals[t3].applyGetters(void 0, e3)] : Array.isArray(g) ? g : [g];
        };
      }, 4026: (t2, e2) => {
        "use strict";
        e2.Collection = function() {
          throw new Error("Cannot create a collection from browser library");
        }, e2.Connection = function() {
          throw new Error("Cannot create a connection from browser library");
        }, e2.BulkWriteResult = function() {
        };
      }, 4058: (t2, e2, r2) => {
        "use strict";
        var n = r2(6353).Long, o = 9223372036854775807n, i = -9223372036854775808n, s = "Mongoose only supports BigInts between ".concat(i, " and ").concat(o, " because MongoDB does not support arbitrary precision integers");
        t2.exports = function(t3) {
          if (null == t3) return t3;
          if ("" === t3) return null;
          if ("bigint" == typeof t3) {
            if (t3 > o || t3 < i) throw new Error(s);
            return t3;
          }
          if (t3 instanceof n) return t3.toBigInt();
          if ("string" == typeof t3 || "number" == typeof t3) {
            if ((t3 = BigInt(t3)) > o || t3 < i) throw new Error(s);
            return t3;
          }
          throw new Error('Cannot convert value to BigInt: "'.concat(t3, '"'));
        };
      }, 4070: (t2, e2, r2) => {
        "use strict";
        function n(t3, e3) {
          (null == e3 || e3 > t3.length) && (e3 = t3.length);
          for (var r3 = 0, n2 = Array(e3); r3 < e3; r3++) n2[r3] = t3[r3];
          return n2;
        }
        __name(n, "n");
        var o = r2(8260);
        t2.exports = function(t3) {
          if ("TopologyDescription" !== o(t3)) return false;
          if (0 === t3.servers.size) return false;
          var e3, r3 = function(t4, e4) {
            var r4 = "undefined" != typeof Symbol && t4[Symbol.iterator] || t4["@@iterator"];
            if (!r4) {
              if (Array.isArray(t4) || (r4 = function(t5, e5) {
                if (t5) {
                  if ("string" == typeof t5) return n(t5, e5);
                  var r5 = {}.toString.call(t5).slice(8, -1);
                  return "Object" === r5 && t5.constructor && (r5 = t5.constructor.name), "Map" === r5 || "Set" === r5 ? Array.from(t5) : "Arguments" === r5 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r5) ? n(t5, e5) : void 0;
                }
              }(t4)) || e4 && t4 && "number" == typeof t4.length) {
                r4 && (t4 = r4);
                var o2 = 0, i2 = /* @__PURE__ */ __name(function() {
                }, "i");
                return { s: i2, n: /* @__PURE__ */ __name(function() {
                  return o2 >= t4.length ? { done: true } : { done: false, value: t4[o2++] };
                }, "n"), e: /* @__PURE__ */ __name(function(t5) {
                  throw t5;
                }, "e"), f: i2 };
              }
              throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
            }
            var s, a = true, u = false;
            return { s: /* @__PURE__ */ __name(function() {
              r4 = r4.call(t4);
            }, "s"), n: /* @__PURE__ */ __name(function() {
              var t5 = r4.next();
              return a = t5.done, t5;
            }, "n"), e: /* @__PURE__ */ __name(function(t5) {
              u = true, s = t5;
            }, "e"), f: /* @__PURE__ */ __name(function() {
              try {
                a || null == r4.return || r4.return();
              } finally {
                if (u) throw s;
              }
            }, "f") };
          }(t3.servers.values());
          try {
            for (r3.s(); !(e3 = r3.n()).done; ) {
              var i = e3.value;
              if (false === i.host.endsWith(".mongodb.net") || 27017 !== i.port) return false;
            }
          } catch (t4) {
            r3.e(t4);
          } finally {
            r3.f();
          }
          return true;
        };
      }, 4183: (t2, e2, r2) => {
        "use strict";
        var n = r2(118);
        t2.exports = function() {
          return Number.isNaN && Number.isNaN(NaN) && !Number.isNaN("a") ? Number.isNaN : n;
        };
      }, 4224: (t2, e2, r2) => {
        "use strict";
        var n = r2(6511).ctor("require", "modify", "init", "default", "ignore");
        function o() {
          this.activePaths = new n();
        }
        __name(o, "o");
        t2.exports = o, o.prototype.strictMode = true, o.prototype.fullPath = void 0, o.prototype.selected = void 0, o.prototype.shardval = void 0, o.prototype.saveError = void 0, o.prototype.validationError = void 0, o.prototype.adhocPaths = void 0, o.prototype.removing = void 0, o.prototype.inserting = void 0, o.prototype.saving = void 0, o.prototype.version = void 0, o.prototype._id = void 0, o.prototype.ownerDocument = void 0, o.prototype.populate = void 0, o.prototype.populated = void 0, o.prototype.primitiveAtomics = void 0, o.prototype.wasPopulated = false, o.prototype.scope = void 0, o.prototype.session = null, o.prototype.pathsToScopes = null, o.prototype.cachedRequired = null;
      }, 4301: (t2, e2, r2) => {
        "use strict";
        var n = r2(9539), o = r2(2793), i = r2(3305), s = r2(5549), a = r2(608);
        t2.exports = /* @__PURE__ */ __name(function t3(e3, r3, u, c) {
          var l, f = Object.keys(r3), p = 0, h = f.length;
          if (u = u || "", !(c = c || /* @__PURE__ */ new WeakSet()).has(r3)) {
            for (c.add(r3); p < h; ) if (l = f[p++], (u || "discriminators" !== l && "base" !== l && "_applyDiscriminators" !== l && "_userProvidedOptions" !== l && "options" !== l && "tree" !== l) && !("tree" === u && null != r3 && r3.instanceOfSchema || o.has(l))) {
              if (null == e3[l]) e3[l] = r3[l];
              else if (a(r3[l])) {
                if (a(e3[l]) || (e3[l] = {}), null != r3[l]) {
                  if (r3[l].$isSingleNested && e3[l].$isMongooseDocumentArray || r3[l].$isMongooseDocumentArray && e3[l].$isSingleNested || r3[l].$isMongooseDocumentArrayElement && e3[l].$isMongooseDocumentArrayElement) continue;
                  if (r3[l].instanceOfSchema) {
                    e3[l].instanceOfSchema ? n(e3[l], r3[l].clone(), true) : e3[l] = r3[l].clone();
                    continue;
                  }
                  if (i(r3[l], "ObjectId")) {
                    e3[l] = new s(r3[l]);
                    continue;
                  }
                }
                t3(e3[l], r3[l], u ? u + "." + l : l, c);
              }
            }
            null != r3 && r3.instanceOfSchema && (e3.tree = Object.assign({}, r3.tree, e3.tree));
          }
        }, "t");
      }, 4327: (t2) => {
        "use strict";
        t2.exports = function(t3, e2, r2, n) {
          return r2 ? n ? { bsonType: e2 } : { bsonType: [e2, "null"] } : n ? { type: t3 } : { type: [t3, "null"] };
        };
      }, 4432: (t2, e2, r2) => {
        "use strict";
        function n(t3) {
          return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
            return typeof t4;
          } : function(t4) {
            return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
          }, n(t3);
        }
        __name(n, "n");
        function o(t3) {
          if (null != t3) {
            var e3 = t3["function" == typeof Symbol && Symbol.iterator || "@@iterator"], r3 = 0;
            if (e3) return e3.call(t3);
            if ("function" == typeof t3.next) return t3;
            if (!isNaN(t3.length)) return { next: /* @__PURE__ */ __name(function() {
              return t3 && r3 >= t3.length && (t3 = void 0), { value: t3 && t3[r3++], done: !t3 };
            }, "next") };
          }
          throw new TypeError(n(t3) + " is not iterable");
        }
        __name(o, "o");
        function i() {
          var t3, e3, r3 = "function" == typeof Symbol ? Symbol : {}, n2 = r3.iterator || "@@iterator", o2 = r3.toStringTag || "@@toStringTag";
          function a2(r4, n3, o3, i2) {
            var a3 = n3 && n3.prototype instanceof c2 ? n3 : c2, l3 = Object.create(a3.prototype);
            return s(l3, "_invoke", function(r5, n4, o4) {
              var i3, s2, a4, c3 = 0, l4 = o4 || [], f3 = false, p2 = { p: 0, n: 0, v: t3, a: h2, f: h2.bind(t3, 4), d: /* @__PURE__ */ __name(function(e4, r6) {
                return i3 = e4, s2 = 0, a4 = t3, p2.n = r6, u2;
              }, "d") };
              function h2(r6, n5) {
                for (s2 = r6, a4 = n5, e3 = 0; !f3 && c3 && !o5 && e3 < l4.length; e3++) {
                  var o5, i4 = l4[e3], h3 = p2.p, y2 = i4[2];
                  r6 > 3 ? (o5 = y2 === n5) && (a4 = i4[(s2 = i4[4]) ? 5 : (s2 = 3, 3)], i4[4] = i4[5] = t3) : i4[0] <= h3 && ((o5 = r6 < 2 && h3 < i4[1]) ? (s2 = 0, p2.v = n5, p2.n = i4[1]) : h3 < y2 && (o5 = r6 < 3 || i4[0] > n5 || n5 > y2) && (i4[4] = r6, i4[5] = n5, p2.n = y2, s2 = 0));
                }
                if (o5 || r6 > 1) return u2;
                throw f3 = true, n5;
              }
              __name(h2, "h");
              return function(o5, l5, y2) {
                if (c3 > 1) throw TypeError("Generator is already running");
                for (f3 && 1 === l5 && h2(l5, y2), s2 = l5, a4 = y2; (e3 = s2 < 2 ? t3 : a4) || !f3; ) {
                  i3 || (s2 ? s2 < 3 ? (s2 > 1 && (p2.n = -1), h2(s2, a4)) : p2.n = a4 : p2.v = a4);
                  try {
                    if (c3 = 2, i3) {
                      if (s2 || (o5 = "next"), e3 = i3[o5]) {
                        if (!(e3 = e3.call(i3, a4))) throw TypeError("iterator result is not an object");
                        if (!e3.done) return e3;
                        a4 = e3.value, s2 < 2 && (s2 = 0);
                      } else 1 === s2 && (e3 = i3.return) && e3.call(i3), s2 < 2 && (a4 = TypeError("The iterator does not provide a '" + o5 + "' method"), s2 = 1);
                      i3 = t3;
                    } else if ((e3 = (f3 = p2.n < 0) ? a4 : r5.call(n4, p2)) !== u2) break;
                  } catch (e4) {
                    i3 = t3, s2 = 1, a4 = e4;
                  } finally {
                    c3 = 1;
                  }
                }
                return { value: e3, done: f3 };
              };
            }(r4, o3, i2), true), l3;
          }
          __name(a2, "a");
          var u2 = {};
          function c2() {
          }
          __name(c2, "c");
          function l2() {
          }
          __name(l2, "l");
          function f2() {
          }
          __name(f2, "f");
          e3 = Object.getPrototypeOf;
          var p = [][n2] ? e3(e3([][n2]())) : (s(e3 = {}, n2, function() {
            return this;
          }), e3), h = f2.prototype = c2.prototype = Object.create(p);
          function y(t4) {
            return Object.setPrototypeOf ? Object.setPrototypeOf(t4, f2) : (t4.__proto__ = f2, s(t4, o2, "GeneratorFunction")), t4.prototype = Object.create(h), t4;
          }
          __name(y, "y");
          return l2.prototype = f2, s(h, "constructor", f2), s(f2, "constructor", l2), l2.displayName = "GeneratorFunction", s(f2, o2, "GeneratorFunction"), s(h), s(h, o2, "Generator"), s(h, n2, function() {
            return this;
          }), s(h, "toString", function() {
            return "[object Generator]";
          }), (i = /* @__PURE__ */ __name(function() {
            return { w: a2, m: y };
          }, "i"))();
        }
        __name(i, "i");
        function s(t3, e3, r3, n2) {
          var o2 = Object.defineProperty;
          try {
            o2({}, "", {});
          } catch (t4) {
            o2 = 0;
          }
          s = /* @__PURE__ */ __name(function(t4, e4, r4, n3) {
            function i2(e5, r5) {
              s(t4, e5, function(t5) {
                return this._invoke(e5, r5, t5);
              });
            }
            __name(i2, "i");
            e4 ? o2 ? o2(t4, e4, { value: r4, enumerable: !n3, configurable: !n3, writable: !n3 }) : t4[e4] = r4 : (i2("next", 0), i2("throw", 1), i2("return", 2));
          }, "s"), s(t3, e3, r3, n2);
        }
        __name(s, "s");
        function a(t3, e3) {
          var r3 = "undefined" != typeof Symbol && t3[Symbol.iterator] || t3["@@iterator"];
          if (!r3) {
            if (Array.isArray(t3) || (r3 = function(t4, e4) {
              if (t4) {
                if ("string" == typeof t4) return u(t4, e4);
                var r4 = {}.toString.call(t4).slice(8, -1);
                return "Object" === r4 && t4.constructor && (r4 = t4.constructor.name), "Map" === r4 || "Set" === r4 ? Array.from(t4) : "Arguments" === r4 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r4) ? u(t4, e4) : void 0;
              }
            }(t3)) || e3 && t3 && "number" == typeof t3.length) {
              r3 && (t3 = r3);
              var n2 = 0, o2 = /* @__PURE__ */ __name(function() {
              }, "o");
              return { s: o2, n: /* @__PURE__ */ __name(function() {
                return n2 >= t3.length ? { done: true } : { done: false, value: t3[n2++] };
              }, "n"), e: /* @__PURE__ */ __name(function(t4) {
                throw t4;
              }, "e"), f: o2 };
            }
            throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }
          var i2, s2 = true, a2 = false;
          return { s: /* @__PURE__ */ __name(function() {
            r3 = r3.call(t3);
          }, "s"), n: /* @__PURE__ */ __name(function() {
            var t4 = r3.next();
            return s2 = t4.done, t4;
          }, "n"), e: /* @__PURE__ */ __name(function(t4) {
            a2 = true, i2 = t4;
          }, "e"), f: /* @__PURE__ */ __name(function() {
            try {
              s2 || null == r3.return || r3.return();
            } finally {
              if (a2) throw i2;
            }
          }, "f") };
        }
        __name(a, "a");
        function u(t3, e3) {
          (null == e3 || e3 > t3.length) && (e3 = t3.length);
          for (var r3 = 0, n2 = Array(e3); r3 < e3; r3++) n2[r3] = t3[r3];
          return n2;
        }
        __name(u, "u");
        function c(t3, e3, r3, n2, o2, i2, s2) {
          try {
            var a2 = t3[i2](s2), u2 = a2.value;
          } catch (t4) {
            return void r3(t4);
          }
          a2.done ? e3(u2) : Promise.resolve(u2).then(n2, o2);
        }
        __name(c, "c");
        function l(t3) {
          return function() {
            var e3 = this, r3 = arguments;
            return new Promise(function(n2, o2) {
              var i2 = t3.apply(e3, r3);
              function s2(t4) {
                c(i2, n2, o2, s2, a2, "next", t4);
              }
              __name(s2, "s");
              function a2(t4) {
                c(i2, n2, o2, s2, a2, "throw", t4);
              }
              __name(a2, "a");
              s2(void 0);
            });
          };
        }
        __name(l, "l");
        var f = r2(5782);
        t2.exports = function(t3) {
          var e3 = true;
          t3.s.hooks.pre("save", false, function(t4) {
            if (this.$isSubdocument) t4();
            else {
              var e4 = this, r3 = this.$getAllSubdocs({ useCache: true });
              r3.length ? f(r3, function(t5, e5) {
                t5.$__schema.s.hooks.execPre("save", t5, function(t6) {
                  e5(t6);
                });
              }, function(r4) {
                if (e4.$__.saveOptions && (e4.$__.saveOptions.__subdocs = null), r4) return e4.$__schema.s.hooks.execPost("save:error", e4, [e4], { error: r4 }, function(e5) {
                  t4(e5);
                });
                t4();
              }) : t4();
            }
          }, null, e3), t3.s.hooks.post("save", function() {
            var t4 = l(i().m(/* @__PURE__ */ __name(function t5() {
              var e4, r3, n2, s2, u2, c2;
              return i().w(function(t6) {
                for (; ; ) switch (t6.p = t6.n) {
                  case 0:
                    if ((e4 = this.$__.removedSubdocs) && e4.length) {
                      t6.n = 1;
                      break;
                    }
                    return t6.a(2);
                  case 1:
                    r3 = [], n2 = a(e4), t6.p = 2, u2 = i().m(/* @__PURE__ */ __name(function t7() {
                      var e5;
                      return i().w(function(t8) {
                        for (; ; ) switch (t8.n) {
                          case 0:
                            e5 = s2.value, r3.push(new Promise(function(t9, r4) {
                              e5.$__schema.s.hooks.execPost("deleteOne", e5, [e5], function(e6) {
                                if (e6) return r4(e6);
                                t9();
                              });
                            }));
                          case 1:
                            return t8.a(2);
                        }
                      }, t7);
                    }, "t")), n2.s();
                  case 3:
                    if ((s2 = n2.n()).done) {
                      t6.n = 5;
                      break;
                    }
                    return t6.d(o(u2()), 4);
                  case 4:
                    t6.n = 3;
                    break;
                  case 5:
                    t6.n = 7;
                    break;
                  case 6:
                    t6.p = 6, c2 = t6.v, n2.e(c2);
                  case 7:
                    return t6.p = 7, n2.f(), t6.f(7);
                  case 8:
                    return this.$__.removedSubdocs = null, t6.n = 9, Promise.all(r3);
                  case 9:
                    return t6.a(2);
                }
              }, t5, this, [[2, 6, 7, 8]]);
            }, "t")));
            return function() {
              return t4.apply(this, arguments);
            };
          }()), t3.s.hooks.post("save", function() {
            var t4 = l(i().m(/* @__PURE__ */ __name(function t5() {
              var e4, r3, n2, s2, u2, c2, l2, f2, p = this;
              return i().w(function(t6) {
                for (; ; ) switch (t6.p = t6.n) {
                  case 0:
                    if (!this.$isSubdocument) {
                      t6.n = 1;
                      break;
                    }
                    return t6.a(2);
                  case 1:
                    if (e4 = this, (r3 = this.$getAllSubdocs({ useCache: true })).length) {
                      t6.n = 2;
                      break;
                    }
                    return t6.a(2);
                  case 2:
                    n2 = [], s2 = a(r3), t6.p = 3, c2 = i().m(/* @__PURE__ */ __name(function t7() {
                      var e5;
                      return i().w(function(t8) {
                        for (; ; ) switch (t8.n) {
                          case 0:
                            e5 = u2.value, n2.push(new Promise(function(t9, r4) {
                              e5.$__schema.s.hooks.execPost("save", e5, [e5], function(e6) {
                                if (e6) return r4(e6);
                                t9();
                              });
                            }));
                          case 1:
                            return t8.a(2);
                        }
                      }, t7);
                    }, "t")), s2.s();
                  case 4:
                    if ((u2 = s2.n()).done) {
                      t6.n = 6;
                      break;
                    }
                    return t6.d(o(c2()), 5);
                  case 5:
                    t6.n = 4;
                    break;
                  case 6:
                    t6.n = 8;
                    break;
                  case 7:
                    t6.p = 7, l2 = t6.v, s2.e(l2);
                  case 8:
                    return t6.p = 8, s2.f(), t6.f(8);
                  case 9:
                    return t6.p = 9, t6.n = 10, Promise.all(n2);
                  case 10:
                    t6.n = 12;
                    break;
                  case 11:
                    return t6.p = 11, f2 = t6.v, t6.n = 12, new Promise(function(t7, r4) {
                      p.$__schema.s.hooks.execPost("save:error", e4, [e4], { error: f2 }, function(e5) {
                        if (e5) return r4(e5);
                        t7();
                      });
                    });
                  case 12:
                    return t6.a(2);
                }
              }, t5, this, [[9, 11], [3, 7, 8, 9]]);
            }, "t")));
            return function() {
              return t4.apply(this, arguments);
            };
          }(), null, e3);
        };
      }, 4450: (t2, e2, r2) => {
        "use strict";
        function n(t3) {
          return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
            return typeof t4;
          } : function(t4) {
            return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
          }, n(t3);
        }
        __name(n, "n");
        var o = r2(9639), i = r2(5549), s = r2(2793), a = r2(2497), u = r2(9696), c = r2(3305), l = r2(1243).isMongooseArray, f = r2(608), p = r2(2789), h = r2(7930), y = r2(7291).trustedSymbol, d = r2(6353);
        function b(t3, e3, r3) {
          if (null == t3) return t3;
          if (c(t3, "Double")) return new d.Double(t3.value);
          if ("number" == typeof t3 || "string" == typeof t3 || "boolean" == typeof t3 || "bigint" == typeof t3) return t3;
          if (Array.isArray(t3)) return function(t4, e4) {
            var r4 = 0, n2 = t4.length, o2 = new Array(n2);
            for (r4 = 0; r4 < n2; ++r4) o2[r4] = b(t4[r4], e4, true);
            return o2;
          }(l(t3) ? t3.__array : t3, e3);
          if (a(t3)) {
            if (e3 && e3.retainDocuments && null != t3.$__) {
              var s2 = t3.$clone();
              return null != t3.__index && (s2.__index = t3.__index), null != t3.__parentArray && (s2.__parentArray = t3.__parentArray), s2.$__parent = t3.$__parent, s2;
            }
            return p(t3) && null != t3.$__ && null != t3._doc ? t3._doc : e3 && e3.json && "function" == typeof t3.toJSON ? t3.toJSON(e3) : t3.toObject(e3);
          }
          var y2, v, g = t3.constructor;
          if (g) switch (u(g)) {
            case "Object":
              return m(t3, e3, r3);
            case "Date":
              return new g(+t3);
            case "RegExp":
              return y2 = t3, (v = new RegExp(y2.source, y2.flags)).lastIndex !== y2.lastIndex && (v.lastIndex = y2.lastIndex), v;
          }
          return c(t3, "ObjectId") ? e3 && e3.flattenObjectIds ? t3.toJSON() : new i(t3.id) : c(t3, "Decimal128") ? e3 && e3.flattenDecimals ? t3.toJSON() : o.fromString(t3.toString()) : !g && f(t3) ? m(t3, e3, r3) : "object" === n(t3) && t3[h.schemaTypeSymbol] ? t3.clone() : e3 && e3.bson && "function" == typeof t3.toBSON ? t3 : "function" == typeof t3.valueOf ? t3.valueOf() : m(t3, e3, r3);
        }
        __name(b, "b");
        function m(t3, e3, r3) {
          var n2, o2 = e3 && e3.minimize, i2 = e3 && e3.omitUndefined, a2 = e3 && e3._seen, u2 = {};
          if (a2 && a2.has(t3)) return a2.get(t3);
          a2 && a2.set(t3, u2), y in t3 && false !== (null == e3 ? void 0 : e3.copyTrustedSymbol) && (u2[y] = t3[y]);
          for (var c2 = Object.keys(t3), l2 = c2.length, f2 = 0; f2 < l2; ++f2) {
            var p2 = c2[f2];
            if (!s.has(p2)) {
              var h2 = b(t3[p2], e3, false);
              false !== o2 && !i2 || void 0 !== h2 ? true === o2 && void 0 === h2 || (n2 || (n2 = true), u2[p2] = h2) : delete u2[p2];
            }
          }
          return o2 && !r3 ? n2 && u2 : u2;
        }
        __name(m, "m");
        t2.exports = b;
      }, 4473: (t2) => {
        "use strict";
        function e2(t3, r2) {
          var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : /* @__PURE__ */ new Set();
          if (n.has(t3)) throw new Error("Infinite subdocument loop: subdoc with _id " + t3._id + " is a parent of itself");
          var o = t3.$parent(), i = t3.$__pathRelativeToParent(void 0, false) + "." + r2;
          o.$__.activePaths.clearPath(i), o.$isSubdocument && e2(o, i, n);
        }
        __name(e2, "e");
        t2.exports = function(t3, r2, n) {
          var o = (n = n || {}).skipDocArrays, i = 0;
          if (!t3) return i;
          for (var s = 0, a = Object.keys(t3.$__.activePaths.getStatePaths("modify")); s < a.length; s++) {
            var u = a[s];
            if (o) {
              var c = t3.$__schema.path(u);
              if (c && c.$isMongooseDocumentArray) continue;
            }
            u.startsWith(r2 + ".") && (t3.$__.activePaths.clearPath(u), ++i, t3.$isSubdocument && e2(t3, u));
          }
          return i;
        };
      }, 4561: (t2, e2, r2) => {
        "use strict";
        function n(t3) {
          return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
            return typeof t4;
          } : function(t4) {
            return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
          }, n(t3);
        }
        __name(n, "n");
        function o() {
          try {
            var t3 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch (t4) {
          }
          return (o = /* @__PURE__ */ __name(function() {
            return !!t3;
          }, "o"))();
        }
        __name(o, "o");
        function i(t3) {
          return i = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t4) {
            return t4.__proto__ || Object.getPrototypeOf(t4);
          }, i(t3);
        }
        __name(i, "i");
        function s(t3, e3) {
          return s = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t4, e4) {
            return t4.__proto__ = e4, t4;
          }, s(t3, e3);
        }
        __name(s, "s");
        var a = function(t3) {
          function e3() {
            return function(t4, e4) {
              if (!(t4 instanceof e4)) throw new TypeError("Cannot call a class as a function");
            }(this, e3), function(t4, e4, r4) {
              return e4 = i(e4), function(t5, e5) {
                if (e5 && ("object" == n(e5) || "function" == typeof e5)) return e5;
                if (void 0 !== e5) throw new TypeError("Derived constructors may only return object or undefined");
                return function(t6) {
                  if (void 0 === t6) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                  return t6;
                }(t5);
              }(t4, o() ? Reflect.construct(e4, r4 || [], i(t4).constructor) : e4.apply(t4, r4));
            }(this, e3, arguments);
          }
          __name(e3, "e");
          return function(t4, e4) {
            if ("function" != typeof e4 && null !== e4) throw new TypeError("Super expression must either be null or a function");
            t4.prototype = Object.create(e4 && e4.prototype, { constructor: { value: t4, writable: true, configurable: true } }), Object.defineProperty(t4, "prototype", { writable: false }), e4 && s(t4, e4);
          }(e3, t3), r3 = e3, Object.defineProperty(r3, "prototype", { writable: false }), r3;
          var r3;
        }(r2(8879)), u = r2(5761);
        Object.defineProperty(a.prototype, "excludeIndexes", u), Object.defineProperty(a.prototype, "_id", u), t2.exports = a;
      }, 4592: (t2, e2, r2) => {
        "use strict";
        function n(t3) {
          return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
            return typeof t4;
          } : function(t4) {
            return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
          }, n(t3);
        }
        __name(n, "n");
        function o() {
          try {
            var t3 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch (t4) {
          }
          return (o = /* @__PURE__ */ __name(function() {
            return !!t3;
          }, "o"))();
        }
        __name(o, "o");
        function i(t3) {
          return i = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t4) {
            return t4.__proto__ || Object.getPrototypeOf(t4);
          }, i(t3);
        }
        __name(i, "i");
        function s(t3, e3) {
          return s = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t4, e4) {
            return t4.__proto__ = e4, t4;
          }, s(t3, e3);
        }
        __name(s, "s");
        var a = function(t3) {
          function e3() {
            return function(t4, e4) {
              if (!(t4 instanceof e4)) throw new TypeError("Cannot call a class as a function");
            }(this, e3), function(t4, e4, r4) {
              return e4 = i(e4), function(t5, e5) {
                if (e5 && ("object" == n(e5) || "function" == typeof e5)) return e5;
                if (void 0 !== e5) throw new TypeError("Derived constructors may only return object or undefined");
                return function(t6) {
                  if (void 0 === t6) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                  return t6;
                }(t5);
              }(t4, o() ? Reflect.construct(e4, r4 || [], i(t4).constructor) : e4.apply(t4, r4));
            }(this, e3, arguments);
          }
          __name(e3, "e");
          return function(t4, e4) {
            if ("function" != typeof e4 && null !== e4) throw new TypeError("Super expression must either be null or a function");
            t4.prototype = Object.create(e4 && e4.prototype, { constructor: { value: t4, writable: true, configurable: true } }), Object.defineProperty(t4, "prototype", { writable: false }), e4 && s(t4, e4);
          }(e3, t3), r3 = e3, Object.defineProperty(r3, "prototype", { writable: false }), r3;
          var r3;
        }(r2(8879)), u = r2(5761);
        Object.defineProperty(a.prototype, "enum", u), Object.defineProperty(a.prototype, "of", u), Object.defineProperty(a.prototype, "castNonArrays", u), t2.exports = a;
      }, 4625: (t2, e2, r2) => {
        "use strict";
        function n(t3) {
          return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
            return typeof t4;
          } : function(t4) {
            return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
          }, n(t3);
        }
        __name(n, "n");
        function o() {
          try {
            var t3 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch (t4) {
          }
          return (o = /* @__PURE__ */ __name(function() {
            return !!t3;
          }, "o"))();
        }
        __name(o, "o");
        function i(t3) {
          return i = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t4) {
            return t4.__proto__ || Object.getPrototypeOf(t4);
          }, i(t3);
        }
        __name(i, "i");
        function s(t3, e3) {
          return s = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t4, e4) {
            return t4.__proto__ = e4, t4;
          }, s(t3, e3);
        }
        __name(s, "s");
        var a = function(t3) {
          function e3() {
            return function(t4, e4) {
              if (!(t4 instanceof e4)) throw new TypeError("Cannot call a class as a function");
            }(this, e3), function(t4, e4, r4) {
              return e4 = i(e4), function(t5, e5) {
                if (e5 && ("object" == n(e5) || "function" == typeof e5)) return e5;
                if (void 0 !== e5) throw new TypeError("Derived constructors may only return object or undefined");
                return function(t6) {
                  if (void 0 === t6) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                  return t6;
                }(t5);
              }(t4, o() ? Reflect.construct(e4, r4 || [], i(t4).constructor) : e4.apply(t4, r4));
            }(this, e3, arguments);
          }
          __name(e3, "e");
          return function(t4, e4) {
            if ("function" != typeof e4 && null !== e4) throw new TypeError("Super expression must either be null or a function");
            t4.prototype = Object.create(e4 && e4.prototype, { constructor: { value: t4, writable: true, configurable: true } }), Object.defineProperty(t4, "prototype", { writable: false }), e4 && s(t4, e4);
          }(e3, t3), r3 = e3, Object.defineProperty(r3, "prototype", { writable: false }), r3;
          var r3;
        }(r2(8879)), u = r2(5761);
        Object.defineProperty(a.prototype, "auto", u), Object.defineProperty(a.prototype, "populate", u), t2.exports = a;
      }, 4756: (t2) => {
        "use strict";
        var e2 = /* @__PURE__ */ __name(function(t3) {
          return t3 != t3;
        }, "e");
        t2.exports = function(t3, r2) {
          return 0 === t3 && 0 === r2 ? 1 / t3 == 1 / r2 : t3 === r2 || !(!e2(t3) || !e2(r2));
        };
      }, 4829: (t2, e2, r2) => {
        "use strict";
        t2.exports = r2(8533);
      }, 4859: (t2, e2, r2) => {
        "use strict";
        var n = r2(5832).hp;
        function o(t3, e3) {
          var r3 = "undefined" != typeof Symbol && t3[Symbol.iterator] || t3["@@iterator"];
          if (!r3) {
            if (Array.isArray(t3) || (r3 = function(t4, e4) {
              if (t4) {
                if ("string" == typeof t4) return i(t4, e4);
                var r4 = {}.toString.call(t4).slice(8, -1);
                return "Object" === r4 && t4.constructor && (r4 = t4.constructor.name), "Map" === r4 || "Set" === r4 ? Array.from(t4) : "Arguments" === r4 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r4) ? i(t4, e4) : void 0;
              }
            }(t3)) || e3 && t3 && "number" == typeof t3.length) {
              r3 && (t3 = r3);
              var n2 = 0, o2 = /* @__PURE__ */ __name(function() {
              }, "o");
              return { s: o2, n: /* @__PURE__ */ __name(function() {
                return n2 >= t3.length ? { done: true } : { done: false, value: t3[n2++] };
              }, "n"), e: /* @__PURE__ */ __name(function(t4) {
                throw t4;
              }, "e"), f: o2 };
            }
            throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }
          var s2, a2 = true, u2 = false;
          return { s: /* @__PURE__ */ __name(function() {
            r3 = r3.call(t3);
          }, "s"), n: /* @__PURE__ */ __name(function() {
            var t4 = r3.next();
            return a2 = t4.done, t4;
          }, "n"), e: /* @__PURE__ */ __name(function(t4) {
            u2 = true, s2 = t4;
          }, "e"), f: /* @__PURE__ */ __name(function() {
            try {
              a2 || null == r3.return || r3.return();
            } finally {
              if (u2) throw s2;
            }
          }, "f") };
        }
        __name(o, "o");
        function i(t3, e3) {
          (null == e3 || e3 > t3.length) && (e3 = t3.length);
          for (var r3 = 0, n2 = Array(e3); r3 < e3; r3++) n2[r3] = t3[r3];
          return n2;
        }
        __name(i, "i");
        var s = r2(8920), a = r2(2400), u = r2(863), c = r2(1058), l = r2(3303)._, f = r2(8768), p = r2(3305), h = r2(7930).arrayParentSymbol, y = r2(7930).arrayPathSymbol, d = r2(7930).arraySchemaSymbol, b = r2(7930).documentArrayParent, m = Array.prototype.toString, v = { toBSON: /* @__PURE__ */ __name(function() {
          return this.toObject(l);
        }, "toBSON"), toString: /* @__PURE__ */ __name(function() {
          return m.call(this.__array.map(function(t3) {
            return null != t3 && null != t3.$__ ? t3.toString() : t3;
          }));
        }, "toString"), getArrayParent: /* @__PURE__ */ __name(function() {
          return this[h];
        }, "getArrayParent"), _cast: /* @__PURE__ */ __name(function(t3, e3, r3) {
          if (null == this[d]) return t3;
          var o2 = this[d].casterConstructor;
          if ((o2.$isMongooseDocumentArray ? f.isMongooseDocumentArray(t3) : t3 instanceof o2) || t3 && t3.constructor && t3.constructor.baseCasterConstructor === o2) return t3[b] && t3.__parentArray || (t3[b] = this[h], t3.__parentArray = this), t3.$setIndex(e3), t3;
          if (null == t3) return null;
          if ((n.isBuffer(t3) || p(t3, "ObjectId") || !f.isObject(t3)) && (t3 = { _id: t3 }), t3 && o2.discriminators && o2.schema && o2.schema.options && o2.schema.options.discriminatorKey) if ("string" == typeof t3[o2.schema.options.discriminatorKey] && o2.discriminators[t3[o2.schema.options.discriminatorKey]]) o2 = o2.discriminators[t3[o2.schema.options.discriminatorKey]];
          else {
            var i2 = c(o2.discriminators, t3[o2.schema.options.discriminatorKey]);
            i2 && (o2 = i2);
          }
          if (o2.$isMongooseDocumentArray) return o2.cast(t3, this, void 0, void 0, e3);
          var s2 = new o2(t3, this, r3, void 0, e3);
          return s2.isNew = true, s2;
        }, "_cast"), id: /* @__PURE__ */ __name(function(t3) {
          var e3, r3, n2;
          try {
            e3 = u(t3).toString();
          } catch (t4) {
            e3 = null;
          }
          var i2, s2 = o(this);
          try {
            for (s2.s(); !(i2 = s2.n()).done; ) {
              var c2 = i2.value;
              if (c2 && null != (n2 = c2.get("_id"))) {
                if (n2 instanceof a) {
                  if (r3 || (r3 = String(t3)), r3 == n2._id) return c2;
                } else if (p(t3, "ObjectId") || p(n2, "ObjectId")) {
                  if (e3 == n2) return c2;
                } else if (t3 == n2 || f.deepEqual(t3, n2)) return c2;
              }
            }
          } catch (t4) {
            s2.e(t4);
          } finally {
            s2.f();
          }
          return null;
        }, "id"), toObject: /* @__PURE__ */ __name(function(t3) {
          return [].concat(this.map(function(e3) {
            return null == e3 ? null : "function" != typeof e3.toObject ? e3 : e3.toObject(t3);
          }));
        }, "toObject"), $toObject: /* @__PURE__ */ __name(function() {
          return this.constructor.prototype.toObject.apply(this, arguments);
        }, "$toObject"), push: /* @__PURE__ */ __name(function() {
          var t3 = s.push.apply(this, arguments);
          return g(this), t3;
        }, "push"), pull: /* @__PURE__ */ __name(function() {
          var t3 = s.pull.apply(this, arguments);
          return g(this), t3;
        }, "pull"), shift: /* @__PURE__ */ __name(function() {
          var t3 = s.shift.apply(this, arguments);
          return g(this), t3;
        }, "shift"), splice: /* @__PURE__ */ __name(function() {
          var t3 = s.splice.apply(this, arguments);
          return g(this), t3;
        }, "splice"), inspect: /* @__PURE__ */ __name(function() {
          return this.toObject();
        }, "inspect"), create: /* @__PURE__ */ __name(function(t3) {
          var e3 = this[d].casterConstructor;
          if (t3 && e3.discriminators && e3.schema && e3.schema.options && e3.schema.options.discriminatorKey) if ("string" == typeof t3[e3.schema.options.discriminatorKey] && e3.discriminators[t3[e3.schema.options.discriminatorKey]]) e3 = e3.discriminators[t3[e3.schema.options.discriminatorKey]];
          else {
            var r3 = c(e3.discriminators, t3[e3.schema.options.discriminatorKey]);
            r3 && (e3 = r3);
          }
          return new e3(t3, this);
        }, "create"), notify: /* @__PURE__ */ __name(function(t3) {
          var e3 = this;
          return /* @__PURE__ */ __name(function r3(n2, o2) {
            for (var i2 = (o2 = o2 || e3).length; i2--; ) null != o2[i2] && ("save" === t3 && (n2 = e3[i2]), f.isMongooseArray(o2[i2]) ? r3(n2, o2[i2]) : o2[i2] && o2[i2].emit(t3, n2));
          }, "r");
        }, "notify"), set: /* @__PURE__ */ __name(function(t3, e3, r3) {
          var n2 = this.__array;
          if (r3) return n2[t3] = e3, this;
          var o2 = v._cast.call(this, e3, t3);
          return v._markModified.call(this, t3), n2[t3] = o2, this;
        }, "set"), _markModified: /* @__PURE__ */ __name(function(t3, e3) {
          var r3, n2 = this[h];
          if (n2) {
            if (r3 = this[y], arguments.length && (r3 = null != e3 ? r3 + "." + t3.__index + "." + e3 : r3 + "." + t3), null != r3 && r3.endsWith(".$")) return this;
            n2.markModified(r3, 0 !== arguments.length ? t3 : n2);
          }
          return this;
        }, "_markModified") };
        function g(t3) {
          var e3 = t3[h];
          if (e3 && null != e3.$__.populated) {
            var r3, n2 = o(Object.keys(e3.$__.populated).filter(function(e4) {
              return e4.startsWith(t3[y] + ".");
            }));
            try {
              var i2 = /* @__PURE__ */ __name(function() {
                var n3 = r3.value, o2 = n3.slice((t3[y] + ".").length);
                if (!Array.isArray(e3.$__.populated[n3].value)) return 1;
                e3.$__.populated[n3].value = t3.map(function(t4) {
                  return t4.$populated(o2);
                });
              }, "i");
              for (n2.s(); !(r3 = n2.n()).done; ) i2();
            } catch (t4) {
              n2.e(t4);
            } finally {
              n2.f();
            }
          }
        }
        __name(g, "g");
        t2.exports = v;
      }, 4878: (t2, e2, r2) => {
        "use strict";
        function n(t3) {
          return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
            return typeof t4;
          } : function(t4) {
            return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
          }, n(t3);
        }
        __name(n, "n");
        function o(t3, e3, r3) {
          return (e3 = function(t4) {
            var e4 = function(t5) {
              if ("object" != n(t5) || !t5) return t5;
              var e5 = t5[Symbol.toPrimitive];
              if (void 0 !== e5) {
                var r4 = e5.call(t5, "string");
                if ("object" != n(r4)) return r4;
                throw new TypeError("@@toPrimitive must return a primitive value.");
              }
              return String(t5);
            }(t4);
            return "symbol" == n(e4) ? e4 : e4 + "";
          }(e3)) in t3 ? Object.defineProperty(t3, e3, { value: r3, enumerable: true, configurable: true, writable: true }) : t3[e3] = r3, t3;
        }
        __name(o, "o");
        var i = r2(8920), s = r2(4859), a = r2(7930).arrayAtomicsSymbol, u = r2(7930).arrayAtomicsBackupSymbol, c = r2(7930).arrayParentSymbol, l = r2(7930).arrayPathSymbol, f = r2(7930).arraySchemaSymbol, p = Array.prototype.push, h = /^\d+$/;
        t2.exports = function(t3, e3, r3, n2) {
          var y = [], d = o(o(o(o(o({}, a, {}), u, void 0), l, e3), f, void 0), c, void 0);
          if (Array.isArray(t3) && (t3[l] === e3 && t3[c] === r3 && (d[a] = Object.assign({}, t3[a])), t3.forEach(function(t4) {
            p.call(y, t4);
          })), d[l] = e3, d.__array = y, r3 && r3.$__) for (d[c] = r3, d[f] = r3.$__schema.path(e3); null != d[f] && d[f].$isMongooseArray && !d[f].$isMongooseDocumentArray; ) d[f] = d[f].casterConstructor;
          var b = new Proxy(y, { get: /* @__PURE__ */ __name(function(t4, e4) {
            return "isMongooseArray" === e4 || "isMongooseArrayProxy" === e4 || "isMongooseDocumentArray" === e4 || "isMongooseDocumentArrayProxy" === e4 || (d.hasOwnProperty(e4) ? d[e4] : s.hasOwnProperty(e4) ? s[e4] : n2 && n2.virtuals && n2.virtuals.hasOwnProperty(e4) ? n2.virtuals[e4].applyGetters(void 0, t4) : i.hasOwnProperty(e4) ? i[e4] : y[e4]);
          }, "get"), set: /* @__PURE__ */ __name(function(t4, e4, r4) {
            return "string" == typeof e4 && h.test(e4) ? s.set.call(b, e4, r4, false) : d.hasOwnProperty(e4) ? d[e4] = r4 : n2 && n2.virtuals && n2.virtuals.hasOwnProperty(e4) ? n2.virtuals[e4].applySetters(r4, t4) : y[e4] = r4, true;
          }, "set") });
          return b;
        };
      }, 4957: (t2, e2, r2) => {
        "use strict";
        function n(t3) {
          return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
            return typeof t4;
          } : function(t4) {
            return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
          }, n(t3);
        }
        __name(n, "n");
        function o(t3, e3) {
          var r3 = Object.keys(t3);
          if (Object.getOwnPropertySymbols) {
            var n2 = Object.getOwnPropertySymbols(t3);
            e3 && (n2 = n2.filter(function(e4) {
              return Object.getOwnPropertyDescriptor(t3, e4).enumerable;
            })), r3.push.apply(r3, n2);
          }
          return r3;
        }
        __name(o, "o");
        function i(t3) {
          for (var e3 = 1; e3 < arguments.length; e3++) {
            var r3 = null != arguments[e3] ? arguments[e3] : {};
            e3 % 2 ? o(Object(r3), true).forEach(function(e4) {
              s(t3, e4, r3[e4]);
            }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t3, Object.getOwnPropertyDescriptors(r3)) : o(Object(r3)).forEach(function(e4) {
              Object.defineProperty(t3, e4, Object.getOwnPropertyDescriptor(r3, e4));
            });
          }
          return t3;
        }
        __name(i, "i");
        function s(t3, e3, r3) {
          return (e3 = function(t4) {
            var e4 = function(t5) {
              if ("object" != n(t5) || !t5) return t5;
              var e5 = t5[Symbol.toPrimitive];
              if (void 0 !== e5) {
                var r4 = e5.call(t5, "string");
                if ("object" != n(r4)) return r4;
                throw new TypeError("@@toPrimitive must return a primitive value.");
              }
              return String(t5);
            }(t4);
            return "symbol" == n(e4) ? e4 : e4 + "";
          }(e3)) in t3 ? Object.defineProperty(t3, e3, { value: r3, enumerable: true, configurable: true, writable: true }) : t3[e3] = r3, t3;
        }
        __name(s, "s");
        var a = r2(7160), u = r2(5268);
        t2.exports = l, l.middlewareFunctions = ["deleteOne", "save", "validate", "remove", "updateOne", "init"];
        var c = new Set(l.middlewareFunctions.flatMap(function(t3) {
          return [t3, "$__".concat(t3)];
        }));
        function l(t3, e3, r3) {
          var n2 = { useErrorHandlers: true, numCallbackParams: 1, nullResultByDefault: true, contextParameter: true }, o2 = (r3 = r3 || {}).decorateDoc ? t3 : t3.prototype;
          t3.$appliedHooks = true;
          for (var s2 = 0, f = Object.keys(e3.paths); s2 < f.length; s2++) {
            var p = f[s2], h = e3.paths[p], y = null;
            if (h.$isSingleNested) y = h.caster;
            else {
              if (!h.$isMongooseDocumentArray) continue;
              y = h.Constructor;
            }
            if (!y.$appliedHooks && (l(y, h.schema, i(i({}, r3), {}, { isChildSchema: true })), null != y.discriminators)) for (var d = 0, b = Object.keys(y.discriminators); d < b.length; d++) {
              var m = b[d];
              l(y.discriminators[m], y.discriminators[m].schema, r3);
            }
          }
          var v = e3.s.hooks.filter(function(t4) {
            return "updateOne" === t4.name || "deleteOne" === t4.name ? !!t4.document : "remove" === t4.name || "init" === t4.name ? null == t4.document || !!t4.document : null == t4.query && null == t4.document || false !== t4.document;
          }).filter(function(t4) {
            return !e3.methods[t4.name] || !t4.fn[a.builtInMiddleware];
          });
          t3._middleware = v, o2.$__originalValidate = o2.$__originalValidate || o2.$__validate;
          for (var g = 0, _ = r3 && r3.isChildSchema ? ["save", "validate", "deleteOne"] : ["save", "validate"]; g < _.length; g++) {
            var w = _[g], O = "validate" === w ? "$__originalValidate" : "$__".concat(w), S = v.createWrapper(w, o2[O], null, n2);
            o2["$__".concat(w)] = S;
          }
          o2.$__init = v.createWrapperSync("init", o2.$__init, null, n2);
          for (var $ = Object.keys(e3.methods), j = Object.assign({}, n2, { checkForPromise: true }), P = function() {
            var e4 = E[A];
            if (c.has(e4)) return 0;
            if (!v.hasHooks(e4)) return 0;
            var r4 = o2[e4];
            o2[e4] = function() {
              var r5 = this, n3 = Array.prototype.slice.call(arguments), o3 = n3.slice(-1).pop(), i2 = "function" == typeof o3 ? n3.slice(0, n3.length - 1) : n3;
              return u(o3, function(t4) {
                return r5["$__".concat(e4)].apply(r5, i2.concat([t4]));
              }, t3.events);
            }, o2["$__".concat(e4)] = v.createWrapper(e4, r4, null, j);
          }, A = 0, E = $; A < E.length; A++) P();
        }
        __name(l, "l");
      }, 5022: (t2, e2, r2) => {
        "use strict";
        var n = r2(6426), o = r2(7160), i = r2(608), s = r2(8768);
        function a(t3, e3) {
          if (e3 && e3.default) {
            var r3 = e3.default;
            Array.isArray(r3) && 0 === r3.length ? e3.default = Array : !e3.shared && i(r3) && 0 === Object.keys(r3).length && (e3.default = function() {
              return {};
            });
          }
          n.call(this, t3, e3, "Mixed"), this[o.schemaMixedSymbol] = true;
        }
        __name(a, "a");
        a.schemaName = "Mixed", a.defaultOptions = {}, a.prototype = Object.create(n.prototype), a.prototype.constructor = a, a.get = n.get, a.set = n.set, a.setters = [], a.prototype.cast = function(t3) {
          return t3 instanceof Error ? s.errorToPOJO(t3) : t3;
        }, a.prototype.castForQuery = function(t3, e3) {
          return e3;
        }, a.prototype.toJSONSchema = function(t3) {
          return {};
        }, t2.exports = a;
      }, 5098: (t2, e2, r2) => {
        "use strict";
        function n(t3) {
          return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
            return typeof t4;
          } : function(t4) {
            return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
          }, n(t3);
        }
        __name(n, "n");
        function o(t3, e3) {
          var r3 = Object.keys(t3);
          if (Object.getOwnPropertySymbols) {
            var n2 = Object.getOwnPropertySymbols(t3);
            e3 && (n2 = n2.filter(function(e4) {
              return Object.getOwnPropertyDescriptor(t3, e4).enumerable;
            })), r3.push.apply(r3, n2);
          }
          return r3;
        }
        __name(o, "o");
        function i(t3) {
          for (var e3 = 1; e3 < arguments.length; e3++) {
            var r3 = null != arguments[e3] ? arguments[e3] : {};
            e3 % 2 ? o(Object(r3), true).forEach(function(e4) {
              s(t3, e4, r3[e4]);
            }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t3, Object.getOwnPropertyDescriptors(r3)) : o(Object(r3)).forEach(function(e4) {
              Object.defineProperty(t3, e4, Object.getOwnPropertyDescriptor(r3, e4));
            });
          }
          return t3;
        }
        __name(i, "i");
        function s(t3, e3, r3) {
          return (e3 = function(t4) {
            var e4 = function(t5) {
              if ("object" != n(t5) || !t5) return t5;
              var e5 = t5[Symbol.toPrimitive];
              if (void 0 !== e5) {
                var r4 = e5.call(t5, "string");
                if ("object" != n(r4)) return r4;
                throw new TypeError("@@toPrimitive must return a primitive value.");
              }
              return String(t5);
            }(t4);
            return "symbol" == n(e4) ? e4 : e4 + "";
          }(e3)) in t3 ? Object.defineProperty(t3, e3, { value: r3, enumerable: true, configurable: true, writable: true }) : t3[e3] = r3, t3;
        }
        __name(s, "s");
        var a, u = r2(3609), c = r2(3550).EventEmitter, l = r2(3441), f = r2(7494), p = r2(6426), h = r2(5335), y = r2(8499), d = r2(5558).G, b = r2(4327), m = r2(1469), v = r2(9604), g = r2(7910), _ = r2(1313), w = r2(3303)._, O = r2(1793), S = r2(8768), $ = r2(5537);
        function j(t3, e3, r3) {
          if (t3.options.timeseries) throw new $(e3, "timeseries");
          var n2 = j.defaultOptions && j.defaultOptions._id;
          null != n2 && ((r3 = r3 || {})._id = n2), t3 = _(t3, r3), this.caster = P(t3, null, r3), this.caster.path = e3, this.caster.prototype.$basePath = e3, this.schema = t3, this.$isSingleNested = true, this.base = t3.base, p.call(this, e3, r3, "Embedded");
        }
        __name(j, "j");
        function P(t3, e3, n2) {
          a || (a = r2(9380));
          var o2 = /* @__PURE__ */ __name(function(t4, e4, r3) {
            this.$__parent = r3, a.apply(this, arguments), null != r3 && this.$session(r3.$session());
          }, "o");
          t3._preCompile();
          var i2 = null != e3 ? e3.prototype : a.prototype;
          for (var s2 in (o2.prototype = Object.create(i2)).$__setSchema(t3), o2.prototype.constructor = o2, o2.prototype.$__schemaTypeOptions = n2, o2.$__required = null == n2 ? void 0 : n2.required, o2.base = t3.base, o2.schema = t3, o2.$isSingleNested = true, o2.events = new c(), o2.prototype.toBSON = function() {
            return this.toObject(w);
          }, t3.methods) o2.prototype[s2] = t3.methods[s2];
          for (var u2 in t3.statics) o2[u2] = t3.statics[u2];
          for (var l2 in c.prototype) o2[l2] = c.prototype[l2];
          return o2;
        }
        __name(P, "P");
        t2.exports = j, j.prototype = Object.create(p.prototype), j.prototype.constructor = j, j.prototype.OptionsConstructor = f;
        var A = i({}, p.prototype.$conditionalHandlers);
        A.$geoWithin = function(t3, e3) {
          return { $geometry: this.castForQuery(null, t3.$geometry, e3) };
        }, A.$near = A.$nearSphere = v.cast$near, A.$within = A.$geoWithin = v.cast$within, A.$geoIntersects = v.cast$geoIntersects, A.$minDistance = d, A.$maxDistance = d, A.$exists = y, Object.defineProperty(j.prototype, "$conditionalHandlers", { enumerable: false, value: A }), j.prototype.cast = function(t3, e3, r3, o2, i2) {
          if (t3 && t3.$isSingleNested && t3.parent === e3) return t3;
          if (null != t3 && ("object" !== n(t3) || Array.isArray(t3))) throw new l(this.path, t3);
          var s2, a2 = this.schema.path(this.schema.options.discriminatorKey), u2 = null == a2 ? null : a2.getDefault(e3), c2 = g(this.caster, t3, u2), f2 = e3 && e3.$__ && e3.$__.selected, p2 = this.path, y2 = null == f2 ? null : Object.keys(f2).reduce(function(t4, e4) {
            return e4.startsWith(p2 + ".") && ((t4 = t4 || {})[e4.substring(p2.length + 1)] = f2[e4]), t4;
          }, null);
          if (!r3) return i2 = Object.assign({}, i2, { priorDoc: o2 }), 0 === Object.keys(t3).length ? new c2({}, y2, e3, void 0, i2) : new c2(t3, y2, e3, void 0, i2);
          delete (s2 = new c2(void 0, y2, e3, false, { defaults: false })).$__.defaults, s2.$init(t3);
          var d2 = O(y2);
          return h(s2, y2, d2), s2;
        }, j.prototype.castForQuery = function(t3, e3, r3, n2) {
          var o2;
          if (null != t3) {
            if (!(o2 = this.$conditionalHandlers[t3])) throw new Error("Can't use " + t3);
            return o2.call(this, e3);
          }
          if (null == e3) return e3;
          var i2 = g(this.caster, e3);
          if (e3 instanceof i2) return e3;
          this.options.runSetters && (e3 = this._applySetters(e3, r3));
          var s2 = null != n2 && null != n2.strict ? n2.strict : void 0;
          try {
            e3 = new i2(e3, s2);
          } catch (t4) {
            if (!(t4 instanceof u)) throw new u("Embedded", e3, this.path, t4, this);
            throw t4;
          }
          return e3;
        }, j.prototype.doValidate = function(t3, e3, r3, n2) {
          var o2 = g(this.caster, t3);
          if (!t3 || t3 instanceof o2 || (t3 = new o2(t3, null, null != r3 && null != r3.$__ ? r3 : null)), n2 && n2.skipSchemaValidators) return t3 ? t3.validate().then(function() {
            return e3(null);
          }, function(t4) {
            return e3(t4);
          }) : e3(null);
          p.prototype.doValidate.call(this, t3, function(r4) {
            return r4 ? e3(r4) : t3 ? void t3.validate().then(function() {
              return e3(null);
            }, function(t4) {
              return e3(t4);
            }) : e3(null);
          }, r3, n2);
        }, j.prototype.doValidateSync = function(t3, e3, r3) {
          if (!r3 || !r3.skipSchemaValidators) {
            var n2 = p.prototype.doValidateSync.call(this, t3, e3);
            if (n2) return n2;
          }
          if (t3) return t3.validateSync();
        }, j.prototype.discriminator = function(t3, e3, r3) {
          r3 = r3 || {};
          var n2 = S.isPOJO(r3) ? r3.value : r3, o2 = "boolean" != typeof r3.clone || r3.clone;
          return e3.instanceOfSchema && o2 && (e3 = e3.clone()), e3 = m(this.caster, t3, e3, n2, null, null, r3.overwriteExisting), this.caster.discriminators[t3] = P(e3, this.caster), this.caster.discriminators[t3];
        }, j.defaultOptions = {}, j.set = p.set, j.setters = [], j.get = p.get, j.prototype.toJSON = function() {
          return { path: this.path, options: this.options };
        }, j.prototype.clone = function() {
          var t3 = new this.constructor(this.schema, this.path, i(i({}, this.options), {}, { _skipApplyDiscriminators: true }));
          return t3.validators = this.validators.slice(), void 0 !== this.requiredValidator && (t3.requiredValidator = this.requiredValidator), t3.caster.discriminators = Object.assign({}, this.caster.discriminators), t3._appliedDiscriminators = this._appliedDiscriminators, t3;
        }, j.prototype.toJSONSchema = function(t3) {
          var e3 = this.options.required && "function" != typeof this.options.required;
          return i(i({}, this.schema.toJSONSchema(t3)), b("object", "object", null == t3 ? void 0 : t3.useBsonType, e3));
        };
      }, 5110: (t2) => {
        "use strict";
        var e2 = /* @__PURE__ */ new Set(["$ref", "$id", "$db"]);
        t2.exports = function(t3) {
          return "$" === t3[0] && !e2.has(t3);
        };
      }, 5152: (t2, e2, r2) => {
        "use strict";
        var n = r2(3703), o = r2(7425);
        t2.exports = /* @__PURE__ */ __name(function t3(e3, r3, i) {
          for (var s = (i = i || {}).typeOnly, a = Array.isArray(r3) ? r3 : -1 === r3.indexOf(".") ? [r3] : r3.split("."), u = null, c = "adhocOrUndefined", l = o(e3.schema, e3.get(e3.schema.options.discriminatorKey)) || e3.schema, f = 0; f < a.length; ++f) {
            var p = a.slice(0, f + 1).join(".");
            if (null != (u = l.path(p))) {
              if ("Mixed" === u.instance) return s ? "real" : u;
              if (c = l.pathType(p), (u.$isSingleNested || u.$isMongooseDocumentArrayElement) && null != u.schema.discriminators) {
                var h = u.schema.discriminators, y = e3.get(p + "." + n(u, "schema.options.discriminatorKey"));
                if (null == y || null == h[y]) continue;
                var d = a.slice(f + 1).join(".");
                return t3(e3.get(p), d, i);
              }
            } else c = "adhocOrUndefined";
          }
          return s ? c : u;
        }, "t");
      }, 5188: (t2, e2, r2) => {
        "use strict";
        var n = r2(7300);
        t2.exports = function(t3, e3) {
          if (null == t3) return false;
          if ("_id" === e3) return 0 === t3._id;
          for (var r3 = null, o = 0, i = Object.keys(t3); o < i.length; o++) {
            var s = i[o];
            if (n(t3[s])) {
              r3 = 1 === t3[e3] ? "inclusive" : "exclusive";
              break;
            }
          }
          return "inclusive" === r3 ? 1 !== t3[e3] : "exclusive" === r3 && 0 === t3[e3];
        };
      }, 5268: (t2, e2, r2) => {
        "use strict";
        var n = r2(2746), o = Symbol("mongoose#emitted");
        t2.exports = function(t3, e3, i, s) {
          if ("function" == typeof t3) try {
            return e3(function(e4) {
              if (null == e4) t3.apply(this, arguments);
              else {
                null != i && null != i.listeners && i.listeners("error").length > 0 && !e4[o] && (e4[o] = true, i.emit("error", e4));
                try {
                  t3(e4);
                } catch (e5) {
                  return n(function() {
                    throw e5;
                  });
                }
              }
            });
          } catch (e4) {
            return null != i && null != i.listeners && i.listeners("error").length > 0 && !e4[o] && (e4[o] = true, i.emit("error", e4)), t3(e4);
          }
          return new (s = s || r2.g.Promise)(function(t4, r3) {
            e3(function(e4, n2) {
              return null != e4 ? (null != i && null != i.listeners && i.listeners("error").length > 0 && !e4[o] && (e4[o] = true, i.emit("error", e4)), r3(e4)) : arguments.length > 2 ? t4(Array.prototype.slice.call(arguments, 1)) : void t4(n2);
            });
          });
        };
      }, 5289: (t2) => {
        "use strict";
        t2.exports = function(t3) {
          switch (t3) {
            case "p":
              t3 = "primary";
              break;
            case "pp":
              t3 = "primaryPreferred";
              break;
            case "s":
              t3 = "secondary";
              break;
            case "sp":
              t3 = "secondaryPreferred";
              break;
            case "n":
              t3 = "nearest";
          }
          return t3;
        };
      }, 5335: (t2, e2, r2) => {
        "use strict";
        var n = r2(1091);
        function o(t3, e3, r3) {
          t3.$__.activePaths.default(e3), !r3 && t3.$isSubdocument && t3.$isSingleNested && null != t3.$parent() && t3.$parent().$__.activePaths.default(t3.$__pathRelativeToParent(e3));
        }
        __name(o, "o");
        t2.exports = function(t3, e3, r3, i, s, a, u) {
          for (var c = Object.keys(t3.$__schema.paths), l = c.length, f = u && u.skipParentChangeTracking, p = 0; p < l; ++p) {
            var h = void 0, y = "", d = c[p];
            if ("_id" !== d || !t3.$__.skipId) {
              var b = t3.$__schema.paths[d], m = b.splitPath(), v = m.length;
              if ("$*" !== m[v - 1]) for (var g = false, _ = t3._doc, w = 0; w < v && null != _; ++w) {
                var O = m[w];
                if (y += (y.length ? "." : "") + O, true === r3) {
                  if (y in e3) break;
                } else if (false === r3 && e3 && !g) {
                  var S = b.$isSingleNested || b.$isMongooseDocumentArray;
                  if (y in e3 && !n(e3[y]) || w === v - 1 && S && null != i && i[y]) g = true;
                  else if (null != i && !i[y]) break;
                }
                if (w === v - 1) {
                  if (void 0 !== _[O]) break;
                  if (null != s) {
                    if ("function" == typeof b.defaultValue) {
                      if (!b.defaultValue.$runBeforeSetters && s) break;
                      if (b.defaultValue.$runBeforeSetters && !s) break;
                    } else if (!s) continue;
                  }
                  if (a && a[y]) break;
                  if (e3 && null !== r3) {
                    if (true === r3) {
                      if (d in e3) continue;
                      try {
                        h = b.getDefault(t3, false);
                      } catch (e4) {
                        t3.invalidate(d, e4);
                        break;
                      }
                      void 0 !== h && (_[O] = h, o(t3, d, f));
                    } else if (g) {
                      try {
                        h = b.getDefault(t3, false);
                      } catch (e4) {
                        t3.invalidate(d, e4);
                        break;
                      }
                      void 0 !== h && (_[O] = h, o(t3, d, f));
                    }
                  } else {
                    try {
                      h = b.getDefault(t3, false);
                    } catch (e4) {
                      t3.invalidate(d, e4);
                      break;
                    }
                    void 0 !== h && (_[O] = h, o(t3, d, f));
                  }
                } else _ = _[O];
              }
            }
          }
        };
      }, 5346: (t2) => {
        "use strict";
        t2.exports = function(t3, e2, r2) {
          for (var n = e2[0], o = r2, i = t3, s = 0; s < e2.length - 1; ++s) {
            var a = o.path(n);
            if (a && a.schema) {
              var u = i.get(n);
              if (o = a.schema, n = e2[s + 1], Array.isArray(u) && !isNaN(n) && (u = u[n], n = ""), null == u) break;
              i = u;
            } else n += n.length ? "." + e2[s + 1] : e2[s + 1];
          }
          return i;
        };
      }, 5413: (t2, e2, r2) => {
        "use strict";
        var n = r2(3305), o = r2(2402);
        t2.exports = function(t3) {
          if (null == t3) return t3;
          if ("" === t3) return null;
          var e3 = n(t3, "Long") ? t3.toNumber() : Number(t3);
          if (e3 === (0 | e3) && e3 >= -2147483648 && e3 <= 2147483647) return e3;
          o.ok(false);
        };
      }, 5477: (t2, e2, r2) => {
        "use strict";
        var n = r2(2354), o = r2(3279), i = r2(3123), s = r2(3388);
        t2.exports = s || n.call(i, o);
      }, 5484: (t2) => {
        "use strict";
        function e2(t3) {
          return e2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
            return typeof t4;
          } : function(t4) {
            return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
          }, e2(t3);
        }
        __name(e2, "e");
        t2.exports = function() {
          if ("function" != typeof Symbol || "function" != typeof Object.getOwnPropertySymbols) return false;
          if ("symbol" === e2(Symbol.iterator)) return true;
          var t3 = {}, r2 = Symbol("test"), n = Object(r2);
          if ("string" == typeof r2) return false;
          if ("[object Symbol]" !== Object.prototype.toString.call(r2)) return false;
          if ("[object Symbol]" !== Object.prototype.toString.call(n)) return false;
          for (var o in t3[r2] = 42, t3) return false;
          if ("function" == typeof Object.keys && 0 !== Object.keys(t3).length) return false;
          if ("function" == typeof Object.getOwnPropertyNames && 0 !== Object.getOwnPropertyNames(t3).length) return false;
          var i = Object.getOwnPropertySymbols(t3);
          if (1 !== i.length || i[0] !== r2) return false;
          if (!Object.prototype.propertyIsEnumerable.call(t3, r2)) return false;
          if ("function" == typeof Object.getOwnPropertyDescriptor) {
            var s = Object.getOwnPropertyDescriptor(t3, r2);
            if (42 !== s.value || true !== s.enumerable) return false;
          }
          return true;
        };
      }, 5497: (t2, e2, r2) => {
        "use strict";
        var n = r2(8260);
        t2.exports = function(t3) {
          if ("TopologyDescription" !== n(t3)) return false;
          var e3 = Array.from(t3.servers.values());
          return e3.length > 0 && e3.every(function(t4) {
            return t4.error && -1 !== t4.error.message.indexOf("Client network socket disconnected before secure TLS connection was established");
          });
        };
      }, 5510: (t2, e2, r2) => {
        "use strict";
        function n(t3) {
          return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
            return typeof t4;
          } : function(t4) {
            return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
          }, n(t3);
        }
        __name(n, "n");
        var o = "undefined" != typeof Symbol && Symbol, i = r2(5484);
        t2.exports = function() {
          return "function" == typeof o && "function" == typeof Symbol && "symbol" === n(o("foo")) && "symbol" === n(Symbol("bar")) && i();
        };
      }, 5537: (t2, e2, r2) => {
        "use strict";
        function n(t3) {
          return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
            return typeof t4;
          } : function(t4) {
            return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
          }, n(t3);
        }
        __name(n, "n");
        function o() {
          try {
            var t3 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch (t4) {
          }
          return (o = /* @__PURE__ */ __name(function() {
            return !!t3;
          }, "o"))();
        }
        __name(o, "o");
        function i(t3) {
          return i = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t4) {
            return t4.__proto__ || Object.getPrototypeOf(t4);
          }, i(t3);
        }
        __name(i, "i");
        function s(t3, e3) {
          return s = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t4, e4) {
            return t4.__proto__ = e4, t4;
          }, s(t3, e3);
        }
        __name(s, "s");
        var a = function(t3) {
          function e3(t4, r4) {
            return function(t5, e4) {
              if (!(t5 instanceof e4)) throw new TypeError("Cannot call a class as a function");
            }(this, e3), function(t5, e4, r5) {
              return e4 = i(e4), function(t6, e5) {
                if (e5 && ("object" == n(e5) || "function" == typeof e5)) return e5;
                if (void 0 !== e5) throw new TypeError("Derived constructors may only return object or undefined");
                return function(t7) {
                  if (void 0 === t7) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                  return t7;
                }(t6);
              }(t5, o() ? Reflect.construct(e4, r5 || [], i(t5).constructor) : e4.apply(t5, r5));
            }(this, e3, ['Cannot create use schema for property "'.concat(t4, '" because the schema has the ').concat(r4, " option enabled.")]);
          }
          __name(e3, "e");
          return function(t4, e4) {
            if ("function" != typeof e4 && null !== e4) throw new TypeError("Super expression must either be null or a function");
            t4.prototype = Object.create(e4 && e4.prototype, { constructor: { value: t4, writable: true, configurable: true } }), Object.defineProperty(t4, "prototype", { writable: false }), e4 && s(t4, e4);
          }(e3, t3), r3 = e3, Object.defineProperty(r3, "prototype", { writable: false }), r3;
          var r3;
        }(r2(8213));
        Object.defineProperty(a.prototype, "name", { value: "InvalidSchemaOptionError" }), t2.exports = a;
      }, 5549: (t2, e2, r2) => {
        "use strict";
        var n = r2(6353).ObjectId, o = r2(7930).objectIdSymbol;
        Object.defineProperty(n.prototype, "_id", { enumerable: false, configurable: true, get: /* @__PURE__ */ __name(function() {
          return this;
        }, "get") }), n.prototype.hasOwnProperty("valueOf") || (n.prototype.valueOf = function() {
          return this.toString();
        }), n.prototype[o] = true, t2.exports = n;
      }, 5558: (t2, e2, r2) => {
        "use strict";
        var n = r2(3660);
        function o(t3) {
          return n.cast()(t3);
        }
        __name(o, "o");
        e2.G = o, e2.p = /* @__PURE__ */ __name(function t3(e3, r3) {
          e3.forEach(function(n2, i) {
            Array.isArray(n2) ? t3(n2, r3) : e3[i] = o.call(r3, n2);
          });
        }, "t");
      }, 5678: (t2, e2, r2) => {
        "use strict";
        t2.exports = r2(2914);
      }, 5761: (t2) => {
        "use strict";
        t2.exports = Object.freeze({ enumerable: true, configurable: true, writable: true, value: void 0 });
      }, 5782: (t2) => {
        "use strict";
        function e2(t3, e3) {
          (null == e3 || e3 > t3.length) && (e3 = t3.length);
          for (var r2 = 0, n = Array(e3); r2 < e3; r2++) n[r2] = t3[r2];
          return n;
        }
        __name(e2, "e");
        t2.exports = function(t3, r2, n) {
          if (0 === t3.length) return n();
          var o, i = t3.length, s = null, a = function(t4, r3) {
            var n2 = "undefined" != typeof Symbol && t4[Symbol.iterator] || t4["@@iterator"];
            if (!n2) {
              if (Array.isArray(t4) || (n2 = function(t5, r4) {
                if (t5) {
                  if ("string" == typeof t5) return e2(t5, r4);
                  var n3 = {}.toString.call(t5).slice(8, -1);
                  return "Object" === n3 && t5.constructor && (n3 = t5.constructor.name), "Map" === n3 || "Set" === n3 ? Array.from(t5) : "Arguments" === n3 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n3) ? e2(t5, r4) : void 0;
                }
              }(t4)) || r3 && t4 && "number" == typeof t4.length) {
                n2 && (t4 = n2);
                var o2 = 0, i2 = /* @__PURE__ */ __name(function() {
                }, "i");
                return { s: i2, n: /* @__PURE__ */ __name(function() {
                  return o2 >= t4.length ? { done: true } : { done: false, value: t4[o2++] };
                }, "n"), e: /* @__PURE__ */ __name(function(t5) {
                  throw t5;
                }, "e"), f: i2 };
              }
              throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
            }
            var s2, a2 = true, u = false;
            return { s: /* @__PURE__ */ __name(function() {
              n2 = n2.call(t4);
            }, "s"), n: /* @__PURE__ */ __name(function() {
              var t5 = n2.next();
              return a2 = t5.done, t5;
            }, "n"), e: /* @__PURE__ */ __name(function(t5) {
              u = true, s2 = t5;
            }, "e"), f: /* @__PURE__ */ __name(function() {
              try {
                a2 || null == n2.return || n2.return();
              } finally {
                if (u) throw s2;
              }
            }, "f") };
          }(t3);
          try {
            for (a.s(); !(o = a.n()).done; ) r2(o.value, function(t4) {
              if (null == s) return null != t4 ? n(s = t4) : --i <= 0 ? n() : void 0;
            });
          } catch (s2) {
            a.e(s2);
          } finally {
            a.f();
          }
        };
      }, 5804: (t2, e2, r2) => {
        "use strict";
        var n = r2(2354), o = r2(3279), i = r2(5477);
        t2.exports = function() {
          return i(n, o, arguments);
        };
      }, 5807: (t2) => {
        "use strict";
        t2.exports = Object.getOwnPropertyDescriptor;
      }, 5825: (t2, e2, r2) => {
        "use strict";
        var n = r2(8093);
        t2.exports = n.getPrototypeOf || null;
      }, 5832: (t2, e2, r2) => {
        "use strict";
        function n(t3) {
          return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
            return typeof t4;
          } : function(t4) {
            return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
          }, n(t3);
        }
        __name(n, "n");
        var o = r2(6775), i = r2(2486), s = "function" == typeof Symbol && "function" == typeof Symbol.for ? Symbol.for("nodejs.util.inspect.custom") : null;
        e2.hp = c, e2.IS = 50;
        var a = 2147483647;
        function u(t3) {
          if (t3 > a) throw new RangeError('The value "' + t3 + '" is invalid for option "size"');
          var e3 = new Uint8Array(t3);
          return Object.setPrototypeOf(e3, c.prototype), e3;
        }
        __name(u, "u");
        function c(t3, e3, r3) {
          if ("number" == typeof t3) {
            if ("string" == typeof e3) throw new TypeError('The "string" argument must be of type string. Received type number');
            return p(t3);
          }
          return l(t3, e3, r3);
        }
        __name(c, "c");
        function l(t3, e3, r3) {
          if ("string" == typeof t3) return function(t4, e4) {
            if ("string" == typeof e4 && "" !== e4 || (e4 = "utf8"), !c.isEncoding(e4)) throw new TypeError("Unknown encoding: " + e4);
            var r4 = 0 | b(t4, e4), n2 = u(r4), o3 = n2.write(t4, e4);
            return o3 !== r4 && (n2 = n2.slice(0, o3)), n2;
          }(t3, e3);
          if (ArrayBuffer.isView(t3)) return function(t4) {
            if (V(t4, Uint8Array)) {
              var e4 = new Uint8Array(t4);
              return y(e4.buffer, e4.byteOffset, e4.byteLength);
            }
            return h(t4);
          }(t3);
          if (null == t3) throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + n(t3));
          if (V(t3, ArrayBuffer) || t3 && V(t3.buffer, ArrayBuffer)) return y(t3, e3, r3);
          if ("undefined" != typeof SharedArrayBuffer && (V(t3, SharedArrayBuffer) || t3 && V(t3.buffer, SharedArrayBuffer))) return y(t3, e3, r3);
          if ("number" == typeof t3) throw new TypeError('The "value" argument must not be of type number. Received type number');
          var o2 = t3.valueOf && t3.valueOf();
          if (null != o2 && o2 !== t3) return c.from(o2, e3, r3);
          var i2 = function(t4) {
            if (c.isBuffer(t4)) {
              var e4 = 0 | d(t4.length), r4 = u(e4);
              return 0 === r4.length || t4.copy(r4, 0, 0, e4), r4;
            }
            return void 0 !== t4.length ? "number" != typeof t4.length || q(t4.length) ? u(0) : h(t4) : "Buffer" === t4.type && Array.isArray(t4.data) ? h(t4.data) : void 0;
          }(t3);
          if (i2) return i2;
          if ("undefined" != typeof Symbol && null != Symbol.toPrimitive && "function" == typeof t3[Symbol.toPrimitive]) return c.from(t3[Symbol.toPrimitive]("string"), e3, r3);
          throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + n(t3));
        }
        __name(l, "l");
        function f(t3) {
          if ("number" != typeof t3) throw new TypeError('"size" argument must be of type number');
          if (t3 < 0) throw new RangeError('The value "' + t3 + '" is invalid for option "size"');
        }
        __name(f, "f");
        function p(t3) {
          return f(t3), u(t3 < 0 ? 0 : 0 | d(t3));
        }
        __name(p, "p");
        function h(t3) {
          for (var e3 = t3.length < 0 ? 0 : 0 | d(t3.length), r3 = u(e3), n2 = 0; n2 < e3; n2 += 1) r3[n2] = 255 & t3[n2];
          return r3;
        }
        __name(h, "h");
        function y(t3, e3, r3) {
          if (e3 < 0 || t3.byteLength < e3) throw new RangeError('"offset" is outside of buffer bounds');
          if (t3.byteLength < e3 + (r3 || 0)) throw new RangeError('"length" is outside of buffer bounds');
          var n2;
          return n2 = void 0 === e3 && void 0 === r3 ? new Uint8Array(t3) : void 0 === r3 ? new Uint8Array(t3, e3) : new Uint8Array(t3, e3, r3), Object.setPrototypeOf(n2, c.prototype), n2;
        }
        __name(y, "y");
        function d(t3) {
          if (t3 >= a) throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + a.toString(16) + " bytes");
          return 0 | t3;
        }
        __name(d, "d");
        function b(t3, e3) {
          if (c.isBuffer(t3)) return t3.length;
          if (ArrayBuffer.isView(t3) || V(t3, ArrayBuffer)) return t3.byteLength;
          if ("string" != typeof t3) throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' + n(t3));
          var r3 = t3.length, o2 = arguments.length > 2 && true === arguments[2];
          if (!o2 && 0 === r3) return 0;
          for (var i2 = false; ; ) switch (e3) {
            case "ascii":
            case "latin1":
            case "binary":
              return r3;
            case "utf8":
            case "utf-8":
              return C(t3).length;
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le":
              return 2 * r3;
            case "hex":
              return r3 >>> 1;
            case "base64":
              return F(t3).length;
            default:
              if (i2) return o2 ? -1 : C(t3).length;
              e3 = ("" + e3).toLowerCase(), i2 = true;
          }
        }
        __name(b, "b");
        function m(t3, e3, r3) {
          var n2 = false;
          if ((void 0 === e3 || e3 < 0) && (e3 = 0), e3 > this.length) return "";
          if ((void 0 === r3 || r3 > this.length) && (r3 = this.length), r3 <= 0) return "";
          if ((r3 >>>= 0) <= (e3 >>>= 0)) return "";
          for (t3 || (t3 = "utf8"); ; ) switch (t3) {
            case "hex":
              return k(this, e3, r3);
            case "utf8":
            case "utf-8":
              return A(this, e3, r3);
            case "ascii":
              return x(this, e3, r3);
            case "latin1":
            case "binary":
              return T(this, e3, r3);
            case "base64":
              return P(this, e3, r3);
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le":
              return N(this, e3, r3);
            default:
              if (n2) throw new TypeError("Unknown encoding: " + t3);
              t3 = (t3 + "").toLowerCase(), n2 = true;
          }
        }
        __name(m, "m");
        function v(t3, e3, r3) {
          var n2 = t3[e3];
          t3[e3] = t3[r3], t3[r3] = n2;
        }
        __name(v, "v");
        function g(t3, e3, r3, n2, o2) {
          if (0 === t3.length) return -1;
          if ("string" == typeof r3 ? (n2 = r3, r3 = 0) : r3 > 2147483647 ? r3 = 2147483647 : r3 < -2147483648 && (r3 = -2147483648), q(r3 = +r3) && (r3 = o2 ? 0 : t3.length - 1), r3 < 0 && (r3 = t3.length + r3), r3 >= t3.length) {
            if (o2) return -1;
            r3 = t3.length - 1;
          } else if (r3 < 0) {
            if (!o2) return -1;
            r3 = 0;
          }
          if ("string" == typeof e3 && (e3 = c.from(e3, n2)), c.isBuffer(e3)) return 0 === e3.length ? -1 : _(t3, e3, r3, n2, o2);
          if ("number" == typeof e3) return e3 &= 255, "function" == typeof Uint8Array.prototype.indexOf ? o2 ? Uint8Array.prototype.indexOf.call(t3, e3, r3) : Uint8Array.prototype.lastIndexOf.call(t3, e3, r3) : _(t3, [e3], r3, n2, o2);
          throw new TypeError("val must be string, number or Buffer");
        }
        __name(g, "g");
        function _(t3, e3, r3, n2, o2) {
          var i2, s2 = 1, a2 = t3.length, u2 = e3.length;
          if (void 0 !== n2 && ("ucs2" === (n2 = String(n2).toLowerCase()) || "ucs-2" === n2 || "utf16le" === n2 || "utf-16le" === n2)) {
            if (t3.length < 2 || e3.length < 2) return -1;
            s2 = 2, a2 /= 2, u2 /= 2, r3 /= 2;
          }
          function c2(t4, e4) {
            return 1 === s2 ? t4[e4] : t4.readUInt16BE(e4 * s2);
          }
          __name(c2, "c");
          if (o2) {
            var l2 = -1;
            for (i2 = r3; i2 < a2; i2++) if (c2(t3, i2) === c2(e3, -1 === l2 ? 0 : i2 - l2)) {
              if (-1 === l2 && (l2 = i2), i2 - l2 + 1 === u2) return l2 * s2;
            } else -1 !== l2 && (i2 -= i2 - l2), l2 = -1;
          } else for (r3 + u2 > a2 && (r3 = a2 - u2), i2 = r3; i2 >= 0; i2--) {
            for (var f2 = true, p2 = 0; p2 < u2; p2++) if (c2(t3, i2 + p2) !== c2(e3, p2)) {
              f2 = false;
              break;
            }
            if (f2) return i2;
          }
          return -1;
        }
        __name(_, "_");
        function w(t3, e3, r3, n2) {
          r3 = Number(r3) || 0;
          var o2 = t3.length - r3;
          n2 ? (n2 = Number(n2)) > o2 && (n2 = o2) : n2 = o2;
          var i2 = e3.length;
          n2 > i2 / 2 && (n2 = i2 / 2);
          for (var s2 = 0; s2 < n2; ++s2) {
            var a2 = parseInt(e3.substr(2 * s2, 2), 16);
            if (q(a2)) return s2;
            t3[r3 + s2] = a2;
          }
          return s2;
        }
        __name(w, "w");
        function O(t3, e3, r3, n2) {
          return L(C(e3, t3.length - r3), t3, r3, n2);
        }
        __name(O, "O");
        function S(t3, e3, r3, n2) {
          return L(function(t4) {
            for (var e4 = [], r4 = 0; r4 < t4.length; ++r4) e4.push(255 & t4.charCodeAt(r4));
            return e4;
          }(e3), t3, r3, n2);
        }
        __name(S, "S");
        function $(t3, e3, r3, n2) {
          return L(F(e3), t3, r3, n2);
        }
        __name($, "$");
        function j(t3, e3, r3, n2) {
          return L(function(t4, e4) {
            for (var r4, n3, o2, i2 = [], s2 = 0; s2 < t4.length && !((e4 -= 2) < 0); ++s2) n3 = (r4 = t4.charCodeAt(s2)) >> 8, o2 = r4 % 256, i2.push(o2), i2.push(n3);
            return i2;
          }(e3, t3.length - r3), t3, r3, n2);
        }
        __name(j, "j");
        function P(t3, e3, r3) {
          return 0 === e3 && r3 === t3.length ? o.fromByteArray(t3) : o.fromByteArray(t3.slice(e3, r3));
        }
        __name(P, "P");
        function A(t3, e3, r3) {
          r3 = Math.min(t3.length, r3);
          for (var n2 = [], o2 = e3; o2 < r3; ) {
            var i2, s2, a2, u2, c2 = t3[o2], l2 = null, f2 = c2 > 239 ? 4 : c2 > 223 ? 3 : c2 > 191 ? 2 : 1;
            if (o2 + f2 <= r3) switch (f2) {
              case 1:
                c2 < 128 && (l2 = c2);
                break;
              case 2:
                128 == (192 & (i2 = t3[o2 + 1])) && (u2 = (31 & c2) << 6 | 63 & i2) > 127 && (l2 = u2);
                break;
              case 3:
                i2 = t3[o2 + 1], s2 = t3[o2 + 2], 128 == (192 & i2) && 128 == (192 & s2) && (u2 = (15 & c2) << 12 | (63 & i2) << 6 | 63 & s2) > 2047 && (u2 < 55296 || u2 > 57343) && (l2 = u2);
                break;
              case 4:
                i2 = t3[o2 + 1], s2 = t3[o2 + 2], a2 = t3[o2 + 3], 128 == (192 & i2) && 128 == (192 & s2) && 128 == (192 & a2) && (u2 = (15 & c2) << 18 | (63 & i2) << 12 | (63 & s2) << 6 | 63 & a2) > 65535 && u2 < 1114112 && (l2 = u2);
            }
            null === l2 ? (l2 = 65533, f2 = 1) : l2 > 65535 && (l2 -= 65536, n2.push(l2 >>> 10 & 1023 | 55296), l2 = 56320 | 1023 & l2), n2.push(l2), o2 += f2;
          }
          return function(t4) {
            var e4 = t4.length;
            if (e4 <= E) return String.fromCharCode.apply(String, t4);
            for (var r4 = "", n3 = 0; n3 < e4; ) r4 += String.fromCharCode.apply(String, t4.slice(n3, n3 += E));
            return r4;
          }(n2);
        }
        __name(A, "A");
        c.TYPED_ARRAY_SUPPORT = function() {
          try {
            var t3 = new Uint8Array(1), e3 = { foo: /* @__PURE__ */ __name(function() {
              return 42;
            }, "foo") };
            return Object.setPrototypeOf(e3, Uint8Array.prototype), Object.setPrototypeOf(t3, e3), 42 === t3.foo();
          } catch (t4) {
            return false;
          }
        }(), c.TYPED_ARRAY_SUPPORT || "undefined" == typeof console || "function" != typeof console.error || console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."), Object.defineProperty(c.prototype, "parent", { enumerable: true, get: /* @__PURE__ */ __name(function() {
          if (c.isBuffer(this)) return this.buffer;
        }, "get") }), Object.defineProperty(c.prototype, "offset", { enumerable: true, get: /* @__PURE__ */ __name(function() {
          if (c.isBuffer(this)) return this.byteOffset;
        }, "get") }), c.poolSize = 8192, c.from = function(t3, e3, r3) {
          return l(t3, e3, r3);
        }, Object.setPrototypeOf(c.prototype, Uint8Array.prototype), Object.setPrototypeOf(c, Uint8Array), c.alloc = function(t3, e3, r3) {
          return function(t4, e4, r4) {
            return f(t4), t4 <= 0 ? u(t4) : void 0 !== e4 ? "string" == typeof r4 ? u(t4).fill(e4, r4) : u(t4).fill(e4) : u(t4);
          }(t3, e3, r3);
        }, c.allocUnsafe = function(t3) {
          return p(t3);
        }, c.allocUnsafeSlow = function(t3) {
          return p(t3);
        }, c.isBuffer = function(t3) {
          return null != t3 && true === t3._isBuffer && t3 !== c.prototype;
        }, c.compare = function(t3, e3) {
          if (V(t3, Uint8Array) && (t3 = c.from(t3, t3.offset, t3.byteLength)), V(e3, Uint8Array) && (e3 = c.from(e3, e3.offset, e3.byteLength)), !c.isBuffer(t3) || !c.isBuffer(e3)) throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');
          if (t3 === e3) return 0;
          for (var r3 = t3.length, n2 = e3.length, o2 = 0, i2 = Math.min(r3, n2); o2 < i2; ++o2) if (t3[o2] !== e3[o2]) {
            r3 = t3[o2], n2 = e3[o2];
            break;
          }
          return r3 < n2 ? -1 : n2 < r3 ? 1 : 0;
        }, c.isEncoding = function(t3) {
          switch (String(t3).toLowerCase()) {
            case "hex":
            case "utf8":
            case "utf-8":
            case "ascii":
            case "latin1":
            case "binary":
            case "base64":
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le":
              return true;
            default:
              return false;
          }
        }, c.concat = function(t3, e3) {
          if (!Array.isArray(t3)) throw new TypeError('"list" argument must be an Array of Buffers');
          if (0 === t3.length) return c.alloc(0);
          var r3;
          if (void 0 === e3) for (e3 = 0, r3 = 0; r3 < t3.length; ++r3) e3 += t3[r3].length;
          var n2 = c.allocUnsafe(e3), o2 = 0;
          for (r3 = 0; r3 < t3.length; ++r3) {
            var i2 = t3[r3];
            if (V(i2, Uint8Array)) o2 + i2.length > n2.length ? c.from(i2).copy(n2, o2) : Uint8Array.prototype.set.call(n2, i2, o2);
            else {
              if (!c.isBuffer(i2)) throw new TypeError('"list" argument must be an Array of Buffers');
              i2.copy(n2, o2);
            }
            o2 += i2.length;
          }
          return n2;
        }, c.byteLength = b, c.prototype._isBuffer = true, c.prototype.swap16 = function() {
          var t3 = this.length;
          if (t3 % 2 != 0) throw new RangeError("Buffer size must be a multiple of 16-bits");
          for (var e3 = 0; e3 < t3; e3 += 2) v(this, e3, e3 + 1);
          return this;
        }, c.prototype.swap32 = function() {
          var t3 = this.length;
          if (t3 % 4 != 0) throw new RangeError("Buffer size must be a multiple of 32-bits");
          for (var e3 = 0; e3 < t3; e3 += 4) v(this, e3, e3 + 3), v(this, e3 + 1, e3 + 2);
          return this;
        }, c.prototype.swap64 = function() {
          var t3 = this.length;
          if (t3 % 8 != 0) throw new RangeError("Buffer size must be a multiple of 64-bits");
          for (var e3 = 0; e3 < t3; e3 += 8) v(this, e3, e3 + 7), v(this, e3 + 1, e3 + 6), v(this, e3 + 2, e3 + 5), v(this, e3 + 3, e3 + 4);
          return this;
        }, c.prototype.toString = function() {
          var t3 = this.length;
          return 0 === t3 ? "" : 0 === arguments.length ? A(this, 0, t3) : m.apply(this, arguments);
        }, c.prototype.toLocaleString = c.prototype.toString, c.prototype.equals = function(t3) {
          if (!c.isBuffer(t3)) throw new TypeError("Argument must be a Buffer");
          return this === t3 || 0 === c.compare(this, t3);
        }, c.prototype.inspect = function() {
          var t3 = "", r3 = e2.IS;
          return t3 = this.toString("hex", 0, r3).replace(/(.{2})/g, "$1 ").trim(), this.length > r3 && (t3 += " ... "), "<Buffer " + t3 + ">";
        }, s && (c.prototype[s] = c.prototype.inspect), c.prototype.compare = function(t3, e3, r3, o2, i2) {
          if (V(t3, Uint8Array) && (t3 = c.from(t3, t3.offset, t3.byteLength)), !c.isBuffer(t3)) throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type ' + n(t3));
          if (void 0 === e3 && (e3 = 0), void 0 === r3 && (r3 = t3 ? t3.length : 0), void 0 === o2 && (o2 = 0), void 0 === i2 && (i2 = this.length), e3 < 0 || r3 > t3.length || o2 < 0 || i2 > this.length) throw new RangeError("out of range index");
          if (o2 >= i2 && e3 >= r3) return 0;
          if (o2 >= i2) return -1;
          if (e3 >= r3) return 1;
          if (this === t3) return 0;
          for (var s2 = (i2 >>>= 0) - (o2 >>>= 0), a2 = (r3 >>>= 0) - (e3 >>>= 0), u2 = Math.min(s2, a2), l2 = this.slice(o2, i2), f2 = t3.slice(e3, r3), p2 = 0; p2 < u2; ++p2) if (l2[p2] !== f2[p2]) {
            s2 = l2[p2], a2 = f2[p2];
            break;
          }
          return s2 < a2 ? -1 : a2 < s2 ? 1 : 0;
        }, c.prototype.includes = function(t3, e3, r3) {
          return -1 !== this.indexOf(t3, e3, r3);
        }, c.prototype.indexOf = function(t3, e3, r3) {
          return g(this, t3, e3, r3, true);
        }, c.prototype.lastIndexOf = function(t3, e3, r3) {
          return g(this, t3, e3, r3, false);
        }, c.prototype.write = function(t3, e3, r3, n2) {
          if (void 0 === e3) n2 = "utf8", r3 = this.length, e3 = 0;
          else if (void 0 === r3 && "string" == typeof e3) n2 = e3, r3 = this.length, e3 = 0;
          else {
            if (!isFinite(e3)) throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");
            e3 >>>= 0, isFinite(r3) ? (r3 >>>= 0, void 0 === n2 && (n2 = "utf8")) : (n2 = r3, r3 = void 0);
          }
          var o2 = this.length - e3;
          if ((void 0 === r3 || r3 > o2) && (r3 = o2), t3.length > 0 && (r3 < 0 || e3 < 0) || e3 > this.length) throw new RangeError("Attempt to write outside buffer bounds");
          n2 || (n2 = "utf8");
          for (var i2 = false; ; ) switch (n2) {
            case "hex":
              return w(this, t3, e3, r3);
            case "utf8":
            case "utf-8":
              return O(this, t3, e3, r3);
            case "ascii":
            case "latin1":
            case "binary":
              return S(this, t3, e3, r3);
            case "base64":
              return $(this, t3, e3, r3);
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le":
              return j(this, t3, e3, r3);
            default:
              if (i2) throw new TypeError("Unknown encoding: " + n2);
              n2 = ("" + n2).toLowerCase(), i2 = true;
          }
        }, c.prototype.toJSON = function() {
          return { type: "Buffer", data: Array.prototype.slice.call(this._arr || this, 0) };
        };
        var E = 4096;
        function x(t3, e3, r3) {
          var n2 = "";
          r3 = Math.min(t3.length, r3);
          for (var o2 = e3; o2 < r3; ++o2) n2 += String.fromCharCode(127 & t3[o2]);
          return n2;
        }
        __name(x, "x");
        function T(t3, e3, r3) {
          var n2 = "";
          r3 = Math.min(t3.length, r3);
          for (var o2 = e3; o2 < r3; ++o2) n2 += String.fromCharCode(t3[o2]);
          return n2;
        }
        __name(T, "T");
        function k(t3, e3, r3) {
          var n2 = t3.length;
          (!e3 || e3 < 0) && (e3 = 0), (!r3 || r3 < 0 || r3 > n2) && (r3 = n2);
          for (var o2 = "", i2 = e3; i2 < r3; ++i2) o2 += J[t3[i2]];
          return o2;
        }
        __name(k, "k");
        function N(t3, e3, r3) {
          for (var n2 = t3.slice(e3, r3), o2 = "", i2 = 0; i2 < n2.length - 1; i2 += 2) o2 += String.fromCharCode(n2[i2] + 256 * n2[i2 + 1]);
          return o2;
        }
        __name(N, "N");
        function I(t3, e3, r3) {
          if (t3 % 1 != 0 || t3 < 0) throw new RangeError("offset is not uint");
          if (t3 + e3 > r3) throw new RangeError("Trying to access beyond buffer length");
        }
        __name(I, "I");
        function B(t3, e3, r3, n2, o2, i2) {
          if (!c.isBuffer(t3)) throw new TypeError('"buffer" argument must be a Buffer instance');
          if (e3 > o2 || e3 < i2) throw new RangeError('"value" argument is out of bounds');
          if (r3 + n2 > t3.length) throw new RangeError("Index out of range");
        }
        __name(B, "B");
        function M(t3, e3, r3, n2, o2, i2) {
          if (r3 + n2 > t3.length) throw new RangeError("Index out of range");
          if (r3 < 0) throw new RangeError("Index out of range");
        }
        __name(M, "M");
        function D(t3, e3, r3, n2, o2) {
          return e3 = +e3, r3 >>>= 0, o2 || M(t3, 0, r3, 4), i.write(t3, e3, r3, n2, 23, 4), r3 + 4;
        }
        __name(D, "D");
        function R(t3, e3, r3, n2, o2) {
          return e3 = +e3, r3 >>>= 0, o2 || M(t3, 0, r3, 8), i.write(t3, e3, r3, n2, 52, 8), r3 + 8;
        }
        __name(R, "R");
        c.prototype.slice = function(t3, e3) {
          var r3 = this.length;
          (t3 = ~~t3) < 0 ? (t3 += r3) < 0 && (t3 = 0) : t3 > r3 && (t3 = r3), (e3 = void 0 === e3 ? r3 : ~~e3) < 0 ? (e3 += r3) < 0 && (e3 = 0) : e3 > r3 && (e3 = r3), e3 < t3 && (e3 = t3);
          var n2 = this.subarray(t3, e3);
          return Object.setPrototypeOf(n2, c.prototype), n2;
        }, c.prototype.readUintLE = c.prototype.readUIntLE = function(t3, e3, r3) {
          t3 >>>= 0, e3 >>>= 0, r3 || I(t3, e3, this.length);
          for (var n2 = this[t3], o2 = 1, i2 = 0; ++i2 < e3 && (o2 *= 256); ) n2 += this[t3 + i2] * o2;
          return n2;
        }, c.prototype.readUintBE = c.prototype.readUIntBE = function(t3, e3, r3) {
          t3 >>>= 0, e3 >>>= 0, r3 || I(t3, e3, this.length);
          for (var n2 = this[t3 + --e3], o2 = 1; e3 > 0 && (o2 *= 256); ) n2 += this[t3 + --e3] * o2;
          return n2;
        }, c.prototype.readUint8 = c.prototype.readUInt8 = function(t3, e3) {
          return t3 >>>= 0, e3 || I(t3, 1, this.length), this[t3];
        }, c.prototype.readUint16LE = c.prototype.readUInt16LE = function(t3, e3) {
          return t3 >>>= 0, e3 || I(t3, 2, this.length), this[t3] | this[t3 + 1] << 8;
        }, c.prototype.readUint16BE = c.prototype.readUInt16BE = function(t3, e3) {
          return t3 >>>= 0, e3 || I(t3, 2, this.length), this[t3] << 8 | this[t3 + 1];
        }, c.prototype.readUint32LE = c.prototype.readUInt32LE = function(t3, e3) {
          return t3 >>>= 0, e3 || I(t3, 4, this.length), (this[t3] | this[t3 + 1] << 8 | this[t3 + 2] << 16) + 16777216 * this[t3 + 3];
        }, c.prototype.readUint32BE = c.prototype.readUInt32BE = function(t3, e3) {
          return t3 >>>= 0, e3 || I(t3, 4, this.length), 16777216 * this[t3] + (this[t3 + 1] << 16 | this[t3 + 2] << 8 | this[t3 + 3]);
        }, c.prototype.readIntLE = function(t3, e3, r3) {
          t3 >>>= 0, e3 >>>= 0, r3 || I(t3, e3, this.length);
          for (var n2 = this[t3], o2 = 1, i2 = 0; ++i2 < e3 && (o2 *= 256); ) n2 += this[t3 + i2] * o2;
          return n2 >= (o2 *= 128) && (n2 -= Math.pow(2, 8 * e3)), n2;
        }, c.prototype.readIntBE = function(t3, e3, r3) {
          t3 >>>= 0, e3 >>>= 0, r3 || I(t3, e3, this.length);
          for (var n2 = e3, o2 = 1, i2 = this[t3 + --n2]; n2 > 0 && (o2 *= 256); ) i2 += this[t3 + --n2] * o2;
          return i2 >= (o2 *= 128) && (i2 -= Math.pow(2, 8 * e3)), i2;
        }, c.prototype.readInt8 = function(t3, e3) {
          return t3 >>>= 0, e3 || I(t3, 1, this.length), 128 & this[t3] ? -1 * (255 - this[t3] + 1) : this[t3];
        }, c.prototype.readInt16LE = function(t3, e3) {
          t3 >>>= 0, e3 || I(t3, 2, this.length);
          var r3 = this[t3] | this[t3 + 1] << 8;
          return 32768 & r3 ? 4294901760 | r3 : r3;
        }, c.prototype.readInt16BE = function(t3, e3) {
          t3 >>>= 0, e3 || I(t3, 2, this.length);
          var r3 = this[t3 + 1] | this[t3] << 8;
          return 32768 & r3 ? 4294901760 | r3 : r3;
        }, c.prototype.readInt32LE = function(t3, e3) {
          return t3 >>>= 0, e3 || I(t3, 4, this.length), this[t3] | this[t3 + 1] << 8 | this[t3 + 2] << 16 | this[t3 + 3] << 24;
        }, c.prototype.readInt32BE = function(t3, e3) {
          return t3 >>>= 0, e3 || I(t3, 4, this.length), this[t3] << 24 | this[t3 + 1] << 16 | this[t3 + 2] << 8 | this[t3 + 3];
        }, c.prototype.readFloatLE = function(t3, e3) {
          return t3 >>>= 0, e3 || I(t3, 4, this.length), i.read(this, t3, true, 23, 4);
        }, c.prototype.readFloatBE = function(t3, e3) {
          return t3 >>>= 0, e3 || I(t3, 4, this.length), i.read(this, t3, false, 23, 4);
        }, c.prototype.readDoubleLE = function(t3, e3) {
          return t3 >>>= 0, e3 || I(t3, 8, this.length), i.read(this, t3, true, 52, 8);
        }, c.prototype.readDoubleBE = function(t3, e3) {
          return t3 >>>= 0, e3 || I(t3, 8, this.length), i.read(this, t3, false, 52, 8);
        }, c.prototype.writeUintLE = c.prototype.writeUIntLE = function(t3, e3, r3, n2) {
          t3 = +t3, e3 >>>= 0, r3 >>>= 0, n2 || B(this, t3, e3, r3, Math.pow(2, 8 * r3) - 1, 0);
          var o2 = 1, i2 = 0;
          for (this[e3] = 255 & t3; ++i2 < r3 && (o2 *= 256); ) this[e3 + i2] = t3 / o2 & 255;
          return e3 + r3;
        }, c.prototype.writeUintBE = c.prototype.writeUIntBE = function(t3, e3, r3, n2) {
          t3 = +t3, e3 >>>= 0, r3 >>>= 0, n2 || B(this, t3, e3, r3, Math.pow(2, 8 * r3) - 1, 0);
          var o2 = r3 - 1, i2 = 1;
          for (this[e3 + o2] = 255 & t3; --o2 >= 0 && (i2 *= 256); ) this[e3 + o2] = t3 / i2 & 255;
          return e3 + r3;
        }, c.prototype.writeUint8 = c.prototype.writeUInt8 = function(t3, e3, r3) {
          return t3 = +t3, e3 >>>= 0, r3 || B(this, t3, e3, 1, 255, 0), this[e3] = 255 & t3, e3 + 1;
        }, c.prototype.writeUint16LE = c.prototype.writeUInt16LE = function(t3, e3, r3) {
          return t3 = +t3, e3 >>>= 0, r3 || B(this, t3, e3, 2, 65535, 0), this[e3] = 255 & t3, this[e3 + 1] = t3 >>> 8, e3 + 2;
        }, c.prototype.writeUint16BE = c.prototype.writeUInt16BE = function(t3, e3, r3) {
          return t3 = +t3, e3 >>>= 0, r3 || B(this, t3, e3, 2, 65535, 0), this[e3] = t3 >>> 8, this[e3 + 1] = 255 & t3, e3 + 2;
        }, c.prototype.writeUint32LE = c.prototype.writeUInt32LE = function(t3, e3, r3) {
          return t3 = +t3, e3 >>>= 0, r3 || B(this, t3, e3, 4, 4294967295, 0), this[e3 + 3] = t3 >>> 24, this[e3 + 2] = t3 >>> 16, this[e3 + 1] = t3 >>> 8, this[e3] = 255 & t3, e3 + 4;
        }, c.prototype.writeUint32BE = c.prototype.writeUInt32BE = function(t3, e3, r3) {
          return t3 = +t3, e3 >>>= 0, r3 || B(this, t3, e3, 4, 4294967295, 0), this[e3] = t3 >>> 24, this[e3 + 1] = t3 >>> 16, this[e3 + 2] = t3 >>> 8, this[e3 + 3] = 255 & t3, e3 + 4;
        }, c.prototype.writeIntLE = function(t3, e3, r3, n2) {
          if (t3 = +t3, e3 >>>= 0, !n2) {
            var o2 = Math.pow(2, 8 * r3 - 1);
            B(this, t3, e3, r3, o2 - 1, -o2);
          }
          var i2 = 0, s2 = 1, a2 = 0;
          for (this[e3] = 255 & t3; ++i2 < r3 && (s2 *= 256); ) t3 < 0 && 0 === a2 && 0 !== this[e3 + i2 - 1] && (a2 = 1), this[e3 + i2] = (t3 / s2 | 0) - a2 & 255;
          return e3 + r3;
        }, c.prototype.writeIntBE = function(t3, e3, r3, n2) {
          if (t3 = +t3, e3 >>>= 0, !n2) {
            var o2 = Math.pow(2, 8 * r3 - 1);
            B(this, t3, e3, r3, o2 - 1, -o2);
          }
          var i2 = r3 - 1, s2 = 1, a2 = 0;
          for (this[e3 + i2] = 255 & t3; --i2 >= 0 && (s2 *= 256); ) t3 < 0 && 0 === a2 && 0 !== this[e3 + i2 + 1] && (a2 = 1), this[e3 + i2] = (t3 / s2 | 0) - a2 & 255;
          return e3 + r3;
        }, c.prototype.writeInt8 = function(t3, e3, r3) {
          return t3 = +t3, e3 >>>= 0, r3 || B(this, t3, e3, 1, 127, -128), t3 < 0 && (t3 = 255 + t3 + 1), this[e3] = 255 & t3, e3 + 1;
        }, c.prototype.writeInt16LE = function(t3, e3, r3) {
          return t3 = +t3, e3 >>>= 0, r3 || B(this, t3, e3, 2, 32767, -32768), this[e3] = 255 & t3, this[e3 + 1] = t3 >>> 8, e3 + 2;
        }, c.prototype.writeInt16BE = function(t3, e3, r3) {
          return t3 = +t3, e3 >>>= 0, r3 || B(this, t3, e3, 2, 32767, -32768), this[e3] = t3 >>> 8, this[e3 + 1] = 255 & t3, e3 + 2;
        }, c.prototype.writeInt32LE = function(t3, e3, r3) {
          return t3 = +t3, e3 >>>= 0, r3 || B(this, t3, e3, 4, 2147483647, -2147483648), this[e3] = 255 & t3, this[e3 + 1] = t3 >>> 8, this[e3 + 2] = t3 >>> 16, this[e3 + 3] = t3 >>> 24, e3 + 4;
        }, c.prototype.writeInt32BE = function(t3, e3, r3) {
          return t3 = +t3, e3 >>>= 0, r3 || B(this, t3, e3, 4, 2147483647, -2147483648), t3 < 0 && (t3 = 4294967295 + t3 + 1), this[e3] = t3 >>> 24, this[e3 + 1] = t3 >>> 16, this[e3 + 2] = t3 >>> 8, this[e3 + 3] = 255 & t3, e3 + 4;
        }, c.prototype.writeFloatLE = function(t3, e3, r3) {
          return D(this, t3, e3, true, r3);
        }, c.prototype.writeFloatBE = function(t3, e3, r3) {
          return D(this, t3, e3, false, r3);
        }, c.prototype.writeDoubleLE = function(t3, e3, r3) {
          return R(this, t3, e3, true, r3);
        }, c.prototype.writeDoubleBE = function(t3, e3, r3) {
          return R(this, t3, e3, false, r3);
        }, c.prototype.copy = function(t3, e3, r3, n2) {
          if (!c.isBuffer(t3)) throw new TypeError("argument should be a Buffer");
          if (r3 || (r3 = 0), n2 || 0 === n2 || (n2 = this.length), e3 >= t3.length && (e3 = t3.length), e3 || (e3 = 0), n2 > 0 && n2 < r3 && (n2 = r3), n2 === r3) return 0;
          if (0 === t3.length || 0 === this.length) return 0;
          if (e3 < 0) throw new RangeError("targetStart out of bounds");
          if (r3 < 0 || r3 >= this.length) throw new RangeError("Index out of range");
          if (n2 < 0) throw new RangeError("sourceEnd out of bounds");
          n2 > this.length && (n2 = this.length), t3.length - e3 < n2 - r3 && (n2 = t3.length - e3 + r3);
          var o2 = n2 - r3;
          return this === t3 && "function" == typeof Uint8Array.prototype.copyWithin ? this.copyWithin(e3, r3, n2) : Uint8Array.prototype.set.call(t3, this.subarray(r3, n2), e3), o2;
        }, c.prototype.fill = function(t3, e3, r3, n2) {
          if ("string" == typeof t3) {
            if ("string" == typeof e3 ? (n2 = e3, e3 = 0, r3 = this.length) : "string" == typeof r3 && (n2 = r3, r3 = this.length), void 0 !== n2 && "string" != typeof n2) throw new TypeError("encoding must be a string");
            if ("string" == typeof n2 && !c.isEncoding(n2)) throw new TypeError("Unknown encoding: " + n2);
            if (1 === t3.length) {
              var o2 = t3.charCodeAt(0);
              ("utf8" === n2 && o2 < 128 || "latin1" === n2) && (t3 = o2);
            }
          } else "number" == typeof t3 ? t3 &= 255 : "boolean" == typeof t3 && (t3 = Number(t3));
          if (e3 < 0 || this.length < e3 || this.length < r3) throw new RangeError("Out of range index");
          if (r3 <= e3) return this;
          var i2;
          if (e3 >>>= 0, r3 = void 0 === r3 ? this.length : r3 >>> 0, t3 || (t3 = 0), "number" == typeof t3) for (i2 = e3; i2 < r3; ++i2) this[i2] = t3;
          else {
            var s2 = c.isBuffer(t3) ? t3 : c.from(t3, n2), a2 = s2.length;
            if (0 === a2) throw new TypeError('The value "' + t3 + '" is invalid for argument "value"');
            for (i2 = 0; i2 < r3 - e3; ++i2) this[i2 + e3] = s2[i2 % a2];
          }
          return this;
        };
        var U = /[^+/0-9A-Za-z-_]/g;
        function C(t3, e3) {
          var r3;
          e3 = e3 || 1 / 0;
          for (var n2 = t3.length, o2 = null, i2 = [], s2 = 0; s2 < n2; ++s2) {
            if ((r3 = t3.charCodeAt(s2)) > 55295 && r3 < 57344) {
              if (!o2) {
                if (r3 > 56319) {
                  (e3 -= 3) > -1 && i2.push(239, 191, 189);
                  continue;
                }
                if (s2 + 1 === n2) {
                  (e3 -= 3) > -1 && i2.push(239, 191, 189);
                  continue;
                }
                o2 = r3;
                continue;
              }
              if (r3 < 56320) {
                (e3 -= 3) > -1 && i2.push(239, 191, 189), o2 = r3;
                continue;
              }
              r3 = 65536 + (o2 - 55296 << 10 | r3 - 56320);
            } else o2 && (e3 -= 3) > -1 && i2.push(239, 191, 189);
            if (o2 = null, r3 < 128) {
              if ((e3 -= 1) < 0) break;
              i2.push(r3);
            } else if (r3 < 2048) {
              if ((e3 -= 2) < 0) break;
              i2.push(r3 >> 6 | 192, 63 & r3 | 128);
            } else if (r3 < 65536) {
              if ((e3 -= 3) < 0) break;
              i2.push(r3 >> 12 | 224, r3 >> 6 & 63 | 128, 63 & r3 | 128);
            } else {
              if (!(r3 < 1114112)) throw new Error("Invalid code point");
              if ((e3 -= 4) < 0) break;
              i2.push(r3 >> 18 | 240, r3 >> 12 & 63 | 128, r3 >> 6 & 63 | 128, 63 & r3 | 128);
            }
          }
          return i2;
        }
        __name(C, "C");
        function F(t3) {
          return o.toByteArray(function(t4) {
            if ((t4 = (t4 = t4.split("=")[0]).trim().replace(U, "")).length < 2) return "";
            for (; t4.length % 4 != 0; ) t4 += "=";
            return t4;
          }(t3));
        }
        __name(F, "F");
        function L(t3, e3, r3, n2) {
          for (var o2 = 0; o2 < n2 && !(o2 + r3 >= e3.length || o2 >= t3.length); ++o2) e3[o2 + r3] = t3[o2];
          return o2;
        }
        __name(L, "L");
        function V(t3, e3) {
          return t3 instanceof e3 || null != t3 && null != t3.constructor && null != t3.constructor.name && t3.constructor.name === e3.name;
        }
        __name(V, "V");
        function q(t3) {
          return t3 != t3;
        }
        __name(q, "q");
        var J = function() {
          for (var t3 = "0123456789abcdef", e3 = new Array(256), r3 = 0; r3 < 16; ++r3) for (var n2 = 16 * r3, o2 = 0; o2 < 16; ++o2) e3[n2 + o2] = t3[r3] + t3[o2];
          return e3;
        }();
      }, 5889: (t2, e2, r2) => {
        "use strict";
        function n(t3, e3) {
          var r3 = "undefined" != typeof Symbol && t3[Symbol.iterator] || t3["@@iterator"];
          if (!r3) {
            if (Array.isArray(t3) || (r3 = o(t3)) || e3 && t3 && "number" == typeof t3.length) {
              r3 && (t3 = r3);
              var n2 = 0, i2 = /* @__PURE__ */ __name(function() {
              }, "i");
              return { s: i2, n: /* @__PURE__ */ __name(function() {
                return n2 >= t3.length ? { done: true } : { done: false, value: t3[n2++] };
              }, "n"), e: /* @__PURE__ */ __name(function(t4) {
                throw t4;
              }, "e"), f: i2 };
            }
            throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }
          var s2, a2 = true, u2 = false;
          return { s: /* @__PURE__ */ __name(function() {
            r3 = r3.call(t3);
          }, "s"), n: /* @__PURE__ */ __name(function() {
            var t4 = r3.next();
            return a2 = t4.done, t4;
          }, "n"), e: /* @__PURE__ */ __name(function(t4) {
            u2 = true, s2 = t4;
          }, "e"), f: /* @__PURE__ */ __name(function() {
            try {
              a2 || null == r3.return || r3.return();
            } finally {
              if (u2) throw s2;
            }
          }, "f") };
        }
        __name(n, "n");
        function o(t3, e3) {
          if (t3) {
            if ("string" == typeof t3) return i(t3, e3);
            var r3 = {}.toString.call(t3).slice(8, -1);
            return "Object" === r3 && t3.constructor && (r3 = t3.constructor.name), "Map" === r3 || "Set" === r3 ? Array.from(t3) : "Arguments" === r3 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r3) ? i(t3, e3) : void 0;
          }
        }
        __name(o, "o");
        function i(t3, e3) {
          (null == e3 || e3 > t3.length) && (e3 = t3.length);
          for (var r3 = 0, n2 = Array(e3); r3 < e3; r3++) n2[r3] = t3[r3];
          return n2;
        }
        __name(i, "i");
        var s = r2(7930).arrayAtomicsSymbol, a = r2(7930).sessionNewDocuments, u = r2(8768);
        function c(t3, e3) {
          return t3 = t3 || {}, null != e3.$pullAll && (t3.$pullAll = (t3.$pullAll || []).concat(e3.$pullAll)), null != e3.$push && (t3.$push = t3.$push || {}, t3.$push.$each = (t3.$push.$each || []).concat(e3.$push.$each)), null != e3.$addToSet && (t3.$addToSet = (t3.$addToSet || []).concat(e3.$addToSet)), null != e3.$set && (t3.$set = Array.isArray(e3.$set) ? function(t4) {
            if (Array.isArray(t4)) return i(t4);
          }(r3 = e3.$set) || function(t4) {
            if ("undefined" != typeof Symbol && null != t4[Symbol.iterator] || null != t4["@@iterator"]) return Array.from(t4);
          }(r3) || o(r3) || function() {
            throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }() : Object.assign({}, e3.$set)), t3;
          var r3;
        }
        __name(c, "c");
        t2.exports = function(t3) {
          t3.pre("save", function() {
            var t4 = this.$session();
            if (null != t4 && null != t4.transaction && null != t4[a] && !t4[a].has(this)) {
              var e3 = {};
              this.isNew && (e3.isNew = true), this.$__schema.options.versionKey && (e3.versionKey = this.get(this.$__schema.options.versionKey)), e3.modifiedPaths = new Set(Object.keys(this.$__.activePaths.getStatePaths("modify"))), e3.atomics = function(t5, e4) {
                var r3 = /* @__PURE__ */ new Map();
                e4 = e4 || /* @__PURE__ */ new Map();
                var o2, i2 = n(Object.keys(t5.$__.activePaths.init).concat(Object.keys(t5.$__.activePaths.modify)));
                try {
                  for (i2.s(); !(o2 = i2.n()).done; ) {
                    var a2 = o2.value, l = t5.$__getValue(a2);
                    if (null != l && Array.isArray(l) && u.isMongooseDocumentArray(l) && l.length && null != l[s] && 0 !== Object.keys(l[s]).length) {
                      var f = e4.get(a2) || {};
                      r3.set(a2, c(f, l[s]));
                    }
                  }
                } catch (t6) {
                  i2.e(t6);
                } finally {
                  i2.f();
                }
                var p, h = n(t5.$__dirty());
                try {
                  for (h.s(); !(p = h.n()).done; ) {
                    var y = p.value, d = y.path, b = y.value;
                    if (null != b && null != b[s] && 0 !== Object.keys(b[s]).length) {
                      var m = e4.get(d) || {};
                      r3.set(d, c(m, b[s]));
                    }
                  }
                } catch (t6) {
                  h.e(t6);
                } finally {
                  h.f();
                }
                return r3;
              }(this), t4[a].set(this, e3);
            }
          });
        };
      }, 5899: (t2, e2, r2) => {
        "use strict";
        function n(t3) {
          return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
            return typeof t4;
          } : function(t4) {
            return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
          }, n(t3);
        }
        __name(n, "n");
        var o = r2(953)(), i = r2(3071)("Object.prototype.toString"), s = /* @__PURE__ */ __name(function(t3) {
          return !(o && t3 && "object" === n(t3) && Symbol.toStringTag in t3) && "[object Arguments]" === i(t3);
        }, "s"), a = /* @__PURE__ */ __name(function(t3) {
          return !!s(t3) || null !== t3 && "object" === n(t3) && "length" in t3 && "number" == typeof t3.length && t3.length >= 0 && "[object Array]" !== i(t3) && "callee" in t3 && "[object Function]" === i(t3.callee);
        }, "a"), u = function() {
          return s(arguments);
        }();
        s.isLegacyArguments = a, t2.exports = u ? s : a;
      }, 5994: (t2, e2, r2) => {
        "use strict";
        var n = Function.prototype.call, o = Object.prototype.hasOwnProperty, i = r2(2354);
        t2.exports = i.call(n, o);
      }, 6062: (t2, e2, r2) => {
        "use strict";
        var n = r2(9122), o = r2(2273), i = r2(118), s = r2(4183), a = r2(7878), u = n(s(), Number);
        o(u, { getPolyfill: s, implementation: i, shim: a }), t2.exports = u;
      }, 6140: (t2) => {
        "use strict";
        function e2(t3) {
          return e2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
            return typeof t4;
          } : function(t4) {
            return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
          }, e2(t3);
        }
        __name(e2, "e");
        function r2(t3, e3) {
          for (var r3 = 0; r3 < e3.length; r3++) {
            var n2 = e3[r3];
            n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(t3, o(n2.key), n2);
          }
        }
        __name(r2, "r");
        function n(t3, e3, n2) {
          return e3 && r2(t3.prototype, e3), n2 && r2(t3, n2), Object.defineProperty(t3, "prototype", { writable: false }), t3;
        }
        __name(n, "n");
        function o(t3) {
          var r3 = function(t4) {
            if ("object" != e2(t4) || !t4) return t4;
            var r4 = t4[Symbol.toPrimitive];
            if (void 0 !== r4) {
              var n2 = r4.call(t4, "string");
              if ("object" != e2(n2)) return n2;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(t4);
          }(t3);
          return "symbol" == e2(r3) ? r3 : r3 + "";
        }
        __name(o, "o");
        t2.exports = n(/* @__PURE__ */ __name(function t3(e3, r3, n2) {
          !function(t4, e4) {
            if (!(t4 instanceof e4)) throw new TypeError("Cannot call a class as a function");
          }(this, t3), this.subdocSnapshot = e3, this.activePaths = r3, this.version = n2;
        }, "t"));
      }, 6155: (t2) => {
        "use strict";
        function e2(t3) {
          return e2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
            return typeof t4;
          } : function(t4) {
            return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
          }, e2(t3);
        }
        __name(e2, "e");
        t2.exports = function(t3) {
          for (var r2 = Object.keys(t3), n = true, o = 0, i = r2.length; o < i; ++o) if ("object" === e2(t3[r2[o]]) && null !== t3[r2[o]]) {
            n = false;
            break;
          }
          return n;
        };
      }, 6182: (t2) => {
        "use strict";
        function e2(t3, e3) {
          if (null == t3) throw new TypeError("Cannot convert first argument to object");
          for (var r2 = Object(t3), n = 1; n < arguments.length; n++) {
            var o = arguments[n];
            if (null != o) for (var i = Object.keys(Object(o)), s = 0, a = i.length; s < a; s++) {
              var u = i[s], c = Object.getOwnPropertyDescriptor(o, u);
              void 0 !== c && c.enumerable && (r2[u] = o[u]);
            }
          }
          return r2;
        }
        __name(e2, "e");
        t2.exports = { assign: e2, polyfill: /* @__PURE__ */ __name(function() {
          Object.assign || Object.defineProperty(Object, "assign", { enumerable: false, configurable: true, writable: true, value: e2 });
        }, "polyfill") };
      }, 6193: (t2, e2, r2) => {
        "use strict";
        function n(t3) {
          return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
            return typeof t4;
          } : function(t4) {
            return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
          }, n(t3);
        }
        __name(n, "n");
        function o(t3, e3) {
          return function(t4) {
            if (Array.isArray(t4)) return t4;
          }(t3) || function(t4, e4) {
            var r3 = [], n2 = true, o2 = false, i2 = void 0;
            try {
              for (var s2, a2 = t4[Symbol.iterator](); !(n2 = (s2 = a2.next()).done) && (r3.push(s2.value), !e4 || r3.length !== e4); n2 = true) ;
            } catch (t5) {
              o2 = true, i2 = t5;
            } finally {
              try {
                n2 || null == a2.return || a2.return();
              } finally {
                if (o2) throw i2;
              }
            }
            return r3;
          }(t3, e3) || function() {
            throw new TypeError("Invalid attempt to destructure non-iterable instance");
          }();
        }
        __name(o, "o");
        function i(t3) {
          return i = "function" == typeof Symbol && "symbol" === n(Symbol.iterator) ? function(t4) {
            return n(t4);
          } : function(t4) {
            return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : n(t4);
          }, i(t3);
        }
        __name(i, "i");
        var s = void 0 !== /a/g.flags, a = /* @__PURE__ */ __name(function(t3) {
          var e3 = [];
          return t3.forEach(function(t4) {
            return e3.push(t4);
          }), e3;
        }, "a"), u = /* @__PURE__ */ __name(function(t3) {
          var e3 = [];
          return t3.forEach(function(t4, r3) {
            return e3.push([r3, t4]);
          }), e3;
        }, "u"), c = Object.is ? Object.is : r2(2064), l = Object.getOwnPropertySymbols ? Object.getOwnPropertySymbols : function() {
          return [];
        }, f = Number.isNaN ? Number.isNaN : r2(6062);
        function p(t3) {
          return t3.call.bind(t3);
        }
        __name(p, "p");
        var h = p(Object.prototype.hasOwnProperty), y = p(Object.prototype.propertyIsEnumerable), d = p(Object.prototype.toString), b = r2(7352).types, m = b.isAnyArrayBuffer, v = b.isArrayBufferView, g = b.isDate, _ = b.isMap, w = b.isRegExp, O = b.isSet, S = b.isNativeError, $ = b.isBoxedPrimitive, j = b.isNumberObject, P = b.isStringObject, A = b.isBooleanObject, E = b.isBigIntObject, x = b.isSymbolObject, T = b.isFloat32Array, k = b.isFloat64Array;
        function N(t3) {
          if (0 === t3.length || t3.length > 10) return true;
          for (var e3 = 0; e3 < t3.length; e3++) {
            var r3 = t3.charCodeAt(e3);
            if (r3 < 48 || r3 > 57) return true;
          }
          return 10 === t3.length && t3 >= Math.pow(2, 32);
        }
        __name(N, "N");
        function I(t3) {
          return Object.keys(t3).filter(N).concat(l(t3).filter(Object.prototype.propertyIsEnumerable.bind(t3)));
        }
        __name(I, "I");
        function B(t3, e3) {
          if (t3 === e3) return 0;
          for (var r3 = t3.length, n2 = e3.length, o2 = 0, i2 = Math.min(r3, n2); o2 < i2; ++o2) if (t3[o2] !== e3[o2]) {
            r3 = t3[o2], n2 = e3[o2];
            break;
          }
          return r3 < n2 ? -1 : n2 < r3 ? 1 : 0;
        }
        __name(B, "B");
        function M(t3, e3, r3, n2) {
          if (t3 === e3) return 0 !== t3 || !r3 || c(t3, e3);
          if (r3) {
            if ("object" !== i(t3)) return "number" == typeof t3 && f(t3) && f(e3);
            if ("object" !== i(e3) || null === t3 || null === e3) return false;
            if (Object.getPrototypeOf(t3) !== Object.getPrototypeOf(e3)) return false;
          } else {
            if (null === t3 || "object" !== i(t3)) return (null === e3 || "object" !== i(e3)) && t3 == e3;
            if (null === e3 || "object" !== i(e3)) return false;
          }
          var o2, a2, u2, l2, p2 = d(t3);
          if (p2 !== d(e3)) return false;
          if (Array.isArray(t3)) {
            if (t3.length !== e3.length) return false;
            var h2 = I(t3), y2 = I(e3);
            return h2.length === y2.length && R(t3, e3, r3, n2, 1, h2);
          }
          if ("[object Object]" === p2 && (!_(t3) && _(e3) || !O(t3) && O(e3))) return false;
          if (g(t3)) {
            if (!g(e3) || Date.prototype.getTime.call(t3) !== Date.prototype.getTime.call(e3)) return false;
          } else if (w(t3)) {
            if (!w(e3) || (u2 = t3, l2 = e3, !(s ? u2.source === l2.source && u2.flags === l2.flags : RegExp.prototype.toString.call(u2) === RegExp.prototype.toString.call(l2)))) return false;
          } else if (S(t3) || t3 instanceof Error) {
            if (t3.message !== e3.message || t3.name !== e3.name) return false;
          } else {
            if (v(t3)) {
              if (r3 || !T(t3) && !k(t3)) {
                if (!function(t4, e4) {
                  return t4.byteLength === e4.byteLength && 0 === B(new Uint8Array(t4.buffer, t4.byteOffset, t4.byteLength), new Uint8Array(e4.buffer, e4.byteOffset, e4.byteLength));
                }(t3, e3)) return false;
              } else if (!function(t4, e4) {
                if (t4.byteLength !== e4.byteLength) return false;
                for (var r4 = 0; r4 < t4.byteLength; r4++) if (t4[r4] !== e4[r4]) return false;
                return true;
              }(t3, e3)) return false;
              var b2 = I(t3), N2 = I(e3);
              return b2.length === N2.length && R(t3, e3, r3, n2, 0, b2);
            }
            if (O(t3)) return !(!O(e3) || t3.size !== e3.size) && R(t3, e3, r3, n2, 2);
            if (_(t3)) return !(!_(e3) || t3.size !== e3.size) && R(t3, e3, r3, n2, 3);
            if (m(t3)) {
              if (a2 = e3, (o2 = t3).byteLength !== a2.byteLength || 0 !== B(new Uint8Array(o2), new Uint8Array(a2))) return false;
            } else if ($(t3) && !function(t4, e4) {
              return j(t4) ? j(e4) && c(Number.prototype.valueOf.call(t4), Number.prototype.valueOf.call(e4)) : P(t4) ? P(e4) && String.prototype.valueOf.call(t4) === String.prototype.valueOf.call(e4) : A(t4) ? A(e4) && Boolean.prototype.valueOf.call(t4) === Boolean.prototype.valueOf.call(e4) : E(t4) ? E(e4) && BigInt.prototype.valueOf.call(t4) === BigInt.prototype.valueOf.call(e4) : x(e4) && Symbol.prototype.valueOf.call(t4) === Symbol.prototype.valueOf.call(e4);
            }(t3, e3)) return false;
          }
          return R(t3, e3, r3, n2, 0);
        }
        __name(M, "M");
        function D(t3, e3) {
          return e3.filter(function(e4) {
            return y(t3, e4);
          });
        }
        __name(D, "D");
        function R(t3, e3, r3, n2, s2, c2) {
          if (5 === arguments.length) {
            c2 = Object.keys(t3);
            var f2 = Object.keys(e3);
            if (c2.length !== f2.length) return false;
          }
          for (var p2 = 0; p2 < c2.length; p2++) if (!h(e3, c2[p2])) return false;
          if (r3 && 5 === arguments.length) {
            var d2 = l(t3);
            if (0 !== d2.length) {
              var b2 = 0;
              for (p2 = 0; p2 < d2.length; p2++) {
                var m2 = d2[p2];
                if (y(t3, m2)) {
                  if (!y(e3, m2)) return false;
                  c2.push(m2), b2++;
                } else if (y(e3, m2)) return false;
              }
              var v2 = l(e3);
              if (d2.length !== v2.length && D(e3, v2).length !== b2) return false;
            } else {
              var g2 = l(e3);
              if (0 !== g2.length && 0 !== D(e3, g2).length) return false;
            }
          }
          if (0 === c2.length && (0 === s2 || 1 === s2 && 0 === t3.length || 0 === t3.size)) return true;
          if (void 0 === n2) n2 = { val1: /* @__PURE__ */ new Map(), val2: /* @__PURE__ */ new Map(), position: 0 };
          else {
            var _2 = n2.val1.get(t3);
            if (void 0 !== _2) {
              var w2 = n2.val2.get(e3);
              if (void 0 !== w2) return _2 === w2;
            }
            n2.position++;
          }
          n2.val1.set(t3, n2.position), n2.val2.set(e3, n2.position);
          var O2 = function(t4, e4, r4, n3, s3, c3) {
            var l2 = 0;
            if (2 === c3) {
              if (!function(t5, e5, r5, n4) {
                for (var o2 = null, s4 = a(t5), u2 = 0; u2 < s4.length; u2++) {
                  var c4 = s4[u2];
                  if ("object" === i(c4) && null !== c4) null === o2 && (o2 = /* @__PURE__ */ new Set()), o2.add(c4);
                  else if (!e5.has(c4)) {
                    if (r5) return false;
                    if (!F(t5, e5, c4)) return false;
                    null === o2 && (o2 = /* @__PURE__ */ new Set()), o2.add(c4);
                  }
                }
                if (null !== o2) {
                  for (var l3 = a(e5), f4 = 0; f4 < l3.length; f4++) {
                    var p4 = l3[f4];
                    if ("object" === i(p4) && null !== p4) {
                      if (!U(o2, p4, r5, n4)) return false;
                    } else if (!r5 && !t5.has(p4) && !U(o2, p4, r5, n4)) return false;
                  }
                  return 0 === o2.size;
                }
                return true;
              }(t4, e4, r4, s3)) return false;
            } else if (3 === c3) {
              if (!function(t5, e5, r5, n4) {
                for (var s4 = null, a2 = u(t5), c4 = 0; c4 < a2.length; c4++) {
                  var l3 = o(a2[c4], 2), f4 = l3[0], p4 = l3[1];
                  if ("object" === i(f4) && null !== f4) null === s4 && (s4 = /* @__PURE__ */ new Set()), s4.add(f4);
                  else {
                    var h2 = e5.get(f4);
                    if (void 0 === h2 && !e5.has(f4) || !M(p4, h2, r5, n4)) {
                      if (r5) return false;
                      if (!L(t5, e5, f4, p4, n4)) return false;
                      null === s4 && (s4 = /* @__PURE__ */ new Set()), s4.add(f4);
                    }
                  }
                }
                if (null !== s4) {
                  for (var y3 = u(e5), d3 = 0; d3 < y3.length; d3++) {
                    var b3 = o(y3[d3], 2), m3 = (f4 = b3[0], b3[1]);
                    if ("object" === i(f4) && null !== f4) {
                      if (!V(s4, t5, f4, m3, r5, n4)) return false;
                    } else if (!(r5 || t5.has(f4) && M(t5.get(f4), m3, false, n4) || V(s4, t5, f4, m3, false, n4))) return false;
                  }
                  return 0 === s4.size;
                }
                return true;
              }(t4, e4, r4, s3)) return false;
            } else if (1 === c3) for (; l2 < t4.length; l2++) {
              if (!h(t4, l2)) {
                if (h(e4, l2)) return false;
                for (var f3 = Object.keys(t4); l2 < f3.length; l2++) {
                  var p3 = f3[l2];
                  if (!h(e4, p3) || !M(t4[p3], e4[p3], r4, s3)) return false;
                }
                return f3.length === Object.keys(e4).length;
              }
              if (!h(e4, l2) || !M(t4[l2], e4[l2], r4, s3)) return false;
            }
            for (l2 = 0; l2 < n3.length; l2++) {
              var y2 = n3[l2];
              if (!M(t4[y2], e4[y2], r4, s3)) return false;
            }
            return true;
          }(t3, e3, r3, c2, n2, s2);
          return n2.val1.delete(t3), n2.val2.delete(e3), O2;
        }
        __name(R, "R");
        function U(t3, e3, r3, n2) {
          for (var o2 = a(t3), i2 = 0; i2 < o2.length; i2++) {
            var s2 = o2[i2];
            if (M(e3, s2, r3, n2)) return t3.delete(s2), true;
          }
          return false;
        }
        __name(U, "U");
        function C(t3) {
          switch (i(t3)) {
            case "undefined":
              return null;
            case "object":
              return;
            case "symbol":
              return false;
            case "string":
              t3 = +t3;
            case "number":
              if (f(t3)) return false;
          }
          return true;
        }
        __name(C, "C");
        function F(t3, e3, r3) {
          var n2 = C(r3);
          return null != n2 ? n2 : e3.has(n2) && !t3.has(n2);
        }
        __name(F, "F");
        function L(t3, e3, r3, n2, o2) {
          var i2 = C(r3);
          if (null != i2) return i2;
          var s2 = e3.get(i2);
          return !(void 0 === s2 && !e3.has(i2) || !M(n2, s2, false, o2)) && !t3.has(i2) && M(n2, s2, false, o2);
        }
        __name(L, "L");
        function V(t3, e3, r3, n2, o2, i2) {
          for (var s2 = a(t3), u2 = 0; u2 < s2.length; u2++) {
            var c2 = s2[u2];
            if (M(r3, c2, o2, i2) && M(n2, e3.get(c2), o2, i2)) return t3.delete(c2), true;
          }
          return false;
        }
        __name(V, "V");
        t2.exports = { isDeepEqual: /* @__PURE__ */ __name(function(t3, e3) {
          return M(t3, e3, false);
        }, "isDeepEqual"), isDeepStrictEqual: /* @__PURE__ */ __name(function(t3, e3) {
          return M(t3, e3, true);
        }, "isDeepStrictEqual") };
      }, 6223: (t2) => {
        "use strict";
        var e2 = /\./g;
        t2.exports = function(t3) {
          if (-1 === t3.indexOf(".")) return [t3];
          for (var r2 = t3.split(e2), n = r2.length, o = new Array(n), i = "", s = 0; s < n; ++s) i += 0 !== i.length ? "." + r2[s] : r2[s], o[s] = i;
          return o;
        };
      }, 6312: (t2) => {
        "use strict";
        function e2(t3) {
          return e2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
            return typeof t4;
          } : function(t4) {
            return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
          }, e2(t3);
        }
        __name(e2, "e");
        var r2 = Object.prototype.toString;
        t2.exports = function(t3) {
          var n = r2.call(t3), o = "[object Arguments]" === n;
          return o || (o = "[object Array]" !== n && null !== t3 && "object" === e2(t3) && "number" == typeof t3.length && t3.length >= 0 && "[object Function]" === r2.call(t3.callee)), o;
        };
      }, 6353: (t2, e2, r2) => {
        "use strict";
        r2.r(e2), r2.d(e2, { BSON: /* @__PURE__ */ __name(() => ze, "BSON"), BSONError: /* @__PURE__ */ __name(() => q, "BSONError"), BSONOffsetError: /* @__PURE__ */ __name(() => K, "BSONOffsetError"), BSONRegExp: /* @__PURE__ */ __name(() => Ht, "BSONRegExp"), BSONRuntimeError: /* @__PURE__ */ __name(() => z, "BSONRuntimeError"), BSONSymbol: /* @__PURE__ */ __name(() => Wt, "BSONSymbol"), BSONType: /* @__PURE__ */ __name(() => V, "BSONType"), BSONValue: /* @__PURE__ */ __name(() => nt, "BSONValue"), BSONVersionError: /* @__PURE__ */ __name(() => J, "BSONVersionError"), Binary: /* @__PURE__ */ __name(() => ut, "Binary"), Code: /* @__PURE__ */ __name(() => ht, "Code"), DBRef: /* @__PURE__ */ __name(() => dt, "DBRef"), Decimal128: /* @__PURE__ */ __name(() => Rt, "Decimal128"), Double: /* @__PURE__ */ __name(() => Ut, "Double"), EJSON: /* @__PURE__ */ __name(() => Ie, "EJSON"), Int32: /* @__PURE__ */ __name(() => Ct, "Int32"), Long: /* @__PURE__ */ __name(() => $t, "Long"), MaxKey: /* @__PURE__ */ __name(() => Ft, "MaxKey"), MinKey: /* @__PURE__ */ __name(() => Lt, "MinKey"), ObjectId: /* @__PURE__ */ __name(() => Jt, "ObjectId"), Timestamp: /* @__PURE__ */ __name(() => Qt, "Timestamp"), UUID: /* @__PURE__ */ __name(() => pt, "UUID"), calculateObjectSize: /* @__PURE__ */ __name(() => qe, "calculateObjectSize"), deserialize: /* @__PURE__ */ __name(() => Ve, "deserialize"), deserializeStream: /* @__PURE__ */ __name(() => Je, "deserializeStream"), onDemand: /* @__PURE__ */ __name(() => De, "onDemand"), serialize: /* @__PURE__ */ __name(() => Fe, "serialize"), serializeWithBufferAndIndex: /* @__PURE__ */ __name(() => Le, "serializeWithBufferAndIndex"), setInternalBufferSize: /* @__PURE__ */ __name(() => Ce, "setInternalBufferSize") });
        var n = r2(5832).hp;
        const o = (() => {
          const t3 = Object.getOwnPropertyDescriptor(Object.getPrototypeOf(Uint8Array.prototype), Symbol.toStringTag).get;
          return (e3) => t3.call(e3);
        })();
        function i(t3) {
          return "Uint8Array" === o(t3);
        }
        __name(i, "i");
        function s(t3) {
          return "object" == typeof t3 && null != t3 && Symbol.toStringTag in t3 && ("ArrayBuffer" === t3[Symbol.toStringTag] || "SharedArrayBuffer" === t3[Symbol.toStringTag]);
        }
        __name(s, "s");
        function a(t3) {
          return t3 instanceof RegExp || "[object RegExp]" === Object.prototype.toString.call(t3);
        }
        __name(a, "a");
        function u(t3) {
          return "object" == typeof t3 && null != t3 && Symbol.toStringTag in t3 && "Map" === t3[Symbol.toStringTag];
        }
        __name(u, "u");
        function c(t3) {
          return t3 instanceof Date || "[object Date]" === Object.prototype.toString.call(t3);
        }
        __name(c, "c");
        function l(t3, e3) {
          return JSON.stringify(t3, (t4, e4) => "bigint" == typeof e4 ? { $numberLong: `${e4}` } : u(e4) ? Object.fromEntries(e4) : e4);
        }
        __name(l, "l");
        const f = 6, p = Symbol.for("@@mdb.bson.version"), h = 2147483647, y = -2147483648, d = Math.pow(2, 63) - 1, b = -Math.pow(2, 63), m = Math.pow(2, 53), v = -Math.pow(2, 53), g = 1, _ = 2, w = 3, O = 4, S = 5, $ = 6, j = 7, P = 8, A = 9, E = 10, x = 11, T = 12, k = 13, N = 14, I = 15, B = 16, M = 17, D = 18, R = 19, U = 255, C = 127, F = 0, L = 4, V = Object.freeze({ double: 1, string: 2, object: 3, array: 4, binData: 5, undefined: 6, objectId: 7, bool: 8, date: 9, null: 10, regex: 11, dbPointer: 12, javascript: 13, symbol: 14, javascriptWithScope: 15, int: 16, timestamp: 17, long: 18, decimal: 19, minKey: -1, maxKey: 127 });
        class q extends Error {
          static {
            __name(this, "q");
          }
          get bsonError() {
            return true;
          }
          get name() {
            return "BSONError";
          }
          constructor(t3, e3) {
            super(t3, e3);
          }
          static isBSONError(t3) {
            return null != t3 && "object" == typeof t3 && "bsonError" in t3 && true === t3.bsonError && "name" in t3 && "message" in t3 && "stack" in t3;
          }
        }
        class J extends q {
          static {
            __name(this, "J");
          }
          get name() {
            return "BSONVersionError";
          }
          constructor() {
            super(`Unsupported BSON version, bson types must be from bson ${f}.x.x`);
          }
        }
        class z extends q {
          static {
            __name(this, "z");
          }
          get name() {
            return "BSONRuntimeError";
          }
          constructor(t3) {
            super(t3);
          }
        }
        class K extends q {
          static {
            __name(this, "K");
          }
          get name() {
            return "BSONOffsetError";
          }
          constructor(t3, e3, r3) {
            super(`${t3}. offset: ${e3}`, r3), this.offset = e3;
          }
        }
        let H, W;
        function G(t3, e3, r3, n2) {
          if (n2) {
            H ??= new TextDecoder("utf8", { fatal: true });
            try {
              return H.decode(t3.subarray(e3, r3));
            } catch (t4) {
              throw new q("Invalid UTF-8 string in BSON document", { cause: t4 });
            }
          }
          return W ??= new TextDecoder("utf8", { fatal: false }), W.decode(t3.subarray(e3, r3));
        }
        __name(G, "G");
        function Q(t3, e3, r3) {
          if (0 === t3.length) return "";
          const n2 = r3 - e3;
          if (0 === n2) return "";
          if (n2 > 20) return null;
          if (1 === n2 && t3[e3] < 128) return String.fromCharCode(t3[e3]);
          if (2 === n2 && t3[e3] < 128 && t3[e3 + 1] < 128) return String.fromCharCode(t3[e3]) + String.fromCharCode(t3[e3 + 1]);
          if (3 === n2 && t3[e3] < 128 && t3[e3 + 1] < 128 && t3[e3 + 2] < 128) return String.fromCharCode(t3[e3]) + String.fromCharCode(t3[e3 + 1]) + String.fromCharCode(t3[e3 + 2]);
          const o2 = [];
          for (let n3 = e3; n3 < r3; n3++) {
            const e4 = t3[n3];
            if (e4 > 127) return null;
            o2.push(e4);
          }
          return String.fromCharCode(...o2);
        }
        __name(Q, "Q");
        const Y = { toLocalBufferType(t3) {
          if (n.isBuffer(t3)) return t3;
          if (ArrayBuffer.isView(t3)) return n.from(t3.buffer, t3.byteOffset, t3.byteLength);
          const e3 = t3?.[Symbol.toStringTag] ?? Object.prototype.toString.call(t3);
          if ("ArrayBuffer" === e3 || "SharedArrayBuffer" === e3 || "[object ArrayBuffer]" === e3 || "[object SharedArrayBuffer]" === e3) return n.from(t3);
          throw new q("Cannot create Buffer from the passed potentialBuffer.");
        }, allocate: /* @__PURE__ */ __name((t3) => n.alloc(t3), "allocate"), allocateUnsafe: /* @__PURE__ */ __name((t3) => n.allocUnsafe(t3), "allocateUnsafe"), equals: /* @__PURE__ */ __name((t3, e3) => Y.toLocalBufferType(t3).equals(e3), "equals"), fromNumberArray: /* @__PURE__ */ __name((t3) => n.from(t3), "fromNumberArray"), fromBase64: /* @__PURE__ */ __name((t3) => n.from(t3, "base64"), "fromBase64"), toBase64: /* @__PURE__ */ __name((t3) => Y.toLocalBufferType(t3).toString("base64"), "toBase64"), fromISO88591: /* @__PURE__ */ __name((t3) => n.from(t3, "binary"), "fromISO88591"), toISO88591: /* @__PURE__ */ __name((t3) => Y.toLocalBufferType(t3).toString("binary"), "toISO88591"), fromHex: /* @__PURE__ */ __name((t3) => n.from(t3, "hex"), "fromHex"), toHex: /* @__PURE__ */ __name((t3) => Y.toLocalBufferType(t3).toString("hex"), "toHex"), toUTF8(t3, e3, r3, n2) {
          const o2 = r3 - e3 <= 20 ? Q(t3, e3, r3) : null;
          if (null != o2) return o2;
          const i2 = Y.toLocalBufferType(t3).toString("utf8", e3, r3);
          if (n2) {
            for (let n3 = 0; n3 < i2.length; n3++) if (65533 === i2.charCodeAt(n3)) {
              G(t3, e3, r3, true);
              break;
            }
          }
          return i2;
        }, utf8ByteLength: /* @__PURE__ */ __name((t3) => n.byteLength(t3, "utf8"), "utf8ByteLength"), encodeUTF8Into(t3, e3, r3) {
          const n2 = function(t4, e4, r4) {
            if (0 === e4.length) return 0;
            if (e4.length > 25) return null;
            if (t4.length - r4 < e4.length) return null;
            for (let n3 = 0, o2 = r4; n3 < e4.length; n3++, o2++) {
              const r5 = e4.charCodeAt(n3);
              if (r5 > 127) return null;
              t4[o2] = r5;
            }
            return e4.length;
          }(t3, e3, r3);
          return null != n2 ? n2 : Y.toLocalBufferType(t3).write(e3, r3, void 0, "utf8");
        }, randomBytes: /* @__PURE__ */ __name(function(t3) {
          return Y.fromNumberArray(Array.from({ length: t3 }, () => Math.floor(256 * Math.random())));
        }, "randomBytes"), swap32: /* @__PURE__ */ __name((t3) => Y.toLocalBufferType(t3).swap32(), "swap32") };
        function Z(t3) {
          if (t3 < 0) throw new RangeError(`The argument 'byteLength' is invalid. Received ${t3}`);
          return et.fromNumberArray(Array.from({ length: t3 }, () => Math.floor(256 * Math.random())));
        }
        __name(Z, "Z");
        const X = (() => {
          const { crypto: t3 } = globalThis;
          if (null != t3 && "function" == typeof t3.getRandomValues) return (e3) => t3.getRandomValues(et.allocate(e3));
          if (function() {
            const { navigator: t4 } = globalThis;
            return "object" == typeof t4 && "ReactNative" === t4.product;
          }()) {
            const { console: t4 } = globalThis;
            t4?.warn?.("BSON: For React Native please polyfill crypto.getRandomValues, e.g. using: https://www.npmjs.com/package/react-native-get-random-values.");
          }
          return Z;
        })(), tt = /(\d|[a-f])/i, et = { toLocalBufferType(t3) {
          const e3 = t3?.[Symbol.toStringTag] ?? Object.prototype.toString.call(t3);
          if ("Uint8Array" === e3) return t3;
          if (ArrayBuffer.isView(t3)) return new Uint8Array(t3.buffer.slice(t3.byteOffset, t3.byteOffset + t3.byteLength));
          if ("ArrayBuffer" === e3 || "SharedArrayBuffer" === e3 || "[object ArrayBuffer]" === e3 || "[object SharedArrayBuffer]" === e3) return new Uint8Array(t3);
          throw new q("Cannot make a Uint8Array from passed potentialBuffer.");
        }, allocate(t3) {
          if ("number" != typeof t3) throw new TypeError(`The "size" argument must be of type number. Received ${String(t3)}`);
          return new Uint8Array(t3);
        }, allocateUnsafe: /* @__PURE__ */ __name((t3) => et.allocate(t3), "allocateUnsafe"), equals(t3, e3) {
          if (t3.byteLength !== e3.byteLength) return false;
          for (let r3 = 0; r3 < t3.byteLength; r3++) if (t3[r3] !== e3[r3]) return false;
          return true;
        }, fromNumberArray: /* @__PURE__ */ __name((t3) => Uint8Array.from(t3), "fromNumberArray"), fromBase64: /* @__PURE__ */ __name((t3) => Uint8Array.from(atob(t3), (t4) => t4.charCodeAt(0)), "fromBase64"), toBase64: /* @__PURE__ */ __name((t3) => btoa(et.toISO88591(t3)), "toBase64"), fromISO88591: /* @__PURE__ */ __name((t3) => Uint8Array.from(t3, (t4) => 255 & t4.charCodeAt(0)), "fromISO88591"), toISO88591: /* @__PURE__ */ __name((t3) => Array.from(Uint16Array.from(t3), (t4) => String.fromCharCode(t4)).join(""), "toISO88591"), fromHex(t3) {
          const e3 = t3.length % 2 == 0 ? t3 : t3.slice(0, t3.length - 1), r3 = [];
          for (let t4 = 0; t4 < e3.length; t4 += 2) {
            const n2 = e3[t4], o2 = e3[t4 + 1];
            if (!tt.test(n2)) break;
            if (!tt.test(o2)) break;
            const i2 = Number.parseInt(`${n2}${o2}`, 16);
            r3.push(i2);
          }
          return Uint8Array.from(r3);
        }, toHex: /* @__PURE__ */ __name((t3) => Array.from(t3, (t4) => t4.toString(16).padStart(2, "0")).join(""), "toHex"), toUTF8(t3, e3, r3, n2) {
          const o2 = r3 - e3 <= 20 ? Q(t3, e3, r3) : null;
          return null != o2 ? o2 : G(t3, e3, r3, n2);
        }, utf8ByteLength: /* @__PURE__ */ __name((t3) => new TextEncoder().encode(t3).byteLength, "utf8ByteLength"), encodeUTF8Into(t3, e3, r3) {
          const n2 = new TextEncoder().encode(e3);
          return t3.set(n2, r3), n2.byteLength;
        }, randomBytes: X, swap32(t3) {
          if (t3.length % 4 != 0) throw new RangeError("Buffer size must be a multiple of 32-bits");
          for (let e3 = 0; e3 < t3.length; e3 += 4) {
            const r3 = t3[e3], n2 = t3[e3 + 1], o2 = t3[e3 + 2], i2 = t3[e3 + 3];
            t3[e3] = i2, t3[e3 + 1] = o2, t3[e3 + 2] = n2, t3[e3 + 3] = r3;
          }
          return t3;
        } }, rt = "function" == typeof n && true !== n.prototype?._isBuffer ? Y : et;
        class nt {
          static {
            __name(this, "nt");
          }
          get [p]() {
            return f;
          }
          [Symbol.for("nodejs.util.inspect.custom")](t3, e3, r3) {
            return this.inspect(t3, e3, r3);
          }
        }
        const ot = new Float64Array(1), it = new Uint8Array(ot.buffer, 0, 8);
        ot[0] = -1;
        const st = 0 === it[7], at = { isBigEndian: st, getNonnegativeInt32LE(t3, e3) {
          if (t3[e3 + 3] > 127) throw new RangeError(`Size cannot be negative at offset: ${e3}`);
          return t3[e3] | t3[e3 + 1] << 8 | t3[e3 + 2] << 16 | t3[e3 + 3] << 24;
        }, getInt32LE: /* @__PURE__ */ __name((t3, e3) => t3[e3] | t3[e3 + 1] << 8 | t3[e3 + 2] << 16 | t3[e3 + 3] << 24, "getInt32LE"), getUint32LE: /* @__PURE__ */ __name((t3, e3) => t3[e3] + 256 * t3[e3 + 1] + 65536 * t3[e3 + 2] + 16777216 * t3[e3 + 3], "getUint32LE"), getUint32BE: /* @__PURE__ */ __name((t3, e3) => t3[e3 + 3] + 256 * t3[e3 + 2] + 65536 * t3[e3 + 1] + 16777216 * t3[e3], "getUint32BE"), getBigInt64LE(t3, e3) {
          const r3 = BigInt(t3[e3 + 4] + 256 * t3[e3 + 5] + 65536 * t3[e3 + 6] + (t3[e3 + 7] << 24)), n2 = BigInt(t3[e3] + 256 * t3[e3 + 1] + 65536 * t3[e3 + 2] + 16777216 * t3[e3 + 3]);
          return (r3 << BigInt(32)) + n2;
        }, getFloat64LE: st ? (t3, e3) => (it[7] = t3[e3], it[6] = t3[e3 + 1], it[5] = t3[e3 + 2], it[4] = t3[e3 + 3], it[3] = t3[e3 + 4], it[2] = t3[e3 + 5], it[1] = t3[e3 + 6], it[0] = t3[e3 + 7], ot[0]) : (t3, e3) => (it[0] = t3[e3], it[1] = t3[e3 + 1], it[2] = t3[e3 + 2], it[3] = t3[e3 + 3], it[4] = t3[e3 + 4], it[5] = t3[e3 + 5], it[6] = t3[e3 + 6], it[7] = t3[e3 + 7], ot[0]), setInt32BE: /* @__PURE__ */ __name((t3, e3, r3) => (t3[e3 + 3] = r3, r3 >>>= 8, t3[e3 + 2] = r3, r3 >>>= 8, t3[e3 + 1] = r3, r3 >>>= 8, t3[e3] = r3, 4), "setInt32BE"), setInt32LE: /* @__PURE__ */ __name((t3, e3, r3) => (t3[e3] = r3, r3 >>>= 8, t3[e3 + 1] = r3, r3 >>>= 8, t3[e3 + 2] = r3, r3 >>>= 8, t3[e3 + 3] = r3, 4), "setInt32LE"), setBigInt64LE(t3, e3, r3) {
          const n2 = BigInt(4294967295);
          let o2 = Number(r3 & n2);
          t3[e3] = o2, o2 >>= 8, t3[e3 + 1] = o2, o2 >>= 8, t3[e3 + 2] = o2, o2 >>= 8, t3[e3 + 3] = o2;
          let i2 = Number(r3 >> BigInt(32) & n2);
          return t3[e3 + 4] = i2, i2 >>= 8, t3[e3 + 5] = i2, i2 >>= 8, t3[e3 + 6] = i2, i2 >>= 8, t3[e3 + 7] = i2, 8;
        }, setFloat64LE: st ? (t3, e3, r3) => (ot[0] = r3, t3[e3] = it[7], t3[e3 + 1] = it[6], t3[e3 + 2] = it[5], t3[e3 + 3] = it[4], t3[e3 + 4] = it[3], t3[e3 + 5] = it[2], t3[e3 + 6] = it[1], t3[e3 + 7] = it[0], 8) : (t3, e3, r3) => (ot[0] = r3, t3[e3] = it[0], t3[e3 + 1] = it[1], t3[e3 + 2] = it[2], t3[e3 + 3] = it[3], t3[e3 + 4] = it[4], t3[e3 + 5] = it[5], t3[e3 + 6] = it[6], t3[e3 + 7] = it[7], 8) };
        class ut extends nt {
          static {
            __name(this, "ut");
          }
          get _bsontype() {
            return "Binary";
          }
          constructor(t3, e3) {
            if (super(), null != t3 && "string" == typeof t3 && !ArrayBuffer.isView(t3) && !s(t3) && !Array.isArray(t3)) throw new q("Binary can only be constructed from Uint8Array or number[]");
            this.sub_type = e3 ?? ut.BSON_BINARY_SUBTYPE_DEFAULT, null == t3 ? (this.buffer = rt.allocate(ut.BUFFER_SIZE), this.position = 0) : (this.buffer = Array.isArray(t3) ? rt.fromNumberArray(t3) : rt.toLocalBufferType(t3), this.position = this.buffer.byteLength);
          }
          put(t3) {
            if ("string" == typeof t3 && 1 !== t3.length) throw new q("only accepts single character String");
            if ("number" != typeof t3 && 1 !== t3.length) throw new q("only accepts single character Uint8Array or Array");
            let e3;
            if (e3 = "string" == typeof t3 ? t3.charCodeAt(0) : "number" == typeof t3 ? t3 : t3[0], e3 < 0 || e3 > 255) throw new q("only accepts number in a valid unsigned byte range 0-255");
            if (this.buffer.byteLength > this.position) this.buffer[this.position++] = e3;
            else {
              const t4 = rt.allocate(ut.BUFFER_SIZE + this.buffer.length);
              t4.set(this.buffer, 0), this.buffer = t4, this.buffer[this.position++] = e3;
            }
          }
          write(t3, e3) {
            if (e3 = "number" == typeof e3 ? e3 : this.position, this.buffer.byteLength < e3 + t3.length) {
              const e4 = rt.allocate(this.buffer.byteLength + t3.length);
              e4.set(this.buffer, 0), this.buffer = e4;
            }
            if (ArrayBuffer.isView(t3)) this.buffer.set(rt.toLocalBufferType(t3), e3), this.position = e3 + t3.byteLength > this.position ? e3 + t3.length : this.position;
            else if ("string" == typeof t3) throw new q("input cannot be string");
          }
          read(t3, e3) {
            const r3 = t3 + (e3 = e3 && e3 > 0 ? e3 : this.position);
            return this.buffer.subarray(t3, r3 > this.position ? this.position : r3);
          }
          value() {
            return this.buffer.length === this.position ? this.buffer : this.buffer.subarray(0, this.position);
          }
          length() {
            return this.position;
          }
          toJSON() {
            return rt.toBase64(this.buffer.subarray(0, this.position));
          }
          toString(t3) {
            return "hex" === t3 ? rt.toHex(this.buffer.subarray(0, this.position)) : "base64" === t3 ? rt.toBase64(this.buffer.subarray(0, this.position)) : rt.toUTF8(this.buffer, 0, this.position, false);
          }
          toExtendedJSON(t3) {
            t3 = t3 || {}, this.sub_type === ut.SUBTYPE_VECTOR && ct(this);
            const e3 = rt.toBase64(this.buffer), r3 = Number(this.sub_type).toString(16);
            return t3.legacy ? { $binary: e3, $type: 1 === r3.length ? "0" + r3 : r3 } : { $binary: { base64: e3, subType: 1 === r3.length ? "0" + r3 : r3 } };
          }
          toUUID() {
            if (this.sub_type === ut.SUBTYPE_UUID) return new pt(this.buffer.subarray(0, this.position));
            throw new q(`Binary sub_type "${this.sub_type}" is not supported for converting to UUID. Only "${ut.SUBTYPE_UUID}" is currently supported.`);
          }
          static createFromHexString(t3, e3) {
            return new ut(rt.fromHex(t3), e3);
          }
          static createFromBase64(t3, e3) {
            return new ut(rt.fromBase64(t3), e3);
          }
          static fromExtendedJSON(t3, e3) {
            let r3, n2;
            if (e3 = e3 || {}, "$binary" in t3 ? e3.legacy && "string" == typeof t3.$binary && "$type" in t3 ? (n2 = t3.$type ? parseInt(t3.$type, 16) : 0, r3 = rt.fromBase64(t3.$binary)) : "string" != typeof t3.$binary && (n2 = t3.$binary.subType ? parseInt(t3.$binary.subType, 16) : 0, r3 = rt.fromBase64(t3.$binary.base64)) : "$uuid" in t3 && (n2 = 4, r3 = pt.bytesFromString(t3.$uuid)), !r3) throw new q(`Unexpected Binary Extended JSON format ${JSON.stringify(t3)}`);
            return n2 === L ? new pt(r3) : new ut(r3, n2);
          }
          inspect(t3, e3, r3) {
            return r3 ??= l, `Binary.createFromBase64(${r3(rt.toBase64(this.buffer.subarray(0, this.position)), e3)}, ${r3(this.sub_type, e3)})`;
          }
          toInt8Array() {
            if (this.sub_type !== ut.SUBTYPE_VECTOR) throw new q("Binary sub_type is not Vector");
            if (this.buffer[0] !== ut.VECTOR_TYPE.Int8) throw new q("Binary datatype field is not Int8");
            return ct(this), new Int8Array(this.buffer.buffer.slice(this.buffer.byteOffset + 2, this.buffer.byteOffset + this.position));
          }
          toFloat32Array() {
            if (this.sub_type !== ut.SUBTYPE_VECTOR) throw new q("Binary sub_type is not Vector");
            if (this.buffer[0] !== ut.VECTOR_TYPE.Float32) throw new q("Binary datatype field is not Float32");
            ct(this);
            const t3 = new Uint8Array(this.buffer.buffer.slice(this.buffer.byteOffset + 2, this.buffer.byteOffset + this.position));
            return at.isBigEndian && rt.swap32(t3), new Float32Array(t3.buffer);
          }
          toPackedBits() {
            if (this.sub_type !== ut.SUBTYPE_VECTOR) throw new q("Binary sub_type is not Vector");
            if (this.buffer[0] !== ut.VECTOR_TYPE.PackedBit) throw new q("Binary datatype field is not packed bit");
            return ct(this), new Uint8Array(this.buffer.buffer.slice(this.buffer.byteOffset + 2, this.buffer.byteOffset + this.position));
          }
          toBits() {
            if (this.sub_type !== ut.SUBTYPE_VECTOR) throw new q("Binary sub_type is not Vector");
            if (this.buffer[0] !== ut.VECTOR_TYPE.PackedBit) throw new q("Binary datatype field is not packed bit");
            ct(this);
            const t3 = 8 * (this.length() - 2) - this.buffer[1], e3 = new Int8Array(t3);
            for (let t4 = 0; t4 < e3.length; t4++) {
              const r3 = t4 / 8 | 0, n2 = this.buffer[r3 + 2] >> 7 - t4 % 8 & 1;
              e3[t4] = n2;
            }
            return e3;
          }
          static fromInt8Array(t3) {
            const e3 = rt.allocate(t3.byteLength + 2);
            e3[0] = ut.VECTOR_TYPE.Int8, e3[1] = 0;
            const r3 = new Uint8Array(t3.buffer, t3.byteOffset, t3.byteLength);
            e3.set(r3, 2);
            const n2 = new this(e3, this.SUBTYPE_VECTOR);
            return ct(n2), n2;
          }
          static fromFloat32Array(t3) {
            const e3 = rt.allocate(t3.byteLength + 2);
            e3[0] = ut.VECTOR_TYPE.Float32, e3[1] = 0;
            const r3 = new Uint8Array(t3.buffer, t3.byteOffset, t3.byteLength);
            e3.set(r3, 2), at.isBigEndian && rt.swap32(new Uint8Array(e3.buffer, 2));
            const n2 = new this(e3, this.SUBTYPE_VECTOR);
            return ct(n2), n2;
          }
          static fromPackedBits(t3, e3 = 0) {
            const r3 = rt.allocate(t3.byteLength + 2);
            r3[0] = ut.VECTOR_TYPE.PackedBit, r3[1] = e3, r3.set(t3, 2);
            const n2 = new this(r3, this.SUBTYPE_VECTOR);
            return ct(n2), n2;
          }
          static fromBits(t3) {
            const e3 = t3.length + 7 >>> 3, r3 = new Uint8Array(e3 + 2);
            r3[0] = ut.VECTOR_TYPE.PackedBit;
            const n2 = t3.length % 8;
            r3[1] = 0 === n2 ? 0 : 8 - n2;
            for (let e4 = 0; e4 < t3.length; e4++) {
              const n3 = e4 >>> 3, o2 = t3[e4];
              if (0 !== o2 && 1 !== o2) throw new q(`Invalid bit value at ${e4}: must be 0 or 1, found ${t3[e4]}`);
              if (0 === o2) continue;
              const i2 = 7 - e4 % 8;
              r3[n3 + 2] |= o2 << i2;
            }
            return new this(r3, ut.SUBTYPE_VECTOR);
          }
        }
        function ct(t3) {
          if (t3.sub_type !== ut.SUBTYPE_VECTOR) return;
          const e3 = t3.position, r3 = t3.buffer[0], n2 = t3.buffer[1];
          if ((r3 === ut.VECTOR_TYPE.Float32 || r3 === ut.VECTOR_TYPE.Int8) && 0 !== n2) throw new q("Invalid Vector: padding must be zero for int8 and float32 vectors");
          if (r3 === ut.VECTOR_TYPE.Float32 && 0 !== e3 && e3 - 2 != 0 && (e3 - 2) % 4 != 0) throw new q("Invalid Vector: Float32 vector must contain a multiple of 4 bytes");
          if (r3 === ut.VECTOR_TYPE.PackedBit && 0 !== n2 && 2 === e3) throw new q("Invalid Vector: padding must be zero for packed bit vectors that are empty");
          if (r3 === ut.VECTOR_TYPE.PackedBit && n2 > 7) throw new q(`Invalid Vector: padding must be a value between 0 and 7. found: ${n2}`);
        }
        __name(ct, "ct");
        ut.BSON_BINARY_SUBTYPE_DEFAULT = 0, ut.BUFFER_SIZE = 256, ut.SUBTYPE_DEFAULT = 0, ut.SUBTYPE_FUNCTION = 1, ut.SUBTYPE_BYTE_ARRAY = 2, ut.SUBTYPE_UUID_OLD = 3, ut.SUBTYPE_UUID = 4, ut.SUBTYPE_MD5 = 5, ut.SUBTYPE_ENCRYPTED = 6, ut.SUBTYPE_COLUMN = 7, ut.SUBTYPE_SENSITIVE = 8, ut.SUBTYPE_VECTOR = 9, ut.SUBTYPE_USER_DEFINED = 128, ut.VECTOR_TYPE = Object.freeze({ Int8: 3, Float32: 39, PackedBit: 16 });
        const lt = /^[0-9A-F]{32}$/i, ft = /^[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}$/i;
        class pt extends ut {
          static {
            __name(this, "pt");
          }
          constructor(t3) {
            let e3;
            if (null == t3) e3 = pt.generate();
            else if (t3 instanceof pt) e3 = rt.toLocalBufferType(new Uint8Array(t3.buffer));
            else if (ArrayBuffer.isView(t3) && 16 === t3.byteLength) e3 = rt.toLocalBufferType(t3);
            else {
              if ("string" != typeof t3) throw new q("Argument passed in UUID constructor must be a UUID, a 16 byte Buffer or a 32/36 character hex string (dashes excluded/included, format: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx).");
              e3 = pt.bytesFromString(t3);
            }
            super(e3, L);
          }
          get id() {
            return this.buffer;
          }
          set id(t3) {
            this.buffer = t3;
          }
          toHexString(t3 = true) {
            return t3 ? [rt.toHex(this.buffer.subarray(0, 4)), rt.toHex(this.buffer.subarray(4, 6)), rt.toHex(this.buffer.subarray(6, 8)), rt.toHex(this.buffer.subarray(8, 10)), rt.toHex(this.buffer.subarray(10, 16))].join("-") : rt.toHex(this.buffer);
          }
          toString(t3) {
            return "hex" === t3 ? rt.toHex(this.id) : "base64" === t3 ? rt.toBase64(this.id) : this.toHexString();
          }
          toJSON() {
            return this.toHexString();
          }
          equals(t3) {
            if (!t3) return false;
            if (t3 instanceof pt) return rt.equals(t3.id, this.id);
            try {
              return rt.equals(new pt(t3).id, this.id);
            } catch {
              return false;
            }
          }
          toBinary() {
            return new ut(this.id, ut.SUBTYPE_UUID);
          }
          static generate() {
            const t3 = rt.randomBytes(16);
            return t3[6] = 15 & t3[6] | 64, t3[8] = 63 & t3[8] | 128, t3;
          }
          static isValid(t3) {
            return !!t3 && ("string" == typeof t3 ? pt.isValidUUIDString(t3) : i(t3) ? 16 === t3.byteLength : "Binary" === t3._bsontype && t3.sub_type === this.SUBTYPE_UUID && 16 === t3.buffer.byteLength);
          }
          static createFromHexString(t3) {
            const e3 = pt.bytesFromString(t3);
            return new pt(e3);
          }
          static createFromBase64(t3) {
            return new pt(rt.fromBase64(t3));
          }
          static bytesFromString(t3) {
            if (!pt.isValidUUIDString(t3)) throw new q("UUID string representation must be 32 hex digits or canonical hyphenated representation");
            return rt.fromHex(t3.replace(/-/g, ""));
          }
          static isValidUUIDString(t3) {
            return lt.test(t3) || ft.test(t3);
          }
          inspect(t3, e3, r3) {
            return r3 ??= l, `new UUID(${r3(this.toHexString(), e3)})`;
          }
        }
        class ht extends nt {
          static {
            __name(this, "ht");
          }
          get _bsontype() {
            return "Code";
          }
          constructor(t3, e3) {
            super(), this.code = t3.toString(), this.scope = e3 ?? null;
          }
          toJSON() {
            return null != this.scope ? { code: this.code, scope: this.scope } : { code: this.code };
          }
          toExtendedJSON() {
            return this.scope ? { $code: this.code, $scope: this.scope } : { $code: this.code };
          }
          static fromExtendedJSON(t3) {
            return new ht(t3.$code, t3.$scope);
          }
          inspect(t3, e3, r3) {
            r3 ??= l;
            let n2 = r3(this.code, e3);
            const o2 = n2.includes("\n");
            return null != this.scope && (n2 += `,${o2 ? "\n" : " "}${r3(this.scope, e3)}`), `new Code(${o2 ? "\n" : ""}${n2}${o2 && null === this.scope ? "\n" : ""})`;
          }
        }
        function yt(t3) {
          return null != t3 && "object" == typeof t3 && "$id" in t3 && null != t3.$id && "$ref" in t3 && "string" == typeof t3.$ref && (!("$db" in t3) || "$db" in t3 && "string" == typeof t3.$db);
        }
        __name(yt, "yt");
        class dt extends nt {
          static {
            __name(this, "dt");
          }
          get _bsontype() {
            return "DBRef";
          }
          constructor(t3, e3, r3, n2) {
            super();
            const o2 = t3.split(".");
            2 === o2.length && (r3 = o2.shift(), t3 = o2.shift()), this.collection = t3, this.oid = e3, this.db = r3, this.fields = n2 || {};
          }
          get namespace() {
            return this.collection;
          }
          set namespace(t3) {
            this.collection = t3;
          }
          toJSON() {
            const t3 = Object.assign({ $ref: this.collection, $id: this.oid }, this.fields);
            return null != this.db && (t3.$db = this.db), t3;
          }
          toExtendedJSON(t3) {
            t3 = t3 || {};
            let e3 = { $ref: this.collection, $id: this.oid };
            return t3.legacy || (this.db && (e3.$db = this.db), e3 = Object.assign(e3, this.fields)), e3;
          }
          static fromExtendedJSON(t3) {
            const e3 = Object.assign({}, t3);
            return delete e3.$ref, delete e3.$id, delete e3.$db, new dt(t3.$ref, t3.$id, t3.$db, e3);
          }
          inspect(t3, e3, r3) {
            r3 ??= l;
            const n2 = [r3(this.namespace, e3), r3(this.oid, e3), ...this.db ? [r3(this.db, e3)] : [], ...Object.keys(this.fields).length > 0 ? [r3(this.fields, e3)] : []];
            return n2[1] = r3 === l ? `new ObjectId(${n2[1]})` : n2[1], `new DBRef(${n2.join(", ")})`;
          }
        }
        function bt(t3) {
          if ("" === t3) return t3;
          let e3 = 0;
          const r3 = "-" === t3[e3], n2 = "+" === t3[e3];
          (n2 || r3) && (e3 += 1);
          let o2 = false;
          for (; e3 < t3.length && "0" === t3[e3]; ++e3) o2 = true;
          return o2 ? `${r3 ? "-" : ""}${t3.length === e3 ? "0" : t3.slice(e3)}` : n2 ? t3.slice(1) : t3;
        }
        __name(bt, "bt");
        let mt;
        try {
          mt = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11])), {}).exports;
        } catch {
        }
        const vt = 4294967296, gt = 18446744073709552e3, _t = gt / 2, wt = {}, Ot = {}, St = /^(\+?0|(\+|-)?[1-9][0-9]*)$/;
        class $t extends nt {
          static {
            __name(this, "$t");
          }
          get _bsontype() {
            return "Long";
          }
          get __isLong__() {
            return true;
          }
          constructor(t3 = 0, e3, r3) {
            super();
            const n2 = "boolean" == typeof e3 ? e3 : Boolean(r3), o2 = "number" == typeof e3 ? e3 : 0, i2 = "string" == typeof t3 ? $t.fromString(t3, n2) : "bigint" == typeof t3 ? $t.fromBigInt(t3, n2) : { low: 0 | t3, high: 0 | o2, unsigned: n2 };
            this.low = i2.low, this.high = i2.high, this.unsigned = i2.unsigned;
          }
          static fromBits(t3, e3, r3) {
            return new $t(t3, e3, r3);
          }
          static fromInt(t3, e3) {
            let r3, n2, o2;
            return e3 ? (o2 = 0 <= (t3 >>>= 0) && t3 < 256) && (n2 = Ot[t3], n2) ? n2 : (r3 = $t.fromBits(t3, (0 | t3) < 0 ? -1 : 0, true), o2 && (Ot[t3] = r3), r3) : (o2 = -128 <= (t3 |= 0) && t3 < 128) && (n2 = wt[t3], n2) ? n2 : (r3 = $t.fromBits(t3, t3 < 0 ? -1 : 0, false), o2 && (wt[t3] = r3), r3);
          }
          static fromNumber(t3, e3) {
            if (isNaN(t3)) return e3 ? $t.UZERO : $t.ZERO;
            if (e3) {
              if (t3 < 0) return $t.UZERO;
              if (t3 >= gt) return $t.MAX_UNSIGNED_VALUE;
            } else {
              if (t3 <= -9223372036854776e3) return $t.MIN_VALUE;
              if (t3 + 1 >= _t) return $t.MAX_VALUE;
            }
            return t3 < 0 ? $t.fromNumber(-t3, e3).neg() : $t.fromBits(t3 % vt | 0, t3 / vt | 0, e3);
          }
          static fromBigInt(t3, e3) {
            const r3 = BigInt(4294967295), n2 = BigInt(32);
            return new $t(Number(t3 & r3), Number(t3 >> n2 & r3), e3);
          }
          static _fromString(t3, e3, r3) {
            if (0 === t3.length) throw new q("empty string");
            if (r3 < 2 || 36 < r3) throw new q("radix");
            let n2;
            if ((n2 = t3.indexOf("-")) > 0) throw new q("interior hyphen");
            if (0 === n2) return $t._fromString(t3.substring(1), e3, r3).neg();
            const o2 = $t.fromNumber(Math.pow(r3, 8));
            let i2 = $t.ZERO;
            for (let e4 = 0; e4 < t3.length; e4 += 8) {
              const n3 = Math.min(8, t3.length - e4), s2 = parseInt(t3.substring(e4, e4 + n3), r3);
              if (n3 < 8) {
                const t4 = $t.fromNumber(Math.pow(r3, n3));
                i2 = i2.mul(t4).add($t.fromNumber(s2));
              } else i2 = i2.mul(o2), i2 = i2.add($t.fromNumber(s2));
            }
            return i2.unsigned = e3, i2;
          }
          static fromStringStrict(t3, e3, r3) {
            let n2 = false;
            if ("number" == typeof e3 ? (r3 = e3, e3 = false) : n2 = !!e3, r3 ??= 10, t3.trim() !== t3) throw new q(`Input: '${t3}' contains leading and/or trailing whitespace`);
            if (!function(t4, e4) {
              const r4 = "0123456789abcdefghijklmnopqrstuvwxyz".slice(0, e4 = e4 ?? 10);
              return !new RegExp(`[^-+${r4}]`, "i").test(t4) && t4;
            }(t3, r3)) throw new q(`Input: '${t3}' contains invalid characters for radix: ${r3}`);
            const o2 = bt(t3), i2 = $t._fromString(o2, n2, r3);
            if (i2.toString(r3).toLowerCase() !== o2.toLowerCase()) throw new q(`Input: ${t3} is not representable as ${i2.unsigned ? "an unsigned" : "a signed"} 64-bit Long ${null != r3 ? `with radix: ${r3}` : ""}`);
            return i2;
          }
          static fromString(t3, e3, r3) {
            let n2 = false;
            return "number" == typeof e3 ? (r3 = e3, e3 = false) : n2 = !!e3, r3 ??= 10, "NaN" === t3 && r3 < 24 || ("Infinity" === t3 || "+Infinity" === t3 || "-Infinity" === t3) && r3 < 35 ? $t.ZERO : $t._fromString(t3, n2, r3);
          }
          static fromBytes(t3, e3, r3) {
            return r3 ? $t.fromBytesLE(t3, e3) : $t.fromBytesBE(t3, e3);
          }
          static fromBytesLE(t3, e3) {
            return new $t(t3[0] | t3[1] << 8 | t3[2] << 16 | t3[3] << 24, t3[4] | t3[5] << 8 | t3[6] << 16 | t3[7] << 24, e3);
          }
          static fromBytesBE(t3, e3) {
            return new $t(t3[4] << 24 | t3[5] << 16 | t3[6] << 8 | t3[7], t3[0] << 24 | t3[1] << 16 | t3[2] << 8 | t3[3], e3);
          }
          static isLong(t3) {
            return null != t3 && "object" == typeof t3 && "__isLong__" in t3 && true === t3.__isLong__;
          }
          static fromValue(t3, e3) {
            return "number" == typeof t3 ? $t.fromNumber(t3, e3) : "string" == typeof t3 ? $t.fromString(t3, e3) : $t.fromBits(t3.low, t3.high, "boolean" == typeof e3 ? e3 : t3.unsigned);
          }
          add(t3) {
            $t.isLong(t3) || (t3 = $t.fromValue(t3));
            const e3 = this.high >>> 16, r3 = 65535 & this.high, n2 = this.low >>> 16, o2 = 65535 & this.low, i2 = t3.high >>> 16, s2 = 65535 & t3.high, a2 = t3.low >>> 16;
            let u2 = 0, c2 = 0, l2 = 0, f2 = 0;
            return f2 += o2 + (65535 & t3.low), l2 += f2 >>> 16, f2 &= 65535, l2 += n2 + a2, c2 += l2 >>> 16, l2 &= 65535, c2 += r3 + s2, u2 += c2 >>> 16, c2 &= 65535, u2 += e3 + i2, u2 &= 65535, $t.fromBits(l2 << 16 | f2, u2 << 16 | c2, this.unsigned);
          }
          and(t3) {
            return $t.isLong(t3) || (t3 = $t.fromValue(t3)), $t.fromBits(this.low & t3.low, this.high & t3.high, this.unsigned);
          }
          compare(t3) {
            if ($t.isLong(t3) || (t3 = $t.fromValue(t3)), this.eq(t3)) return 0;
            const e3 = this.isNegative(), r3 = t3.isNegative();
            return e3 && !r3 ? -1 : !e3 && r3 ? 1 : this.unsigned ? t3.high >>> 0 > this.high >>> 0 || t3.high === this.high && t3.low >>> 0 > this.low >>> 0 ? -1 : 1 : this.sub(t3).isNegative() ? -1 : 1;
          }
          comp(t3) {
            return this.compare(t3);
          }
          divide(t3) {
            if ($t.isLong(t3) || (t3 = $t.fromValue(t3)), t3.isZero()) throw new q("division by zero");
            if (mt) {
              if (!this.unsigned && -2147483648 === this.high && -1 === t3.low && -1 === t3.high) return this;
              const e4 = (this.unsigned ? mt.div_u : mt.div_s)(this.low, this.high, t3.low, t3.high);
              return $t.fromBits(e4, mt.get_high(), this.unsigned);
            }
            if (this.isZero()) return this.unsigned ? $t.UZERO : $t.ZERO;
            let e3, r3, n2;
            if (this.unsigned) {
              if (t3.unsigned || (t3 = t3.toUnsigned()), t3.gt(this)) return $t.UZERO;
              if (t3.gt(this.shru(1))) return $t.UONE;
              n2 = $t.UZERO;
            } else {
              if (this.eq($t.MIN_VALUE)) return t3.eq($t.ONE) || t3.eq($t.NEG_ONE) ? $t.MIN_VALUE : t3.eq($t.MIN_VALUE) ? $t.ONE : (e3 = this.shr(1).div(t3).shl(1), e3.eq($t.ZERO) ? t3.isNegative() ? $t.ONE : $t.NEG_ONE : (r3 = this.sub(t3.mul(e3)), n2 = e3.add(r3.div(t3)), n2));
              if (t3.eq($t.MIN_VALUE)) return this.unsigned ? $t.UZERO : $t.ZERO;
              if (this.isNegative()) return t3.isNegative() ? this.neg().div(t3.neg()) : this.neg().div(t3).neg();
              if (t3.isNegative()) return this.div(t3.neg()).neg();
              n2 = $t.ZERO;
            }
            for (r3 = this; r3.gte(t3); ) {
              e3 = Math.max(1, Math.floor(r3.toNumber() / t3.toNumber()));
              const o2 = Math.ceil(Math.log(e3) / Math.LN2), i2 = o2 <= 48 ? 1 : Math.pow(2, o2 - 48);
              let s2 = $t.fromNumber(e3), a2 = s2.mul(t3);
              for (; a2.isNegative() || a2.gt(r3); ) e3 -= i2, s2 = $t.fromNumber(e3, this.unsigned), a2 = s2.mul(t3);
              s2.isZero() && (s2 = $t.ONE), n2 = n2.add(s2), r3 = r3.sub(a2);
            }
            return n2;
          }
          div(t3) {
            return this.divide(t3);
          }
          equals(t3) {
            return $t.isLong(t3) || (t3 = $t.fromValue(t3)), (this.unsigned === t3.unsigned || this.high >>> 31 != 1 || t3.high >>> 31 != 1) && this.high === t3.high && this.low === t3.low;
          }
          eq(t3) {
            return this.equals(t3);
          }
          getHighBits() {
            return this.high;
          }
          getHighBitsUnsigned() {
            return this.high >>> 0;
          }
          getLowBits() {
            return this.low;
          }
          getLowBitsUnsigned() {
            return this.low >>> 0;
          }
          getNumBitsAbs() {
            if (this.isNegative()) return this.eq($t.MIN_VALUE) ? 64 : this.neg().getNumBitsAbs();
            const t3 = 0 !== this.high ? this.high : this.low;
            let e3;
            for (e3 = 31; e3 > 0 && !(t3 & 1 << e3); e3--) ;
            return 0 !== this.high ? e3 + 33 : e3 + 1;
          }
          greaterThan(t3) {
            return this.comp(t3) > 0;
          }
          gt(t3) {
            return this.greaterThan(t3);
          }
          greaterThanOrEqual(t3) {
            return this.comp(t3) >= 0;
          }
          gte(t3) {
            return this.greaterThanOrEqual(t3);
          }
          ge(t3) {
            return this.greaterThanOrEqual(t3);
          }
          isEven() {
            return !(1 & this.low);
          }
          isNegative() {
            return !this.unsigned && this.high < 0;
          }
          isOdd() {
            return !(1 & ~this.low);
          }
          isPositive() {
            return this.unsigned || this.high >= 0;
          }
          isZero() {
            return 0 === this.high && 0 === this.low;
          }
          lessThan(t3) {
            return this.comp(t3) < 0;
          }
          lt(t3) {
            return this.lessThan(t3);
          }
          lessThanOrEqual(t3) {
            return this.comp(t3) <= 0;
          }
          lte(t3) {
            return this.lessThanOrEqual(t3);
          }
          modulo(t3) {
            if ($t.isLong(t3) || (t3 = $t.fromValue(t3)), mt) {
              const e3 = (this.unsigned ? mt.rem_u : mt.rem_s)(this.low, this.high, t3.low, t3.high);
              return $t.fromBits(e3, mt.get_high(), this.unsigned);
            }
            return this.sub(this.div(t3).mul(t3));
          }
          mod(t3) {
            return this.modulo(t3);
          }
          rem(t3) {
            return this.modulo(t3);
          }
          multiply(t3) {
            if (this.isZero()) return $t.ZERO;
            if ($t.isLong(t3) || (t3 = $t.fromValue(t3)), mt) {
              const e4 = mt.mul(this.low, this.high, t3.low, t3.high);
              return $t.fromBits(e4, mt.get_high(), this.unsigned);
            }
            if (t3.isZero()) return $t.ZERO;
            if (this.eq($t.MIN_VALUE)) return t3.isOdd() ? $t.MIN_VALUE : $t.ZERO;
            if (t3.eq($t.MIN_VALUE)) return this.isOdd() ? $t.MIN_VALUE : $t.ZERO;
            if (this.isNegative()) return t3.isNegative() ? this.neg().mul(t3.neg()) : this.neg().mul(t3).neg();
            if (t3.isNegative()) return this.mul(t3.neg()).neg();
            if (this.lt($t.TWO_PWR_24) && t3.lt($t.TWO_PWR_24)) return $t.fromNumber(this.toNumber() * t3.toNumber(), this.unsigned);
            const e3 = this.high >>> 16, r3 = 65535 & this.high, n2 = this.low >>> 16, o2 = 65535 & this.low, i2 = t3.high >>> 16, s2 = 65535 & t3.high, a2 = t3.low >>> 16, u2 = 65535 & t3.low;
            let c2 = 0, l2 = 0, f2 = 0, p2 = 0;
            return p2 += o2 * u2, f2 += p2 >>> 16, p2 &= 65535, f2 += n2 * u2, l2 += f2 >>> 16, f2 &= 65535, f2 += o2 * a2, l2 += f2 >>> 16, f2 &= 65535, l2 += r3 * u2, c2 += l2 >>> 16, l2 &= 65535, l2 += n2 * a2, c2 += l2 >>> 16, l2 &= 65535, l2 += o2 * s2, c2 += l2 >>> 16, l2 &= 65535, c2 += e3 * u2 + r3 * a2 + n2 * s2 + o2 * i2, c2 &= 65535, $t.fromBits(f2 << 16 | p2, c2 << 16 | l2, this.unsigned);
          }
          mul(t3) {
            return this.multiply(t3);
          }
          negate() {
            return !this.unsigned && this.eq($t.MIN_VALUE) ? $t.MIN_VALUE : this.not().add($t.ONE);
          }
          neg() {
            return this.negate();
          }
          not() {
            return $t.fromBits(~this.low, ~this.high, this.unsigned);
          }
          notEquals(t3) {
            return !this.equals(t3);
          }
          neq(t3) {
            return this.notEquals(t3);
          }
          ne(t3) {
            return this.notEquals(t3);
          }
          or(t3) {
            return $t.isLong(t3) || (t3 = $t.fromValue(t3)), $t.fromBits(this.low | t3.low, this.high | t3.high, this.unsigned);
          }
          shiftLeft(t3) {
            return $t.isLong(t3) && (t3 = t3.toInt()), 0 == (t3 &= 63) ? this : t3 < 32 ? $t.fromBits(this.low << t3, this.high << t3 | this.low >>> 32 - t3, this.unsigned) : $t.fromBits(0, this.low << t3 - 32, this.unsigned);
          }
          shl(t3) {
            return this.shiftLeft(t3);
          }
          shiftRight(t3) {
            return $t.isLong(t3) && (t3 = t3.toInt()), 0 == (t3 &= 63) ? this : t3 < 32 ? $t.fromBits(this.low >>> t3 | this.high << 32 - t3, this.high >> t3, this.unsigned) : $t.fromBits(this.high >> t3 - 32, this.high >= 0 ? 0 : -1, this.unsigned);
          }
          shr(t3) {
            return this.shiftRight(t3);
          }
          shiftRightUnsigned(t3) {
            if ($t.isLong(t3) && (t3 = t3.toInt()), 0 == (t3 &= 63)) return this;
            {
              const e3 = this.high;
              if (t3 < 32) {
                const r3 = this.low;
                return $t.fromBits(r3 >>> t3 | e3 << 32 - t3, e3 >>> t3, this.unsigned);
              }
              return 32 === t3 ? $t.fromBits(e3, 0, this.unsigned) : $t.fromBits(e3 >>> t3 - 32, 0, this.unsigned);
            }
          }
          shr_u(t3) {
            return this.shiftRightUnsigned(t3);
          }
          shru(t3) {
            return this.shiftRightUnsigned(t3);
          }
          subtract(t3) {
            return $t.isLong(t3) || (t3 = $t.fromValue(t3)), this.add(t3.neg());
          }
          sub(t3) {
            return this.subtract(t3);
          }
          toInt() {
            return this.unsigned ? this.low >>> 0 : this.low;
          }
          toNumber() {
            return this.unsigned ? (this.high >>> 0) * vt + (this.low >>> 0) : this.high * vt + (this.low >>> 0);
          }
          toBigInt() {
            return BigInt(this.toString());
          }
          toBytes(t3) {
            return t3 ? this.toBytesLE() : this.toBytesBE();
          }
          toBytesLE() {
            const t3 = this.high, e3 = this.low;
            return [255 & e3, e3 >>> 8 & 255, e3 >>> 16 & 255, e3 >>> 24, 255 & t3, t3 >>> 8 & 255, t3 >>> 16 & 255, t3 >>> 24];
          }
          toBytesBE() {
            const t3 = this.high, e3 = this.low;
            return [t3 >>> 24, t3 >>> 16 & 255, t3 >>> 8 & 255, 255 & t3, e3 >>> 24, e3 >>> 16 & 255, e3 >>> 8 & 255, 255 & e3];
          }
          toSigned() {
            return this.unsigned ? $t.fromBits(this.low, this.high, false) : this;
          }
          toString(t3) {
            if ((t3 = t3 || 10) < 2 || 36 < t3) throw new q("radix");
            if (this.isZero()) return "0";
            if (this.isNegative()) {
              if (this.eq($t.MIN_VALUE)) {
                const e4 = $t.fromNumber(t3), r4 = this.div(e4), n3 = r4.mul(e4).sub(this);
                return r4.toString(t3) + n3.toInt().toString(t3);
              }
              return "-" + this.neg().toString(t3);
            }
            const e3 = $t.fromNumber(Math.pow(t3, 6), this.unsigned);
            let r3 = this, n2 = "";
            for (; ; ) {
              const o2 = r3.div(e3);
              let i2 = (r3.sub(o2.mul(e3)).toInt() >>> 0).toString(t3);
              if (r3 = o2, r3.isZero()) return i2 + n2;
              for (; i2.length < 6; ) i2 = "0" + i2;
              n2 = "" + i2 + n2;
            }
          }
          toUnsigned() {
            return this.unsigned ? this : $t.fromBits(this.low, this.high, true);
          }
          xor(t3) {
            return $t.isLong(t3) || (t3 = $t.fromValue(t3)), $t.fromBits(this.low ^ t3.low, this.high ^ t3.high, this.unsigned);
          }
          eqz() {
            return this.isZero();
          }
          le(t3) {
            return this.lessThanOrEqual(t3);
          }
          toExtendedJSON(t3) {
            return t3 && t3.relaxed ? this.toNumber() : { $numberLong: this.toString() };
          }
          static fromExtendedJSON(t3, e3) {
            const { useBigInt64: r3 = false, relaxed: n2 = true } = { ...e3 };
            if (t3.$numberLong.length > 20) throw new q("$numberLong string is too long");
            if (!St.test(t3.$numberLong)) throw new q(`$numberLong string "${t3.$numberLong}" is in an invalid format`);
            if (r3) {
              const e4 = BigInt(t3.$numberLong);
              return BigInt.asIntN(64, e4);
            }
            const o2 = $t.fromString(t3.$numberLong);
            return n2 ? o2.toNumber() : o2;
          }
          inspect(t3, e3, r3) {
            return r3 ??= l, `new Long(${r3(this.toString(), e3)}${this.unsigned ? `, ${r3(this.unsigned, e3)}` : ""})`;
          }
        }
        $t.TWO_PWR_24 = $t.fromInt(1 << 24), $t.MAX_UNSIGNED_VALUE = $t.fromBits(-1, -1, true), $t.ZERO = $t.fromInt(0), $t.UZERO = $t.fromInt(0, true), $t.ONE = $t.fromInt(1), $t.UONE = $t.fromInt(1, true), $t.NEG_ONE = $t.fromInt(-1), $t.MAX_VALUE = $t.fromBits(-1, 2147483647, false), $t.MIN_VALUE = $t.fromBits(0, -2147483648, false);
        const jt = /^(\+|-)?(\d+|(\d*\.\d*))?(E|e)?([-+])?(\d+)?$/, Pt = /^(\+|-)?(Infinity|inf)$/i, At = /^(\+|-)?NaN$/i, Et = 6111, xt = -6176, Tt = rt.fromNumberArray([124, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].reverse()), kt = rt.fromNumberArray([248, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].reverse()), Nt = rt.fromNumberArray([120, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].reverse()), It = /^([-+])?(\d+)?$/;
        function Bt(t3) {
          return !isNaN(parseInt(t3, 10));
        }
        __name(Bt, "Bt");
        function Mt(t3) {
          const e3 = $t.fromNumber(1e9);
          let r3 = $t.fromNumber(0);
          if (!(t3.parts[0] || t3.parts[1] || t3.parts[2] || t3.parts[3])) return { quotient: t3, rem: r3 };
          for (let n2 = 0; n2 <= 3; n2++) r3 = r3.shiftLeft(32), r3 = r3.add(new $t(t3.parts[n2], 0)), t3.parts[n2] = r3.div(e3).low, r3 = r3.modulo(e3);
          return { quotient: t3, rem: r3 };
        }
        __name(Mt, "Mt");
        function Dt(t3, e3) {
          throw new q(`"${t3}" is not a valid Decimal128 string - ${e3}`);
        }
        __name(Dt, "Dt");
        class Rt extends nt {
          static {
            __name(this, "Rt");
          }
          get _bsontype() {
            return "Decimal128";
          }
          constructor(t3) {
            if (super(), "string" == typeof t3) this.bytes = Rt.fromString(t3).bytes;
            else {
              if (!(t3 instanceof Uint8Array || i(t3))) throw new q("Decimal128 must take a Buffer or string");
              if (16 !== t3.byteLength) throw new q("Decimal128 must take a Buffer of 16 bytes");
              this.bytes = t3;
            }
          }
          static fromString(t3) {
            return Rt._fromString(t3, { allowRounding: false });
          }
          static fromStringWithRounding(t3) {
            return Rt._fromString(t3, { allowRounding: true });
          }
          static _fromString(t3, e3) {
            let r3 = false, n2 = false, o2 = false, i2 = false, s2 = 0, a2 = 0, u2 = 0, c2 = 0, l2 = 0;
            const f2 = [0];
            let p2 = 0, h2 = 0, y2 = 0, d2 = 0, b2 = new $t(0, 0), m2 = new $t(0, 0), v2 = 0, g2 = 0;
            if (t3.length >= 7e3) throw new q(t3 + " not a valid Decimal128 string");
            const _2 = t3.match(jt), w2 = t3.match(Pt), O2 = t3.match(At);
            if (!_2 && !w2 && !O2 || 0 === t3.length) throw new q(t3 + " not a valid Decimal128 string");
            if (_2) {
              const e4 = _2[2], r4 = _2[4], n3 = _2[5], o3 = _2[6];
              r4 && void 0 === o3 && Dt(t3, "missing exponent power"), r4 && void 0 === e4 && Dt(t3, "missing exponent base"), void 0 === r4 && (n3 || o3) && Dt(t3, "missing e before exponent");
            }
            if ("+" !== t3[g2] && "-" !== t3[g2] || (n2 = true, r3 = "-" === t3[g2++]), !Bt(t3[g2]) && "." !== t3[g2]) {
              if ("i" === t3[g2] || "I" === t3[g2]) return new Rt(r3 ? kt : Nt);
              if ("N" === t3[g2]) return new Rt(Tt);
            }
            for (; Bt(t3[g2]) || "." === t3[g2]; ) "." !== t3[g2] ? (p2 < 34 && ("0" !== t3[g2] || i2) && (i2 || (l2 = a2), i2 = true, f2[h2++] = parseInt(t3[g2], 10), p2 += 1), i2 && (u2 += 1), o2 && (c2 += 1), a2 += 1, g2 += 1) : (o2 && Dt(t3, "contains multiple periods"), o2 = true, g2 += 1);
            if (o2 && !a2) throw new q(t3 + " not a valid Decimal128 string");
            if ("e" === t3[g2] || "E" === t3[g2]) {
              const e4 = t3.substr(++g2).match(It);
              if (!e4 || !e4[2]) return new Rt(Tt);
              d2 = parseInt(e4[0], 10), g2 += e4[0].length;
            }
            if (t3[g2]) return new Rt(Tt);
            if (p2) {
              if (y2 = p2 - 1, s2 = u2, 1 !== s2) for (; "0" === t3[l2 + s2 - 1 + Number(n2) + Number(o2)]; ) s2 -= 1;
            } else f2[0] = 0, u2 = 1, p2 = 1, s2 = 0;
            for (d2 <= c2 && c2 > d2 + 16384 ? d2 = xt : d2 -= c2; d2 > Et; ) {
              if (y2 += 1, y2 >= 34) {
                if (0 === s2) {
                  d2 = Et;
                  break;
                }
                Dt(t3, "overflow");
              }
              d2 -= 1;
            }
            if (e3.allowRounding) {
              for (; d2 < xt || p2 < u2; ) {
                if (0 === y2 && s2 < p2) {
                  d2 = xt, s2 = 0;
                  break;
                }
                if (p2 < u2 ? u2 -= 1 : y2 -= 1, d2 < Et) d2 += 1;
                else {
                  if (f2.join("").match(/^0+$/)) {
                    d2 = Et;
                    break;
                  }
                  Dt(t3, "overflow");
                }
              }
              if (y2 + 1 < s2) {
                let e4 = a2;
                o2 && (l2 += 1, e4 += 1), n2 && (l2 += 1, e4 += 1);
                const i3 = parseInt(t3[l2 + y2 + 1], 10);
                let s3 = 0;
                if (i3 >= 5 && (s3 = 1, 5 === i3)) {
                  s3 = f2[y2] % 2 == 1 ? 1 : 0;
                  for (let r4 = l2 + y2 + 2; r4 < e4; r4++) if (parseInt(t3[r4], 10)) {
                    s3 = 1;
                    break;
                  }
                }
                if (s3) {
                  let t4 = y2;
                  for (; t4 >= 0 && ++f2[t4] > 9; t4--) if (f2[t4] = 0, 0 === t4) {
                    if (!(d2 < Et)) return new Rt(r3 ? kt : Nt);
                    d2 += 1, f2[t4] = 1;
                  }
                }
              }
            } else {
              for (; d2 < xt || p2 < u2; ) {
                if (0 === y2) {
                  if (0 === s2) {
                    d2 = xt;
                    break;
                  }
                  Dt(t3, "exponent underflow");
                }
                p2 < u2 ? ("0" !== t3[u2 - 1 + Number(n2) + Number(o2)] && 0 !== s2 && Dt(t3, "inexact rounding"), u2 -= 1) : (0 !== f2[y2] && Dt(t3, "inexact rounding"), y2 -= 1), d2 < Et ? d2 += 1 : Dt(t3, "overflow");
              }
              y2 + 1 < s2 && (o2 && (l2 += 1), n2 && (l2 += 1), 0 !== parseInt(t3[l2 + y2 + 1], 10) && Dt(t3, "inexact rounding"));
            }
            if (b2 = $t.fromNumber(0), m2 = $t.fromNumber(0), 0 === s2) b2 = $t.fromNumber(0), m2 = $t.fromNumber(0);
            else if (y2 < 17) {
              let t4 = 0;
              for (m2 = $t.fromNumber(f2[t4++]), b2 = new $t(0, 0); t4 <= y2; t4++) m2 = m2.multiply($t.fromNumber(10)), m2 = m2.add($t.fromNumber(f2[t4]));
            } else {
              let t4 = 0;
              for (b2 = $t.fromNumber(f2[t4++]); t4 <= y2 - 17; t4++) b2 = b2.multiply($t.fromNumber(10)), b2 = b2.add($t.fromNumber(f2[t4]));
              for (m2 = $t.fromNumber(f2[t4++]); t4 <= y2; t4++) m2 = m2.multiply($t.fromNumber(10)), m2 = m2.add($t.fromNumber(f2[t4]));
            }
            const S2 = function(t4, e4) {
              if (!t4 && !e4) return { high: $t.fromNumber(0), low: $t.fromNumber(0) };
              const r4 = t4.shiftRightUnsigned(32), n3 = new $t(t4.getLowBits(), 0), o3 = e4.shiftRightUnsigned(32), i3 = new $t(e4.getLowBits(), 0);
              let s3 = r4.multiply(o3), a3 = r4.multiply(i3);
              const u3 = n3.multiply(o3);
              let c3 = n3.multiply(i3);
              return s3 = s3.add(a3.shiftRightUnsigned(32)), a3 = new $t(a3.getLowBits(), 0).add(u3).add(c3.shiftRightUnsigned(32)), s3 = s3.add(a3.shiftRightUnsigned(32)), c3 = a3.shiftLeft(32).add(new $t(c3.getLowBits(), 0)), { high: s3, low: c3 };
            }(b2, $t.fromString("100000000000000000"));
            S2.low = S2.low.add(m2), function(t4, e4) {
              const r4 = t4.high >>> 0, n3 = e4.high >>> 0;
              return r4 < n3 || r4 === n3 && t4.low >>> 0 < e4.low >>> 0;
            }(S2.low, m2) && (S2.high = S2.high.add($t.fromNumber(1))), v2 = d2 + 6176;
            const $2 = { low: $t.fromNumber(0), high: $t.fromNumber(0) };
            S2.high.shiftRightUnsigned(49).and($t.fromNumber(1)).equals($t.fromNumber(1)) ? ($2.high = $2.high.or($t.fromNumber(3).shiftLeft(61)), $2.high = $2.high.or($t.fromNumber(v2).and($t.fromNumber(16383).shiftLeft(47))), $2.high = $2.high.or(S2.high.and($t.fromNumber(140737488355327)))) : ($2.high = $2.high.or($t.fromNumber(16383 & v2).shiftLeft(49)), $2.high = $2.high.or(S2.high.and($t.fromNumber(562949953421311)))), $2.low = S2.low, r3 && ($2.high = $2.high.or($t.fromString("9223372036854775808")));
            const j2 = rt.allocateUnsafe(16);
            return g2 = 0, j2[g2++] = 255 & $2.low.low, j2[g2++] = $2.low.low >> 8 & 255, j2[g2++] = $2.low.low >> 16 & 255, j2[g2++] = $2.low.low >> 24 & 255, j2[g2++] = 255 & $2.low.high, j2[g2++] = $2.low.high >> 8 & 255, j2[g2++] = $2.low.high >> 16 & 255, j2[g2++] = $2.low.high >> 24 & 255, j2[g2++] = 255 & $2.high.low, j2[g2++] = $2.high.low >> 8 & 255, j2[g2++] = $2.high.low >> 16 & 255, j2[g2++] = $2.high.low >> 24 & 255, j2[g2++] = 255 & $2.high.high, j2[g2++] = $2.high.high >> 8 & 255, j2[g2++] = $2.high.high >> 16 & 255, j2[g2++] = $2.high.high >> 24 & 255, new Rt(j2);
          }
          toString() {
            let t3, e3 = 0;
            const r3 = new Array(36);
            for (let t4 = 0; t4 < r3.length; t4++) r3[t4] = 0;
            let n2, o2, i2, s2 = 0, a2 = false, u2 = { parts: [0, 0, 0, 0] };
            const c2 = [];
            s2 = 0;
            const l2 = this.bytes, f2 = l2[s2++] | l2[s2++] << 8 | l2[s2++] << 16 | l2[s2++] << 24, p2 = l2[s2++] | l2[s2++] << 8 | l2[s2++] << 16 | l2[s2++] << 24, h2 = l2[s2++] | l2[s2++] << 8 | l2[s2++] << 16 | l2[s2++] << 24, y2 = l2[s2++] | l2[s2++] << 8 | l2[s2++] << 16 | l2[s2++] << 24;
            s2 = 0, (new $t(f2, p2), new $t(h2, y2)).lessThan($t.ZERO) && c2.push("-");
            const d2 = y2 >> 26 & 31;
            if (d2 >> 3 == 3) {
              if (30 === d2) return c2.join("") + "Infinity";
              if (31 === d2) return "NaN";
              t3 = y2 >> 15 & 16383, n2 = 8 + (y2 >> 14 & 1);
            } else n2 = y2 >> 14 & 7, t3 = y2 >> 17 & 16383;
            const b2 = t3 - 6176;
            if (u2.parts[0] = (16383 & y2) + ((15 & n2) << 14), u2.parts[1] = h2, u2.parts[2] = p2, u2.parts[3] = f2, 0 === u2.parts[0] && 0 === u2.parts[1] && 0 === u2.parts[2] && 0 === u2.parts[3]) a2 = true;
            else for (i2 = 3; i2 >= 0; i2--) {
              let t4 = 0;
              const e4 = Mt(u2);
              if (u2 = e4.quotient, t4 = e4.rem.low, t4) for (o2 = 8; o2 >= 0; o2--) r3[9 * i2 + o2] = t4 % 10, t4 = Math.floor(t4 / 10);
            }
            if (a2) e3 = 1, r3[s2] = 0;
            else for (e3 = 36; !r3[s2]; ) e3 -= 1, s2 += 1;
            const m2 = e3 - 1 + b2;
            if (m2 >= 34 || m2 <= -7 || b2 > 0) {
              if (e3 > 34) return c2.push("0"), b2 > 0 ? c2.push(`E+${b2}`) : b2 < 0 && c2.push(`E${b2}`), c2.join("");
              c2.push(`${r3[s2++]}`), e3 -= 1, e3 && c2.push(".");
              for (let t4 = 0; t4 < e3; t4++) c2.push(`${r3[s2++]}`);
              c2.push("E"), m2 > 0 ? c2.push(`+${m2}`) : c2.push(`${m2}`);
            } else if (b2 >= 0) for (let t4 = 0; t4 < e3; t4++) c2.push(`${r3[s2++]}`);
            else {
              let t4 = e3 + b2;
              if (t4 > 0) for (let e4 = 0; e4 < t4; e4++) c2.push(`${r3[s2++]}`);
              else c2.push("0");
              for (c2.push("."); t4++ < 0; ) c2.push("0");
              for (let n3 = 0; n3 < e3 - Math.max(t4 - 1, 0); n3++) c2.push(`${r3[s2++]}`);
            }
            return c2.join("");
          }
          toJSON() {
            return { $numberDecimal: this.toString() };
          }
          toExtendedJSON() {
            return { $numberDecimal: this.toString() };
          }
          static fromExtendedJSON(t3) {
            return Rt.fromString(t3.$numberDecimal);
          }
          inspect(t3, e3, r3) {
            return r3 ??= l, `new Decimal128(${r3(this.toString(), e3)})`;
          }
        }
        class Ut extends nt {
          static {
            __name(this, "Ut");
          }
          get _bsontype() {
            return "Double";
          }
          constructor(t3) {
            super(), t3 instanceof Number && (t3 = t3.valueOf()), this.value = +t3;
          }
          static fromString(t3) {
            const e3 = Number(t3);
            if ("NaN" === t3) return new Ut(NaN);
            if ("Infinity" === t3) return new Ut(1 / 0);
            if ("-Infinity" === t3) return new Ut(-1 / 0);
            if (!Number.isFinite(e3)) throw new q(`Input: ${t3} is not representable as a Double`);
            if (t3.trim() !== t3) throw new q(`Input: '${t3}' contains whitespace`);
            if ("" === t3) throw new q("Input is an empty string");
            if (/[^-0-9.+eE]/.test(t3)) throw new q(`Input: '${t3}' is not in decimal or exponential notation`);
            return new Ut(e3);
          }
          valueOf() {
            return this.value;
          }
          toJSON() {
            return this.value;
          }
          toString(t3) {
            return this.value.toString(t3);
          }
          toExtendedJSON(t3) {
            return t3 && (t3.legacy || t3.relaxed && isFinite(this.value)) ? this.value : Object.is(Math.sign(this.value), -0) ? { $numberDouble: "-0.0" } : { $numberDouble: Number.isInteger(this.value) ? this.value.toFixed(1) : this.value.toString() };
          }
          static fromExtendedJSON(t3, e3) {
            const r3 = parseFloat(t3.$numberDouble);
            return e3 && e3.relaxed ? r3 : new Ut(r3);
          }
          inspect(t3, e3, r3) {
            return r3 ??= l, `new Double(${r3(this.value, e3)})`;
          }
        }
        class Ct extends nt {
          static {
            __name(this, "Ct");
          }
          get _bsontype() {
            return "Int32";
          }
          constructor(t3) {
            super(), t3 instanceof Number && (t3 = t3.valueOf()), this.value = 0 | +t3;
          }
          static fromString(t3) {
            const e3 = bt(t3), r3 = Number(t3);
            if (h < r3) throw new q(`Input: '${t3}' is larger than the maximum value for Int32`);
            if (y > r3) throw new q(`Input: '${t3}' is smaller than the minimum value for Int32`);
            if (!Number.isSafeInteger(r3)) throw new q(`Input: '${t3}' is not a safe integer`);
            if (r3.toString() !== e3) throw new q(`Input: '${t3}' is not a valid Int32 string`);
            return new Ct(r3);
          }
          valueOf() {
            return this.value;
          }
          toString(t3) {
            return this.value.toString(t3);
          }
          toJSON() {
            return this.value;
          }
          toExtendedJSON(t3) {
            return t3 && (t3.relaxed || t3.legacy) ? this.value : { $numberInt: this.value.toString() };
          }
          static fromExtendedJSON(t3, e3) {
            return e3 && e3.relaxed ? parseInt(t3.$numberInt, 10) : new Ct(t3.$numberInt);
          }
          inspect(t3, e3, r3) {
            return r3 ??= l, `new Int32(${r3(this.value, e3)})`;
          }
        }
        class Ft extends nt {
          static {
            __name(this, "Ft");
          }
          get _bsontype() {
            return "MaxKey";
          }
          toExtendedJSON() {
            return { $maxKey: 1 };
          }
          static fromExtendedJSON() {
            return new Ft();
          }
          inspect() {
            return "new MaxKey()";
          }
        }
        class Lt extends nt {
          static {
            __name(this, "Lt");
          }
          get _bsontype() {
            return "MinKey";
          }
          toExtendedJSON() {
            return { $minKey: 1 };
          }
          static fromExtendedJSON() {
            return new Lt();
          }
          inspect() {
            return "new MinKey()";
          }
        }
        let Vt = null;
        const qt = /* @__PURE__ */ new WeakMap();
        class Jt extends nt {
          static {
            __name(this, "Jt");
          }
          get _bsontype() {
            return "ObjectId";
          }
          constructor(t3) {
            let e3;
            if (super(), "object" == typeof t3 && t3 && "id" in t3) {
              if ("string" != typeof t3.id && !ArrayBuffer.isView(t3.id)) throw new q("Argument passed in must have an id that is of type string or Buffer");
              e3 = "toHexString" in t3 && "function" == typeof t3.toHexString ? rt.fromHex(t3.toHexString()) : t3.id;
            } else e3 = t3;
            if (null == e3 || "number" == typeof e3) this.buffer = Jt.generate("number" == typeof e3 ? e3 : void 0);
            else if (ArrayBuffer.isView(e3) && 12 === e3.byteLength) this.buffer = rt.toLocalBufferType(e3);
            else {
              if ("string" != typeof e3) throw new q("Argument passed in does not match the accepted types");
              if (!Jt.validateHexString(e3)) throw new q("input must be a 24 character hex string, 12 byte Uint8Array, or an integer");
              this.buffer = rt.fromHex(e3), Jt.cacheHexString && qt.set(this, e3);
            }
          }
          get id() {
            return this.buffer;
          }
          set id(t3) {
            this.buffer = t3, Jt.cacheHexString && qt.set(this, rt.toHex(t3));
          }
          static validateHexString(t3) {
            if (24 !== t3?.length) return false;
            for (let e3 = 0; e3 < 24; e3++) {
              const r3 = t3.charCodeAt(e3);
              if (!(r3 >= 48 && r3 <= 57 || r3 >= 97 && r3 <= 102 || r3 >= 65 && r3 <= 70)) return false;
            }
            return true;
          }
          toHexString() {
            if (Jt.cacheHexString) {
              const t4 = qt.get(this);
              if (t4) return t4;
            }
            const t3 = rt.toHex(this.id);
            return Jt.cacheHexString && qt.set(this, t3), t3;
          }
          static getInc() {
            return Jt.index = (Jt.index + 1) % 16777215;
          }
          static generate(t3) {
            "number" != typeof t3 && (t3 = Math.floor(Date.now() / 1e3));
            const e3 = Jt.getInc(), r3 = rt.allocateUnsafe(12);
            return at.setInt32BE(r3, 0, t3), null === Vt && (Vt = rt.randomBytes(5)), r3[4] = Vt[0], r3[5] = Vt[1], r3[6] = Vt[2], r3[7] = Vt[3], r3[8] = Vt[4], r3[11] = 255 & e3, r3[10] = e3 >> 8 & 255, r3[9] = e3 >> 16 & 255, r3;
          }
          toString(t3) {
            return "base64" === t3 ? rt.toBase64(this.id) : this.toHexString();
          }
          toJSON() {
            return this.toHexString();
          }
          static is(t3) {
            return null != t3 && "object" == typeof t3 && "_bsontype" in t3 && "ObjectId" === t3._bsontype;
          }
          equals(t3) {
            if (null == t3) return false;
            if (Jt.is(t3)) return this.buffer[11] === t3.buffer[11] && rt.equals(this.buffer, t3.buffer);
            if ("string" == typeof t3) return t3.toLowerCase() === this.toHexString();
            if ("object" == typeof t3 && "function" == typeof t3.toHexString) {
              const e3 = t3.toHexString(), r3 = this.toHexString();
              return "string" == typeof e3 && e3.toLowerCase() === r3;
            }
            return false;
          }
          getTimestamp() {
            const t3 = /* @__PURE__ */ new Date(), e3 = at.getUint32BE(this.buffer, 0);
            return t3.setTime(1e3 * Math.floor(e3)), t3;
          }
          static createPk() {
            return new Jt();
          }
          serializeInto(t3, e3) {
            return t3[e3] = this.buffer[0], t3[e3 + 1] = this.buffer[1], t3[e3 + 2] = this.buffer[2], t3[e3 + 3] = this.buffer[3], t3[e3 + 4] = this.buffer[4], t3[e3 + 5] = this.buffer[5], t3[e3 + 6] = this.buffer[6], t3[e3 + 7] = this.buffer[7], t3[e3 + 8] = this.buffer[8], t3[e3 + 9] = this.buffer[9], t3[e3 + 10] = this.buffer[10], t3[e3 + 11] = this.buffer[11], 12;
          }
          static createFromTime(t3) {
            const e3 = rt.allocate(12);
            for (let t4 = 11; t4 >= 4; t4--) e3[t4] = 0;
            return at.setInt32BE(e3, 0, t3), new Jt(e3);
          }
          static createFromHexString(t3) {
            if (24 !== t3?.length) throw new q("hex string must be 24 characters");
            return new Jt(rt.fromHex(t3));
          }
          static createFromBase64(t3) {
            if (16 !== t3?.length) throw new q("base64 string must be 16 characters");
            return new Jt(rt.fromBase64(t3));
          }
          static isValid(t3) {
            if (null == t3) return false;
            if ("string" == typeof t3) return Jt.validateHexString(t3);
            try {
              return new Jt(t3), true;
            } catch {
              return false;
            }
          }
          toExtendedJSON() {
            return this.toHexString ? { $oid: this.toHexString() } : { $oid: this.toString("hex") };
          }
          static fromExtendedJSON(t3) {
            return new Jt(t3.$oid);
          }
          isCached() {
            return Jt.cacheHexString && qt.has(this);
          }
          inspect(t3, e3, r3) {
            return r3 ??= l, `new ObjectId(${r3(this.toHexString(), e3)})`;
          }
        }
        function zt(t3, e3, r3) {
          let n2 = 5;
          if (Array.isArray(t3)) for (let o2 = 0; o2 < t3.length; o2++) n2 += Kt(o2.toString(), t3[o2], e3, true, r3);
          else {
            "function" == typeof t3?.toBSON && (t3 = t3.toBSON());
            for (const o2 of Object.keys(t3)) n2 += Kt(o2, t3[o2], e3, false, r3);
          }
          return n2;
        }
        __name(zt, "zt");
        function Kt(t3, e3, r3 = false, n2 = false, o2 = false) {
          switch ("function" == typeof e3?.toBSON && (e3 = e3.toBSON()), typeof e3) {
            case "string":
              return 1 + rt.utf8ByteLength(t3) + 1 + 4 + rt.utf8ByteLength(e3) + 1;
            case "number":
              return Math.floor(e3) === e3 && e3 >= v && e3 <= m && e3 >= y && e3 <= h ? (null != t3 ? rt.utf8ByteLength(t3) + 1 : 0) + 5 : (null != t3 ? rt.utf8ByteLength(t3) + 1 : 0) + 9;
            case "undefined":
              return n2 || !o2 ? (null != t3 ? rt.utf8ByteLength(t3) + 1 : 0) + 1 : 0;
            case "boolean":
              return (null != t3 ? rt.utf8ByteLength(t3) + 1 : 0) + 2;
            case "object":
              if (null != e3 && "string" == typeof e3._bsontype && e3[p] !== f) throw new J();
              if (null == e3 || "MinKey" === e3._bsontype || "MaxKey" === e3._bsontype) return (null != t3 ? rt.utf8ByteLength(t3) + 1 : 0) + 1;
              if ("ObjectId" === e3._bsontype) return (null != t3 ? rt.utf8ByteLength(t3) + 1 : 0) + 13;
              if (e3 instanceof Date || c(e3)) return (null != t3 ? rt.utf8ByteLength(t3) + 1 : 0) + 9;
              if (ArrayBuffer.isView(e3) || e3 instanceof ArrayBuffer || s(e3)) return (null != t3 ? rt.utf8ByteLength(t3) + 1 : 0) + 6 + e3.byteLength;
              if ("Long" === e3._bsontype || "Double" === e3._bsontype || "Timestamp" === e3._bsontype) return (null != t3 ? rt.utf8ByteLength(t3) + 1 : 0) + 9;
              if ("Decimal128" === e3._bsontype) return (null != t3 ? rt.utf8ByteLength(t3) + 1 : 0) + 17;
              if ("Code" === e3._bsontype) return null != e3.scope && Object.keys(e3.scope).length > 0 ? (null != t3 ? rt.utf8ByteLength(t3) + 1 : 0) + 1 + 4 + 4 + rt.utf8ByteLength(e3.code.toString()) + 1 + zt(e3.scope, r3, o2) : (null != t3 ? rt.utf8ByteLength(t3) + 1 : 0) + 1 + 4 + rt.utf8ByteLength(e3.code.toString()) + 1;
              if ("Binary" === e3._bsontype) {
                const r4 = e3;
                return r4.sub_type === ut.SUBTYPE_BYTE_ARRAY ? (null != t3 ? rt.utf8ByteLength(t3) + 1 : 0) + (r4.position + 1 + 4 + 1 + 4) : (null != t3 ? rt.utf8ByteLength(t3) + 1 : 0) + (r4.position + 1 + 4 + 1);
              }
              if ("Symbol" === e3._bsontype) return (null != t3 ? rt.utf8ByteLength(t3) + 1 : 0) + rt.utf8ByteLength(e3.value) + 4 + 1 + 1;
              if ("DBRef" === e3._bsontype) {
                const n3 = Object.assign({ $ref: e3.collection, $id: e3.oid }, e3.fields);
                return null != e3.db && (n3.$db = e3.db), (null != t3 ? rt.utf8ByteLength(t3) + 1 : 0) + 1 + zt(n3, r3, o2);
              }
              return e3 instanceof RegExp || a(e3) ? (null != t3 ? rt.utf8ByteLength(t3) + 1 : 0) + 1 + rt.utf8ByteLength(e3.source) + 1 + (e3.global ? 1 : 0) + (e3.ignoreCase ? 1 : 0) + (e3.multiline ? 1 : 0) + 1 : "BSONRegExp" === e3._bsontype ? (null != t3 ? rt.utf8ByteLength(t3) + 1 : 0) + 1 + rt.utf8ByteLength(e3.pattern) + 1 + rt.utf8ByteLength(e3.options) + 1 : (null != t3 ? rt.utf8ByteLength(t3) + 1 : 0) + zt(e3, r3, o2) + 1;
            case "function":
              return r3 ? (null != t3 ? rt.utf8ByteLength(t3) + 1 : 0) + 1 + 4 + rt.utf8ByteLength(e3.toString()) + 1 : 0;
            case "bigint":
              return (null != t3 ? rt.utf8ByteLength(t3) + 1 : 0) + 9;
            case "symbol":
              return 0;
            default:
              throw new q("Unrecognized JS type: " + typeof e3);
          }
        }
        __name(Kt, "Kt");
        Jt.index = Math.floor(16777215 * Math.random());
        class Ht extends nt {
          static {
            __name(this, "Ht");
          }
          get _bsontype() {
            return "BSONRegExp";
          }
          constructor(t3, e3) {
            if (super(), this.pattern = t3, this.options = (e3 ?? "").split("").sort().join(""), -1 !== this.pattern.indexOf("\0")) throw new q(`BSON Regex patterns cannot contain null bytes, found: ${JSON.stringify(this.pattern)}`);
            if (-1 !== this.options.indexOf("\0")) throw new q(`BSON Regex options cannot contain null bytes, found: ${JSON.stringify(this.options)}`);
            for (let t4 = 0; t4 < this.options.length; t4++) if ("i" !== this.options[t4] && "m" !== this.options[t4] && "x" !== this.options[t4] && "l" !== this.options[t4] && "s" !== this.options[t4] && "u" !== this.options[t4]) throw new q(`The regular expression option [${this.options[t4]}] is not supported`);
          }
          static parseOptions(t3) {
            return t3 ? t3.split("").sort().join("") : "";
          }
          toExtendedJSON(t3) {
            return (t3 = t3 || {}).legacy ? { $regex: this.pattern, $options: this.options } : { $regularExpression: { pattern: this.pattern, options: this.options } };
          }
          static fromExtendedJSON(t3) {
            if ("$regex" in t3) {
              if ("string" == typeof t3.$regex) return new Ht(t3.$regex, Ht.parseOptions(t3.$options));
              if ("BSONRegExp" === t3.$regex._bsontype) return t3;
            }
            if ("$regularExpression" in t3) return new Ht(t3.$regularExpression.pattern, Ht.parseOptions(t3.$regularExpression.options));
            throw new q(`Unexpected BSONRegExp EJSON object form: ${JSON.stringify(t3)}`);
          }
          inspect(t3, e3, r3) {
            const n2 = function(t4) {
              if (null != t4 && "object" == typeof t4 && "stylize" in t4 && "function" == typeof t4.stylize) return t4.stylize;
            }(e3) ?? ((t4) => t4);
            return r3 ??= l, `new BSONRegExp(${n2(r3(this.pattern), "regexp")}, ${n2(r3(this.options), "regexp")})`;
          }
        }
        class Wt extends nt {
          static {
            __name(this, "Wt");
          }
          get _bsontype() {
            return "BSONSymbol";
          }
          constructor(t3) {
            super(), this.value = t3;
          }
          valueOf() {
            return this.value;
          }
          toString() {
            return this.value;
          }
          toJSON() {
            return this.value;
          }
          toExtendedJSON() {
            return { $symbol: this.value };
          }
          static fromExtendedJSON(t3) {
            return new Wt(t3.$symbol);
          }
          inspect(t3, e3, r3) {
            return r3 ??= l, `new BSONSymbol(${r3(this.value, e3)})`;
          }
        }
        const Gt = $t;
        class Qt extends Gt {
          static {
            __name(this, "Qt");
          }
          get _bsontype() {
            return "Timestamp";
          }
          get i() {
            return this.low >>> 0;
          }
          get t() {
            return this.high >>> 0;
          }
          constructor(t3) {
            if (null == t3) super(0, 0, true);
            else if ("bigint" == typeof t3) super(t3, true);
            else if ($t.isLong(t3)) super(t3.low, t3.high, true);
            else {
              if ("object" != typeof t3 || !("t" in t3) || !("i" in t3)) throw new q("A Timestamp can only be constructed with: bigint, Long, or { t: number; i: number }");
              {
                if ("number" != typeof t3.t && ("object" != typeof t3.t || "Int32" !== t3.t._bsontype)) throw new q("Timestamp constructed from { t, i } must provide t as a number");
                if ("number" != typeof t3.i && ("object" != typeof t3.i || "Int32" !== t3.i._bsontype)) throw new q("Timestamp constructed from { t, i } must provide i as a number");
                const e3 = Number(t3.t), r3 = Number(t3.i);
                if (e3 < 0 || Number.isNaN(e3)) throw new q("Timestamp constructed from { t, i } must provide a positive t");
                if (r3 < 0 || Number.isNaN(r3)) throw new q("Timestamp constructed from { t, i } must provide a positive i");
                if (e3 > 4294967295) throw new q("Timestamp constructed from { t, i } must provide t equal or less than uint32 max");
                if (r3 > 4294967295) throw new q("Timestamp constructed from { t, i } must provide i equal or less than uint32 max");
                super(r3, e3, true);
              }
            }
          }
          toJSON() {
            return { $timestamp: this.toString() };
          }
          static fromInt(t3) {
            return new Qt($t.fromInt(t3, true));
          }
          static fromNumber(t3) {
            return new Qt($t.fromNumber(t3, true));
          }
          static fromBits(t3, e3) {
            return new Qt({ i: t3, t: e3 });
          }
          static fromString(t3, e3) {
            return new Qt($t.fromString(t3, true, e3));
          }
          toExtendedJSON() {
            return { $timestamp: { t: this.t, i: this.i } };
          }
          static fromExtendedJSON(t3) {
            const e3 = $t.isLong(t3.$timestamp.i) ? t3.$timestamp.i.getLowBitsUnsigned() : t3.$timestamp.i, r3 = $t.isLong(t3.$timestamp.t) ? t3.$timestamp.t.getLowBitsUnsigned() : t3.$timestamp.t;
            return new Qt({ t: r3, i: e3 });
          }
          inspect(t3, e3, r3) {
            return r3 ??= l, `new Timestamp({ t: ${r3(this.t, e3)}, i: ${r3(this.i, e3)} })`;
          }
        }
        Qt.MAX_VALUE = $t.MAX_UNSIGNED_VALUE;
        const Yt = $t.fromNumber(m), Zt = $t.fromNumber(v);
        function Xt(t3, e3, r3) {
          const n2 = (e3 = null == e3 ? {} : e3) && e3.index ? e3.index : 0, o2 = at.getInt32LE(t3, n2);
          if (o2 < 5) throw new q(`bson size must be >= 5, is ${o2}`);
          if (e3.allowObjectSmallerThanBufferSize && t3.length < o2) throw new q(`buffer length ${t3.length} must be >= bson size ${o2}`);
          if (!e3.allowObjectSmallerThanBufferSize && t3.length !== o2) throw new q(`buffer length ${t3.length} must === bson size ${o2}`);
          if (o2 + n2 > t3.byteLength) throw new q(`(bson size ${o2} + options.index ${n2} must be <= buffer length ${t3.byteLength})`);
          if (0 !== t3[n2 + o2 - 1]) throw new q("One object, sized correctly, with a spot for an EOO, but the EOO isn't 0x00");
          return ee(t3, n2, e3, r3);
        }
        __name(Xt, "Xt");
        const te = /^\$ref$|^\$id$|^\$db$/;
        function ee(t3, e3, r3, n2 = false) {
          const o2 = null == r3.fieldsAsRaw ? null : r3.fieldsAsRaw, i2 = null != r3.raw && r3.raw, s2 = "boolean" == typeof r3.bsonRegExp && r3.bsonRegExp, a2 = r3.promoteBuffers ?? false, u2 = r3.promoteLongs ?? true, c2 = r3.promoteValues ?? true, l2 = r3.useBigInt64 ?? false;
          if (l2 && !c2) throw new q("Must either request bigint or Long for int64 deserialization");
          if (l2 && !u2) throw new q("Must either request bigint or Long for int64 deserialization");
          let f2, p2, h2 = true;
          const y2 = (null == r3.validation ? { utf8: true } : r3.validation).utf8;
          if ("boolean" == typeof y2) f2 = y2;
          else {
            h2 = false;
            const t4 = Object.keys(y2).map(function(t5) {
              return y2[t5];
            });
            if (0 === t4.length) throw new q("UTF-8 validation setting cannot be empty");
            if ("boolean" != typeof t4[0]) throw new q("Invalid UTF-8 validation option, must specify boolean values");
            if (f2 = t4[0], !t4.every((t5) => t5 === f2)) throw new q("Invalid UTF-8 validation option - keys must be all true or all false");
          }
          if (!h2) {
            p2 = /* @__PURE__ */ new Set();
            for (const t4 of Object.keys(y2)) p2.add(t4);
          }
          const d2 = e3;
          if (t3.length < 5) throw new q("corrupt bson message < 5 bytes long");
          const b2 = at.getInt32LE(t3, e3);
          if (e3 += 4, b2 < 5 || b2 > t3.length) throw new q("corrupt bson message");
          const m2 = n2 ? [] : {};
          let v2 = 0, F2 = !n2 && null;
          for (; ; ) {
            const y3 = t3[e3++];
            if (0 === y3) break;
            let d3 = e3;
            for (; 0 !== t3[d3] && d3 < t3.length; ) d3++;
            if (d3 >= t3.byteLength) throw new q("Bad BSON Document: illegal CString");
            const b3 = n2 ? v2++ : rt.toUTF8(t3, e3, d3, false);
            let V2, J2 = true;
            if (J2 = h2 || p2?.has(b3) ? f2 : !f2, false !== F2 && "$" === b3[0] && (F2 = te.test(b3)), e3 = d3 + 1, y3 === _) {
              const r4 = at.getInt32LE(t3, e3);
              if (e3 += 4, r4 <= 0 || r4 > t3.length - e3 || 0 !== t3[e3 + r4 - 1]) throw new q("bad string length in bson");
              V2 = rt.toUTF8(t3, e3, e3 + r4 - 1, J2), e3 += r4;
            } else if (y3 === j) {
              const r4 = rt.allocateUnsafe(12);
              for (let n3 = 0; n3 < 12; n3++) r4[n3] = t3[e3 + n3];
              V2 = new Jt(r4), e3 += 12;
            } else if (y3 === B && false === c2) V2 = new Ct(at.getInt32LE(t3, e3)), e3 += 4;
            else if (y3 === B) V2 = at.getInt32LE(t3, e3), e3 += 4;
            else if (y3 === g) V2 = at.getFloat64LE(t3, e3), e3 += 8, false === c2 && (V2 = new Ut(V2));
            else if (y3 === A) {
              const r4 = at.getInt32LE(t3, e3), n3 = at.getInt32LE(t3, e3 + 4);
              e3 += 8, V2 = new Date(new $t(r4, n3).toNumber());
            } else if (y3 === P) {
              if (0 !== t3[e3] && 1 !== t3[e3]) throw new q("illegal boolean type value");
              V2 = 1 === t3[e3++];
            } else if (y3 === w) {
              const n3 = e3, o3 = at.getInt32LE(t3, e3);
              if (o3 <= 0 || o3 > t3.length - e3) throw new q("bad embedded document length in bson");
              if (i2) V2 = t3.subarray(e3, e3 + o3);
              else {
                let e4 = r3;
                h2 || (e4 = { ...r3, validation: { utf8: J2 } }), V2 = ee(t3, n3, e4, false);
              }
              e3 += o3;
            } else if (y3 === O) {
              const n3 = e3, i3 = at.getInt32LE(t3, e3);
              let s3 = r3;
              const a3 = e3 + i3;
              if (o2 && o2[b3] && (s3 = { ...r3, raw: true }), h2 || (s3 = { ...s3, validation: { utf8: J2 } }), V2 = ee(t3, n3, s3, true), 0 !== t3[(e3 += i3) - 1]) throw new q("invalid array terminator byte");
              if (e3 !== a3) throw new q("corrupted array bson");
            } else if (y3 === $) V2 = void 0;
            else if (y3 === E) V2 = null;
            else if (y3 === D) if (l2) V2 = at.getBigInt64LE(t3, e3), e3 += 8;
            else {
              const r4 = at.getInt32LE(t3, e3), n3 = at.getInt32LE(t3, e3 + 4);
              e3 += 8;
              const o3 = new $t(r4, n3);
              V2 = u2 && true === c2 && o3.lessThanOrEqual(Yt) && o3.greaterThanOrEqual(Zt) ? o3.toNumber() : o3;
            }
            else if (y3 === R) {
              const r4 = rt.allocateUnsafe(16);
              for (let n3 = 0; n3 < 16; n3++) r4[n3] = t3[e3 + n3];
              e3 += 16, V2 = new Rt(r4);
            } else if (y3 === S) {
              let r4 = at.getInt32LE(t3, e3);
              e3 += 4;
              const n3 = r4, o3 = t3[e3++];
              if (r4 < 0) throw new q("Negative binary type element size found");
              if (r4 > t3.byteLength) throw new q("Binary type size larger than document size");
              if (o3 === ut.SUBTYPE_BYTE_ARRAY) {
                if (r4 = at.getInt32LE(t3, e3), e3 += 4, r4 < 0) throw new q("Negative binary type element size found for subtype 0x02");
                if (r4 > n3 - 4) throw new q("Binary type with subtype 0x02 contains too long binary size");
                if (r4 < n3 - 4) throw new q("Binary type with subtype 0x02 contains too short binary size");
              }
              a2 && c2 ? V2 = rt.toLocalBufferType(t3.subarray(e3, e3 + r4)) : (V2 = new ut(t3.subarray(e3, e3 + r4), o3), o3 === L && pt.isValid(V2) && (V2 = V2.toUUID())), e3 += r4;
            } else if (y3 === x && false === s2) {
              for (d3 = e3; 0 !== t3[d3] && d3 < t3.length; ) d3++;
              if (d3 >= t3.length) throw new q("Bad BSON Document: illegal CString");
              const r4 = rt.toUTF8(t3, e3, d3, false);
              for (d3 = e3 = d3 + 1; 0 !== t3[d3] && d3 < t3.length; ) d3++;
              if (d3 >= t3.length) throw new q("Bad BSON Document: illegal CString");
              const n3 = rt.toUTF8(t3, e3, d3, false);
              e3 = d3 + 1;
              const o3 = new Array(n3.length);
              for (d3 = 0; d3 < n3.length; d3++) switch (n3[d3]) {
                case "m":
                  o3[d3] = "m";
                  break;
                case "s":
                  o3[d3] = "g";
                  break;
                case "i":
                  o3[d3] = "i";
              }
              V2 = new RegExp(r4, o3.join(""));
            } else if (y3 === x && true === s2) {
              for (d3 = e3; 0 !== t3[d3] && d3 < t3.length; ) d3++;
              if (d3 >= t3.length) throw new q("Bad BSON Document: illegal CString");
              const r4 = rt.toUTF8(t3, e3, d3, false);
              for (d3 = e3 = d3 + 1; 0 !== t3[d3] && d3 < t3.length; ) d3++;
              if (d3 >= t3.length) throw new q("Bad BSON Document: illegal CString");
              const n3 = rt.toUTF8(t3, e3, d3, false);
              e3 = d3 + 1, V2 = new Ht(r4, n3);
            } else if (y3 === N) {
              const r4 = at.getInt32LE(t3, e3);
              if (e3 += 4, r4 <= 0 || r4 > t3.length - e3 || 0 !== t3[e3 + r4 - 1]) throw new q("bad string length in bson");
              const n3 = rt.toUTF8(t3, e3, e3 + r4 - 1, J2);
              V2 = c2 ? n3 : new Wt(n3), e3 += r4;
            } else if (y3 === M) V2 = new Qt({ i: at.getUint32LE(t3, e3), t: at.getUint32LE(t3, e3 + 4) }), e3 += 8;
            else if (y3 === U) V2 = new Lt();
            else if (y3 === C) V2 = new Ft();
            else if (y3 === k) {
              const r4 = at.getInt32LE(t3, e3);
              if (e3 += 4, r4 <= 0 || r4 > t3.length - e3 || 0 !== t3[e3 + r4 - 1]) throw new q("bad string length in bson");
              const n3 = rt.toUTF8(t3, e3, e3 + r4 - 1, J2);
              V2 = new ht(n3), e3 += r4;
            } else if (y3 === I) {
              const n3 = at.getInt32LE(t3, e3);
              if (e3 += 4, n3 < 13) throw new q("code_w_scope total size shorter minimum expected length");
              const o3 = at.getInt32LE(t3, e3);
              if (e3 += 4, o3 <= 0 || o3 > t3.length - e3 || 0 !== t3[e3 + o3 - 1]) throw new q("bad string length in bson");
              const i3 = rt.toUTF8(t3, e3, e3 + o3 - 1, J2), s3 = e3 += o3, a3 = at.getInt32LE(t3, e3), u3 = ee(t3, s3, r3, false);
              if (e3 += a3, n3 < 8 + a3 + o3) throw new q("code_w_scope total size is too short, truncating scope");
              if (n3 > 8 + a3 + o3) throw new q("code_w_scope total size is too long, clips outer document");
              V2 = new ht(i3, u3);
            } else {
              if (y3 !== T) throw new q(`Detected unknown BSON type ${y3.toString(16)} for fieldname "${b3}"`);
              {
                const r4 = at.getInt32LE(t3, e3);
                if (e3 += 4, r4 <= 0 || r4 > t3.length - e3 || 0 !== t3[e3 + r4 - 1]) throw new q("bad string length in bson");
                const n3 = rt.toUTF8(t3, e3, e3 + r4 - 1, J2);
                e3 += r4;
                const o3 = rt.allocateUnsafe(12);
                for (let r5 = 0; r5 < 12; r5++) o3[r5] = t3[e3 + r5];
                const i3 = new Jt(o3);
                e3 += 12, V2 = new dt(n3, i3);
              }
            }
            "__proto__" === b3 ? Object.defineProperty(m2, b3, { value: V2, writable: true, enumerable: true, configurable: true }) : m2[b3] = V2;
          }
          if (b2 !== e3 - d2) {
            if (n2) throw new q("corrupt array bson");
            throw new q("corrupt object bson");
          }
          if (!F2) return m2;
          if (yt(m2)) {
            const t4 = Object.assign({}, m2);
            return delete t4.$ref, delete t4.$id, delete t4.$db, new dt(m2.$ref, m2.$id, m2.$db, t4);
          }
          return m2;
        }
        __name(ee, "ee");
        const re = /\x00/, ne = /* @__PURE__ */ new Set(["$db", "$ref", "$id", "$clusterTime"]);
        function oe(t3, e3, r3, n2) {
          t3[n2++] = _, t3[(n2 = n2 + rt.encodeUTF8Into(t3, e3, n2) + 1) - 1] = 0;
          const o2 = rt.encodeUTF8Into(t3, r3, n2 + 4);
          return at.setInt32LE(t3, n2, o2 + 1), n2 = n2 + 4 + o2, t3[n2++] = 0, n2;
        }
        __name(oe, "oe");
        function ie(t3, e3, r3, n2) {
          const o2 = !Object.is(r3, -0) && Number.isSafeInteger(r3) && r3 <= h && r3 >= y ? B : g;
          return t3[n2++] = o2, n2 += rt.encodeUTF8Into(t3, e3, n2), t3[n2++] = 0, n2 + (o2 === B ? at.setInt32LE(t3, n2, r3) : at.setFloat64LE(t3, n2, r3));
        }
        __name(ie, "ie");
        function se(t3, e3, r3, n2) {
          return t3[n2++] = D, n2 += rt.encodeUTF8Into(t3, e3, n2), t3[n2++] = 0, n2 + at.setBigInt64LE(t3, n2, r3);
        }
        __name(se, "se");
        function ae(t3, e3, r3, n2) {
          return t3[n2++] = E, n2 += rt.encodeUTF8Into(t3, e3, n2), t3[n2++] = 0, n2;
        }
        __name(ae, "ae");
        function ue(t3, e3, r3, n2) {
          return t3[n2++] = P, n2 += rt.encodeUTF8Into(t3, e3, n2), t3[n2++] = 0, t3[n2++] = r3 ? 1 : 0, n2;
        }
        __name(ue, "ue");
        function ce(t3, e3, r3, n2) {
          t3[n2++] = A, n2 += rt.encodeUTF8Into(t3, e3, n2), t3[n2++] = 0;
          const o2 = $t.fromNumber(r3.getTime()), i2 = o2.getLowBits(), s2 = o2.getHighBits();
          return (n2 += at.setInt32LE(t3, n2, i2)) + at.setInt32LE(t3, n2, s2);
        }
        __name(ce, "ce");
        function le(t3, e3, r3, n2) {
          if (t3[n2++] = x, n2 += rt.encodeUTF8Into(t3, e3, n2), t3[n2++] = 0, r3.source && null != r3.source.match(re)) throw new q("value " + r3.source + " must not contain null bytes");
          return n2 += rt.encodeUTF8Into(t3, r3.source, n2), t3[n2++] = 0, r3.ignoreCase && (t3[n2++] = 105), r3.global && (t3[n2++] = 115), r3.multiline && (t3[n2++] = 109), t3[n2++] = 0, n2;
        }
        __name(le, "le");
        function fe(t3, e3, r3, n2) {
          if (t3[n2++] = x, n2 += rt.encodeUTF8Into(t3, e3, n2), t3[n2++] = 0, null != r3.pattern.match(re)) throw new q("pattern " + r3.pattern + " must not contain null bytes");
          n2 += rt.encodeUTF8Into(t3, r3.pattern, n2), t3[n2++] = 0;
          const o2 = r3.options.split("").sort().join("");
          return n2 += rt.encodeUTF8Into(t3, o2, n2), t3[n2++] = 0, n2;
        }
        __name(fe, "fe");
        function pe(t3, e3, r3, n2) {
          return null === r3 ? t3[n2++] = E : "MinKey" === r3._bsontype ? t3[n2++] = U : t3[n2++] = C, n2 += rt.encodeUTF8Into(t3, e3, n2), t3[n2++] = 0, n2;
        }
        __name(pe, "pe");
        function he(t3, e3, r3, n2) {
          return t3[n2++] = j, n2 += rt.encodeUTF8Into(t3, e3, n2), t3[n2++] = 0, n2 + r3.serializeInto(t3, n2);
        }
        __name(he, "he");
        function ye(t3, e3, r3, n2) {
          t3[n2++] = S, n2 += rt.encodeUTF8Into(t3, e3, n2), t3[n2++] = 0;
          const o2 = r3.length;
          if (n2 += at.setInt32LE(t3, n2, o2), t3[n2++] = F, o2 <= 16) for (let e4 = 0; e4 < o2; e4++) t3[n2 + e4] = r3[e4];
          else t3.set(r3, n2);
          return n2 + o2;
        }
        __name(ye, "ye");
        function de(t3, e3, r3, n2, o2, i2, s2, a2, u2) {
          if (u2.has(r3)) throw new q("Cannot convert circular structure to BSON");
          u2.add(r3), t3[n2++] = Array.isArray(r3) ? O : w, n2 += rt.encodeUTF8Into(t3, e3, n2), t3[n2++] = 0;
          const c2 = je(t3, r3, o2, n2, i2 + 1, s2, a2, u2);
          return u2.delete(r3), c2;
        }
        __name(de, "de");
        function be(t3, e3, r3, n2) {
          t3[n2++] = R, n2 += rt.encodeUTF8Into(t3, e3, n2), t3[n2++] = 0;
          for (let e4 = 0; e4 < 16; e4++) t3[n2 + e4] = r3.bytes[e4];
          return n2 + 16;
        }
        __name(be, "be");
        function me(t3, e3, r3, n2) {
          t3[n2++] = "Long" === r3._bsontype ? D : M, n2 += rt.encodeUTF8Into(t3, e3, n2), t3[n2++] = 0;
          const o2 = r3.getLowBits(), i2 = r3.getHighBits();
          return (n2 += at.setInt32LE(t3, n2, o2)) + at.setInt32LE(t3, n2, i2);
        }
        __name(me, "me");
        function ve(t3, e3, r3, n2) {
          return r3 = r3.valueOf(), t3[n2++] = B, n2 += rt.encodeUTF8Into(t3, e3, n2), t3[n2++] = 0, n2 + at.setInt32LE(t3, n2, r3);
        }
        __name(ve, "ve");
        function ge(t3, e3, r3, n2) {
          return t3[n2++] = g, n2 += rt.encodeUTF8Into(t3, e3, n2), t3[n2++] = 0, n2 + at.setFloat64LE(t3, n2, r3.value);
        }
        __name(ge, "ge");
        function _e(t3, e3, r3, n2) {
          t3[n2++] = k, n2 += rt.encodeUTF8Into(t3, e3, n2), t3[n2++] = 0;
          const o2 = r3.toString(), i2 = rt.encodeUTF8Into(t3, o2, n2 + 4) + 1;
          return at.setInt32LE(t3, n2, i2), n2 = n2 + 4 + i2 - 1, t3[n2++] = 0, n2;
        }
        __name(_e, "_e");
        function we(t3, e3, r3, n2, o2 = false, i2 = 0, s2 = false, a2 = true, u2) {
          if (r3.scope && "object" == typeof r3.scope) {
            t3[n2++] = I, n2 += rt.encodeUTF8Into(t3, e3, n2), t3[n2++] = 0;
            let c2 = n2;
            const l2 = r3.code;
            n2 += 4;
            const f2 = rt.encodeUTF8Into(t3, l2, n2 + 4) + 1;
            at.setInt32LE(t3, n2, f2), t3[n2 + 4 + f2 - 1] = 0, n2 = n2 + f2 + 4;
            const p2 = je(t3, r3.scope, o2, n2, i2 + 1, s2, a2, u2);
            n2 = p2 - 1;
            const h2 = p2 - c2;
            c2 += at.setInt32LE(t3, c2, h2), t3[n2++] = 0;
          } else {
            t3[n2++] = k, n2 += rt.encodeUTF8Into(t3, e3, n2), t3[n2++] = 0;
            const o3 = r3.code.toString(), i3 = rt.encodeUTF8Into(t3, o3, n2 + 4) + 1;
            at.setInt32LE(t3, n2, i3), n2 = n2 + 4 + i3 - 1, t3[n2++] = 0;
          }
          return n2;
        }
        __name(we, "we");
        function Oe(t3, e3, r3, n2) {
          t3[n2++] = S, n2 += rt.encodeUTF8Into(t3, e3, n2), t3[n2++] = 0;
          const o2 = r3.buffer;
          let i2 = r3.position;
          if (r3.sub_type === ut.SUBTYPE_BYTE_ARRAY && (i2 += 4), n2 += at.setInt32LE(t3, n2, i2), t3[n2++] = r3.sub_type, r3.sub_type === ut.SUBTYPE_BYTE_ARRAY && (i2 -= 4, n2 += at.setInt32LE(t3, n2, i2)), r3.sub_type === ut.SUBTYPE_VECTOR && ct(r3), i2 <= 16) for (let e4 = 0; e4 < i2; e4++) t3[n2 + e4] = o2[e4];
          else t3.set(o2, n2);
          return n2 + r3.position;
        }
        __name(Oe, "Oe");
        function Se(t3, e3, r3, n2) {
          t3[n2++] = N, n2 += rt.encodeUTF8Into(t3, e3, n2), t3[n2++] = 0;
          const o2 = rt.encodeUTF8Into(t3, r3.value, n2 + 4) + 1;
          return at.setInt32LE(t3, n2, o2), n2 = n2 + 4 + o2 - 1, t3[n2++] = 0, n2;
        }
        __name(Se, "Se");
        function $e(t3, e3, r3, n2, o2, i2, s2) {
          t3[n2++] = w, n2 += rt.encodeUTF8Into(t3, e3, n2), t3[n2++] = 0;
          let a2 = n2, u2 = { $ref: r3.collection || r3.namespace, $id: r3.oid };
          null != r3.db && (u2.$db = r3.db), u2 = Object.assign(u2, r3.fields);
          const c2 = je(t3, u2, false, n2, o2 + 1, i2, true, s2), l2 = c2 - a2;
          return a2 += at.setInt32LE(t3, n2, l2), c2;
        }
        __name($e, "$e");
        function je(t3, e3, r3, n2, o2, l2, h2, y2) {
          if (null == y2) {
            if (null == e3) return t3[0] = 5, t3[1] = 0, t3[2] = 0, t3[3] = 0, t3[4] = 0, 5;
            if (Array.isArray(e3)) throw new q("serialize does not support an array as the root input");
            if ("object" != typeof e3) throw new q("serialize does not support non-object as the root input");
            if ("_bsontype" in e3 && "string" == typeof e3._bsontype) throw new q("BSON types cannot be serialized as a document");
            if (c(e3) || a(e3) || i(e3) || s(e3)) throw new q("date, regexp, typedarray, and arraybuffer cannot be BSON documents");
            y2 = /* @__PURE__ */ new Set();
          }
          y2.add(e3);
          let d2 = n2 + 4;
          if (Array.isArray(e3)) for (let n3 = 0; n3 < e3.length; n3++) {
            const s2 = `${n3}`;
            let u2 = e3[n3];
            "function" == typeof u2?.toBSON && (u2 = u2.toBSON());
            const b3 = typeof u2;
            if (void 0 === u2) d2 = ae(t3, s2, 0, d2);
            else if (null === u2) d2 = ae(t3, s2, 0, d2);
            else if ("string" === b3) d2 = oe(t3, s2, u2, d2);
            else if ("number" === b3) d2 = ie(t3, s2, u2, d2);
            else if ("bigint" === b3) d2 = se(t3, s2, u2, d2);
            else if ("boolean" === b3) d2 = ue(t3, s2, u2, d2);
            else if ("object" === b3 && null == u2._bsontype) d2 = u2 instanceof Date || c(u2) ? ce(t3, s2, u2, d2) : u2 instanceof Uint8Array || i(u2) ? ye(t3, s2, u2, d2) : u2 instanceof RegExp || a(u2) ? le(t3, s2, u2, d2) : de(t3, s2, u2, d2, r3, o2, l2, h2, y2);
            else if ("object" === b3) {
              if (u2[p] !== f) throw new J();
              if ("ObjectId" === u2._bsontype) d2 = he(t3, s2, u2, d2);
              else if ("Decimal128" === u2._bsontype) d2 = be(t3, s2, u2, d2);
              else if ("Long" === u2._bsontype || "Timestamp" === u2._bsontype) d2 = me(t3, s2, u2, d2);
              else if ("Double" === u2._bsontype) d2 = ge(t3, s2, u2, d2);
              else if ("Code" === u2._bsontype) d2 = we(t3, s2, u2, d2, r3, o2, l2, h2, y2);
              else if ("Binary" === u2._bsontype) d2 = Oe(t3, s2, u2, d2);
              else if ("BSONSymbol" === u2._bsontype) d2 = Se(t3, s2, u2, d2);
              else if ("DBRef" === u2._bsontype) d2 = $e(t3, s2, u2, d2, o2, l2, y2);
              else if ("BSONRegExp" === u2._bsontype) d2 = fe(t3, s2, u2, d2);
              else if ("Int32" === u2._bsontype) d2 = ve(t3, s2, u2, d2);
              else if ("MinKey" === u2._bsontype || "MaxKey" === u2._bsontype) d2 = pe(t3, s2, u2, d2);
              else if (void 0 !== u2._bsontype) throw new q(`Unrecognized or invalid _bsontype: ${String(u2._bsontype)}`);
            } else "function" === b3 && l2 && (d2 = _e(t3, s2, u2, d2));
          }
          else if (e3 instanceof Map || u(e3)) {
            const n3 = e3.entries();
            let s2 = false;
            for (; !s2; ) {
              const e4 = n3.next();
              if (s2 = !!e4.done, s2) continue;
              const u2 = e4.value ? e4.value[0] : void 0;
              let b3 = e4.value ? e4.value[1] : void 0;
              "function" == typeof b3?.toBSON && (b3 = b3.toBSON());
              const m2 = typeof b3;
              if ("string" == typeof u2 && !ne.has(u2)) {
                if (null != u2.match(re)) throw new q("key " + u2 + " must not contain null bytes");
                if (r3) {
                  if ("$" === u2[0]) throw new q("key " + u2 + " must not start with '$'");
                  if (u2.includes(".")) throw new q("key " + u2 + " must not contain '.'");
                }
              }
              if (void 0 === b3) false === h2 && (d2 = ae(t3, u2, 0, d2));
              else if (null === b3) d2 = ae(t3, u2, 0, d2);
              else if ("string" === m2) d2 = oe(t3, u2, b3, d2);
              else if ("number" === m2) d2 = ie(t3, u2, b3, d2);
              else if ("bigint" === m2) d2 = se(t3, u2, b3, d2);
              else if ("boolean" === m2) d2 = ue(t3, u2, b3, d2);
              else if ("object" === m2 && null == b3._bsontype) d2 = b3 instanceof Date || c(b3) ? ce(t3, u2, b3, d2) : b3 instanceof Uint8Array || i(b3) ? ye(t3, u2, b3, d2) : b3 instanceof RegExp || a(b3) ? le(t3, u2, b3, d2) : de(t3, u2, b3, d2, r3, o2, l2, h2, y2);
              else if ("object" === m2) {
                if (b3[p] !== f) throw new J();
                if ("ObjectId" === b3._bsontype) d2 = he(t3, u2, b3, d2);
                else if ("Decimal128" === b3._bsontype) d2 = be(t3, u2, b3, d2);
                else if ("Long" === b3._bsontype || "Timestamp" === b3._bsontype) d2 = me(t3, u2, b3, d2);
                else if ("Double" === b3._bsontype) d2 = ge(t3, u2, b3, d2);
                else if ("Code" === b3._bsontype) d2 = we(t3, u2, b3, d2, r3, o2, l2, h2, y2);
                else if ("Binary" === b3._bsontype) d2 = Oe(t3, u2, b3, d2);
                else if ("BSONSymbol" === b3._bsontype) d2 = Se(t3, u2, b3, d2);
                else if ("DBRef" === b3._bsontype) d2 = $e(t3, u2, b3, d2, o2, l2, y2);
                else if ("BSONRegExp" === b3._bsontype) d2 = fe(t3, u2, b3, d2);
                else if ("Int32" === b3._bsontype) d2 = ve(t3, u2, b3, d2);
                else if ("MinKey" === b3._bsontype || "MaxKey" === b3._bsontype) d2 = pe(t3, u2, b3, d2);
                else if (void 0 !== b3._bsontype) throw new q(`Unrecognized or invalid _bsontype: ${String(b3._bsontype)}`);
              } else "function" === m2 && l2 && (d2 = _e(t3, u2, b3, d2));
            }
          } else {
            if ("function" == typeof e3?.toBSON && null != (e3 = e3.toBSON()) && "object" != typeof e3) throw new q("toBSON function did not return an object");
            for (const n3 of Object.keys(e3)) {
              let s2 = e3[n3];
              "function" == typeof s2?.toBSON && (s2 = s2.toBSON());
              const u2 = typeof s2;
              if ("string" == typeof n3 && !ne.has(n3)) {
                if (null != n3.match(re)) throw new q("key " + n3 + " must not contain null bytes");
                if (r3) {
                  if ("$" === n3[0]) throw new q("key " + n3 + " must not start with '$'");
                  if (n3.includes(".")) throw new q("key " + n3 + " must not contain '.'");
                }
              }
              if (void 0 === s2) false === h2 && (d2 = ae(t3, n3, 0, d2));
              else if (null === s2) d2 = ae(t3, n3, 0, d2);
              else if ("string" === u2) d2 = oe(t3, n3, s2, d2);
              else if ("number" === u2) d2 = ie(t3, n3, s2, d2);
              else if ("bigint" === u2) d2 = se(t3, n3, s2, d2);
              else if ("boolean" === u2) d2 = ue(t3, n3, s2, d2);
              else if ("object" === u2 && null == s2._bsontype) d2 = s2 instanceof Date || c(s2) ? ce(t3, n3, s2, d2) : s2 instanceof Uint8Array || i(s2) ? ye(t3, n3, s2, d2) : s2 instanceof RegExp || a(s2) ? le(t3, n3, s2, d2) : de(t3, n3, s2, d2, r3, o2, l2, h2, y2);
              else if ("object" === u2) {
                if (s2[p] !== f) throw new J();
                if ("ObjectId" === s2._bsontype) d2 = he(t3, n3, s2, d2);
                else if ("Decimal128" === s2._bsontype) d2 = be(t3, n3, s2, d2);
                else if ("Long" === s2._bsontype || "Timestamp" === s2._bsontype) d2 = me(t3, n3, s2, d2);
                else if ("Double" === s2._bsontype) d2 = ge(t3, n3, s2, d2);
                else if ("Code" === s2._bsontype) d2 = we(t3, n3, s2, d2, r3, o2, l2, h2, y2);
                else if ("Binary" === s2._bsontype) d2 = Oe(t3, n3, s2, d2);
                else if ("BSONSymbol" === s2._bsontype) d2 = Se(t3, n3, s2, d2);
                else if ("DBRef" === s2._bsontype) d2 = $e(t3, n3, s2, d2, o2, l2, y2);
                else if ("BSONRegExp" === s2._bsontype) d2 = fe(t3, n3, s2, d2);
                else if ("Int32" === s2._bsontype) d2 = ve(t3, n3, s2, d2);
                else if ("MinKey" === s2._bsontype || "MaxKey" === s2._bsontype) d2 = pe(t3, n3, s2, d2);
                else if (void 0 !== s2._bsontype) throw new q(`Unrecognized or invalid _bsontype: ${String(s2._bsontype)}`);
              } else "function" === u2 && l2 && (d2 = _e(t3, n3, s2, d2));
            }
          }
          y2.delete(e3), t3[d2++] = 0;
          const b2 = d2 - n2;
          return n2 += at.setInt32LE(t3, n2, b2), d2;
        }
        __name(je, "je");
        const Pe = { $oid: Jt, $binary: ut, $uuid: ut, $symbol: Wt, $numberInt: Ct, $numberDecimal: Rt, $numberDouble: Ut, $numberLong: $t, $minKey: Lt, $maxKey: Ft, $regex: Ht, $regularExpression: Ht, $timestamp: Qt };
        function Ae(t3, e3 = {}) {
          if ("number" == typeof t3) {
            const r4 = t3 <= h && t3 >= y, n2 = t3 <= d && t3 >= b;
            if (e3.relaxed || e3.legacy) return t3;
            if (Number.isInteger(t3) && !Object.is(t3, -0)) {
              if (r4) return new Ct(t3);
              if (n2) return e3.useBigInt64 ? BigInt(t3) : $t.fromNumber(t3);
            }
            return new Ut(t3);
          }
          if (null == t3 || "object" != typeof t3) return t3;
          if (t3.$undefined) return null;
          const r3 = Object.keys(t3).filter((e4) => e4.startsWith("$") && null != t3[e4]);
          for (let n2 = 0; n2 < r3.length; n2++) {
            const o2 = Pe[r3[n2]];
            if (o2) return o2.fromExtendedJSON(t3, e3);
          }
          if (null != t3.$date) {
            const r4 = t3.$date, n2 = /* @__PURE__ */ new Date();
            if (e3.legacy) if ("number" == typeof r4) n2.setTime(r4);
            else if ("string" == typeof r4) n2.setTime(Date.parse(r4));
            else {
              if ("bigint" != typeof r4) throw new z("Unrecognized type for EJSON date: " + typeof r4);
              n2.setTime(Number(r4));
            }
            else if ("string" == typeof r4) n2.setTime(Date.parse(r4));
            else if ($t.isLong(r4)) n2.setTime(r4.toNumber());
            else if ("number" == typeof r4 && e3.relaxed) n2.setTime(r4);
            else {
              if ("bigint" != typeof r4) throw new z("Unrecognized type for EJSON date: " + typeof r4);
              n2.setTime(Number(r4));
            }
            return n2;
          }
          if (null != t3.$code) {
            const e4 = Object.assign({}, t3);
            return t3.$scope && (e4.$scope = Ae(t3.$scope)), ht.fromExtendedJSON(t3);
          }
          if (yt(t3) || t3.$dbPointer) {
            const e4 = t3.$ref ? t3 : t3.$dbPointer;
            if (e4 instanceof dt) return e4;
            const r4 = Object.keys(e4).filter((t4) => t4.startsWith("$"));
            let n2 = true;
            if (r4.forEach((t4) => {
              -1 === ["$ref", "$id", "$db"].indexOf(t4) && (n2 = false);
            }), n2) return dt.fromExtendedJSON(e4);
          }
          return t3;
        }
        __name(Ae, "Ae");
        function Ee(t3) {
          const e3 = t3.toISOString();
          return 0 !== t3.getUTCMilliseconds() ? e3 : e3.slice(0, -5) + "Z";
        }
        __name(Ee, "Ee");
        function xe(t3, e3) {
          if (t3 instanceof Map || u(t3)) {
            const r3 = /* @__PURE__ */ Object.create(null);
            for (const [e4, n2] of t3) {
              if ("string" != typeof e4) throw new q("Can only serialize maps with string keys");
              r3[e4] = n2;
            }
            return xe(r3, e3);
          }
          if (("object" == typeof t3 || "function" == typeof t3) && null !== t3) {
            const r3 = e3.seenObjects.findIndex((e4) => e4.obj === t3);
            if (-1 !== r3) {
              const t4 = e3.seenObjects.map((t5) => t5.propertyName), n2 = t4.slice(0, r3).map((t5) => `${t5} -> `).join(""), o2 = t4[r3], i2 = " -> " + t4.slice(r3 + 1, t4.length - 1).map((t5) => `${t5} -> `).join(""), s2 = t4[t4.length - 1], a2 = " ".repeat(n2.length + o2.length / 2), u2 = "-".repeat(i2.length + (o2.length + s2.length) / 2 - 1);
              throw new q(`Converting circular structure to EJSON:
    ${n2}${o2}${i2}${s2}
    ${a2}\\${u2}/`);
            }
            e3.seenObjects[e3.seenObjects.length - 1].obj = t3;
          }
          if (Array.isArray(t3)) return function(t4, e4) {
            return t4.map((t5, r3) => {
              e4.seenObjects.push({ propertyName: `index ${r3}`, obj: null });
              try {
                return xe(t5, e4);
              } finally {
                e4.seenObjects.pop();
              }
            });
          }(t3, e3);
          if (void 0 === t3) return null;
          if (t3 instanceof Date || c(t3)) {
            const r3 = t3.getTime(), n2 = r3 > -1 && r3 < 2534023188e5;
            return e3.legacy ? e3.relaxed && n2 ? { $date: t3.getTime() } : { $date: Ee(t3) } : e3.relaxed && n2 ? { $date: Ee(t3) } : { $date: { $numberLong: t3.getTime().toString() } };
          }
          if (!("number" != typeof t3 || e3.relaxed && isFinite(t3))) {
            if (Number.isInteger(t3) && !Object.is(t3, -0)) {
              if (t3 >= y && t3 <= h) return { $numberInt: t3.toString() };
              if (t3 >= b && t3 <= d) return { $numberLong: t3.toString() };
            }
            return { $numberDouble: Object.is(t3, -0) ? "-0.0" : t3.toString() };
          }
          if ("bigint" == typeof t3) return e3.relaxed ? Number(BigInt.asIntN(64, t3)) : { $numberLong: BigInt.asIntN(64, t3).toString() };
          if (t3 instanceof RegExp || a(t3)) {
            let r3 = t3.flags;
            if (void 0 === r3) {
              const e4 = t3.toString().match(/[gimuy]*$/);
              e4 && (r3 = e4[0]);
            }
            return new Ht(t3.source, r3).toExtendedJSON(e3);
          }
          return null != t3 && "object" == typeof t3 ? function(t4, e4) {
            if (null == t4 || "object" != typeof t4) throw new q("not an object instance");
            const r3 = t4._bsontype;
            if (void 0 === r3) {
              const r4 = {};
              for (const n2 of Object.keys(t4)) {
                e4.seenObjects.push({ propertyName: n2, obj: null });
                try {
                  const o2 = xe(t4[n2], e4);
                  "__proto__" === n2 ? Object.defineProperty(r4, n2, { value: o2, writable: true, enumerable: true, configurable: true }) : r4[n2] = o2;
                } finally {
                  e4.seenObjects.pop();
                }
              }
              return r4;
            }
            if (null != t4 && "object" == typeof t4 && "string" == typeof t4._bsontype && t4[p] !== f) throw new J();
            if (function(t5) {
              return null != t5 && "object" == typeof t5 && "_bsontype" in t5 && "string" == typeof t5._bsontype;
            }(t4)) {
              let n2 = t4;
              if ("function" != typeof n2.toExtendedJSON) {
                const e5 = Te[t4._bsontype];
                if (!e5) throw new q("Unrecognized or invalid _bsontype: " + t4._bsontype);
                n2 = e5(n2);
              }
              return "Code" === r3 && n2.scope ? n2 = new ht(n2.code, xe(n2.scope, e4)) : "DBRef" === r3 && n2.oid && (n2 = new dt(xe(n2.collection, e4), xe(n2.oid, e4), xe(n2.db, e4), xe(n2.fields, e4))), n2.toExtendedJSON(e4);
            }
            throw new q("_bsontype must be a string, but was: " + typeof r3);
          }(t3, e3) : t3;
        }
        __name(xe, "xe");
        const Te = { Binary: /* @__PURE__ */ __name((t3) => new ut(t3.value(), t3.sub_type), "Binary"), Code: /* @__PURE__ */ __name((t3) => new ht(t3.code, t3.scope), "Code"), DBRef: /* @__PURE__ */ __name((t3) => new dt(t3.collection || t3.namespace, t3.oid, t3.db, t3.fields), "DBRef"), Decimal128: /* @__PURE__ */ __name((t3) => new Rt(t3.bytes), "Decimal128"), Double: /* @__PURE__ */ __name((t3) => new Ut(t3.value), "Double"), Int32: /* @__PURE__ */ __name((t3) => new Ct(t3.value), "Int32"), Long: /* @__PURE__ */ __name((t3) => $t.fromBits(null != t3.low ? t3.low : t3.low_, null != t3.low ? t3.high : t3.high_, null != t3.low ? t3.unsigned : t3.unsigned_), "Long"), MaxKey: /* @__PURE__ */ __name(() => new Ft(), "MaxKey"), MinKey: /* @__PURE__ */ __name(() => new Lt(), "MinKey"), ObjectId: /* @__PURE__ */ __name((t3) => new Jt(t3), "ObjectId"), BSONRegExp: /* @__PURE__ */ __name((t3) => new Ht(t3.pattern, t3.options), "BSONRegExp"), BSONSymbol: /* @__PURE__ */ __name((t3) => new Wt(t3.value), "BSONSymbol"), Timestamp: /* @__PURE__ */ __name((t3) => Qt.fromBits(t3.low, t3.high), "Timestamp") };
        function ke(t3, e3) {
          const r3 = { useBigInt64: e3?.useBigInt64 ?? false, relaxed: e3?.relaxed ?? true, legacy: e3?.legacy ?? false };
          return JSON.parse(t3, (t4, e4) => {
            if (-1 !== t4.indexOf("\0")) throw new q(`BSON Document field names cannot contain null bytes, found: ${JSON.stringify(t4)}`);
            return Ae(e4, r3);
          });
        }
        __name(ke, "ke");
        function Ne(t3, e3, r3, n2) {
          null != r3 && "object" == typeof r3 && (n2 = r3, r3 = 0), null == e3 || "object" != typeof e3 || Array.isArray(e3) || (n2 = e3, e3 = void 0, r3 = 0);
          const o2 = xe(t3, Object.assign({ relaxed: true, legacy: false }, n2, { seenObjects: [{ propertyName: "(root)", obj: null }] }));
          return JSON.stringify(o2, e3, r3);
        }
        __name(Ne, "Ne");
        const Ie = /* @__PURE__ */ Object.create(null);
        Ie.parse = ke, Ie.stringify = Ne, Ie.serialize = function(t3, e3) {
          return e3 = e3 || {}, JSON.parse(Ne(t3, e3));
        }, Ie.deserialize = function(t3, e3) {
          return e3 = e3 || {}, ke(JSON.stringify(t3), e3);
        }, Object.freeze(Ie);
        function Be(t3, e3) {
          try {
            return at.getNonnegativeInt32LE(t3, e3);
          } catch (t4) {
            throw new K("BSON size cannot be negative", e3, { cause: t4 });
          }
        }
        __name(Be, "Be");
        function Me(t3, e3) {
          let r3 = e3;
          for (; 0 !== t3[r3]; r3++) ;
          if (r3 === t3.length - 1) throw new K("Null terminator not found", e3);
          return r3;
        }
        __name(Me, "Me");
        const De = /* @__PURE__ */ Object.create(null);
        De.parseToElements = function(t3, e3 = 0) {
          if (e3 ??= 0, t3.length < 5) throw new K(`Input must be at least 5 bytes, got ${t3.length} bytes`, e3);
          const r3 = Be(t3, e3);
          if (r3 > t3.length - e3) throw new K(`Parsed documentSize (${r3} bytes) does not match input length (${t3.length} bytes)`, e3);
          if (0 !== t3[e3 + r3 - 1]) throw new K("BSON documents must end in 0x00", e3 + r3);
          const n2 = [];
          let o2 = e3 + 4;
          for (; o2 <= r3 + e3; ) {
            const i2 = t3[o2];
            if (o2 += 1, 0 === i2) {
              if (o2 - e3 !== r3) throw new K("Invalid 0x00 type byte", o2);
              break;
            }
            const s2 = o2, a2 = Me(t3, o2) - s2;
            let u2;
            if (o2 += a2 + 1, 1 === i2 || 18 === i2 || 9 === i2 || 17 === i2) u2 = 8;
            else if (16 === i2) u2 = 4;
            else if (7 === i2) u2 = 12;
            else if (19 === i2) u2 = 16;
            else if (8 === i2) u2 = 1;
            else if (10 === i2 || 6 === i2 || 127 === i2 || 255 === i2) u2 = 0;
            else if (11 === i2) u2 = Me(t3, Me(t3, o2) + 1) + 1 - o2;
            else if (3 === i2 || 4 === i2 || 15 === i2) u2 = Be(t3, o2);
            else {
              if (2 !== i2 && 5 !== i2 && 12 !== i2 && 13 !== i2 && 14 !== i2) throw new K(`Invalid 0x${i2.toString(16).padStart(2, "0")} type byte`, o2);
              u2 = Be(t3, o2) + 4, 5 === i2 && (u2 += 1), 12 === i2 && (u2 += 12);
            }
            if (u2 > r3) throw new K("value reports length larger than document", o2);
            n2.push([i2, s2, a2, o2, u2]), o2 += u2;
          }
          return n2;
        }, De.ByteUtils = rt, De.NumberUtils = at, Object.freeze(De);
        const Re = 17825792;
        let Ue = rt.allocate(Re);
        function Ce(t3) {
          Ue.length < t3 && (Ue = rt.allocate(t3));
        }
        __name(Ce, "Ce");
        function Fe(t3, e3 = {}) {
          const r3 = "boolean" == typeof e3.checkKeys && e3.checkKeys, n2 = "boolean" == typeof e3.serializeFunctions && e3.serializeFunctions, o2 = "boolean" != typeof e3.ignoreUndefined || e3.ignoreUndefined, i2 = "number" == typeof e3.minInternalBufferSize ? e3.minInternalBufferSize : Re;
          Ue.length < i2 && (Ue = rt.allocate(i2));
          const s2 = je(Ue, t3, r3, 0, 0, n2, o2, null), a2 = rt.allocateUnsafe(s2);
          return a2.set(Ue.subarray(0, s2), 0), a2;
        }
        __name(Fe, "Fe");
        function Le(t3, e3, r3 = {}) {
          const n2 = "boolean" == typeof r3.checkKeys && r3.checkKeys, o2 = "boolean" == typeof r3.serializeFunctions && r3.serializeFunctions, i2 = "boolean" != typeof r3.ignoreUndefined || r3.ignoreUndefined, s2 = "number" == typeof r3.index ? r3.index : 0, a2 = je(Ue, t3, n2, 0, 0, o2, i2, null);
          return e3.set(Ue.subarray(0, a2), s2), s2 + a2 - 1;
        }
        __name(Le, "Le");
        function Ve(t3, e3 = {}) {
          return Xt(rt.toLocalBufferType(t3), e3);
        }
        __name(Ve, "Ve");
        function qe(t3, e3 = {}) {
          return zt(t3, "boolean" == typeof (e3 = e3 || {}).serializeFunctions && e3.serializeFunctions, "boolean" != typeof e3.ignoreUndefined || e3.ignoreUndefined);
        }
        __name(qe, "qe");
        function Je(t3, e3, r3, n2, o2, i2) {
          const s2 = Object.assign({ allowObjectSmallerThanBufferSize: true, index: 0 }, i2), a2 = rt.toLocalBufferType(t3);
          let u2 = e3;
          for (let t4 = 0; t4 < r3; t4++) {
            const e4 = at.getInt32LE(a2, u2);
            s2.index = u2, n2[o2 + t4] = Xt(a2, s2), u2 += e4;
          }
          return u2;
        }
        __name(Je, "Je");
        var ze = Object.freeze({ __proto__: null, BSONError: q, BSONOffsetError: K, BSONRegExp: Ht, BSONRuntimeError: z, BSONSymbol: Wt, BSONType: V, BSONValue: nt, BSONVersionError: J, Binary: ut, Code: ht, DBRef: dt, Decimal128: Rt, Double: Ut, EJSON: Ie, Int32: Ct, Long: $t, MaxKey: Ft, MinKey: Lt, ObjectId: Jt, Timestamp: Qt, UUID: pt, calculateObjectSize: qe, deserialize: Ve, deserializeStream: Je, onDemand: De, serialize: Fe, serializeWithBufferAndIndex: Le, setInternalBufferSize: Ce });
      }, 6365: (t2, e2, r2) => {
        "use strict";
        var n = r2(5832).hp, o = r2(6353).Binary, i = r2(6353).UUID, s = r2(8768);
        function a(t3, e3, r3) {
          var o2, i2, u2, l, f = t3;
          return null == t3 && (f = 0), Array.isArray(e3) ? (i2 = e3[0], u2 = e3[1]) : o2 = e3, l = "number" == typeof f || f instanceof Number ? n.alloc(f) : n.from(f, o2, r3), s.decorate(l, a.mixin), l.isMongooseBuffer = true, l[a.pathSymbol] = i2, l[c] = u2, l._subtype = 0, l;
        }
        __name(a, "a");
        var u = Symbol.for("mongoose#Buffer#_path"), c = Symbol.for("mongoose#Buffer#_parent");
        a.pathSymbol = u, a.mixin = { _subtype: void 0, _markModified: /* @__PURE__ */ __name(function() {
          var t3 = this[c];
          return t3 && t3.markModified(this[a.pathSymbol]), this;
        }, "_markModified"), write: /* @__PURE__ */ __name(function() {
          var t3 = n.prototype.write.apply(this, arguments);
          return t3 > 0 && this._markModified(), t3;
        }, "write"), copy: /* @__PURE__ */ __name(function(t3) {
          var e3 = n.prototype.copy.apply(this, arguments);
          return t3 && t3.isMongooseBuffer && t3._markModified(), e3;
        }, "copy") }, s.each(["writeUInt8", "writeUInt16", "writeUInt32", "writeInt8", "writeInt16", "writeInt32", "writeFloat", "writeDouble", "fill", "utf8Write", "binaryWrite", "asciiWrite", "set", "writeUInt16LE", "writeUInt16BE", "writeUInt32LE", "writeUInt32BE", "writeInt16LE", "writeInt16BE", "writeInt32LE", "writeInt32BE", "writeFloatLE", "writeFloatBE", "writeDoubleLE", "writeDoubleBE"], function(t3) {
          n.prototype[t3] && (a.mixin[t3] = function() {
            var e3 = n.prototype[t3].apply(this, arguments);
            return this._markModified(), e3;
          });
        }), a.mixin.toObject = function(t3) {
          var e3 = "number" == typeof t3 ? t3 : this._subtype || 0;
          return new o(n.from(this), e3);
        }, a.mixin.$toObject = a.mixin.toObject, a.mixin.toBSON = function() {
          return new o(this, this._subtype || 0);
        }, a.mixin.toUUID = function() {
          if (4 !== this._subtype) throw new Error("Cannot convert a Buffer with subtype " + this._subtype + " to a UUID");
          return new i(this);
        }, a.mixin.equals = function(t3) {
          if (!n.isBuffer(t3)) return false;
          if (this.length !== t3.length) return false;
          for (var e3 = 0; e3 < this.length; ++e3) if (this[e3] !== t3[e3]) return false;
          return true;
        }, a.mixin.subtype = function(t3) {
          if ("number" != typeof t3) throw new TypeError("Invalid subtype. Expected a number");
          this._subtype !== t3 && this._markModified(), this._subtype = t3;
        }, a.Binary = o, t2.exports = a;
      }, 6400: (t2, e2, r2) => {
        "use strict";
        function n(t3) {
          return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
            return typeof t4;
          } : function(t4) {
            return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
          }, n(t3);
        }
        __name(n, "n");
        var o, i = r2(8093), s = r2(9870), a = r2(9206), u = r2(9939), c = r2(783), l = r2(9907), f = r2(2268), p = r2(8188), h = r2(9471), y = r2(2401), d = r2(1697), b = r2(8435), m = r2(8633), v = r2(2151), g = r2(674), _ = Function, w = /* @__PURE__ */ __name(function(t3) {
          try {
            return _('"use strict"; return (' + t3 + ").constructor;")();
          } catch (t4) {
          }
        }, "w"), O = r2(1464), S = r2(988), $ = /* @__PURE__ */ __name(function() {
          throw new f();
        }, "$"), j = O ? function() {
          try {
            return $;
          } catch (t3) {
            try {
              return O(arguments, "callee").get;
            } catch (t4) {
              return $;
            }
          }
        }() : $, P = r2(5510)(), A = r2(209), E = r2(5825), x = r2(2403), T = r2(3279), k = r2(3123), N = {}, I = "undefined" != typeof Uint8Array && A ? A(Uint8Array) : o, B = { __proto__: null, "%AggregateError%": "undefined" == typeof AggregateError ? o : AggregateError, "%Array%": Array, "%ArrayBuffer%": "undefined" == typeof ArrayBuffer ? o : ArrayBuffer, "%ArrayIteratorPrototype%": P && A ? A([][Symbol.iterator]()) : o, "%AsyncFromSyncIteratorPrototype%": o, "%AsyncFunction%": N, "%AsyncGenerator%": N, "%AsyncGeneratorFunction%": N, "%AsyncIteratorPrototype%": N, "%Atomics%": "undefined" == typeof Atomics ? o : Atomics, "%BigInt%": "undefined" == typeof BigInt ? o : BigInt, "%BigInt64Array%": "undefined" == typeof BigInt64Array ? o : BigInt64Array, "%BigUint64Array%": "undefined" == typeof BigUint64Array ? o : BigUint64Array, "%Boolean%": Boolean, "%DataView%": "undefined" == typeof DataView ? o : DataView, "%Date%": Date, "%decodeURI%": decodeURI, "%decodeURIComponent%": decodeURIComponent, "%encodeURI%": encodeURI, "%encodeURIComponent%": encodeURIComponent, "%Error%": s, "%eval%": eval, "%EvalError%": a, "%Float16Array%": "undefined" == typeof Float16Array ? o : Float16Array, "%Float32Array%": "undefined" == typeof Float32Array ? o : Float32Array, "%Float64Array%": "undefined" == typeof Float64Array ? o : Float64Array, "%FinalizationRegistry%": "undefined" == typeof FinalizationRegistry ? o : FinalizationRegistry, "%Function%": _, "%GeneratorFunction%": N, "%Int8Array%": "undefined" == typeof Int8Array ? o : Int8Array, "%Int16Array%": "undefined" == typeof Int16Array ? o : Int16Array, "%Int32Array%": "undefined" == typeof Int32Array ? o : Int32Array, "%isFinite%": isFinite, "%isNaN%": isNaN, "%IteratorPrototype%": P && A ? A(A([][Symbol.iterator]())) : o, "%JSON%": "object" === ("undefined" == typeof JSON ? "undefined" : n(JSON)) ? JSON : o, "%Map%": "undefined" == typeof Map ? o : Map, "%MapIteratorPrototype%": "undefined" != typeof Map && P && A ? A((/* @__PURE__ */ new Map())[Symbol.iterator]()) : o, "%Math%": Math, "%Number%": Number, "%Object%": i, "%Object.getOwnPropertyDescriptor%": O, "%parseFloat%": parseFloat, "%parseInt%": parseInt, "%Promise%": "undefined" == typeof Promise ? o : Promise, "%Proxy%": "undefined" == typeof Proxy ? o : Proxy, "%RangeError%": u, "%ReferenceError%": c, "%Reflect%": "undefined" == typeof Reflect ? o : Reflect, "%RegExp%": RegExp, "%Set%": "undefined" == typeof Set ? o : Set, "%SetIteratorPrototype%": "undefined" != typeof Set && P && A ? A((/* @__PURE__ */ new Set())[Symbol.iterator]()) : o, "%SharedArrayBuffer%": "undefined" == typeof SharedArrayBuffer ? o : SharedArrayBuffer, "%String%": String, "%StringIteratorPrototype%": P && A ? A(""[Symbol.iterator]()) : o, "%Symbol%": P ? Symbol : o, "%SyntaxError%": l, "%ThrowTypeError%": j, "%TypedArray%": I, "%TypeError%": f, "%Uint8Array%": "undefined" == typeof Uint8Array ? o : Uint8Array, "%Uint8ClampedArray%": "undefined" == typeof Uint8ClampedArray ? o : Uint8ClampedArray, "%Uint16Array%": "undefined" == typeof Uint16Array ? o : Uint16Array, "%Uint32Array%": "undefined" == typeof Uint32Array ? o : Uint32Array, "%URIError%": p, "%WeakMap%": "undefined" == typeof WeakMap ? o : WeakMap, "%WeakRef%": "undefined" == typeof WeakRef ? o : WeakRef, "%WeakSet%": "undefined" == typeof WeakSet ? o : WeakSet, "%Function.prototype.call%": k, "%Function.prototype.apply%": T, "%Object.defineProperty%": S, "%Object.getPrototypeOf%": E, "%Math.abs%": h, "%Math.floor%": y, "%Math.max%": d, "%Math.min%": b, "%Math.pow%": m, "%Math.round%": v, "%Math.sign%": g, "%Reflect.getPrototypeOf%": x };
        if (A) try {
          null.error;
        } catch (t3) {
          var M = A(A(t3));
          B["%Error.prototype%"] = M;
        }
        var D = /* @__PURE__ */ __name(function t3(e3) {
          var r3;
          if ("%AsyncFunction%" === e3) r3 = w("async function () {}");
          else if ("%GeneratorFunction%" === e3) r3 = w("function* () {}");
          else if ("%AsyncGeneratorFunction%" === e3) r3 = w("async function* () {}");
          else if ("%AsyncGenerator%" === e3) {
            var n2 = t3("%AsyncGeneratorFunction%");
            n2 && (r3 = n2.prototype);
          } else if ("%AsyncIteratorPrototype%" === e3) {
            var o2 = t3("%AsyncGenerator%");
            o2 && A && (r3 = A(o2.prototype));
          }
          return B[e3] = r3, r3;
        }, "t"), R = { __proto__: null, "%ArrayBufferPrototype%": ["ArrayBuffer", "prototype"], "%ArrayPrototype%": ["Array", "prototype"], "%ArrayProto_entries%": ["Array", "prototype", "entries"], "%ArrayProto_forEach%": ["Array", "prototype", "forEach"], "%ArrayProto_keys%": ["Array", "prototype", "keys"], "%ArrayProto_values%": ["Array", "prototype", "values"], "%AsyncFunctionPrototype%": ["AsyncFunction", "prototype"], "%AsyncGenerator%": ["AsyncGeneratorFunction", "prototype"], "%AsyncGeneratorPrototype%": ["AsyncGeneratorFunction", "prototype", "prototype"], "%BooleanPrototype%": ["Boolean", "prototype"], "%DataViewPrototype%": ["DataView", "prototype"], "%DatePrototype%": ["Date", "prototype"], "%ErrorPrototype%": ["Error", "prototype"], "%EvalErrorPrototype%": ["EvalError", "prototype"], "%Float32ArrayPrototype%": ["Float32Array", "prototype"], "%Float64ArrayPrototype%": ["Float64Array", "prototype"], "%FunctionPrototype%": ["Function", "prototype"], "%Generator%": ["GeneratorFunction", "prototype"], "%GeneratorPrototype%": ["GeneratorFunction", "prototype", "prototype"], "%Int8ArrayPrototype%": ["Int8Array", "prototype"], "%Int16ArrayPrototype%": ["Int16Array", "prototype"], "%Int32ArrayPrototype%": ["Int32Array", "prototype"], "%JSONParse%": ["JSON", "parse"], "%JSONStringify%": ["JSON", "stringify"], "%MapPrototype%": ["Map", "prototype"], "%NumberPrototype%": ["Number", "prototype"], "%ObjectPrototype%": ["Object", "prototype"], "%ObjProto_toString%": ["Object", "prototype", "toString"], "%ObjProto_valueOf%": ["Object", "prototype", "valueOf"], "%PromisePrototype%": ["Promise", "prototype"], "%PromiseProto_then%": ["Promise", "prototype", "then"], "%Promise_all%": ["Promise", "all"], "%Promise_reject%": ["Promise", "reject"], "%Promise_resolve%": ["Promise", "resolve"], "%RangeErrorPrototype%": ["RangeError", "prototype"], "%ReferenceErrorPrototype%": ["ReferenceError", "prototype"], "%RegExpPrototype%": ["RegExp", "prototype"], "%SetPrototype%": ["Set", "prototype"], "%SharedArrayBufferPrototype%": ["SharedArrayBuffer", "prototype"], "%StringPrototype%": ["String", "prototype"], "%SymbolPrototype%": ["Symbol", "prototype"], "%SyntaxErrorPrototype%": ["SyntaxError", "prototype"], "%TypedArrayPrototype%": ["TypedArray", "prototype"], "%TypeErrorPrototype%": ["TypeError", "prototype"], "%Uint8ArrayPrototype%": ["Uint8Array", "prototype"], "%Uint8ClampedArrayPrototype%": ["Uint8ClampedArray", "prototype"], "%Uint16ArrayPrototype%": ["Uint16Array", "prototype"], "%Uint32ArrayPrototype%": ["Uint32Array", "prototype"], "%URIErrorPrototype%": ["URIError", "prototype"], "%WeakMapPrototype%": ["WeakMap", "prototype"], "%WeakSetPrototype%": ["WeakSet", "prototype"] }, U = r2(2354), C = r2(5994), F = U.call(k, Array.prototype.concat), L = U.call(T, Array.prototype.splice), V = U.call(k, String.prototype.replace), q = U.call(k, String.prototype.slice), J = U.call(k, RegExp.prototype.exec), z = /[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g, K = /\\(\\)?/g, H = /* @__PURE__ */ __name(function(t3, e3) {
          var r3, n2 = t3;
          if (C(R, n2) && (n2 = "%" + (r3 = R[n2])[0] + "%"), C(B, n2)) {
            var o2 = B[n2];
            if (o2 === N && (o2 = D(n2)), void 0 === o2 && !e3) throw new f("intrinsic " + t3 + " exists, but is not available. Please file an issue!");
            return { alias: r3, name: n2, value: o2 };
          }
          throw new l("intrinsic " + t3 + " does not exist!");
        }, "H");
        t2.exports = function(t3, e3) {
          if ("string" != typeof t3 || 0 === t3.length) throw new f("intrinsic name must be a non-empty string");
          if (arguments.length > 1 && "boolean" != typeof e3) throw new f('"allowMissing" argument must be a boolean');
          if (null === J(/^%?[^%]*%?$/, t3)) throw new l("`%` may not be present anywhere but at the beginning and end of the intrinsic name");
          var r3 = function(t4) {
            var e4 = q(t4, 0, 1), r4 = q(t4, -1);
            if ("%" === e4 && "%" !== r4) throw new l("invalid intrinsic syntax, expected closing `%`");
            if ("%" === r4 && "%" !== e4) throw new l("invalid intrinsic syntax, expected opening `%`");
            var n3 = [];
            return V(t4, z, function(t5, e5, r5, o3) {
              n3[n3.length] = r5 ? V(o3, K, "$1") : e5 || t5;
            }), n3;
          }(t3), n2 = r3.length > 0 ? r3[0] : "", o2 = H("%" + n2 + "%", e3), i2 = o2.name, s2 = o2.value, a2 = false, u2 = o2.alias;
          u2 && (n2 = u2[0], L(r3, F([0, 1], u2)));
          for (var c2 = 1, p2 = true; c2 < r3.length; c2 += 1) {
            var h2 = r3[c2], y2 = q(h2, 0, 1), d2 = q(h2, -1);
            if (('"' === y2 || "'" === y2 || "`" === y2 || '"' === d2 || "'" === d2 || "`" === d2) && y2 !== d2) throw new l("property names with quotes must have matching quotes");
            if ("constructor" !== h2 && p2 || (a2 = true), C(B, i2 = "%" + (n2 += "." + h2) + "%")) s2 = B[i2];
            else if (null != s2) {
              if (!(h2 in s2)) {
                if (!e3) throw new f("base intrinsic for " + t3 + " exists, but the property is not available.");
                return;
              }
              if (O && c2 + 1 >= r3.length) {
                var b2 = O(s2, h2);
                s2 = (p2 = !!b2) && "get" in b2 && !("originalValue" in b2.get) ? b2.get : s2[h2];
              } else p2 = C(s2, h2), s2 = s2[h2];
              p2 && !a2 && (B[i2] = s2);
            }
          }
          return s2;
        };
      }, 6413: (t2, e2, r2) => {
        "use strict";
        function n(t3) {
          return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
            return typeof t4;
          } : function(t4) {
            return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
          }, n(t3);
        }
        __name(n, "n");
        function o(t3, e3) {
          var r3 = Object.keys(t3);
          if (Object.getOwnPropertySymbols) {
            var n2 = Object.getOwnPropertySymbols(t3);
            e3 && (n2 = n2.filter(function(e4) {
              return Object.getOwnPropertyDescriptor(t3, e4).enumerable;
            })), r3.push.apply(r3, n2);
          }
          return r3;
        }
        __name(o, "o");
        function i(t3, e3, r3) {
          return (e3 = function(t4) {
            var e4 = function(t5) {
              if ("object" != n(t5) || !t5) return t5;
              var e5 = t5[Symbol.toPrimitive];
              if (void 0 !== e5) {
                var r4 = e5.call(t5, "string");
                if ("object" != n(r4)) return r4;
                throw new TypeError("@@toPrimitive must return a primitive value.");
              }
              return String(t5);
            }(t4);
            return "symbol" == n(e4) ? e4 : e4 + "";
          }(e3)) in t3 ? Object.defineProperty(t3, e3, { value: r3, enumerable: true, configurable: true, writable: true }) : t3[e3] = r3, t3;
        }
        __name(i, "i");
        var s = r2(3609), a = r2(6426), u = r2(8953), c = r2(4327);
        function l(t3, e3) {
          a.call(this, t3, e3, "Boolean");
        }
        __name(l, "l");
        l.schemaName = "Boolean", l.defaultOptions = {}, l.prototype = Object.create(a.prototype), l.prototype.constructor = l, l._cast = u, l.set = a.set, l.setters = [], l.get = a.get, l.cast = function(t3) {
          return 0 === arguments.length || (false === t3 && (t3 = this._defaultCaster), this._cast = t3), this._cast;
        }, l._defaultCaster = function(t3) {
          if (null != t3 && "boolean" != typeof t3) throw new Error();
          return t3;
        }, l._checkRequired = function(t3) {
          return true === t3 || false === t3;
        }, l.checkRequired = a.checkRequired, l.prototype.checkRequired = function(t3) {
          return this.constructor._checkRequired(t3);
        }, Object.defineProperty(l, "convertToTrue", { get: /* @__PURE__ */ __name(function() {
          return u.convertToTrue;
        }, "get"), set: /* @__PURE__ */ __name(function(t3) {
          u.convertToTrue = t3;
        }, "set") }), Object.defineProperty(l, "convertToFalse", { get: /* @__PURE__ */ __name(function() {
          return u.convertToFalse;
        }, "get"), set: /* @__PURE__ */ __name(function(t3) {
          u.convertToFalse = t3;
        }, "set") }), l.prototype.cast = function(t3) {
          var e3;
          e3 = "function" == typeof this._castFunction ? this._castFunction : "function" == typeof this.constructor.cast ? this.constructor.cast() : l.cast();
          try {
            return e3(t3);
          } catch (e4) {
            throw new s("Boolean", t3, this.path, e4, this);
          }
        };
        var f = function(t3) {
          for (var e3 = 1; e3 < arguments.length; e3++) {
            var r3 = null != arguments[e3] ? arguments[e3] : {};
            e3 % 2 ? o(Object(r3), true).forEach(function(e4) {
              i(t3, e4, r3[e4]);
            }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t3, Object.getOwnPropertyDescriptors(r3)) : o(Object(r3)).forEach(function(e4) {
              Object.defineProperty(t3, e4, Object.getOwnPropertyDescriptor(r3, e4));
            });
          }
          return t3;
        }({}, a.prototype.$conditionalHandlers);
        Object.defineProperty(l.prototype, "$conditionalHandlers", { enumerable: false, value: f }), l.prototype.castForQuery = function(t3, e3, r3) {
          var n2;
          if (null != t3) return (n2 = this.$conditionalHandlers[t3]) ? n2.call(this, e3) : this.applySetters(e3, r3);
          try {
            return this.applySetters(e3, r3);
          } catch (t4) {
            throw t4 instanceof s && t4.path === this.path && null != this.$fullPath && (t4.path = this.$fullPath), t4;
          }
        }, l.prototype._castNullish = function(t3) {
          if (void 0 === t3) return t3;
          var e3 = "function" == typeof this.constructor.cast ? this.constructor.cast() : l.cast();
          return null == e3 ? t3 : !(e3.convertToFalse instanceof Set && e3.convertToFalse.has(t3)) && (!!(e3.convertToTrue instanceof Set && e3.convertToTrue.has(t3)) || t3);
        }, l.prototype.toJSONSchema = function(t3) {
          var e3 = this.options.required && "function" != typeof this.options.required;
          return c("boolean", "bool", null == t3 ? void 0 : t3.useBsonType, e3);
        }, l.prototype.autoEncryptionType = function() {
          return "bool";
        }, t2.exports = l;
      }, 6426: (t2, e2, r2) => {
        "use strict";
        var n = r2(5832).hp;
        function o(t3) {
          return o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
            return typeof t4;
          } : function(t4) {
            return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
          }, o(t3);
        }
        __name(o, "o");
        var i = r2(3672), s = r2(8879), a = r2(8499), u = r2(2555), c = r2(4450), l = r2(8133), f = r2(9183), p = r2(6155), h = r2(2746), y = r2(7930).schemaTypeSymbol, d = r2(8768), b = r2(7930).validatorErrorSymbol, m = r2(7930).documentIsModified, v = r2(7930).populateModelSymbol, g = i.CastError, _ = i.ValidatorError, w = { _skipMarkModified: true };
        function O(t3, e3, r3) {
          this[y] = true, this.path = t3, this.instance = r3, this.validators = [], this.getters = this.constructor.hasOwnProperty("getters") ? this.constructor.getters.slice() : [], this.setters = this.constructor.hasOwnProperty("setters") ? this.constructor.setters.slice() : [], this.splitPath(), e3 = e3 || {};
          for (var n2 = this.constructor.defaultOptions || {}, i2 = 0, a2 = Object.keys(n2); i2 < a2.length; i2++) {
            var u2 = a2[i2];
            "validate" === u2 ? this.validate(n2.validate) : n2.hasOwnProperty(u2) && !Object.prototype.hasOwnProperty.call(e3, u2) && (e3[u2] = n2[u2]);
          }
          null == e3.select && delete e3.select;
          var c2 = this.OptionsConstructor || s;
          this.options = new c2(e3), this._index = null, d.hasUserDefinedProperty(this.options, "immutable") && (this.$immutable = this.options.immutable, l(this));
          for (var f2 = 0, p2 = Object.keys(this.options); f2 < p2.length; f2++) {
            var h2 = p2[f2];
            if ("cast" !== h2) {
              if (d.hasUserDefinedProperty(this.options, h2) && "function" == typeof this[h2]) {
                if ("index" === h2 && this._index) {
                  if (false === e3.index) {
                    var b2 = this._index;
                    if ("object" === o(b2) && null != b2) {
                      if (b2.unique) throw new Error('Path "' + this.path + '" may not have `index` set to false and `unique` set to true');
                      if (b2.sparse) throw new Error('Path "' + this.path + '" may not have `index` set to false and `sparse` set to true');
                    }
                    this._index = false;
                  }
                  continue;
                }
                var m2 = e3[h2];
                if ("default" === h2) {
                  this.default(m2);
                  continue;
                }
                var v2 = Array.isArray(m2) ? m2 : [m2];
                this[h2].apply(this, v2);
              }
            } else Array.isArray(this.options[h2]) ? this.castFunction.apply(this, this.options[h2]) : this.castFunction(this.options[h2]);
          }
          Object.defineProperty(this, "$$context", { enumerable: false, configurable: false, writable: true, value: null });
        }
        __name(O, "O");
        function S(t3, e3) {
          if (void 0 !== t3 && !t3) {
            var r3 = new (e3.ErrorConstructor || _)(e3);
            return r3[b] = true, r3;
          }
        }
        __name(S, "S");
        function $(t3, e3) {
          return this.castForQuery(null, t3, e3);
        }
        __name($, "$");
        function j(t3, e3) {
          var r3 = this;
          return Array.isArray(t3) ? t3.map(function(t4) {
            return Array.isArray(t4) && 0 === t4.length ? t4 : r3.castForQuery(null, t4, e3);
          }) : [this.castForQuery(null, t3, e3)];
        }
        __name(j, "j");
        O.prototype.OptionsConstructor = s, O.prototype.path, O.prototype.validators, O.prototype.isRequired, O.prototype.splitPath = function() {
          return null != this._presplitPath ? this._presplitPath : null != this.path ? (this._presplitPath = -1 === this.path.indexOf(".") ? [this.path] : this.path.split("."), this._presplitPath) : void 0;
        }, O.cast = function(t3) {
          return 0 === arguments.length || (false === t3 && (t3 = /* @__PURE__ */ __name(function(t4) {
            return t4;
          }, "t")), this._cast = t3), this._cast;
        }, O.prototype.castFunction = function(t3, e3) {
          return 0 === arguments.length ? this._castFunction : (false === t3 && (t3 = this.constructor._defaultCaster || function(t4) {
            return t4;
          }), "string" == typeof t3 ? (this._castErrorMessage = t3, this._castFunction) : (null != t3 && (this._castFunction = t3), null != e3 && (this._castErrorMessage = e3), this._castFunction));
        }, O.prototype.cast = function() {
          throw new Error("Base SchemaType class does not implement a `cast()` function");
        }, O.set = function(t3, e3) {
          this.hasOwnProperty("defaultOptions") || (this.defaultOptions = Object.assign({}, this.defaultOptions)), this.defaultOptions[t3] = e3;
        }, O.get = function(t3) {
          this.getters = this.hasOwnProperty("getters") ? this.getters : [], this.getters.push(t3);
        }, O.prototype.default = function(t3) {
          if (1 === arguments.length) {
            if (void 0 === t3) return void (this.defaultValue = void 0);
            if (null != t3 && t3.instanceOfSchema) throw new i("Cannot set default value of path `" + this.path + "` to a mongoose Schema instance.");
            return this.defaultValue = t3, this.defaultValue;
          }
          return arguments.length > 1 && (this.defaultValue = Array.prototype.slice.call(arguments)), this.defaultValue;
        }, O.prototype.index = function(t3) {
          return this._index = t3, d.expires(this._index), this;
        }, O.prototype.unique = function(t3, e3) {
          if (false === this._index) {
            if (!t3) return;
            throw new Error('Path "' + this.path + '" may not have `index` set to false and `unique` set to true');
          }
          return this.options.hasOwnProperty("index") || false !== t3 ? (null == this._index || true === this._index ? this._index = {} : "string" == typeof this._index && (this._index = { type: this._index }), this._index.unique = !!t3, "string" == typeof e3 && (this._duplicateKeyErrorMessage = e3), this) : this;
        }, O.prototype.text = function(t3) {
          if (false === this._index) {
            if (!t3) return this;
            throw new Error('Path "' + this.path + '" may not have `index` set to false and `text` set to true');
          }
          return this.options.hasOwnProperty("index") || false !== t3 ? (null === this._index || void 0 === this._index || "boolean" == typeof this._index ? this._index = {} : "string" == typeof this._index && (this._index = { type: this._index }), this._index.text = t3, this) : this;
        }, O.prototype.sparse = function(t3) {
          if (false === this._index) {
            if (!t3) return this;
            throw new Error('Path "' + this.path + '" may not have `index` set to false and `sparse` set to true');
          }
          return this.options.hasOwnProperty("index") || false !== t3 ? (null == this._index || "boolean" == typeof this._index ? this._index = {} : "string" == typeof this._index && (this._index = { type: this._index }), this._index.sparse = t3, this) : this;
        }, O.prototype.immutable = function(t3) {
          return this.$immutable = t3, l(this), this;
        }, O.prototype.transform = function(t3) {
          return this.options.transform = t3, this;
        }, O.prototype.set = function(t3) {
          if ("function" != typeof t3) throw new TypeError("A setter must be a function.");
          return this.setters.push(t3), this;
        }, O.prototype.get = function(t3) {
          if ("function" != typeof t3) throw new TypeError("A getter must be a function.");
          return this.getters.push(t3), this;
        }, O.prototype.validateAll = function(t3) {
          for (var e3 = 0; e3 < t3.length; e3++) this.validate(t3[e3]);
          return this;
        }, O.prototype.validate = function(t3, e3, r3) {
          var n2, s2, a2, u2;
          if ("function" == typeof t3 || t3 && "RegExp" === d.getFunctionName(t3.constructor)) return "function" == typeof e3 ? (n2 = { validator: t3, message: e3 }).type = r3 || "user defined" : e3 instanceof Object && !r3 ? ((n2 = p(e3) ? Object.assign({}, e3) : c(e3)).message || (n2.message = n2.msg), n2.validator = t3, n2.type = n2.type || "user defined") : (null == e3 && (e3 = i.messages.general.default), r3 || (r3 = "user defined"), n2 = { message: e3, type: r3, validator: t3 }), this.validators.push(n2), this;
          for (s2 = 0, a2 = arguments.length; s2 < a2; s2++) {
            if (u2 = arguments[s2], !d.isPOJO(u2)) {
              var l2 = "Invalid validator. Received (" + o(u2) + ") " + u2 + ". See https://mongoosejs.com/docs/api/schematype.html#SchemaType.prototype.validate()";
              throw new Error(l2);
            }
            this.validate(u2.validator, u2);
          }
          return this;
        }, O.prototype.required = function(t3, e3) {
          var r3 = {};
          if (arguments.length > 0 && null == t3) return this.validators = this.validators.filter(function(t4) {
            return t4.validator !== this.requiredValidator;
          }, this), this.isRequired = false, delete this.originalRequiredValue, this;
          if ("object" === o(t3) && (e3 = (r3 = t3).message || e3, t3 = t3.isRequired), false === t3) return this.validators = this.validators.filter(function(t4) {
            return t4.validator !== this.requiredValidator;
          }, this), this.isRequired = false, delete this.originalRequiredValue, this;
          var n2 = this;
          this.isRequired = true, this.requiredValidator = function(e4) {
            var r4 = this && this.$__ && this.$__.cachedRequired;
            if (null != r4 && !this.$__isSelected(n2.path) && !this[m](n2.path)) return true;
            if (null != r4 && n2.path in r4) {
              var o2 = !r4[n2.path] || n2.checkRequired(e4, this);
              return delete r4[n2.path], o2;
            }
            return "function" == typeof t3 && !t3.apply(this) || n2.checkRequired(e4, this);
          }, this.originalRequiredValue = t3, "string" == typeof t3 && (e3 = t3, t3 = void 0);
          var s2 = e3 || i.messages.general.required;
          return this.validators.unshift(Object.assign({}, r3, { validator: this.requiredValidator, message: s2, type: "required" })), this;
        }, O.prototype.ref = function(t3) {
          return this.options.ref = t3, this;
        }, O.prototype.getDefault = function(t3, e3, r3) {
          var n2;
          if (null != (n2 = "function" == typeof this.defaultValue ? this.defaultValue === Date.now || this.defaultValue === Array || "objectid" === this.defaultValue.name.toLowerCase() ? this.defaultValue.call(t3) : this.defaultValue.call(t3, t3) : this.defaultValue)) {
            if ("object" !== o(n2) || this.options && this.options.shared || (n2 = c(n2)), r3 && r3.skipCast) return this._applySetters(n2, t3);
            var i2 = this.applySetters(n2, t3, e3, void 0, w);
            return i2 && !Array.isArray(i2) && i2.$isSingleNested && (i2.$__parent = t3), i2;
          }
          return n2;
        }, O.prototype._applySetters = function(t3, e3, r3, n2, o2) {
          var i2 = t3;
          if (r3) return i2;
          for (var s2 = this.setters, a2 = s2.length - 1; a2 >= 0; a2--) i2 = s2[a2].call(e3, i2, n2, this, o2);
          return i2;
        }, O.prototype._castNullish = function(t3) {
          return t3;
        }, O.prototype.applySetters = function(t3, e3, r3, n2, o2) {
          var i2 = this._applySetters(t3, e3, r3, n2, o2);
          return null == i2 ? this._castNullish(i2) : i2 = this.cast(i2, e3, r3, n2, o2);
        }, O.prototype.applyGetters = function(t3, e3) {
          var r3 = t3, n2 = this.getters, o2 = n2.length;
          if (0 === o2) return r3;
          for (var i2 = 0; i2 < o2; ++i2) r3 = n2[i2].call(e3, r3, this);
          return r3;
        }, O.prototype.select = function(t3) {
          return this.selected = !!t3, this;
        }, O.prototype.doValidate = function(t3, e3, r3, n2) {
          var i2 = this, s2 = false, a2 = this.path;
          if ("function" != typeof e3) throw new TypeError("Must pass callback function to doValidate(), got ".concat(o(e3)));
          var u2 = this.validators.filter(function(t4) {
            return "object" === o(t4) && null !== t4;
          }), l2 = u2.length;
          if (!l2) return e3(null);
          for (var f2 = function() {
            if (s2) return 0;
            var e4, o2 = u2[y2], l3 = o2.validator, f3 = p(o2) ? Object.assign({}, o2) : c(o2);
            if (f3.path = n2 && n2.path ? n2.path : a2, f3.fullPath = i2.$fullPath, f3.value = t3, "string" == typeof t3 && (f3.length = t3.length, f3.value.length > 30 && (f3.value = f3.value.slice(0, 30) + "...")), l3 instanceof RegExp) return m2(l3.test(t3), f3, r3), 1;
            if ("function" != typeof l3) return 1;
            if (void 0 === t3 && l3 !== i2.requiredValidator) return m2(true, f3, r3), 1;
            try {
              e4 = f3.propsParameter ? l3.call(r3, t3, f3) : l3.call(r3, t3);
            } catch (t4) {
              e4 = false, f3.reason = t4, t4.message && (f3.message = t4.message);
            }
            null != e4 && "function" == typeof e4.then ? e4.then(function(t4) {
              m2(t4, f3, r3);
            }, function(t4) {
              f3.reason = t4, f3.message = t4.message, m2(e4 = false, f3, r3);
            }) : m2(e4, f3, r3);
          }, y2 = 0, d2 = u2.length; y2 < d2 && 0 !== f2(); ++y2) ;
          function m2(t4, r4, n3) {
            if (!s2) if (void 0 === t4 || t4) --l2 <= 0 && h(function() {
              e3(null);
            });
            else {
              var o2 = r4.ErrorConstructor || _;
              (s2 = new o2(r4, n3))[b] = true, h(function() {
                e3(s2);
              });
            }
          }
          __name(m2, "m");
        }, O.prototype.doValidateSync = function(t3, e3, r3) {
          var n2 = this.path;
          if (!this.validators.length) return null;
          var i2 = this.validators;
          if (void 0 === t3) {
            if (0 === this.validators.length || "required" !== this.validators[0].type) return null;
            i2 = [this.validators[0]];
          }
          var s2 = null, a2 = 0, u2 = i2.length;
          for (a2 = 0; a2 < u2; ++a2) {
            var l2 = i2[a2];
            if (null !== l2 && "object" === o(l2)) {
              var h2 = l2.validator, y2 = p(l2) ? Object.assign({}, l2) : c(l2);
              y2.path = r3 && r3.path ? r3.path : n2, y2.fullPath = this.$fullPath, y2.value = t3, "string" == typeof t3 && (y2.length = t3.length, y2.value.length > 30 && (y2.value = y2.value.slice(0, 30) + "..."));
              var d2 = false;
              if (!f(h2)) {
                if (h2 instanceof RegExp) s2 = S(h2.test(t3), y2);
                else if ("function" == typeof h2) {
                  try {
                    d2 = y2.propsParameter ? h2.call(e3, t3, y2) : h2.call(e3, t3);
                  } catch (t4) {
                    d2 = false, y2.reason = t4;
                  }
                  if ((null == d2 || "function" != typeof d2.then) && (s2 = S(d2, y2))) break;
                }
              }
            }
          }
          return s2;
        }, O._isRef = function(t3, e3, r3, o2) {
          var i2 = o2 && t3.options && (t3.options.ref || t3.options.refPath);
          if (!i2 && r3 && null != r3.$__) {
            var s2 = r3.$__fullPath(t3.path, true), a2 = r3.ownerDocument();
            i2 = null != s2 && a2.$populated(s2) || r3.$populated(t3.path);
          }
          return !!i2 && (null == e3 || !(n.isBuffer(e3) || "Binary" === e3._bsontype || !d.isObject(e3)) || o2);
        }, O.prototype._castRef = function(t3, e3, r3, i2) {
          if (null == t3) return t3;
          if (null != t3.$__) return t3.$__.wasPopulated = t3.$__.wasPopulated || { value: t3._doc._id }, t3;
          if (n.isBuffer(t3) || !d.isObject(t3)) {
            if (r3) return t3;
            throw new g(this.instance, t3, this.path, null, this);
          }
          var s2, a2, u2, c2 = e3.$__fullPath(this.path, true), l2 = e3.ownerDocument().$populated(c2, true), f2 = t3;
          if (!(e3.$__.populated && e3.$__.populated[c2] && e3.$__.populated[c2].options && e3.$__.populated[c2].options.options && e3.$__.populated[c2].options.options.lean)) {
            var p2 = l2 ? l2.options[v] : e3.constructor.db.model(this.options.ref);
            (f2 = p2.hydrate(t3, null, i2)).$__.wasPopulated = { value: f2._doc._id, options: (s2 = {}, a2 = v, u2 = p2, (a2 = function(t4) {
              var e4 = function(t5) {
                if ("object" != o(t5) || !t5) return t5;
                var e5 = t5[Symbol.toPrimitive];
                if (void 0 !== e5) {
                  var r4 = e5.call(t5, "string");
                  if ("object" != o(r4)) return r4;
                  throw new TypeError("@@toPrimitive must return a primitive value.");
                }
                return String(t5);
              }(t4);
              return "symbol" == o(e4) ? e4 : e4 + "";
            }(a2)) in s2 ? Object.defineProperty(s2, a2, { value: u2, enumerable: true, configurable: true, writable: true }) : s2[a2] = u2, s2) };
          }
          return f2;
        }, O.prototype.$conditionalHandlers = { $all: /* @__PURE__ */ __name(function(t3, e3) {
          var r3 = this;
          return Array.isArray(t3) ? t3.map(function(t4) {
            return r3.castForQuery(null, t4, e3);
          }) : [this.castForQuery(null, t3, e3)];
        }, "$all"), $eq: $, $in: j, $ne: $, $nin: j, $exists: a, $type: u }, O.prototype.castForQuery = function(t3, e3, r3) {
          var n2;
          if (null != t3) {
            if (!(n2 = this.$conditionalHandlers[t3])) throw new Error("Can't use " + t3);
            return n2.call(this, e3, r3);
          }
          try {
            return this.applySetters(e3, r3);
          } catch (t4) {
            throw t4 instanceof g && t4.path === this.path && null != this.$fullPath && (t4.path = this.$fullPath), t4;
          }
        }, O.checkRequired = function(t3) {
          return 0 !== arguments.length && (this._checkRequired = t3), this._checkRequired;
        }, O.prototype.checkRequired = function(t3) {
          return null != t3;
        }, O.prototype.clone = function() {
          var t3 = Object.assign({}, this.options), e3 = new this.constructor(this.path, t3, this.instance);
          return e3.validators = this.validators.slice(), void 0 !== this.requiredValidator && (e3.requiredValidator = this.requiredValidator), void 0 !== this.defaultValue && (e3.defaultValue = this.defaultValue), void 0 !== this.$immutable && void 0 === this.options.immutable && (e3.$immutable = this.$immutable, l(e3)), void 0 !== this._index && (e3._index = this._index), void 0 !== this.selected && (e3.selected = this.selected), void 0 !== this.isRequired && (e3.isRequired = this.isRequired), void 0 !== this.originalRequiredValue && (e3.originalRequiredValue = this.originalRequiredValue), e3.getters = this.getters.slice(), e3.setters = this.setters.slice(), e3;
        }, O.prototype.getEmbeddedSchemaType = function() {
          return this.$embeddedSchemaType;
        }, O.prototype._duplicateKeyErrorMessage = null, O.prototype.toJSONSchema = function(t3) {
          throw new Error("Converting unsupported SchemaType to JSON Schema: ".concat(this.instance, ' at path "').concat(this.path, '"'));
        }, O.prototype.autoEncryptionType = function() {
          return null;
        }, t2.exports = e2 = O, e2.CastError = g, e2.ValidatorError = _;
      }, 6451: (t2, e2, r2) => {
        "use strict";
        var n = r2(8768).isPOJO;
        t2.exports = /* @__PURE__ */ __name(function t3(e3) {
          for (var r3, o, i, s = Object.keys(e3), a = s.length; a--; ) i = e3[o = s[a]], n(i) && (e3[o] = t3(i)), void 0 !== e3[o] ? r3 = true : delete e3[o];
          return r3 ? e3 : void 0;
        }, "t");
      }, 6511: (t2, e2, r2) => {
        "use strict";
        function n(t3) {
          return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
            return typeof t4;
          } : function(t4) {
            return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
          }, n(t3);
        }
        __name(n, "n");
        function o(t3, e3) {
          (null == e3 || e3 > t3.length) && (e3 = t3.length);
          for (var r3 = 0, n2 = Array(e3); r3 < e3; r3++) n2[r3] = t3[r3];
          return n2;
        }
        __name(o, "o");
        function i(t3, e3) {
          var r3 = Object.keys(t3);
          if (Object.getOwnPropertySymbols) {
            var n2 = Object.getOwnPropertySymbols(t3);
            e3 && (n2 = n2.filter(function(e4) {
              return Object.getOwnPropertyDescriptor(t3, e4).enumerable;
            })), r3.push.apply(r3, n2);
          }
          return r3;
        }
        __name(i, "i");
        function s(t3) {
          for (var e3 = 1; e3 < arguments.length; e3++) {
            var r3 = null != arguments[e3] ? arguments[e3] : {};
            e3 % 2 ? i(Object(r3), true).forEach(function(e4) {
              a(t3, e4, r3[e4]);
            }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t3, Object.getOwnPropertyDescriptors(r3)) : i(Object(r3)).forEach(function(e4) {
              Object.defineProperty(t3, e4, Object.getOwnPropertyDescriptor(r3, e4));
            });
          }
          return t3;
        }
        __name(s, "s");
        function a(t3, e3, r3) {
          return (e3 = function(t4) {
            var e4 = function(t5) {
              if ("object" != n(t5) || !t5) return t5;
              var e5 = t5[Symbol.toPrimitive];
              if (void 0 !== e5) {
                var r4 = e5.call(t5, "string");
                if ("object" != n(r4)) return r4;
                throw new TypeError("@@toPrimitive must return a primitive value.");
              }
              return String(t5);
            }(t4);
            return "symbol" == n(e4) ? e4 : e4 + "";
          }(e3)) in t3 ? Object.defineProperty(t3, e3, { value: r3, enumerable: true, configurable: true, writable: true }) : t3[e3] = r3, t3;
        }
        __name(a, "a");
        r2(8768);
        var u = t2.exports = function() {
        };
        u.ctor = function() {
          var t3 = Array.prototype.slice.call(arguments), e3 = /* @__PURE__ */ __name(function() {
            u.apply(this, arguments), this.paths = {}, this.states = {};
          }, "e");
          return (e3.prototype = new u()).constructor = e3, e3.prototype.stateNames = t3, t3.forEach(function(t4) {
            e3.prototype[t4] = function(e4) {
              this._changeState(e4, t4);
            };
          }), e3;
        }, u.prototype._changeState = function(t3, e3) {
          var r3 = this.paths[t3];
          if (r3 !== e3) {
            var n2 = this.states[r3];
            n2 && delete n2[t3], this.paths[t3] = e3, this.states[e3] = this.states[e3] || {}, this.states[e3][t3] = true;
          }
        }, u.prototype.clear = function(t3) {
          if (null != this.states[t3]) for (var e3, r3 = Object.keys(this.states[t3]), n2 = r3.length; n2--; ) e3 = r3[n2], delete this.states[t3][e3], delete this.paths[e3];
        }, u.prototype.clearPath = function(t3) {
          var e3 = this.paths[t3];
          e3 && (delete this.paths[t3], delete this.states[e3][t3]);
        }, u.prototype.getStatePaths = function(t3) {
          return null != this.states[t3] ? this.states[t3] : {};
        }, u.prototype.some = function() {
          var t3 = this, e3 = arguments.length ? arguments : this.stateNames;
          return Array.prototype.some.call(e3, function(e4) {
            return null != t3.states[e4] && Object.keys(t3.states[e4]).length;
          });
        }, u.prototype._iter = function(t3) {
          return function() {
            var e3 = Array.prototype.slice.call(arguments), r3 = e3.pop();
            e3.length || (e3 = this.stateNames);
            var n2 = this;
            return e3.reduce(function(t4, e4) {
              return null == n2.states[e4] ? t4 : t4.concat(Object.keys(n2.states[e4]));
            }, [])[t3](function(t4, e4, n3) {
              return r3(t4, e4, n3);
            });
          };
        }, u.prototype.forEach = function() {
          return this.forEach = this._iter("forEach"), this.forEach.apply(this, arguments);
        }, u.prototype.map = function() {
          return this.map = this._iter("map"), this.map.apply(this, arguments);
        }, u.prototype.clone = function() {
          var t3 = new this.constructor();
          t3.paths = s({}, this.paths);
          var e3, r3 = function(t4, e4) {
            var r4 = "undefined" != typeof Symbol && t4[Symbol.iterator] || t4["@@iterator"];
            if (!r4) {
              if (Array.isArray(t4) || (r4 = function(t5, e5) {
                if (t5) {
                  if ("string" == typeof t5) return o(t5, e5);
                  var r5 = {}.toString.call(t5).slice(8, -1);
                  return "Object" === r5 && t5.constructor && (r5 = t5.constructor.name), "Map" === r5 || "Set" === r5 ? Array.from(t5) : "Arguments" === r5 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r5) ? o(t5, e5) : void 0;
                }
              }(t4)) || e4 && t4 && "number" == typeof t4.length) {
                r4 && (t4 = r4);
                var n3 = 0, i2 = /* @__PURE__ */ __name(function() {
                }, "i");
                return { s: i2, n: /* @__PURE__ */ __name(function() {
                  return n3 >= t4.length ? { done: true } : { done: false, value: t4[n3++] };
                }, "n"), e: /* @__PURE__ */ __name(function(t5) {
                  throw t5;
                }, "e"), f: i2 };
              }
              throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
            }
            var s2, a2 = true, u2 = false;
            return { s: /* @__PURE__ */ __name(function() {
              r4 = r4.call(t4);
            }, "s"), n: /* @__PURE__ */ __name(function() {
              var t5 = r4.next();
              return a2 = t5.done, t5;
            }, "n"), e: /* @__PURE__ */ __name(function(t5) {
              u2 = true, s2 = t5;
            }, "e"), f: /* @__PURE__ */ __name(function() {
              try {
                a2 || null == r4.return || r4.return();
              } finally {
                if (u2) throw s2;
              }
            }, "f") };
          }(this.stateNames);
          try {
            for (r3.s(); !(e3 = r3.n()).done; ) {
              var n2 = e3.value;
              n2 in this.states && (t3.states[n2] = null == this.states[n2] ? this.states[n2] : s({}, this.states[n2]));
            }
          } catch (t4) {
            r3.e(t4);
          } finally {
            r3.f();
          }
          return t3;
        };
      }, 6544: (t2, e2, r2) => {
        "use strict";
        function n(t3) {
          return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
            return typeof t4;
          } : function(t4) {
            return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
          }, n(t3);
        }
        __name(n, "n");
        var o;
        if (!Object.keys) {
          var i = Object.prototype.hasOwnProperty, s = Object.prototype.toString, a = r2(6312), u = Object.prototype.propertyIsEnumerable, c = !u.call({ toString: null }, "toString"), l = u.call(function() {
          }, "prototype"), f = ["toString", "toLocaleString", "valueOf", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "constructor"], p = /* @__PURE__ */ __name(function(t3) {
            var e3 = t3.constructor;
            return e3 && e3.prototype === t3;
          }, "p"), h = { $applicationCache: true, $console: true, $external: true, $frame: true, $frameElement: true, $frames: true, $innerHeight: true, $innerWidth: true, $onmozfullscreenchange: true, $onmozfullscreenerror: true, $outerHeight: true, $outerWidth: true, $pageXOffset: true, $pageYOffset: true, $parent: true, $scrollLeft: true, $scrollTop: true, $scrollX: true, $scrollY: true, $self: true, $webkitIndexedDB: true, $webkitStorageInfo: true, $window: true }, y = function() {
            if ("undefined" == typeof window) return false;
            for (var t3 in window) try {
              if (!h["$" + t3] && i.call(window, t3) && null !== window[t3] && "object" === n(window[t3])) try {
                p(window[t3]);
              } catch (t4) {
                return true;
              }
            } catch (t4) {
              return true;
            }
            return false;
          }();
          o = /* @__PURE__ */ __name(function(t3) {
            var e3 = null !== t3 && "object" === n(t3), r3 = "[object Function]" === s.call(t3), o2 = a(t3), u2 = e3 && "[object String]" === s.call(t3), h2 = [];
            if (!e3 && !r3 && !o2) throw new TypeError("Object.keys called on a non-object");
            var d = l && r3;
            if (u2 && t3.length > 0 && !i.call(t3, 0)) for (var b = 0; b < t3.length; ++b) h2.push(String(b));
            if (o2 && t3.length > 0) for (var m = 0; m < t3.length; ++m) h2.push(String(m));
            else for (var v in t3) d && "prototype" === v || !i.call(t3, v) || h2.push(String(v));
            if (c) for (var g = function(t4) {
              if ("undefined" == typeof window || !y) return p(t4);
              try {
                return p(t4);
              } catch (t5) {
                return false;
              }
            }(t3), _ = 0; _ < f.length; ++_) g && "constructor" === f[_] || !i.call(t3, f[_]) || h2.push(f[_]);
            return h2;
          }, "o");
        }
        t2.exports = o;
      }, 6547: (t2, e2, r2) => {
        "use strict";
        function n(t3, e3) {
          var r3 = Object.keys(t3);
          if (Object.getOwnPropertySymbols) {
            var n2 = Object.getOwnPropertySymbols(t3);
            e3 && (n2 = n2.filter(function(e4) {
              return Object.getOwnPropertyDescriptor(t3, e4).enumerable;
            })), r3.push.apply(r3, n2);
          }
          return r3;
        }
        __name(n, "n");
        function o(t3, e3, r3) {
          return (e3 = function(t4) {
            var e4 = function(t5) {
              if ("object" != i(t5) || !t5) return t5;
              var e5 = t5[Symbol.toPrimitive];
              if (void 0 !== e5) {
                var r4 = e5.call(t5, "string");
                if ("object" != i(r4)) return r4;
                throw new TypeError("@@toPrimitive must return a primitive value.");
              }
              return String(t5);
            }(t4);
            return "symbol" == i(e4) ? e4 : e4 + "";
          }(e3)) in t3 ? Object.defineProperty(t3, e3, { value: r3, enumerable: true, configurable: true, writable: true }) : t3[e3] = r3, t3;
        }
        __name(o, "o");
        function i(t3) {
          return i = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
            return typeof t4;
          } : function(t4) {
            return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
          }, i(t3);
        }
        __name(i, "i");
        var s = r2(3550).EventEmitter, a = r2(9380), u = r2(8768), c = r2(7930).documentArrayParent;
        function l(t3, e3, r3, s2, l2) {
          var f2;
          u.isMongooseDocumentArray(e3) ? (this.__parentArray = e3, this[c] = e3.$parent()) : (this.__parentArray = void 0, this[c] = void 0), this.$setIndex(l2), this.$__parent = this[c], "object" === i(r3) && null != r3 ? (f2 = function(t4) {
            for (var e4 = 1; e4 < arguments.length; e4++) {
              var r4 = null != arguments[e4] ? arguments[e4] : {};
              e4 % 2 ? n(Object(r4), true).forEach(function(e5) {
                o(t4, e5, r4[e5]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t4, Object.getOwnPropertyDescriptors(r4)) : n(Object(r4)).forEach(function(e5) {
                Object.defineProperty(t4, e5, Object.getOwnPropertyDescriptor(r4, e5));
              });
            }
            return t4;
          }({ isNew: true }, r3), r3 = void 0) : f2 = { isNew: true }, a.call(this, t3, s2, this[c], r3, f2);
        }
        __name(l, "l");
        for (var f in l.prototype = Object.create(a.prototype), l.prototype.constructor = l, Object.defineProperty(l.prototype, "$isSingleNested", { configurable: false, writable: false, value: false }), Object.defineProperty(l.prototype, "$isDocumentArrayElement", { configurable: false, writable: false, value: true }), s.prototype) l[f] = s.prototype[f];
        l.prototype.$setIndex = function(t3) {
          if (this.__index = t3, null != this.$__ && null != this.$__.validationError) for (var e3 = 0, r3 = Object.keys(this.$__.validationError.errors); e3 < r3.length; e3++) {
            var n2 = r3[e3];
            this.invalidate(n2, this.$__.validationError.errors[n2]);
          }
        }, l.prototype.populate = function() {
          throw new Error('Mongoose does not support calling populate() on nested docs. Instead of `doc.arr[0].populate("path")`, use `doc.populate("arr.0.path")`');
        }, l.prototype.$__removeFromParent = function() {
          var t3 = this._doc._id;
          if (!t3) throw new Error("For your own good, Mongoose does not know how to remove an ArraySubdocument that has no _id");
          this.__parentArray.pull({ _id: t3 });
        }, l.prototype.$__fullPath = function(t3, e3) {
          return null == this.__index ? null : (this.$__.fullPath || this.ownerDocument(), e3 ? t3 ? this.$__.fullPath + "." + t3 : this.$__.fullPath : t3 ? this.$__.fullPath + "." + this.__index + "." + t3 : this.$__.fullPath + "." + this.__index);
        }, l.prototype.$__pathRelativeToParent = function(t3, e3) {
          return null != this.__index && this.__parentArray && this.__parentArray.$path ? e3 ? null == t3 ? this.__parentArray.$path() : this.__parentArray.$path() + "." + t3 : null == t3 ? this.__parentArray.$path() + "." + this.__index : this.__parentArray.$path() + "." + this.__index + "." + t3 : null;
        }, l.prototype.$parent = function() {
          return this[c];
        }, l.prototype.parentArray = function() {
          return this.__parentArray;
        }, t2.exports = l;
      }, 6583: (t2, e2, r2) => {
        "use strict";
        function n(t3) {
          return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
            return typeof t4;
          } : function(t4) {
            return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
          }, n(t3);
        }
        __name(n, "n");
        var o, i = r2(8863), s = r2(1464);
        try {
          o = [].__proto__ === Array.prototype;
        } catch (t3) {
          if (!t3 || "object" !== n(t3) || !("code" in t3) || "ERR_PROTO_ACCESS" !== t3.code) throw t3;
        }
        var a = !!o && s && s(Object.prototype, "__proto__"), u = Object, c = u.getPrototypeOf;
        t2.exports = a && "function" == typeof a.get ? i([a.get]) : "function" == typeof c && function(t3) {
          return c(null == t3 ? t3 : u(t3));
        };
      }, 6665: (t2) => {
        "use strict";
        t2.exports = function(t3, e2) {
          for (var r2, n, o, i = e2.split("."), s = "", a = 0; a < i.length; ++a) if (t3[s += s.length ? "." : "" + i[a]]) {
            for (o = (n = Object.keys(t3)).length, r2 = 0; r2 < o; ++r2) 0 !== n[a].indexOf(s + ".") || n[a].indexOf(e2);
            return true;
          }
          return false;
        };
      }, 6730: (t2) => {
        "use strict";
        var e2 = Object.prototype.toString, r2 = Math.max, n = /* @__PURE__ */ __name(function(t3, e3) {
          for (var r3 = [], n2 = 0; n2 < t3.length; n2 += 1) r3[n2] = t3[n2];
          for (var o = 0; o < e3.length; o += 1) r3[o + t3.length] = e3[o];
          return r3;
        }, "n");
        t2.exports = function(t3) {
          var o = this;
          if ("function" != typeof o || "[object Function]" !== e2.apply(o)) throw new TypeError("Function.prototype.bind called on incompatible " + o);
          for (var i, s = function(t4) {
            for (var e3 = [], r3 = 1, n2 = 0; r3 < t4.length; r3 += 1, n2 += 1) e3[n2] = t4[r3];
            return e3;
          }(arguments), a = r2(0, o.length - s.length), u = [], c = 0; c < a; c++) u[c] = "$" + c;
          if (i = Function("binder", "return function (" + function(t4) {
            for (var e3 = "", r3 = 0; r3 < t4.length; r3 += 1) e3 += t4[r3], r3 + 1 < t4.length && (e3 += ",");
            return e3;
          }(u) + "){ return binder.apply(this,arguments); }")(function() {
            if (this instanceof i) {
              var e3 = o.apply(this, n(s, arguments));
              return Object(e3) === e3 ? e3 : this;
            }
            return o.apply(t3, n(s, arguments));
          }), o.prototype) {
            var l = /* @__PURE__ */ __name(function() {
            }, "l");
            l.prototype = o.prototype, i.prototype = new l(), l.prototype = null;
          }
          return i;
        };
      }, 6750: (t2, e2, r2) => {
        "use strict";
        function n(t3) {
          return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
            return typeof t4;
          } : function(t4) {
            return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
          }, n(t3);
        }
        __name(n, "n");
        var o = r2(988), i = r2(9907), s = r2(2268), a = r2(1464);
        t2.exports = function(t3, e3, r3) {
          if (!t3 || "object" !== n(t3) && "function" != typeof t3) throw new s("`obj` must be an object or a function`");
          if ("string" != typeof e3 && "symbol" !== n(e3)) throw new s("`property` must be a string or a symbol`");
          if (arguments.length > 3 && "boolean" != typeof arguments[3] && null !== arguments[3]) throw new s("`nonEnumerable`, if provided, must be a boolean or null");
          if (arguments.length > 4 && "boolean" != typeof arguments[4] && null !== arguments[4]) throw new s("`nonWritable`, if provided, must be a boolean or null");
          if (arguments.length > 5 && "boolean" != typeof arguments[5] && null !== arguments[5]) throw new s("`nonConfigurable`, if provided, must be a boolean or null");
          if (arguments.length > 6 && "boolean" != typeof arguments[6]) throw new s("`loose`, if provided, must be a boolean");
          var u = arguments.length > 3 ? arguments[3] : null, c = arguments.length > 4 ? arguments[4] : null, l = arguments.length > 5 ? arguments[5] : null, f = arguments.length > 6 && arguments[6], p = !!a && a(t3, e3);
          if (o) o(t3, e3, { configurable: null === l && p ? p.configurable : !l, enumerable: null === u && p ? p.enumerable : !u, value: r3, writable: null === c && p ? p.writable : !c });
          else {
            if (!f && (u || c || l)) throw new i("This environment does not support defining a property as non-configurable, non-writable, or non-enumerable.");
            t3[e3] = r3;
          }
        };
      }, 6775: (t2, e2) => {
        "use strict";
        e2.byteLength = function(t3) {
          var e3 = a(t3), r3 = e3[0], n2 = e3[1];
          return 3 * (r3 + n2) / 4 - n2;
        }, e2.toByteArray = function(t3) {
          var e3, r3, i2 = a(t3), s2 = i2[0], u2 = i2[1], c2 = new o(function(t4, e4, r4) {
            return 3 * (e4 + r4) / 4 - r4;
          }(0, s2, u2)), l = 0, f = u2 > 0 ? s2 - 4 : s2;
          for (r3 = 0; r3 < f; r3 += 4) e3 = n[t3.charCodeAt(r3)] << 18 | n[t3.charCodeAt(r3 + 1)] << 12 | n[t3.charCodeAt(r3 + 2)] << 6 | n[t3.charCodeAt(r3 + 3)], c2[l++] = e3 >> 16 & 255, c2[l++] = e3 >> 8 & 255, c2[l++] = 255 & e3;
          return 2 === u2 && (e3 = n[t3.charCodeAt(r3)] << 2 | n[t3.charCodeAt(r3 + 1)] >> 4, c2[l++] = 255 & e3), 1 === u2 && (e3 = n[t3.charCodeAt(r3)] << 10 | n[t3.charCodeAt(r3 + 1)] << 4 | n[t3.charCodeAt(r3 + 2)] >> 2, c2[l++] = e3 >> 8 & 255, c2[l++] = 255 & e3), c2;
        }, e2.fromByteArray = function(t3) {
          for (var e3, n2 = t3.length, o2 = n2 % 3, i2 = [], s2 = 16383, a2 = 0, u2 = n2 - o2; a2 < u2; a2 += s2) i2.push(c(t3, a2, a2 + s2 > u2 ? u2 : a2 + s2));
          return 1 === o2 ? (e3 = t3[n2 - 1], i2.push(r2[e3 >> 2] + r2[e3 << 4 & 63] + "==")) : 2 === o2 && (e3 = (t3[n2 - 2] << 8) + t3[n2 - 1], i2.push(r2[e3 >> 10] + r2[e3 >> 4 & 63] + r2[e3 << 2 & 63] + "=")), i2.join("");
        };
        for (var r2 = [], n = [], o = "undefined" != typeof Uint8Array ? Uint8Array : Array, i = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", s = 0; s < 64; ++s) r2[s] = i[s], n[i.charCodeAt(s)] = s;
        function a(t3) {
          var e3 = t3.length;
          if (e3 % 4 > 0) throw new Error("Invalid string. Length must be a multiple of 4");
          var r3 = t3.indexOf("=");
          return -1 === r3 && (r3 = e3), [r3, r3 === e3 ? 0 : 4 - r3 % 4];
        }
        __name(a, "a");
        function u(t3) {
          return r2[t3 >> 18 & 63] + r2[t3 >> 12 & 63] + r2[t3 >> 6 & 63] + r2[63 & t3];
        }
        __name(u, "u");
        function c(t3, e3, r3) {
          for (var n2, o2 = [], i2 = e3; i2 < r3; i2 += 3) n2 = (t3[i2] << 16 & 16711680) + (t3[i2 + 1] << 8 & 65280) + (255 & t3[i2 + 2]), o2.push(u(n2));
          return o2.join("");
        }
        __name(c, "c");
        n["-".charCodeAt(0)] = 62, n["_".charCodeAt(0)] = 63;
      }, 6801: (t2, e2, r2) => {
        "use strict";
        function n(t3) {
          return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
            return typeof t4;
          } : function(t4) {
            return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
          }, n(t3);
        }
        __name(n, "n");
        function o() {
          try {
            var t3 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch (t4) {
          }
          return (o = /* @__PURE__ */ __name(function() {
            return !!t3;
          }, "o"))();
        }
        __name(o, "o");
        function i(t3) {
          return i = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t4) {
            return t4.__proto__ || Object.getPrototypeOf(t4);
          }, i(t3);
        }
        __name(i, "i");
        function s(t3, e3) {
          return s = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t4, e4) {
            return t4.__proto__ = e4, t4;
          }, s(t3, e3);
        }
        __name(s, "s");
        var a = function(t3) {
          function e3(t4, r4) {
            var s2;
            return function(t5, e4) {
              if (!(t5 instanceof e4)) throw new TypeError("Cannot call a class as a function");
            }(this, e3), (s2 = function(t5, e4, r5) {
              return e4 = i(e4), function(t6, e5) {
                if (e5 && ("object" == n(e5) || "function" == typeof e5)) return e5;
                if (void 0 !== e5) throw new TypeError("Derived constructors may only return object or undefined");
                return function(t7) {
                  if (void 0 === t7) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                  return t7;
                }(t6);
              }(t5, o() ? Reflect.construct(e4, r5 || [], i(t5).constructor) : e4.apply(t5, r5));
            }(this, e3, [r4 = r4 || "Cannot populate path `" + t4 + "` because it is not in your schema. Set the `strictPopulate` option to false to override."])).path = t4, s2;
          }
          __name(e3, "e");
          return function(t4, e4) {
            if ("function" != typeof e4 && null !== e4) throw new TypeError("Super expression must either be null or a function");
            t4.prototype = Object.create(e4 && e4.prototype, { constructor: { value: t4, writable: true, configurable: true } }), Object.defineProperty(t4, "prototype", { writable: false }), e4 && s(t4, e4);
          }(e3, t3), r3 = e3, Object.defineProperty(r3, "prototype", { writable: false }), r3;
          var r3;
        }(r2(8213));
        Object.defineProperty(a.prototype, "name", { value: "StrictPopulateError" }), t2.exports = a;
      }, 6814: (t2) => {
        "use strict";
        t2.exports = function(t3) {
          for (var e2 = {}, r2 = 0, n = Object.keys(t3); r2 < n.length; r2++) {
            var o = n[r2];
            if (-1 !== o.indexOf(".")) for (var i = o.split("."), s = i[0], a = 0; a < i.length; ++a) e2[s] = 1, a + 1 < i.length && (s = s + "." + i[a + 1]);
            else e2[o] = 1;
          }
          return e2;
        };
      }, 6867: (t2, e2, r2) => {
        "use strict";
        function n(t3) {
          return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
            return typeof t4;
          } : function(t4) {
            return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
          }, n(t3);
        }
        __name(n, "n");
        function o(t3, e3) {
          (null == e3 || e3 > t3.length) && (e3 = t3.length);
          for (var r3 = 0, n2 = Array(e3); r3 < e3; r3++) n2[r3] = t3[r3];
          return n2;
        }
        __name(o, "o");
        function i(t3, e3) {
          for (var r3 = 0; r3 < e3.length; r3++) {
            var n2 = e3[r3];
            n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(t3, s(n2.key), n2);
          }
        }
        __name(i, "i");
        function s(t3) {
          var e3 = function(t4) {
            if ("object" != n(t4) || !t4) return t4;
            var e4 = t4[Symbol.toPrimitive];
            if (void 0 !== e4) {
              var r3 = e4.call(t4, "string");
              if ("object" != n(r3)) return r3;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(t4);
          }(t3);
          return "symbol" == n(e3) ? e3 : e3 + "";
        }
        __name(s, "s");
        function a() {
          try {
            var t3 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch (t4) {
          }
          return (a = /* @__PURE__ */ __name(function() {
            return !!t3;
          }, "a"))();
        }
        __name(a, "a");
        function u() {
          return u = "undefined" != typeof Reflect && Reflect.get ? Reflect.get.bind() : function(t3, e3, r3) {
            var n2 = function(t4, e4) {
              for (; !{}.hasOwnProperty.call(t4, e4) && null !== (t4 = c(t4)); ) ;
              return t4;
            }(t3, e3);
            if (n2) {
              var o2 = Object.getOwnPropertyDescriptor(n2, e3);
              return o2.get ? o2.get.call(arguments.length < 3 ? t3 : r3) : o2.value;
            }
          }, u.apply(null, arguments);
        }
        __name(u, "u");
        function c(t3) {
          return c = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t4) {
            return t4.__proto__ || Object.getPrototypeOf(t4);
          }, c(t3);
        }
        __name(c, "c");
        function l(t3, e3) {
          return l = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t4, e4) {
            return t4.__proto__ = e4, t4;
          }, l(t3, e3);
        }
        __name(l, "l");
        var f = r2(2081), p = r2(241), h = r2(6426), y = r2(4327), d = function(t3) {
          function e3(t4, r3) {
            var o2;
            return function(t5, e4) {
              if (!(t5 instanceof e4)) throw new TypeError("Cannot call a class as a function");
            }(this, e3), (o2 = function(t5, e4, r4) {
              return e4 = c(e4), function(t6, e5) {
                if (e5 && ("object" == n(e5) || "function" == typeof e5)) return e5;
                if (void 0 !== e5) throw new TypeError("Derived constructors may only return object or undefined");
                return function(t7) {
                  if (void 0 === t7) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                  return t7;
                }(t6);
              }(t5, a() ? Reflect.construct(e4, r4 || [], c(t5).constructor) : e4.apply(t5, r4));
            }(this, e3, [t4, r3, "Map"])).$isSchemaMap = true, o2;
          }
          __name(e3, "e");
          return function(t4, e4) {
            if ("function" != typeof e4 && null !== e4) throw new TypeError("Super expression must either be null or a function");
            t4.prototype = Object.create(e4 && e4.prototype, { constructor: { value: t4, writable: true, configurable: true } }), Object.defineProperty(t4, "prototype", { writable: false }), e4 && l(t4, e4);
          }(e3, t3), s2 = e3, p2 = [{ key: "set", value: /* @__PURE__ */ __name(function(t4, e4) {
            return h.set(t4, e4);
          }, "value") }, { key: "cast", value: /* @__PURE__ */ __name(function(t4, e4, n2, i2, s3) {
            var a2;
            if (t4 instanceof f) return t4;
            var u2 = null !== (a2 = null == s3 ? void 0 : s3.path) && void 0 !== a2 ? a2 : this.path;
            if (n2) {
              var c2 = new f({}, u2, e4, this.$__schemaType);
              if (t4 instanceof r2.g.Map) {
                var l2, p3 = function(t5, e5) {
                  var r3 = "undefined" != typeof Symbol && t5[Symbol.iterator] || t5["@@iterator"];
                  if (!r3) {
                    if (Array.isArray(t5) || (r3 = function(t6, e6) {
                      if (t6) {
                        if ("string" == typeof t6) return o(t6, e6);
                        var r4 = {}.toString.call(t6).slice(8, -1);
                        return "Object" === r4 && t6.constructor && (r4 = t6.constructor.name), "Map" === r4 || "Set" === r4 ? Array.from(t6) : "Arguments" === r4 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r4) ? o(t6, e6) : void 0;
                      }
                    }(t5)) || e5 && t5 && "number" == typeof t5.length) {
                      r3 && (t5 = r3);
                      var n3 = 0, i3 = /* @__PURE__ */ __name(function() {
                      }, "i");
                      return { s: i3, n: /* @__PURE__ */ __name(function() {
                        return n3 >= t5.length ? { done: true } : { done: false, value: t5[n3++] };
                      }, "n"), e: /* @__PURE__ */ __name(function(t6) {
                        throw t6;
                      }, "e"), f: i3 };
                    }
                    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
                  }
                  var s4, a3 = true, u3 = false;
                  return { s: /* @__PURE__ */ __name(function() {
                    r3 = r3.call(t5);
                  }, "s"), n: /* @__PURE__ */ __name(function() {
                    var t6 = r3.next();
                    return a3 = t6.done, t6;
                  }, "n"), e: /* @__PURE__ */ __name(function(t6) {
                    u3 = true, s4 = t6;
                  }, "e"), f: /* @__PURE__ */ __name(function() {
                    try {
                      a3 || null == r3.return || r3.return();
                    } finally {
                      if (u3) throw s4;
                    }
                  }, "f") };
                }(t4.keys());
                try {
                  for (p3.s(); !(l2 = p3.n()).done; ) {
                    var h2 = l2.value, y2 = t4.get(h2);
                    y2 = null == y2 ? c2.$__schemaType._castNullish(y2) : c2.$__schemaType.cast(y2, e4, true, null, { path: u2 + "." + h2 }), c2.$init(h2, y2);
                  }
                } catch (t5) {
                  p3.e(t5);
                } finally {
                  p3.f();
                }
              } else for (var d2 = 0, b = Object.keys(t4); d2 < b.length; d2++) {
                var m = b[d2], v = t4[m];
                v = null == v ? c2.$__schemaType._castNullish(v) : c2.$__schemaType.cast(v, e4, true, null, { path: u2 + "." + m }), c2.$init(m, v);
              }
              return c2;
            }
            return new f(t4, u2, e4, this.$__schemaType);
          }, "value") }, { key: "clone", value: /* @__PURE__ */ __name(function() {
            var t4, r3, n2, o2 = (t4 = e3, r3 = this, "function" == typeof (n2 = u(c(1 & 3 ? t4.prototype : t4), "clone", r3)) ? function(t5) {
              return n2.apply(r3, t5);
            } : n2)([]);
            return null != this.$__schemaType && (o2.$__schemaType = this.$__schemaType.clone()), o2;
          }, "value") }, { key: "getEmbeddedSchemaType", value: /* @__PURE__ */ __name(function() {
            return this.$__schemaType;
          }, "value") }, { key: "toJSONSchema", value: /* @__PURE__ */ __name(function(t4) {
            var e4 = null == t4 ? void 0 : t4.useBsonType, r3 = this.getEmbeddedSchemaType(), n2 = this.options.required && "function" != typeof this.options.required, o2 = y("object", "object", e4, n2);
            return o2.additionalProperties = r3.toJSONSchema(t4), o2;
          }, "value") }, { key: "autoEncryptionType", value: /* @__PURE__ */ __name(function() {
            return "object";
          }, "value") }], p2 && i(s2.prototype, p2), Object.defineProperty(s2, "prototype", { writable: false }), s2;
          var s2, p2;
        }(h);
        d.schemaName = "Map", d.prototype.OptionsConstructor = p, d.defaultOptions = {}, t2.exports = d;
      }, 6948: (t2, e2, r2) => {
        "use strict";
        function n(t3) {
          return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
            return typeof t4;
          } : function(t4) {
            return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
          }, n(t3);
        }
        __name(n, "n");
        function o(t3, e3) {
          for (var r3 = 0; r3 < e3.length; r3++) {
            var n2 = e3[r3];
            n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(t3, s(n2.key), n2);
          }
        }
        __name(o, "o");
        function i(t3, e3, r3) {
          return e3 && o(t3.prototype, e3), r3 && o(t3, r3), Object.defineProperty(t3, "prototype", { writable: false }), t3;
        }
        __name(i, "i");
        function s(t3) {
          var e3 = function(t4) {
            if ("object" != n(t4) || !t4) return t4;
            var e4 = t4[Symbol.toPrimitive];
            if (void 0 !== e4) {
              var r3 = e4.call(t4, "string");
              if ("object" != n(r3)) return r3;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(t4);
          }(t3);
          return "symbol" == n(e3) ? e3 : e3 + "";
        }
        __name(s, "s");
        var a = r2(4450), u = i(/* @__PURE__ */ __name(function t3(e3) {
          if (function(t4, e4) {
            if (!(t4 instanceof e4)) throw new TypeError("Cannot call a class as a function");
          }(this, t3), this._docs = {}, this._childDocs = [], null != e3 && (e3 = a(e3), Object.assign(this, e3), "object" === n(e3.subPopulate) && (this.populate = e3.subPopulate), null != e3.perDocumentLimit && null != e3.limit)) throw new Error("Can not use `limit` and `perDocumentLimit` at the same time. Path: `" + e3.path + "`.");
        }, "t"));
        t2.exports = u;
      }, 6949: (t2, e2, r2) => {
        "use strict";
        function n(t3) {
          return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
            return typeof t4;
          } : function(t4) {
            return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
          }, n(t3);
        }
        __name(n, "n");
        function o(t3, e3) {
          for (var r3 = 0; r3 < e3.length; r3++) {
            var n2 = e3[r3];
            n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(t3, i(n2.key), n2);
          }
        }
        __name(o, "o");
        function i(t3) {
          var e3 = function(t4) {
            if ("object" != n(t4) || !t4) return t4;
            var e4 = t4[Symbol.toPrimitive];
            if (void 0 !== e4) {
              var r3 = e4.call(t4, "string");
              if ("object" != n(r3)) return r3;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(t4);
          }(t3);
          return "symbol" == n(e3) ? e3 : e3 + "";
        }
        __name(i, "i");
        function s() {
          try {
            var t3 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch (t4) {
          }
          return (s = /* @__PURE__ */ __name(function() {
            return !!t3;
          }, "s"))();
        }
        __name(s, "s");
        function a(t3) {
          return a = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t4) {
            return t4.__proto__ || Object.getPrototypeOf(t4);
          }, a(t3);
        }
        __name(a, "a");
        function u(t3, e3) {
          return u = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t4, e4) {
            return t4.__proto__ = e4, t4;
          }, u(t3, e3);
        }
        __name(u, "u");
        var c = r2(8213), l = r2(8260), f = r2(7352), p = r2(1875), h = function(t3) {
          function e3(t4) {
            var r4, o2;
            return function(t5, e4) {
              if (!(t5 instanceof e4)) throw new TypeError("Cannot call a class as a function");
            }(this, e3), (r4 = function(t5, e4, r5) {
              return e4 = a(e4), function(t6, e5) {
                if (e5 && ("object" == n(e5) || "function" == typeof e5)) return e5;
                if (void 0 !== e5) throw new TypeError("Derived constructors may only return object or undefined");
                return function(t7) {
                  if (void 0 === t7) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                  return t7;
                }(t6);
              }(t5, s() ? Reflect.construct(e4, r5 || [], a(t5).constructor) : e4.apply(t5, r5));
            }(this, e3, [o2 = "model" === l(t4) ? t4.constructor.modelName + " validation failed" : "Validation failed"])).errors = {}, r4._message = o2, t4 && (t4.$errors = r4.errors), r4;
          }
          __name(e3, "e");
          return function(t4, e4) {
            if ("function" != typeof e4 && null !== e4) throw new TypeError("Super expression must either be null or a function");
            t4.prototype = Object.create(e4 && e4.prototype, { constructor: { value: t4, writable: true, configurable: true } }), Object.defineProperty(t4, "prototype", { writable: false }), e4 && u(t4, e4);
          }(e3, t3), r3 = e3, (i2 = [{ key: "toString", value: /* @__PURE__ */ __name(function() {
            return this.name + ": " + p(this);
          }, "value") }, { key: "inspect", value: /* @__PURE__ */ __name(function() {
            return Object.assign(new Error(this.message), this);
          }, "value") }, { key: "addError", value: /* @__PURE__ */ __name(function(t4, r4) {
            if (r4 instanceof e3) for (var n2 = r4.errors, o2 = 0, i3 = Object.keys(n2); o2 < i3.length; o2++) {
              var s2 = i3[o2];
              this.addError("".concat(t4, ".").concat(s2), n2[s2]);
            }
            else this.errors[t4] = r4, this.message = this._message + ": " + p(this);
          }, "value") }]) && o(r3.prototype, i2), Object.defineProperty(r3, "prototype", { writable: false }), r3;
          var r3, i2;
        }(c);
        f.inspect.custom && (h.prototype[f.inspect.custom] = h.prototype.inspect), Object.defineProperty(h.prototype, "toJSON", { enumerable: false, writable: false, configurable: true, value: /* @__PURE__ */ __name(function() {
          return Object.assign({}, this, { name: this.name, message: this.message });
        }, "value") }), Object.defineProperty(h.prototype, "name", { value: "ValidationError" }), t2.exports = h;
      }, 6974: (t2, e2, r2) => {
        "use strict";
        function n(t3) {
          return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
            return typeof t4;
          } : function(t4) {
            return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
          }, n(t3);
        }
        __name(n, "n");
        function o() {
          try {
            var t3 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch (t4) {
          }
          return (o = /* @__PURE__ */ __name(function() {
            return !!t3;
          }, "o"))();
        }
        __name(o, "o");
        function i(t3) {
          return i = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t4) {
            return t4.__proto__ || Object.getPrototypeOf(t4);
          }, i(t3);
        }
        __name(i, "i");
        function s(t3, e3) {
          return s = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t4, e4) {
            return t4.__proto__ = e4, t4;
          }, s(t3, e3);
        }
        __name(s, "s");
        var a = function(t3) {
          function e3() {
            return function(t4, e4) {
              if (!(t4 instanceof e4)) throw new TypeError("Cannot call a class as a function");
            }(this, e3), function(t4, e4, r4) {
              return e4 = i(e4), function(t5, e5) {
                if (e5 && ("object" == n(e5) || "function" == typeof e5)) return e5;
                if (void 0 !== e5) throw new TypeError("Derived constructors may only return object or undefined");
                return function(t6) {
                  if (void 0 === t6) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                  return t6;
                }(t5);
              }(t4, o() ? Reflect.construct(e4, r4 || [], i(t4).constructor) : e4.apply(t4, r4));
            }(this, e3, arguments);
          }
          __name(e3, "e");
          return function(t4, e4) {
            if ("function" != typeof e4 && null !== e4) throw new TypeError("Super expression must either be null or a function");
            t4.prototype = Object.create(e4 && e4.prototype, { constructor: { value: t4, writable: true, configurable: true } }), Object.defineProperty(t4, "prototype", { writable: false }), e4 && s(t4, e4);
          }(e3, t3), r3 = e3, Object.defineProperty(r3, "prototype", { writable: false }), r3;
          var r3;
        }(r2(8879)), u = r2(5761);
        Object.defineProperty(a.prototype, "of", u), t2.exports = a;
      }, 6996: (t2, e2, r2) => {
        "use strict";
        function n(t3) {
          return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
            return typeof t4;
          } : function(t4) {
            return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
          }, n(t3);
        }
        __name(n, "n");
        function o() {
          try {
            var t3 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch (t4) {
          }
          return (o = /* @__PURE__ */ __name(function() {
            return !!t3;
          }, "o"))();
        }
        __name(o, "o");
        function i(t3) {
          return i = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t4) {
            return t4.__proto__ || Object.getPrototypeOf(t4);
          }, i(t3);
        }
        __name(i, "i");
        function s(t3, e3) {
          return s = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t4, e4) {
            return t4.__proto__ = e4, t4;
          }, s(t3, e3);
        }
        __name(s, "s");
        var a = function(t3) {
          function e3(t4, r4, s2) {
            var a2;
            !function(t5, e4) {
              if (!(t5 instanceof e4)) throw new TypeError("Cannot call a class as a function");
            }(this, e3);
            var u = s2.join(", ");
            return (a2 = function(t5, e4, r5) {
              return e4 = i(e4), function(t6, e5) {
                if (e5 && ("object" == n(e5) || "function" == typeof e5)) return e5;
                if (void 0 !== e5) throw new TypeError("Derived constructors may only return object or undefined");
                return function(t7) {
                  if (void 0 === t7) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                  return t7;
                }(t6);
              }(t5, o() ? Reflect.construct(e4, r5 || [], i(t5).constructor) : e4.apply(t5, r5));
            }(this, e3, ['No matching document found for id "' + t4._doc._id + '" version ' + r4 + ' modifiedPaths "' + u + '"'])).version = r4, a2.modifiedPaths = s2, a2;
          }
          __name(e3, "e");
          return function(t4, e4) {
            if ("function" != typeof e4 && null !== e4) throw new TypeError("Super expression must either be null or a function");
            t4.prototype = Object.create(e4 && e4.prototype, { constructor: { value: t4, writable: true, configurable: true } }), Object.defineProperty(t4, "prototype", { writable: false }), e4 && s(t4, e4);
          }(e3, t3), r3 = e3, Object.defineProperty(r3, "prototype", { writable: false }), r3;
          var r3;
        }(r2(8213));
        Object.defineProperty(a.prototype, "name", { value: "VersionError" }), t2.exports = a;
      }, 7045: (t2, e2, r2) => {
        "use strict";
        function n(t3) {
          return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
            return typeof t4;
          } : function(t4) {
            return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
          }, n(t3);
        }
        __name(n, "n");
        function o(t3, e3) {
          var r3 = Object.keys(t3);
          if (Object.getOwnPropertySymbols) {
            var n2 = Object.getOwnPropertySymbols(t3);
            e3 && (n2 = n2.filter(function(e4) {
              return Object.getOwnPropertyDescriptor(t3, e4).enumerable;
            })), r3.push.apply(r3, n2);
          }
          return r3;
        }
        __name(o, "o");
        function i(t3) {
          for (var e3 = 1; e3 < arguments.length; e3++) {
            var r3 = null != arguments[e3] ? arguments[e3] : {};
            e3 % 2 ? o(Object(r3), true).forEach(function(e4) {
              s(t3, e4, r3[e4]);
            }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t3, Object.getOwnPropertyDescriptors(r3)) : o(Object(r3)).forEach(function(e4) {
              Object.defineProperty(t3, e4, Object.getOwnPropertyDescriptor(r3, e4));
            });
          }
          return t3;
        }
        __name(i, "i");
        function s(t3, e3, r3) {
          return (e3 = function(t4) {
            var e4 = function(t5) {
              if ("object" != n(t5) || !t5) return t5;
              var e5 = t5[Symbol.toPrimitive];
              if (void 0 !== e5) {
                var r4 = e5.call(t5, "string");
                if ("object" != n(r4)) return r4;
                throw new TypeError("@@toPrimitive must return a primitive value.");
              }
              return String(t5);
            }(t4);
            return "symbol" == n(e4) ? e4 : e4 + "";
          }(e3)) in t3 ? Object.defineProperty(t3, e3, { value: r3, enumerable: true, configurable: true, writable: true }) : t3[e3] = r3, t3;
        }
        __name(s, "s");
        var a = r2(6426), u = a.CastError, c = r2(9553), l = r2(4327), f = r2(3305);
        function p(t3, e3) {
          a.call(this, t3, e3, "Decimal128");
        }
        __name(p, "p");
        function h(t3) {
          return this.cast(t3);
        }
        __name(h, "h");
        p.schemaName = "Decimal128", p.defaultOptions = {}, p.prototype = Object.create(a.prototype), p.prototype.constructor = p, p._cast = c, p.set = a.set, p.setters = [], p.get = a.get, p.cast = function(t3) {
          return 0 === arguments.length || (false === t3 && (t3 = this._defaultCaster), this._cast = t3), this._cast;
        }, p._defaultCaster = function(t3) {
          if (null != t3 && !f(t3, "Decimal128")) throw new Error();
          return t3;
        }, p._checkRequired = function(t3) {
          return f(t3, "Decimal128");
        }, p.checkRequired = a.checkRequired, p.prototype.checkRequired = function(t3, e3) {
          return a._isRef(this, t3, e3, true) ? !!t3 : ("function" == typeof this.constructor.checkRequired ? this.constructor.checkRequired() : p.checkRequired())(t3);
        }, p.prototype.cast = function(t3, e3, r3, n2, o2) {
          if (a._isRef(this, t3, e3, r3)) return f(t3, "Decimal128") ? t3 : this._castRef(t3, e3, r3, o2);
          var i2;
          i2 = "function" == typeof this._castFunction ? this._castFunction : "function" == typeof this.constructor.cast ? this.constructor.cast() : p.cast();
          try {
            return i2(t3);
          } catch (e4) {
            throw new u("Decimal128", t3, this.path, e4, this);
          }
        };
        var y = i(i({}, a.prototype.$conditionalHandlers), {}, { $gt: h, $gte: h, $lt: h, $lte: h });
        Object.defineProperty(p.prototype, "$conditionalHandlers", { enumerable: false, value: y }), p.prototype.toJSONSchema = function(t3) {
          var e3 = this.options.required && "function" != typeof this.options.required;
          return l("string", "decimal", null == t3 ? void 0 : t3.useBsonType, e3);
        }, p.prototype.autoEncryptionType = function() {
          return "decimal";
        }, t2.exports = p;
      }, 7058: (t2, e2, r2) => {
        "use strict";
        var n = r2(5832).hp;
        function o(t3) {
          return function(t4) {
            if (Array.isArray(t4)) return p(t4);
          }(t3) || function(t4) {
            if ("undefined" != typeof Symbol && null != t4[Symbol.iterator] || null != t4["@@iterator"]) return Array.from(t4);
          }(t3) || f(t3) || function() {
            throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }();
        }
        __name(o, "o");
        function i(t3, e3) {
          var r3 = Object.keys(t3);
          if (Object.getOwnPropertySymbols) {
            var n2 = Object.getOwnPropertySymbols(t3);
            e3 && (n2 = n2.filter(function(e4) {
              return Object.getOwnPropertyDescriptor(t3, e4).enumerable;
            })), r3.push.apply(r3, n2);
          }
          return r3;
        }
        __name(i, "i");
        function s(t3) {
          for (var e3 = 1; e3 < arguments.length; e3++) {
            var r3 = null != arguments[e3] ? arguments[e3] : {};
            e3 % 2 ? i(Object(r3), true).forEach(function(e4) {
              a(t3, e4, r3[e4]);
            }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t3, Object.getOwnPropertyDescriptors(r3)) : i(Object(r3)).forEach(function(e4) {
              Object.defineProperty(t3, e4, Object.getOwnPropertyDescriptor(r3, e4));
            });
          }
          return t3;
        }
        __name(s, "s");
        function a(t3, e3, r3) {
          return (e3 = function(t4) {
            var e4 = function(t5) {
              if ("object" != u(t5) || !t5) return t5;
              var e5 = t5[Symbol.toPrimitive];
              if (void 0 !== e5) {
                var r4 = e5.call(t5, "string");
                if ("object" != u(r4)) return r4;
                throw new TypeError("@@toPrimitive must return a primitive value.");
              }
              return String(t5);
            }(t4);
            return "symbol" == u(e4) ? e4 : e4 + "";
          }(e3)) in t3 ? Object.defineProperty(t3, e3, { value: r3, enumerable: true, configurable: true, writable: true }) : t3[e3] = r3, t3;
        }
        __name(a, "a");
        function u(t3) {
          return u = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
            return typeof t4;
          } : function(t4) {
            return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
          }, u(t3);
        }
        __name(u, "u");
        function c(t3, e3) {
          return function(t4) {
            if (Array.isArray(t4)) return t4;
          }(t3) || function(t4, e4) {
            var r3 = null == t4 ? null : "undefined" != typeof Symbol && t4[Symbol.iterator] || t4["@@iterator"];
            if (null != r3) {
              var n2, o2, i2, s2, a2 = [], u2 = true, c2 = false;
              try {
                if (i2 = (r3 = r3.call(t4)).next, 0 === e4) {
                  if (Object(r3) !== r3) return;
                  u2 = false;
                } else for (; !(u2 = (n2 = i2.call(r3)).done) && (a2.push(n2.value), a2.length !== e4); u2 = true) ;
              } catch (t5) {
                c2 = true, o2 = t5;
              } finally {
                try {
                  if (!u2 && null != r3.return && (s2 = r3.return(), Object(s2) !== s2)) return;
                } finally {
                  if (c2) throw o2;
                }
              }
              return a2;
            }
          }(t3, e3) || f(t3, e3) || function() {
            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }();
        }
        __name(c, "c");
        function l(t3, e3) {
          var r3 = "undefined" != typeof Symbol && t3[Symbol.iterator] || t3["@@iterator"];
          if (!r3) {
            if (Array.isArray(t3) || (r3 = f(t3)) || e3 && t3 && "number" == typeof t3.length) {
              r3 && (t3 = r3);
              var n2 = 0, o2 = /* @__PURE__ */ __name(function() {
              }, "o");
              return { s: o2, n: /* @__PURE__ */ __name(function() {
                return n2 >= t3.length ? { done: true } : { done: false, value: t3[n2++] };
              }, "n"), e: /* @__PURE__ */ __name(function(t4) {
                throw t4;
              }, "e"), f: o2 };
            }
            throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }
          var i2, s2 = true, a2 = false;
          return { s: /* @__PURE__ */ __name(function() {
            r3 = r3.call(t3);
          }, "s"), n: /* @__PURE__ */ __name(function() {
            var t4 = r3.next();
            return s2 = t4.done, t4;
          }, "n"), e: /* @__PURE__ */ __name(function(t4) {
            a2 = true, i2 = t4;
          }, "e"), f: /* @__PURE__ */ __name(function() {
            try {
              s2 || null == r3.return || r3.return();
            } finally {
              if (a2) throw i2;
            }
          }, "f") };
        }
        __name(l, "l");
        function f(t3, e3) {
          if (t3) {
            if ("string" == typeof t3) return p(t3, e3);
            var r3 = {}.toString.call(t3).slice(8, -1);
            return "Object" === r3 && t3.constructor && (r3 = t3.constructor.name), "Map" === r3 || "Set" === r3 ? Array.from(t3) : "Arguments" === r3 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r3) ? p(t3, e3) : void 0;
          }
        }
        __name(f, "f");
        function p(t3, e3) {
          (null == e3 || e3 > t3.length) && (e3 = t3.length);
          for (var r3 = 0, n2 = Array(e3); r3 < e3; r3++) n2[r3] = t3[r3];
          return n2;
        }
        __name(p, "p");
        var h, y = r2(3550).EventEmitter, d = r2(8297), b = r2(8213), m = r2(6426), v = r2(8879), g = r2(2069), _ = r2(622), w = r2(486), O = r2(4450), S = r2(3703), $ = r2(8260), j = r2(2003), P = r2(5289), A = r2(3381), E = r2(1199), x = r2(9539), T = r2(5678), k = r2(7834), N = r2(2097), I = r2(8768), B = r2(533), M = /\.\d+(\.|$)/, D = r2(1260).Ut, R = r2(4957).middlewareFunctions, U = D.concat(R).reduce(function(t3, e3) {
          return t3.add(e3);
        }, /* @__PURE__ */ new Set()), C = I.isPOJO, F = 0, L = /^\d+$/;
        function V(t3, e3) {
          if (!(this instanceof V)) return new V(t3, e3);
          if (this.obj = t3, this.paths = {}, this.aliases = {}, this.subpaths = {}, this.virtuals = {}, this.singleNestedPaths = {}, this.nested = {}, this.inherits = {}, this.callQueue = [], this._indexes = [], this._searchIndexes = [], this.methods = e3 && e3.methods || {}, this.methodOptions = {}, this.statics = e3 && e3.statics || {}, this.tree = {}, this.query = e3 && e3.query || {}, this.childSchemas = [], this.plugins = [], this.$id = ++F, this.mapPaths = [], this.encryptedFields = {}, this.s = { hooks: new d() }, this.options = this.defaultOptions(e3), Array.isArray(t3)) {
            var r3, n2 = l(t3);
            try {
              for (n2.s(); !(r3 = n2.n()).done; ) {
                var o2 = r3.value;
                this.add(o2);
              }
            } catch (t4) {
              n2.e(t4);
            } finally {
              n2.f();
            }
          } else t3 && this.add(t3);
          if (e3 && e3.virtuals) for (var i2 = e3.virtuals, s2 = 0, a2 = Object.keys(i2); s2 < a2.length; s2++) {
            var u2 = a2[s2], c2 = i2[u2].options ? i2[u2].options : void 0, f2 = this.virtual(u2, c2);
            i2[u2].get && f2.get(i2[u2].get), i2[u2].set && f2.set(i2[u2].set);
          }
          var p2 = t3 && t3._id && I.isObject(t3._id);
          !this.paths._id && this.options._id && !p2 && w(this), this.setupTimestamp(this.options.timestamps);
        }
        __name(V, "V");
        function q(t3, e3) {
          for (var r3 = 0, n2 = Object.keys(e3); r3 < n2.length; r3++) {
            var o2 = n2[r3], i2 = null;
            if (null != e3[o2]) i2 = e3[o2];
            else {
              var s2 = S(t3.paths[o2], "options");
              if (null == s2) continue;
              i2 = s2.alias;
            }
            if (i2) {
              var a2 = t3.paths[o2].path;
              if (Array.isArray(i2)) {
                var u2, c2 = l(i2);
                try {
                  for (c2.s(); !(u2 = c2.n()).done; ) {
                    var f2 = u2.value;
                    if ("string" != typeof f2) throw new Error("Invalid value for alias option on " + a2 + ", got " + f2);
                    t3.aliases[f2] = a2, t3.virtual(f2).get(/* @__PURE__ */ function(t4) {
                      return function() {
                        return "function" == typeof this.get ? this.get(t4) : this[t4];
                      };
                    }(a2)).set(/* @__PURE__ */ function(t4) {
                      return function(e4) {
                        return this.$set(t4, e4);
                      };
                    }(a2));
                  }
                } catch (t4) {
                  c2.e(t4);
                } finally {
                  c2.f();
                }
              } else {
                if ("string" != typeof i2) throw new Error("Invalid value for alias option on " + a2 + ", got " + i2);
                t3.aliases[i2] = a2, t3.virtual(i2).get(/* @__PURE__ */ function(t4) {
                  return function() {
                    return "function" == typeof this.get ? this.get(t4) : this[t4];
                  };
                }(a2)).set(/* @__PURE__ */ function(t4) {
                  return function(e4) {
                    return this.$set(t4, e4);
                  };
                }(a2));
              }
            }
          }
        }
        __name(q, "q");
        V.prototype = Object.create(y.prototype), V.prototype.constructor = V, V.prototype.instanceOfSchema = true, Object.defineProperty(V.prototype, "$schemaType", { configurable: false, enumerable: false, writable: true }), Object.defineProperty(V.prototype, "childSchemas", { configurable: false, enumerable: true, writable: true }), Object.defineProperty(V.prototype, "virtuals", { configurable: false, enumerable: true, writable: true }), V.prototype.obj, V.prototype.paths, V.prototype.tree, V.prototype.clone = function() {
          var t3 = this, e3 = this._clone();
          return e3.on("init", function(e4) {
            return t3.emit("init", e4);
          }), e3;
        }, V.prototype._clone = function(t3) {
          var e3 = new (t3 = t3 || (null == this.base ? V : this.base.Schema))({}, this._userProvidedOptions);
          e3.base = this.base, e3.obj = this.obj, e3.options = O(this.options), e3.callQueue = this.callQueue.map(function(t4) {
            return t4;
          }), e3.methods = O(this.methods), e3.methodOptions = O(this.methodOptions), e3.statics = O(this.statics), e3.query = O(this.query), e3.plugins = Array.prototype.slice.call(this.plugins), e3._indexes = O(this._indexes), e3._searchIndexes = O(this._searchIndexes), e3.s.hooks = this.s.hooks.clone(), e3.tree = O(this.tree), e3.paths = Object.fromEntries(Object.entries(this.paths).map(function(t4) {
            var e4 = c(t4, 2);
            return [e4[0], e4[1].clone()];
          })), e3.nested = O(this.nested), e3.subpaths = O(this.subpaths);
          for (var r3 = 0, n2 = Object.values(e3.paths); r3 < n2.length; r3++) {
            var o2 = n2[r3];
            if (o2.$isSingleNested) {
              for (var i2 = o2.path, s2 = 0, a2 = Object.keys(o2.schema.paths); s2 < a2.length; s2++) {
                var u2 = a2[s2];
                e3.singleNestedPaths[i2 + "." + u2] = o2.schema.paths[u2];
              }
              for (var l2 = 0, f2 = Object.keys(o2.schema.singleNestedPaths); l2 < f2.length; l2++) {
                var p2 = f2[l2];
                e3.singleNestedPaths[i2 + "." + p2] = o2.schema.singleNestedPaths[p2];
              }
              for (var h2 = 0, y2 = Object.keys(o2.schema.subpaths); h2 < y2.length; h2++) {
                var d2 = y2[h2];
                e3.singleNestedPaths[i2 + "." + d2] = o2.schema.subpaths[d2];
              }
              for (var b2 = 0, m2 = Object.keys(o2.schema.nested); b2 < m2.length; b2++) {
                var v2 = m2[b2];
                e3.singleNestedPaths[i2 + "." + v2] = "nested";
              }
            }
          }
          return e3._gatherChildSchemas(), e3.virtuals = O(this.virtuals), e3.$globalPluginsApplied = this.$globalPluginsApplied, e3.$isRootDiscriminator = this.$isRootDiscriminator, e3.$implicitlyCreated = this.$implicitlyCreated, e3.$id = ++F, e3.$originalSchemaId = this.$id, e3.mapPaths = [].concat(this.mapPaths), null != this.discriminatorMapping && (e3.discriminatorMapping = Object.assign({}, this.discriminatorMapping)), null != this.discriminators && (e3.discriminators = Object.assign({}, this.discriminators)), null != this._applyDiscriminators && (e3._applyDiscriminators = new Map(this._applyDiscriminators)), e3.aliases = Object.assign({}, this.aliases), e3.encryptedFields = O(this.encryptedFields), e3;
        }, V.prototype.pick = function(t3, e3) {
          var r3 = new V({}, e3 || this.options);
          if (!Array.isArray(t3)) throw new b('Schema#pick() only accepts an array argument, got "' + u(t3) + '"');
          var n2, o2 = l(t3);
          try {
            for (o2.s(); !(n2 = o2.n()).done; ) {
              var i2 = n2.value;
              if (this._hasEncryptedField(i2)) {
                var s2 = this.encryptedFields[i2], c2 = this.path(i2);
                r3.add(a({}, i2, a({ encrypt: s2 }, this.options.typeKey, c2)));
              } else if (this.nested[i2]) r3.add(a({}, i2, S(this.tree, i2)));
              else {
                var f2 = this.path(i2);
                if (null == f2) throw new b("Path `" + i2 + "` is not in the schema");
                r3.add(a({}, i2, f2));
              }
            }
          } catch (t4) {
            o2.e(t4);
          } finally {
            o2.f();
          }
          return this._hasEncryptedFields() || (r3.options.encryptionType = null), r3;
        }, V.prototype.omit = function(t3, e3) {
          var r3 = new V(this, e3 || this.options);
          if (!Array.isArray(t3)) throw new b('Schema#omit() only accepts an array argument, got "' + u(t3) + '"');
          for (var n2 in r3.remove(t3), r3.singleNestedPaths) t3.includes(n2) && delete r3.singleNestedPaths[n2];
          return r3;
        }, V.prototype.defaultOptions = function(t3) {
          this._userProvidedOptions = null == t3 ? {} : O(t3);
          var e3 = this.base && this.base.options || {};
          if ((t3 = s({ strict: !("strict" in e3) || e3.strict, strictQuery: "strictQuery" in e3 && e3.strictQuery, bufferCommands: true, capped: false, versionKey: "__v", optimisticConcurrency: false, minimize: true, autoIndex: null, discriminatorKey: "__t", shardKey: null, read: null, validateBeforeSave: true, validateModifiedOnly: false, _id: true, id: !("id" in e3) || e3.id, typeKey: "type" }, t3)).versionKey && "string" != typeof t3.versionKey) throw new b("`versionKey` must be falsy or string, got `" + u(t3.versionKey) + "`");
          if ("string" == typeof t3.read ? t3.read = P(t3.read) : Array.isArray(t3.read) && "string" == typeof t3.read[0] && (t3.read = { mode: P(t3.read[0]), tags: t3.read[1] }), t3.optimisticConcurrency && !t3.versionKey) throw new b("Must set `versionKey` if using `optimisticConcurrency`");
          return t3;
        }, V.prototype.discriminator = function(t3, e3, r3) {
          return this._applyDiscriminators = this._applyDiscriminators || /* @__PURE__ */ new Map(), this._applyDiscriminators.set(t3, { schema: e3, options: r3 }), this;
        }, V.prototype._defaultToObjectOptions = function(t3) {
          var e3 = t3 ? "toJSON" : "toObject";
          if (this._defaultToObjectOptionsMap && this._defaultToObjectOptionsMap[e3]) return this._defaultToObjectOptionsMap[e3];
          var r3 = this.base && this.base.options && this.base.options[e3] || {}, n2 = this.options[e3] || {}, o2 = Object.assign({}, r3, n2);
          return this._defaultToObjectOptionsMap = this._defaultToObjectOptionsMap || {}, this._defaultToObjectOptionsMap[e3] = o2, o2;
        }, V.prototype.encryptionType = function(t3) {
          if (0 === arguments.length) return this.options.encryptionType;
          if ("string" != typeof t3 && null !== t3) throw new Error("invalid `encryptionType`: ${encryptionType}");
          this.options.encryptionType = t3;
        }, V.prototype.add = function(t3, e3) {
          if (t3 instanceof V || null != t3 && t3.instanceOfSchema) return x(this, t3), this;
          if (false === t3._id && null == e3 && (this.options._id = false), "__proto__." === (e3 = e3 || "") || "constructor." === e3 || "prototype." === e3) return this;
          for (var r3 = Object.keys(t3), n2 = this.options.typeKey, o2 = 0, i2 = r3; o2 < i2.length; o2++) {
            var s2 = i2[o2];
            if (!I.specialProperties.has(s2)) {
              var l2 = e3 + s2, f2 = t3[s2];
              if (null == f2) throw new TypeError("Invalid value for schema path `" + l2 + '`, got value "' + f2 + '"');
              if ("_id" !== s2 || false !== f2) {
                var p2 = false;
                if ("string" == typeof f2 && (p2 = null != (null != this.base ? this.base.Schema.Types : V.Types)[f2.charAt(0).toUpperCase() + f2.substring(1)]), "_id" !== s2 && ("object" !== u(f2) && "function" != typeof f2 && !p2 || null == f2)) throw new TypeError("Invalid schema configuration: `".concat(f2, "` is not ") + "a valid type at path `".concat(s2, "`. See ") + "https://bit.ly/mongoose-schematypes for a list of valid schema types.");
                if (f2 instanceof _ || "VirtualType" === (f2.constructor && f2.constructor.name || null)) this.virtual(f2);
                else {
                  if (Array.isArray(f2) && 1 === f2.length && null == f2[0]) throw new TypeError("Invalid value for schema Array path `" + l2 + '`, got value "' + f2[0] + '"');
                  if (C(f2) || f2 instanceof v) if (Object.keys(f2).length < 1) e3 && (this.nested[e3.substring(0, e3.length - 1)] = true), this.path(l2, f2);
                  else if (!f2[n2] || "type" === n2 && C(f2.type) && f2.type.type) this.nested[l2] = true, this.add(f2, l2 + ".");
                  else {
                    var h2 = f2[n2];
                    if (C(h2) && Object.keys(h2).length > 0) {
                      e3 && (this.nested[e3.substring(0, e3.length - 1)] = true);
                      var y2 = {};
                      this._userProvidedOptions.typeKey && (y2.typeKey = this._userProvidedOptions.typeKey), null != this._userProvidedOptions.strict && (y2.strict = this._userProvidedOptions.strict), null != this._userProvidedOptions.toObject && (y2.toObject = I.omit(this._userProvidedOptions.toObject, ["transform"])), null != this._userProvidedOptions.toJSON && (y2.toJSON = I.omit(this._userProvidedOptions.toJSON, ["transform"]));
                      var d2 = new V(h2, y2);
                      d2.$implicitlyCreated = true;
                      var b2 = Object.assign({}, f2, a({}, n2, d2));
                      this.path(e3 + s2, b2);
                    } else if (e3 && (this.nested[e3.substring(0, e3.length - 1)] = true), this.path(e3 + s2, f2), null != f2 && !f2.instanceOfSchema && I.isPOJO(f2.discriminators)) {
                      var m2 = this.path(e3 + s2);
                      for (var g2 in f2.discriminators) m2.discriminator(g2, f2.discriminators[g2]);
                    }
                  }
                  else if (e3 && (this.nested[e3.substring(0, e3.length - 1)] = true), this.path(e3 + s2, f2), null != f2[0] && !f2[0].instanceOfSchema && I.isPOJO(f2[0].discriminators)) {
                    var w2 = this.path(e3 + s2);
                    for (var O2 in f2[0].discriminators) w2.discriminator(O2, f2[0].discriminators[O2]);
                  }
                  if (f2.instanceOfSchema && null != f2.encryptionType()) {
                    if (this.encryptionType() != f2.encryptionType()) throw new Error("encryptionType of a nested schema must match the encryption type of the parent schema.");
                    for (var S2 = 0, $2 = Object.entries(f2.encryptedFields); S2 < $2.length; S2++) {
                      var j2 = c($2[S2], 2), P2 = j2[0], A2 = j2[1], E2 = l2 + "." + P2;
                      this._addEncryptedField(E2, A2);
                    }
                  } else if ("object" === u(f2) && "encrypt" in f2) {
                    var T2 = f2.encrypt;
                    if (null == this.encryptionType()) throw new Error("encryptionType must be provided");
                    this._addEncryptedField(l2, T2);
                  } else this._removeEncryptedField(l2);
                }
              }
            }
          }
          var k2 = Object.fromEntries(Object.entries(t3).map(function(t4) {
            var r4 = c(t4, 1)[0];
            return [e3 + r4, null];
          }));
          return q(this, k2), this;
        }, V.prototype._addEncryptedField = function(t3, e3) {
          if (null == this.path(t3).autoEncryptionType()) throw new Error("Invalid BSON type for FLE field: '".concat(t3, "'"));
          this.encryptedFields[t3] = O(e3);
        }, V.prototype._removeEncryptedField = function(t3) {
          delete this.encryptedFields[t3];
        }, V.prototype._hasEncryptedFields = function() {
          return Object.keys(this.encryptedFields).length > 0;
        }, V.prototype._hasEncryptedField = function(t3) {
          return t3 in this.encryptedFields;
        }, V.prototype._buildEncryptedFields = function() {
          var t3 = this;
          return { fields: Object.entries(this.encryptedFields).map(function(e3) {
            var r3 = c(e3, 2), n2 = r3[0], o2 = r3[1];
            return s({ path: n2, bsonType: t3.path(n2).autoEncryptionType() }, o2);
          }) };
        }, V.prototype._buildSchemaMap = function() {
          var t3 = this;
          return { bsonType: "object", properties: Object.entries(this.encryptedFields).reduce(function(e3, r3) {
            var n2 = c(r3, 2), o2 = n2[0], i2 = n2[1], a2 = t3.path(o2).autoEncryptionType();
            return function(t4, e4, r4) {
              for (var n3 = 0, o3 = t4[n3]; n3 < t4.length - 1; o3 = t4[++n3]) e4[o3] = null == e4[o3] ? { bsonType: "object", properties: {} } : e4[o3], e4 = e4[o3].properties;
              e4[o3] = r4;
            }(o2.split("."), e3, { encrypt: s(s({}, i2), {}, { bsonType: a2 }) }), e3;
          }, {}) };
        }, V.prototype.alias = function(t3, e3) {
          return q(this, a({}, t3, e3)), this;
        }, V.prototype.removeIndex = function(t3) {
          if (arguments.length > 1) throw new Error("removeIndex() takes only 1 argument");
          if ("object" !== u(t3) && "string" != typeof t3) throw new Error("removeIndex() may only take either an object or a string as an argument");
          if ("object" === u(t3)) for (var e3 = this._indexes.length - 1; e3 >= 0; --e3) E(this._indexes[e3][0], t3) && this._indexes.splice(e3, 1);
          else for (var r3 = this._indexes.length - 1; r3 >= 0; --r3) null != this._indexes[r3][1] && this._indexes[r3][1].name === t3 && this._indexes.splice(r3, 1);
          return this;
        }, V.prototype.clearIndexes = function() {
          return this._indexes.length = 0, this;
        }, V.prototype.searchIndex = function(t3) {
          return this._searchIndexes.push(t3), this;
        }, V.reserved = /* @__PURE__ */ Object.create(null), V.prototype.reserved = V.reserved;
        var J = V.reserved;
        function z(t3) {
          return /\.\d+/.test(t3) ? t3.replace(/\.\d+\./g, ".$.").replace(/\.\d+$/, ".$") : t3;
        }
        __name(z, "z");
        function K(t3, e3) {
          if (0 === t3.mapPaths.length) return null;
          var r3, n2 = l(t3.mapPaths);
          try {
            for (n2.s(); !(r3 = n2.n()).done; ) {
              var o2 = r3.value, i2 = o2.path.replace(/\.\$\*/g, "");
              if (e3 === i2 || e3.startsWith(i2 + ".") && -1 === e3.slice(i2.length + 1).indexOf(".")) return o2;
              if (o2.schema && e3.startsWith(i2 + ".")) {
                var s2 = e3.slice(i2.length + 1);
                return s2 = s2.slice(s2.indexOf(".") + 1), o2.schema.paths[s2];
              }
              if (o2.$isSchemaMap && e3.startsWith(i2 + ".")) {
                var a2 = e3.slice(i2.length + 1);
                a2 = a2.slice(a2.indexOf(".") + 1);
                var u2 = o2.$__schemaType._presplitPath;
                if (-1 === a2.indexOf(".") && "$*" === u2[u2.length - 1]) return o2.$__schemaType;
                if (-1 !== a2.indexOf(".") && o2.$__schemaType.schema && "$*" === u2[u2.length - 1]) return o2.$__schemaType.schema.path(a2.slice(a2.indexOf(".") + 1));
              }
            }
          } catch (t4) {
            n2.e(t4);
          } finally {
            n2.f();
          }
          return null;
        }
        __name(K, "K");
        function H(t3, e3, r3) {
          var n2 = e3.split(/\.(\d+)\.|\.(\d+)$/).filter(Boolean);
          if (n2.length < 2) return t3.paths.hasOwnProperty(n2[0]) ? t3.paths[n2[0]] : "adhocOrUndefined";
          var o2 = t3.path(n2[0]), i2 = false;
          if (!o2) return "adhocOrUndefined";
          for (var s2 = n2.length - 1, a2 = 1; a2 < n2.length; ++a2) {
            i2 = false;
            var u2 = n2[a2];
            if (a2 === s2 && o2 && !/\D/.test(u2)) {
              o2 = o2.$isMongooseDocumentArray ? o2.$embeddedSchemaType : o2 instanceof h.Array ? o2.caster : void 0;
              break;
            }
            if (/\D/.test(u2)) {
              if (!o2 || !o2.schema) {
                o2 = void 0;
                break;
              }
              i2 = "nested" === o2.schema.pathType(u2), o2 = o2.schema.path(u2);
            } else o2 instanceof h.Array && a2 !== s2 && (o2 = o2.caster);
          }
          return t3.subpaths[r3] = o2, o2 ? "real" : i2 ? "nested" : "adhocOrUndefined";
        }
        __name(H, "H");
        function W(t3, e3) {
          var r3, n2 = l(t3.childSchemas);
          try {
            for (n2.s(); !(r3 = n2.n()).done; ) {
              var o2 = r3.value.schema;
              o2.$implicitlyCreated && (Object.assign(o2.options, e3), W(o2, e3));
            }
          } catch (t4) {
            n2.e(t4);
          } finally {
            n2.f();
          }
        }
        __name(W, "W");
        J.prototype = J.emit = J.listeners = J.removeListener = J.collection = J.errors = J.get = J.init = J.isModified = J.isNew = J.populated = J.remove = J.save = J.toObject = J.validate = 1, J.collection = 1, V.prototype.path = function(t3, e3) {
          if (void 0 === e3) {
            if (null != this.paths[t3]) return this.paths[t3];
            var r3 = z(t3), n2 = function(t4, e4, r4) {
              if (t4.paths.hasOwnProperty(e4)) return t4.paths[e4];
              if (t4.subpaths.hasOwnProperty(r4)) {
                var n3 = t4.subpaths[r4];
                if ("nested" === n3) return;
                return n3;
              }
              if (t4.singleNestedPaths.hasOwnProperty(r4) && "object" === u(t4.singleNestedPaths[r4])) {
                var o3 = t4.singleNestedPaths[r4];
                if ("nested" === o3) return;
                return o3;
              }
              return null;
            }(this, t3, r3);
            if (null != n2) return n2;
            var o2 = K(this, t3);
            return null != o2 ? o2 : null != (n2 = this.hasMixedParent(r3)) ? n2 : M.test(t3) ? function(t4, e4, r4) {
              return H(t4, e4, r4), t4.subpaths[r4];
            }(this, t3, r3) : void 0;
          }
          var i2 = t3.split(".")[0];
          if (J[i2] && !this.options.suppressReservedKeysWarning) {
            var s2 = "`".concat(i2, "` is a reserved schema pathname and may break some functionality. ") + "You are allowed to use it, but use at your own risk. To disable this warning pass `suppressReservedKeysWarning` as a schema option.";
            I.warn(s2);
          }
          "object" === u(e3) && I.hasUserDefinedProperty(e3, "ref") && B(e3.ref, t3);
          var a2, c2 = t3.split(/\./), f2 = c2.pop(), p2 = this.tree, h2 = "", y2 = l(c2);
          try {
            for (y2.s(); !(a2 = y2.n()).done; ) {
              var d2 = a2.value;
              if (I.specialProperties.has(d2)) throw new Error("Cannot set special property `" + d2 + "` on a schema");
              if (h2 = h2 += (h2.length > 0 ? "." : "") + d2, p2[d2] || (this.nested[h2] = true, p2[d2] = {}), "object" !== u(p2[d2])) {
                var b2 = "Cannot set nested path `" + t3 + "`. Parent path `" + h2 + "` already set to type " + p2[d2].name + ".";
                throw new Error(b2);
              }
              p2 = p2[d2];
            }
          } catch (t4) {
            y2.e(t4);
          } finally {
            y2.f();
          }
          p2[f2] = O(e3), this.paths[t3] = this.interpretAsType(t3, e3, this.options);
          var v2 = this.paths[t3];
          if (this.childSchemas = this.childSchemas.filter(function(e4) {
            return e4.path !== t3;
          }), v2.$isSchemaMap) {
            var g2 = t3 + ".$*";
            this.paths[g2] = v2.$__schemaType, this.mapPaths.push(this.paths[g2]), v2.$__schemaType.$isSingleNested && this.childSchemas.push({ schema: v2.$__schemaType.schema, model: v2.$__schemaType.caster, path: t3 });
          }
          if (v2.$isSingleNested) {
            for (var _2 = 0, w2 = Object.keys(v2.schema.paths); _2 < w2.length; _2++) {
              var S2 = w2[_2];
              this.singleNestedPaths[t3 + "." + S2] = v2.schema.paths[S2];
            }
            for (var $2 = 0, j2 = Object.keys(v2.schema.singleNestedPaths); $2 < j2.length; $2++) {
              var P2 = j2[$2];
              this.singleNestedPaths[t3 + "." + P2] = v2.schema.singleNestedPaths[P2];
            }
            for (var A2 = 0, E2 = Object.keys(v2.schema.subpaths); A2 < E2.length; A2++) {
              var x2 = E2[A2];
              this.singleNestedPaths[t3 + "." + x2] = v2.schema.subpaths[x2];
            }
            for (var T2 = 0, k2 = Object.keys(v2.schema.nested); T2 < k2.length; T2++) {
              var N2 = k2[T2];
              this.singleNestedPaths[t3 + "." + N2] = "nested";
            }
            Object.defineProperty(v2.schema, "base", { configurable: true, enumerable: false, writable: false, value: this.base }), v2.caster.base = this.base, this.childSchemas.push({ schema: v2.schema, model: v2.caster, path: t3 });
          } else v2.$isMongooseDocumentArray && (Object.defineProperty(v2.schema, "base", { configurable: true, enumerable: false, writable: false, value: this.base }), v2.casterConstructor.base = this.base, this.childSchemas.push({ schema: v2.schema, model: v2.casterConstructor, path: t3 }));
          if (v2.$isMongooseArray && v2.caster instanceof m) {
            for (var D2 = t3, R2 = v2; R2.$isMongooseArray; ) D2 += ".$", R2.$isMongooseDocumentArray ? (R2.$embeddedSchemaType._arrayPath = D2, R2.$embeddedSchemaType._arrayParentPath = t3, R2 = R2.$embeddedSchemaType) : (R2.caster._arrayPath = D2, R2.caster._arrayParentPath = t3, R2 = R2.caster), this.subpaths[D2] = R2;
            for (var U2 = 0, C2 = []; U2 < C2.length; U2++) {
              var F2 = C2[U2];
              this.subpaths[F2.path] = F2;
            }
          }
          if (v2.$isMongooseDocumentArray) {
            for (var L2 = 0, V2 = Object.keys(v2.schema.paths); L2 < V2.length; L2++) {
              var q2 = V2[L2], W2 = v2.schema.paths[q2];
              this.subpaths[t3 + "." + q2] = W2, "object" === u(W2) && null != W2 && null == W2.$parentSchemaDocArray && (W2.$parentSchemaDocArray = v2);
            }
            for (var G2 = 0, Q2 = Object.keys(v2.schema.subpaths); G2 < Q2.length; G2++) {
              var Y2 = Q2[G2], Z = v2.schema.subpaths[Y2];
              this.subpaths[t3 + "." + Y2] = Z, "object" === u(Z) && null != Z && null == Z.$parentSchemaDocArray && (Z.$parentSchemaDocArray = v2);
            }
            for (var X = 0, tt = Object.keys(v2.schema.singleNestedPaths); X < tt.length; X++) {
              var et = tt[X], rt = v2.schema.singleNestedPaths[et];
              this.subpaths[t3 + "." + et] = rt, "object" === u(rt) && null != rt && null == rt.$parentSchemaDocArray && (rt.$parentSchemaDocArray = v2);
            }
          }
          return this;
        }, V.prototype._gatherChildSchemas = function() {
          for (var t3 = [], e3 = 0, r3 = Object.keys(this.paths); e3 < r3.length; e3++) {
            var n2 = r3[e3];
            if ("string" == typeof n2) {
              var o2 = this.paths[n2];
              o2.$isMongooseDocumentArray || o2.$isSingleNested ? t3.push({ schema: o2.schema, model: o2.caster, path: n2 }) : o2.$isSchemaMap && o2.$__schemaType.$isSingleNested && t3.push({ schema: o2.$__schemaType.schema, model: o2.$__schemaType.caster, path: n2 });
            }
          }
          return this.childSchemas = t3, t3;
        }, Object.defineProperty(V.prototype, "base", { configurable: true, enumerable: false, writable: true, value: null }), V.prototype.interpretAsType = function(t3, e3, o2) {
          if (e3 instanceof m) {
            if (e3.path === t3) return e3;
            var i2 = e3.clone();
            return i2.path = t3, i2;
          }
          var s2 = null != this.base ? this.base.Schema.Types : V.Types, c2 = null != this.base ? this.base.Types : r2(9600);
          if (!(I.isPOJO(e3) || e3 instanceof v) && "Object" !== I.getFunctionName(e3.constructor)) {
            var l2 = e3;
            (e3 = {})[o2.typeKey] = l2;
          }
          var f2, p2 = e3[o2.typeKey] && (e3[o2.typeKey] instanceof Function || "type" !== o2.typeKey || !e3.type.type) ? e3[o2.typeKey] : {};
          if (p2 instanceof m) {
            if (p2.path === t3) return p2;
            var h2 = p2.clone();
            return h2.path = t3, h2;
          }
          if (I.isPOJO(p2) || "mixed" === p2) return new s2.Mixed(t3, e3);
          if (Array.isArray(p2) || p2 === Array || "array" === p2 || p2 === s2.Array) {
            var y2 = p2 === Array || "array" === p2 ? e3.cast || e3.of : p2[0];
            if (y2 && y2.instanceOfSchema) {
              if (!(y2 instanceof V)) {
                if (!this.options._isMerging) throw new TypeError("Schema for array path `" + t3 + "` is from a different copy of the Mongoose module. Please make sure you're using the same version of Mongoose everywhere with `npm list mongoose`. If you are still getting this error, please add `new Schema()` around the path: " + "".concat(t3, ": new Schema(...)"));
                y2 = new V(y2);
              }
              return new s2.DocumentArray(t3, y2, e3);
            }
            if (y2 && y2[o2.typeKey] && y2[o2.typeKey].instanceOfSchema) {
              if (!(y2[o2.typeKey] instanceof V)) {
                if (!this.options._isMerging) throw new TypeError("Schema for array path `" + t3 + "` is from a different copy of the Mongoose module. Please make sure you're using the same version of Mongoose everywhere with `npm list mongoose`. If you are still getting this error, please add `new Schema()` around the path: " + "".concat(t3, ": new Schema(...)"));
                y2[o2.typeKey] = new V(y2[o2.typeKey]);
              }
              return new s2.DocumentArray(t3, y2[o2.typeKey], e3, y2);
            }
            if (void 0 !== y2 && (Array.isArray(y2) || y2.type === Array || "Array" == y2.type)) return y2 && "Array" == y2.type && (y2.type = Array), new s2.Array(t3, this.interpretAsType(t3, y2, o2), e3);
            var d2 = null == y2 || !y2[o2.typeKey] || "type" === o2.typeKey && y2.type.type ? y2 : y2[o2.typeKey];
            if ("string" == typeof y2) y2 = s2[y2.charAt(0).toUpperCase() + y2.substring(1)];
            else if (I.isPOJO(d2)) {
              if (Object.keys(d2).length) {
                var g2 = { minimize: o2.minimize };
                o2.typeKey && (g2.typeKey = o2.typeKey), o2.hasOwnProperty("strict") && (g2.strict = o2.strict), o2.hasOwnProperty("strictQuery") && (g2.strictQuery = o2.strictQuery), o2.hasOwnProperty("toObject") && (g2.toObject = I.omit(o2.toObject, ["transform"])), o2.hasOwnProperty("toJSON") && (g2.toJSON = I.omit(o2.toJSON, ["transform"])), this._userProvidedOptions.hasOwnProperty("_id") ? g2._id = this._userProvidedOptions._id : null != V.Types.DocumentArray.defaultOptions._id && (g2._id = V.Types.DocumentArray.defaultOptions._id);
                var _2 = new V(d2, g2);
                return _2.$implicitlyCreated = true, new s2.DocumentArray(t3, _2, e3);
              }
              return new s2.Array(t3, s2.Mixed, e3);
            }
            if (y2) {
              if (p2 = !y2[o2.typeKey] || "type" === o2.typeKey && y2.type.type ? y2 : y2[o2.typeKey], Array.isArray(p2)) return new s2.Array(t3, this.interpretAsType(t3, p2, o2), e3);
              if ("ClockDate" === (f2 = "string" == typeof p2 ? p2 : p2.schemaName || I.getFunctionName(p2)) && (f2 = "Date"), void 0 === f2) throw new TypeError("Invalid schema configuration: " + "Could not determine the embedded type for array `".concat(t3, "`. ") + "See https://mongoosejs.com/docs/guide.html#definition for more info on supported schema syntaxes.");
              if (!s2.hasOwnProperty(f2)) throw new TypeError("Invalid schema configuration: " + "`".concat(f2, "` is not a valid type within the array `").concat(t3, "`.") + "See https://bit.ly/mongoose-schematypes for a list of valid schema types.");
            }
            return new s2.Array(t3, y2 || s2.Mixed, e3, o2);
          }
          if (p2 && p2.instanceOfSchema) return new s2.Subdocument(p2, t3, e3);
          if ((f2 = n.isBuffer(p2) ? "Buffer" : "function" == typeof p2 || "object" === u(p2) ? p2.schemaName || I.getFunctionName(p2) : p2 === c2.ObjectId ? "ObjectId" : p2 === c2.Decimal128 ? "Decimal128" : null == p2 ? "" + p2 : p2.toString()) && (f2 = f2.charAt(0).toUpperCase() + f2.substring(1)), "ObjectID" === f2 && (f2 = "ObjectId"), "ClockDate" === f2 && (f2 = "Date"), void 0 === f2) throw new TypeError("Invalid schema configuration: `".concat(t3, "` schematype definition is ") + "invalid. See https://mongoosejs.com/docs/guide.html#definition for more info on supported schema syntaxes.");
          if (null == s2[f2]) throw new TypeError("Invalid schema configuration: `".concat(f2, "` is not ") + "a valid type at path `".concat(t3, "`. See ") + "https://bit.ly/mongoose-schematypes for a list of valid schema types.");
          "Union" === f2 && (e3.parentSchema = this);
          var w2 = new s2[f2](t3, e3, o2);
          return w2.$isSchemaMap && function(t4, e4, r3, n2, o3) {
            var i3 = r3 + ".$*", s3 = { type: {} };
            I.hasUserDefinedProperty(n2, "of") && ((s3 = I.isPOJO(n2.of) && Object.keys(n2.of).length > 0 && !I.hasUserDefinedProperty(n2.of, t4.options.typeKey) ? a({}, t4.options.typeKey, new V(n2.of)) : I.isPOJO(n2.of) ? Object.assign({}, n2.of) : a({}, t4.options.typeKey, n2.of))[t4.options.typeKey] && s3[t4.options.typeKey].instanceOfSchema && s3[t4.options.typeKey].eachPath(function(t5, e5) {
              if (true === e5.options.select || false === e5.options.select) throw new b('Cannot use schema-level projections (`select: true` or `select: false`) within maps at path "' + r3 + "." + t5 + '"');
            }), I.hasUserDefinedProperty(n2, "ref") && (s3.ref = n2.ref)), e4.$__schemaType = t4.interpretAsType(i3, s3, o3);
          }(this, w2, t3, e3, o2), w2;
        }, V.prototype.eachPath = function(t3) {
          for (var e3 = Object.keys(this.paths), r3 = e3.length, n2 = 0; n2 < r3; ++n2) t3(e3[n2], this.paths[e3[n2]]);
          return this;
        }, V.prototype.requiredPaths = function(t3) {
          if (this._requiredpaths && !t3) return this._requiredpaths;
          for (var e3 = Object.keys(this.paths), r3 = e3.length, n2 = []; r3--; ) {
            var o2 = e3[r3];
            this.paths[o2].isRequired && n2.push(o2);
          }
          return this._requiredpaths = n2, this._requiredpaths;
        }, V.prototype.indexedPaths = function() {
          return this._indexedpaths || (this._indexedpaths = this.indexes()), this._indexedpaths;
        }, V.prototype.pathType = function(t3) {
          if (this.paths.hasOwnProperty(t3)) return "real";
          if (this.virtuals.hasOwnProperty(t3)) return "virtual";
          if (this.nested.hasOwnProperty(t3)) return "nested";
          var e3 = z(t3);
          if (this.subpaths.hasOwnProperty(e3) || this.subpaths.hasOwnProperty(t3)) return "real";
          var r3 = this.singleNestedPaths.hasOwnProperty(e3) || this.singleNestedPaths.hasOwnProperty(t3);
          return r3 ? "nested" === r3 ? "nested" : "real" : null != K(this, t3) ? "real" : /\.\d+\.|\.\d+$/.test(t3) ? H(this, t3, e3) : "adhocOrUndefined";
        }, V.prototype.hasMixedParent = function(t3) {
          var e3 = t3.split(/\./g);
          t3 = "";
          for (var r3 = 0; r3 < e3.length; ++r3) if (t3 = r3 > 0 ? t3 + "." + e3[r3] : e3[r3], this.paths.hasOwnProperty(t3) && this.paths[t3] instanceof h.Mixed) return this.paths[t3];
          return null;
        }, V.prototype.setupTimestamp = function(t3) {
          return N(this, t3);
        }, V.prototype.queue = function(t3, e3) {
          return this.callQueue.push([t3, e3]), this;
        }, V.prototype.pre = function(t3) {
          if (t3 instanceof RegExp) {
            var e3, r3 = Array.prototype.slice.call(arguments, 1), n2 = l(U);
            try {
              for (n2.s(); !(e3 = n2.n()).done; ) {
                var o2 = e3.value;
                t3.test(o2) && this.pre.apply(this, [o2].concat(r3));
              }
            } catch (t4) {
              n2.e(t4);
            } finally {
              n2.f();
            }
            return this;
          }
          if (Array.isArray(t3)) {
            var i2, s2 = Array.prototype.slice.call(arguments, 1), a2 = l(t3);
            try {
              for (a2.s(); !(i2 = a2.n()).done; ) {
                var u2 = i2.value;
                this.pre.apply(this, [u2].concat(s2));
              }
            } catch (t4) {
              a2.e(t4);
            } finally {
              a2.f();
            }
            return this;
          }
          return this.s.hooks.pre.apply(this.s.hooks, arguments), this;
        }, V.prototype.post = function(t3) {
          if (t3 instanceof RegExp) {
            var e3, r3 = Array.prototype.slice.call(arguments, 1), n2 = l(U);
            try {
              for (n2.s(); !(e3 = n2.n()).done; ) {
                var o2 = e3.value;
                t3.test(o2) && this.post.apply(this, [o2].concat(r3));
              }
            } catch (t4) {
              n2.e(t4);
            } finally {
              n2.f();
            }
            return this;
          }
          if (Array.isArray(t3)) {
            var i2, s2 = Array.prototype.slice.call(arguments, 1), a2 = l(t3);
            try {
              for (a2.s(); !(i2 = a2.n()).done; ) {
                var u2 = i2.value;
                this.post.apply(this, [u2].concat(s2));
              }
            } catch (t4) {
              a2.e(t4);
            } finally {
              a2.f();
            }
            return this;
          }
          return this.s.hooks.post.apply(this.s.hooks, arguments), this;
        }, V.prototype.plugin = function(t3, e3) {
          if ("function" != typeof t3) throw new Error('First param to `schema.plugin()` must be a function, got "' + u(t3) + '"');
          if (e3 && e3.deduplicate) {
            var r3, n2 = l(this.plugins);
            try {
              for (n2.s(); !(r3 = n2.n()).done; ) if (r3.value.fn === t3) return this;
            } catch (t4) {
              n2.e(t4);
            } finally {
              n2.f();
            }
          }
          return this.plugins.push({ fn: t3, opts: e3 }), t3(this, e3), this;
        }, V.prototype.method = function(t3, e3, r3) {
          if ("string" != typeof t3) for (var n2 in t3) this.methods[n2] = t3[n2], this.methodOptions[n2] = O(r3);
          else this.methods[t3] = e3, this.methodOptions[t3] = O(r3);
          return this;
        }, V.prototype.static = function(t3, e3) {
          if ("string" != typeof t3) for (var r3 in t3) this.statics[r3] = t3[r3];
          else this.statics[t3] = e3;
          return this;
        }, V.prototype.index = function(t3, e3) {
          for (var r3 in t3 || (t3 = {}), e3 || (e3 = {}), e3.expires && I.expires(e3), t3) this.aliases[r3] && (t3 = I.renameObjKey(t3, r3, this.aliases[r3]));
          for (var n2 = 0, o2 = Object.keys(t3); n2 < o2.length; n2++) {
            var i2 = o2[n2];
            "ascending" === t3[i2] || "asc" === t3[i2] ? t3[i2] = 1 : "descending" !== t3[i2] && "desc" !== t3[i2] || (t3[i2] = -1);
          }
          var s2, a2 = l(this.indexes());
          try {
            for (a2.s(); !(s2 = a2.n()).done; ) {
              var u2 = s2.value;
              null == e3.name && null == u2[1].name && E(u2[0], t3) && I.warn("Duplicate schema index on ".concat(JSON.stringify(t3), ' found. This is often due to declaring an index using both "index: true" and "schema.index()". Please remove the duplicate index definition.'));
            }
          } catch (t4) {
            a2.e(t4);
          } finally {
            a2.f();
          }
          return this._indexes.push([t3, e3]), this;
        }, V.prototype.set = function(t3, e3, r3) {
          if (1 === arguments.length) return this.options[t3];
          switch (t3) {
            case "read":
              "string" == typeof e3 ? this.options[t3] = { mode: P(e3), tags: r3 } : Array.isArray(e3) && "string" == typeof e3[0] ? this.options[t3] = { mode: P(e3[0]), tags: e3[1] } : this.options[t3] = e3, this._userProvidedOptions[t3] = this.options[t3];
              break;
            case "timestamps":
              this.setupTimestamp(e3), this.options[t3] = e3, this._userProvidedOptions[t3] = this.options[t3];
              break;
            case "_id":
              this.options[t3] = e3, this._userProvidedOptions[t3] = this.options[t3], e3 && !this.paths._id ? w(this) : !e3 && null != this.paths._id && this.paths._id.auto && this.remove("_id");
              break;
            default:
              this.options[t3] = e3, this._userProvidedOptions[t3] = this.options[t3];
          }
          return "strict" === t3 && W(this, { strict: e3 }), "strictQuery" === t3 && W(this, { strictQuery: e3 }), "toObject" === t3 && (delete (e3 = s({}, e3)).transform, W(this, { toObject: e3 })), "toJSON" === t3 && (delete (e3 = s({}, e3)).transform, W(this, { toJSON: e3 })), this;
        }, V.prototype.get = function(t3) {
          return this.options[t3];
        };
        var G = "2d 2dsphere hashed text".split(" ");
        function Q(t3, e3) {
          var r3, n2 = e3.split("."), o2 = n2.pop(), i2 = t3.tree, s2 = l(n2);
          try {
            for (s2.s(); !(r3 = s2.n()).done; ) i2 = i2[r3.value];
          } catch (t4) {
            s2.e(t4);
          } finally {
            s2.f();
          }
          delete i2[o2];
        }
        __name(Q, "Q");
        function Y(t3) {
          return t3.startsWith("$[") && t3.endsWith("]");
        }
        __name(Y, "Y");
        Object.defineProperty(V, "indexTypes", { get: /* @__PURE__ */ __name(function() {
          return G;
        }, "get"), set: /* @__PURE__ */ __name(function() {
          throw new Error("Cannot overwrite Schema.indexTypes");
        }, "set") }), V.prototype.indexes = function() {
          return j(this);
        }, V.prototype.virtual = function(t3, e3) {
          if (t3 instanceof _ || "VirtualType" === $(t3)) return this.virtual(t3.path, t3.options);
          if (e3 = new g(e3), I.hasUserDefinedProperty(e3, ["ref", "refPath"])) {
            if (null == e3.localField) throw new Error("Reference virtuals require `localField` option");
            if (null == e3.foreignField) throw new Error("Reference virtuals require `foreignField` option");
            var r3 = this.virtual(t3);
            r3.options = e3, this.pre("init", function(n3, o3) {
              if (T.has(t3, n3)) {
                var i3 = T.get(t3, n3);
                if (this.$$populatedVirtuals || (this.$$populatedVirtuals = {}), e3.justOne || e3.count ? this.$$populatedVirtuals[t3] = Array.isArray(i3) ? i3[0] : i3 : this.$$populatedVirtuals[t3] = Array.isArray(i3) ? i3 : null == i3 ? [] : [i3], null != o3 && o3.hydratedPopulatedDocs && !e3.count) {
                  var s3 = r3._getModelNamesForPopulate(this), a3 = this.$$populatedVirtuals[t3];
                  if (Array.isArray(a3) || a3.$__ || 1 !== (null == s3 ? void 0 : s3.length)) {
                    if (Array.isArray(a3) && 1 === (null == s3 ? void 0 : s3.length)) {
                      for (var u3 = this.db.model(s3[0]), c3 = 0; c3 < a3.length; ++c3) a3[c3].$__ || (a3[c3] = u3.hydrate(a3[c3], null, { hydratedPopulatedDocs: true }));
                      var l3 = e3.foreignField;
                      this.$populated(t3, a3.map(function(t4) {
                        return null == t4 ? t4 : t4.get("function" == typeof l3 ? l3.call(t4, t4) : l3);
                      }), { populateModelSymbol: u3 });
                    }
                  } else {
                    var f2 = this.db.model(s3[0]);
                    this.$$populatedVirtuals[t3] = f2.hydrate(a3);
                  }
                }
                T.unset(t3, n3);
              }
            }), r3.set(function(r4) {
              return this.$$populatedVirtuals || (this.$$populatedVirtuals = {}), k(this.$$populatedVirtuals, t3, r4, e3);
            }), "function" == typeof e3.get && r3.get(e3.get);
            for (var n2 = t3.split("."), o2 = n2[0], i2 = 0; i2 < n2.length - 1; ++i2) if (null != this.paths[o2]) {
              if (this.paths[o2].$isMongooseDocumentArray || this.paths[o2].$isSingleNested) {
                var s2 = n2.slice(i2 + 1).join(".");
                this.paths[o2].schema.virtual(s2, e3);
                break;
              }
              if (this.paths[o2].$isSchemaMap) {
                var a2 = n2.slice(i2 + 2).join(".");
                this.paths[o2].$__schemaType.schema.virtual(a2, e3);
                break;
              }
              o2 += "." + n2[i2 + 1];
            }
            return r3;
          }
          var u2 = this.virtuals, c2 = t3.split(".");
          if ("real" === this.pathType(t3)) throw new Error('Virtual path "' + t3 + '" conflicts with a real path in the schema');
          if (u2[t3] = c2.reduce(function(r4, n3, o3) {
            return r4[n3] || (r4[n3] = o3 === c2.length - 1 ? new _(e3, t3) : {}), r4[n3];
          }, this.tree), e3 && e3.applyToArray && c2.length > 1) {
            var l2 = this.path(c2.slice(0, -1).join("."));
            if (l2 && l2.$isMongooseArray) return l2.virtual(c2[c2.length - 1], e3);
            throw new b('Path "'.concat(l2, '" is not an array'));
          }
          return u2[t3];
        }, V.prototype.virtualpath = function(t3) {
          return this.virtuals.hasOwnProperty(t3) ? this.virtuals[t3] : null;
        }, V.prototype.remove = function(t3) {
          return "string" == typeof t3 && (t3 = [t3]), Array.isArray(t3) && t3.forEach(function(t4) {
            if (null != this.path(t4) || this.nested[t4]) {
              if (this.nested[t4]) {
                var e3, r3 = l(Object.keys(this.paths).concat(Object.keys(this.nested)));
                try {
                  for (r3.s(); !(e3 = r3.n()).done; ) {
                    var n2 = e3.value;
                    n2.startsWith(t4 + ".") && (delete this.paths[n2], delete this.nested[n2], Q(this, n2));
                  }
                } catch (t5) {
                  r3.e(t5);
                } finally {
                  r3.f();
                }
                return delete this.nested[t4], void Q(this, t4);
              }
              delete this.paths[t4], Q(this, t4), this._removeEncryptedField(t4);
            }
          }, this), this;
        }, V.prototype.removeVirtual = function(t3) {
          if ("string" == typeof t3 && (t3 = [t3]), Array.isArray(t3)) {
            var e3, r3 = l(t3);
            try {
              for (r3.s(); !(e3 = r3.n()).done; ) {
                var n2 = e3.value;
                if (null == this.virtuals[n2]) throw new b('Attempting to remove virtual "'.concat(n2, '" that does not exist.'));
              }
            } catch (t4) {
              r3.e(t4);
            } finally {
              r3.f();
            }
            var o2, i2 = l(t3);
            try {
              for (i2.s(); !(o2 = i2.n()).done; ) {
                var s2 = o2.value;
                delete this.paths[s2], delete this.virtuals[s2], -1 !== s2.indexOf(".") ? T.unset(s2, this.tree) : delete this.tree[s2];
              }
            } catch (t4) {
              i2.e(t4);
            } finally {
              i2.f();
            }
          }
          return this;
        }, V.prototype.loadClass = function(t3, e3) {
          return t3 === Object.prototype || t3 === Function.prototype || t3.prototype.hasOwnProperty("$isMongooseModelPrototype") || t3.prototype.hasOwnProperty("$isMongooseDocumentPrototype") || (this.loadClass(Object.getPrototypeOf(t3), e3), e3 || Object.getOwnPropertyNames(t3).forEach(function(e4) {
            if (!e4.match(/^(length|name|prototype|constructor|__proto__)$/)) {
              var r3 = Object.getOwnPropertyDescriptor(t3, e4);
              r3.hasOwnProperty("value") && this.static(e4, r3.value);
            }
          }, this), Object.getOwnPropertyNames(t3.prototype).forEach(function(r3) {
            if (!r3.match(/^(constructor)$/)) {
              var n2 = Object.getOwnPropertyDescriptor(t3.prototype, r3);
              e3 || "function" == typeof n2.value && this.method(r3, n2.value), "function" == typeof n2.get && (this.virtuals[r3] && (this.virtuals[r3].getters = []), this.virtual(r3).get(n2.get)), "function" == typeof n2.set && (this.virtuals[r3] && (this.virtuals[r3].setters = []), this.virtual(r3).set(n2.set));
            }
          }, this)), this;
        }, V.prototype._getSchema = function(t3) {
          var e3 = this.path(t3), r3 = [];
          if (e3) return e3.$fullPath = t3, e3;
          for (var n2 = t3.split("."), o2 = 0; o2 < n2.length; ++o2) ("$" === n2[o2] || Y(n2[o2])) && (n2[o2] = "0"), L.test(n2[o2]) && (n2[o2] = "$");
          return (/* @__PURE__ */ __name(function t4(e4, n3) {
            for (var o3, i2, s2 = e4.length + 1; s2--; ) if (i2 = e4.slice(0, s2).join("."), o3 = n3.path(i2)) {
              if (r3.push(i2), o3.caster) {
                if (o3.caster instanceof h.Mixed) return o3.caster.$fullPath = r3.join("."), o3.caster;
                if (s2 !== e4.length) {
                  if (s2 + 1 === e4.length && o3.$embeddedSchemaType && ("$" === e4[s2] || Y(e4[s2]))) return o3.$embeddedSchemaType;
                  if (o3.schema) {
                    var a2 = void 0;
                    return "$" === e4[s2] || Y(e4[s2]) ? s2 + 1 === e4.length ? o3.$embeddedSchemaType : ((a2 = t4(e4.slice(s2 + 1), o3.schema)) && (a2.$parentSchemaDocArray = a2.$parentSchemaDocArray || (o3.schema.$isSingleNested ? null : o3)), a2) : ((a2 = t4(e4.slice(s2), o3.schema)) && (a2.$parentSchemaDocArray = a2.$parentSchemaDocArray || (o3.schema.$isSingleNested ? null : o3)), a2);
                  }
                }
              } else if (o3.$isSchemaMap) {
                if (s2 >= e4.length) return o3;
                if (s2 + 1 >= e4.length) return o3.$__schemaType;
                if (o3.$__schemaType instanceof h.Mixed) return o3.$__schemaType;
                if (null != o3.$__schemaType.schema) return t4(e4.slice(s2 + 1), o3.$__schemaType.schema);
              }
              return o3.$fullPath = r3.join("."), o3;
            }
          }, "t"))(n2, this);
        }, V.prototype._getPathType = function(t3) {
          return this.path(t3) ? "real" : (/* @__PURE__ */ __name(function t4(e3, r3) {
            for (var n2, o2, i2 = e3.length + 1; i2--; ) {
              if (o2 = e3.slice(0, i2).join("."), n2 = r3.path(o2)) return n2.caster ? n2.caster instanceof h.Mixed ? { schema: n2, pathType: "mixed" } : i2 !== e3.length && n2.schema ? "$" === e3[i2] || Y(e3[i2]) ? i2 === e3.length - 1 ? { schema: n2, pathType: "nested" } : t4(e3.slice(i2 + 1), n2.schema) : t4(e3.slice(i2), n2.schema) : { schema: n2, pathType: n2.$isSingleNested ? "nested" : "array" } : { schema: n2, pathType: "real" };
              if (i2 === e3.length && r3.nested[o2]) return { schema: r3, pathType: "nested" };
            }
            return { schema: n2 || r3, pathType: "undefined" };
          }, "t"))(t3.split("."), this);
        }, V.prototype._transformDuplicateKeyError = function(t3) {
          if (!this._duplicateKeyErrorMessagesByPath) return t3;
          if (11e3 !== t3.code && 11001 !== t3.code) return t3;
          if (null != t3.keyPattern) {
            var e3 = t3.keyPattern, r3 = Object.keys(e3);
            if (1 !== r3.length) return t3;
            var n2 = r3[0];
            return this._duplicateKeyErrorMessagesByPath.hasOwnProperty(n2) ? new b(this._duplicateKeyErrorMessagesByPath[n2], { cause: t3 }) : t3;
          }
          return t3;
        }, V.prototype._preCompile = function() {
          this.plugin(A, { deduplicate: true });
        }, V.prototype.toJSONSchema = function(t3) {
          for (var e3, r3 = null !== (e3 = null == t3 ? void 0 : t3.useBsonType) && void 0 !== e3 && e3, n2 = r3 ? { required: [], properties: {} } : { type: "object", required: [], properties: {} }, i2 = 0, s2 = Object.keys(this.paths); i2 < s2.length; i2++) {
            var a2 = s2[i2], u2 = this.paths[a2];
            if (-1 === u2._presplitPath.indexOf("$*")) {
              var c2 = n2;
              if (u2._presplitPath.length > 1) for (var l2 = 0; l2 < u2._presplitPath.length - 1; ++l2) {
                var f2 = u2._presplitPath[l2];
                null == c2.properties[f2] && (c2.properties[f2] = r3 ? { bsonType: ["object", "null"], properties: {} } : { type: ["object", "null"], properties: {} }), c2 = c2.properties[f2];
              }
              var p2 = u2._presplitPath[u2._presplitPath.length - 1], h2 = false;
              "_id" === a2 ? (c2.required || (c2.required = []), c2.required.push("_id"), h2 = true) : u2.options.required && "function" != typeof u2.options.required && (c2.required || (c2.required = []), c2.required.push(p2), h2 = true), c2.properties[p2] = u2.toJSONSchema(t3), u2.options.enum && (c2.properties[p2].enum = h2 ? u2.options.enum : [].concat(o(u2.options.enum), [null]));
            }
          }
          return 0 === n2.required.length && delete n2.required, n2;
        }, t2.exports = e2 = V, V.Types = h = r2(7953), e2.ObjectId = h.ObjectId;
      }, 7160: (t2, e2) => {
        "use strict";
        e2.schemaMixedSymbol = Symbol.for("mongoose:schema_mixed"), e2.builtInMiddleware = Symbol.for("mongoose:built-in-middleware");
      }, 7219: (t2, e2, r2) => {
        "use strict";
        function n(t3) {
          return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
            return typeof t4;
          } : function(t4) {
            return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
          }, n(t3);
        }
        __name(n, "n");
        function o(t3, e3) {
          for (var r3 = 0; r3 < e3.length; r3++) {
            var n2 = e3[r3];
            n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(t3, i(n2.key), n2);
          }
        }
        __name(o, "o");
        function i(t3) {
          var e3 = function(t4) {
            if ("object" != n(t4) || !t4) return t4;
            var e4 = t4[Symbol.toPrimitive];
            if (void 0 !== e4) {
              var r3 = e4.call(t4, "string");
              if ("object" != n(r3)) return r3;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(t4);
          }(t3);
          return "symbol" == n(e3) ? e3 : e3 + "";
        }
        __name(i, "i");
        function s() {
          try {
            var t3 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch (t4) {
          }
          return (s = /* @__PURE__ */ __name(function() {
            return !!t3;
          }, "s"))();
        }
        __name(s, "s");
        function a(t3) {
          return a = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t4) {
            return t4.__proto__ || Object.getPrototypeOf(t4);
          }, a(t3);
        }
        __name(a, "a");
        function u(t3, e3) {
          return u = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t4, e4) {
            return t4.__proto__ = e4, t4;
          }, u(t3, e3);
        }
        __name(u, "u");
        var c = r2(8213), l = r2(2900), f = r2(4070), p = r2(5497), h = function(t3) {
          function e3() {
            return function(t4, e4) {
              if (!(t4 instanceof e4)) throw new TypeError("Cannot call a class as a function");
            }(this, e3), function(t4, e4, r4) {
              return e4 = a(e4), function(t5, e5) {
                if (e5 && ("object" == n(e5) || "function" == typeof e5)) return e5;
                if (void 0 !== e5) throw new TypeError("Derived constructors may only return object or undefined");
                return function(t6) {
                  if (void 0 === t6) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                  return t6;
                }(t5);
              }(t4, s() ? Reflect.construct(e4, r4 || [], a(t4).constructor) : e4.apply(t4, r4));
            }(this, e3, arguments);
          }
          __name(e3, "e");
          return function(t4, e4) {
            if ("function" != typeof e4 && null !== e4) throw new TypeError("Super expression must either be null or a function");
            t4.prototype = Object.create(e4 && e4.prototype, { constructor: { value: t4, writable: true, configurable: true } }), Object.defineProperty(t4, "prototype", { writable: false }), e4 && u(t4, e4);
          }(e3, t3), r3 = e3, (i2 = [{ key: "assimilateError", value: /* @__PURE__ */ __name(function(t4) {
            var e4 = t4.reason, r4 = f(e4) && l(e4) && -1 === t4.message.indexOf("bad auth") && -1 === t4.message.indexOf("Authentication failed");
            for (var n2 in r4 ? this.message = "Could not connect to any servers in your MongoDB Atlas cluster. One common reason is that you're trying to access the database from an IP that isn't whitelisted. Make sure your current IP address is on your Atlas cluster's IP whitelist: https://www.mongodb.com/docs/atlas/security-whitelist/" : p(e4) ? this.message = "Mongoose is connecting with SSL enabled, but the server is not accepting SSL connections. Please ensure that the MongoDB server you are connecting to is configured to accept SSL connections. Learn more: https://mongoosejs.com/docs/tutorials/ssl.html" : this.message = t4.message, t4) "name" !== n2 && (this[n2] = t4[n2]);
            return this.cause = e4, this;
          }, "value") }]) && o(r3.prototype, i2), Object.defineProperty(r3, "prototype", { writable: false }), r3;
          var r3, i2;
        }(c);
        Object.defineProperty(h.prototype, "name", { value: "MongooseServerSelectionError" }), t2.exports = h;
      }, 7236: (t2) => {
        "use strict";
        function e2(t3) {
          return e2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
            return typeof t4;
          } : function(t4) {
            return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
          }, e2(t3);
        }
        __name(e2, "e");
        t2.exports = function(t3) {
          if (null == t3 || "object" !== e2(t3)) return t3;
          if (Array.isArray(t3)) for (var r2 = t3.length - 1; r2 >= 0; --r2) void 0 === t3[r2] && t3.splice(r2, 1);
          for (var n = 0, o = Object.keys(t3); n < o.length; n++) {
            var i = o[n];
            void 0 === t3[i] && delete t3[i];
          }
          return t3;
        };
      }, 7291: (t2, e2) => {
        "use strict";
        function r2(t3) {
          return r2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
            return typeof t4;
          } : function(t4) {
            return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
          }, r2(t3);
        }
        __name(r2, "r");
        var n = Symbol("mongoose#trustedSymbol");
        e2.trustedSymbol = n, e2.trusted = function(t3) {
          return null == t3 || "object" !== r2(t3) || (t3[n] = true), t3;
        };
      }, 7300: (t2) => {
        "use strict";
        function e2(t3) {
          return e2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
            return typeof t4;
          } : function(t4) {
            return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
          }, e2(t3);
        }
        __name(e2, "e");
        t2.exports = function(t3) {
          return null == t3 || "object" !== e2(t3) || !("$meta" in t3) && !("$slice" in t3);
        };
      }, 7352: (t2, e2, r2) => {
        function n(t3) {
          return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
            return typeof t4;
          } : function(t4) {
            return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
          }, n(t3);
        }
        __name(n, "n");
        var o = Object.getOwnPropertyDescriptors || function(t3) {
          for (var e3 = Object.keys(t3), r3 = {}, n2 = 0; n2 < e3.length; n2++) r3[e3[n2]] = Object.getOwnPropertyDescriptor(t3, e3[n2]);
          return r3;
        }, i = /%[sdj%]/g;
        e2.format = function(t3) {
          if (!g(t3)) {
            for (var e3 = [], r3 = 0; r3 < arguments.length; r3++) e3.push(c(arguments[r3]));
            return e3.join(" ");
          }
          r3 = 1;
          for (var n2 = arguments, o2 = n2.length, s2 = String(t3).replace(i, function(t4) {
            if ("%%" === t4) return "%";
            if (r3 >= o2) return t4;
            switch (t4) {
              case "%s":
                return String(n2[r3++]);
              case "%d":
                return Number(n2[r3++]);
              case "%j":
                try {
                  return JSON.stringify(n2[r3++]);
                } catch (t5) {
                  return "[Circular]";
                }
              default:
                return t4;
            }
          }), a2 = n2[r3]; r3 < o2; a2 = n2[++r3]) m(a2) || !O(a2) ? s2 += " " + a2 : s2 += " " + c(a2);
          return s2;
        }, e2.deprecate = function(t3, e3) {
          if (true === { env: {} }.noDeprecation) return t3;
          var r3 = false;
          return function() {
            if (!r3) {
              if ({ env: {} }.throwDeprecation) throw new Error(e3);
              !{ env: {} }.traceDeprecation ? console.error(e3) : console.trace(e3), r3 = true;
            }
            return t3.apply(this, arguments);
          };
        };
        var s = {}, a = /^$/;
        if ({}.NODE_DEBUG) {
          var u = {}.NODE_DEBUG;
          u = u.replace(/[|\\{}()[\]^$+?.]/g, "\\$&").replace(/\*/g, ".*").replace(/,/g, "$|^").toUpperCase(), a = new RegExp("^" + u + "$", "i");
        }
        function c(t3, r3) {
          var n2 = { seen: [], stylize: f };
          return arguments.length >= 3 && (n2.depth = arguments[2]), arguments.length >= 4 && (n2.colors = arguments[3]), b(r3) ? n2.showHidden = r3 : r3 && e2._extend(n2, r3), _(n2.showHidden) && (n2.showHidden = false), _(n2.depth) && (n2.depth = 2), _(n2.colors) && (n2.colors = false), _(n2.customInspect) && (n2.customInspect = true), n2.colors && (n2.stylize = l), p(n2, t3, n2.depth);
        }
        __name(c, "c");
        function l(t3, e3) {
          var r3 = c.styles[e3];
          return r3 ? "\x1B[" + c.colors[r3][0] + "m" + t3 + "\x1B[" + c.colors[r3][1] + "m" : t3;
        }
        __name(l, "l");
        function f(t3, e3) {
          return t3;
        }
        __name(f, "f");
        function p(t3, r3, n2) {
          if (t3.customInspect && r3 && j(r3.inspect) && r3.inspect !== e2.inspect && (!r3.constructor || r3.constructor.prototype !== r3)) {
            var o2 = r3.inspect(n2, t3);
            return g(o2) || (o2 = p(t3, o2, n2)), o2;
          }
          var i2 = function(t4, e3) {
            if (_(e3)) return t4.stylize("undefined", "undefined");
            if (g(e3)) {
              var r4 = "'" + JSON.stringify(e3).replace(/^"|"$/g, "").replace(/'/g, "\\'").replace(/\\"/g, '"') + "'";
              return t4.stylize(r4, "string");
            }
            return v(e3) ? t4.stylize("" + e3, "number") : b(e3) ? t4.stylize("" + e3, "boolean") : m(e3) ? t4.stylize("null", "null") : void 0;
          }(t3, r3);
          if (i2) return i2;
          var s2 = Object.keys(r3), a2 = function(t4) {
            var e3 = {};
            return t4.forEach(function(t5, r4) {
              e3[t5] = true;
            }), e3;
          }(s2);
          if (t3.showHidden && (s2 = Object.getOwnPropertyNames(r3)), $(r3) && (s2.indexOf("message") >= 0 || s2.indexOf("description") >= 0)) return h(r3);
          if (0 === s2.length) {
            if (j(r3)) {
              var u2 = r3.name ? ": " + r3.name : "";
              return t3.stylize("[Function" + u2 + "]", "special");
            }
            if (w(r3)) return t3.stylize(RegExp.prototype.toString.call(r3), "regexp");
            if (S(r3)) return t3.stylize(Date.prototype.toString.call(r3), "date");
            if ($(r3)) return h(r3);
          }
          var c2, l2 = "", f2 = false, O2 = ["{", "}"];
          return d(r3) && (f2 = true, O2 = ["[", "]"]), j(r3) && (l2 = " [Function" + (r3.name ? ": " + r3.name : "") + "]"), w(r3) && (l2 = " " + RegExp.prototype.toString.call(r3)), S(r3) && (l2 = " " + Date.prototype.toUTCString.call(r3)), $(r3) && (l2 = " " + h(r3)), 0 !== s2.length || f2 && 0 != r3.length ? n2 < 0 ? w(r3) ? t3.stylize(RegExp.prototype.toString.call(r3), "regexp") : t3.stylize("[Object]", "special") : (t3.seen.push(r3), c2 = f2 ? function(t4, e3, r4, n3, o3) {
            for (var i3 = [], s3 = 0, a3 = e3.length; s3 < a3; ++s3) x(e3, String(s3)) ? i3.push(y(t4, e3, r4, n3, String(s3), true)) : i3.push("");
            return o3.forEach(function(o4) {
              o4.match(/^\d+$/) || i3.push(y(t4, e3, r4, n3, o4, true));
            }), i3;
          }(t3, r3, n2, a2, s2) : s2.map(function(e3) {
            return y(t3, r3, n2, a2, e3, f2);
          }), t3.seen.pop(), function(t4, e3, r4) {
            return t4.reduce(function(t5, e4) {
              return e4.indexOf("\n"), t5 + e4.replace(/\u001b\[\d\d?m/g, "").length + 1;
            }, 0) > 60 ? r4[0] + ("" === e3 ? "" : e3 + "\n ") + " " + t4.join(",\n  ") + " " + r4[1] : r4[0] + e3 + " " + t4.join(", ") + " " + r4[1];
          }(c2, l2, O2)) : O2[0] + l2 + O2[1];
        }
        __name(p, "p");
        function h(t3) {
          return "[" + Error.prototype.toString.call(t3) + "]";
        }
        __name(h, "h");
        function y(t3, e3, r3, n2, o2, i2) {
          var s2, a2, u2;
          if ((u2 = Object.getOwnPropertyDescriptor(e3, o2) || { value: e3[o2] }).get ? a2 = u2.set ? t3.stylize("[Getter/Setter]", "special") : t3.stylize("[Getter]", "special") : u2.set && (a2 = t3.stylize("[Setter]", "special")), x(n2, o2) || (s2 = "[" + o2 + "]"), a2 || (t3.seen.indexOf(u2.value) < 0 ? (a2 = m(r3) ? p(t3, u2.value, null) : p(t3, u2.value, r3 - 1)).indexOf("\n") > -1 && (a2 = i2 ? a2.split("\n").map(function(t4) {
            return "  " + t4;
          }).join("\n").slice(2) : "\n" + a2.split("\n").map(function(t4) {
            return "   " + t4;
          }).join("\n")) : a2 = t3.stylize("[Circular]", "special")), _(s2)) {
            if (i2 && o2.match(/^\d+$/)) return a2;
            (s2 = JSON.stringify("" + o2)).match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/) ? (s2 = s2.slice(1, -1), s2 = t3.stylize(s2, "name")) : (s2 = s2.replace(/'/g, "\\'").replace(/\\"/g, '"').replace(/(^"|"$)/g, "'"), s2 = t3.stylize(s2, "string"));
          }
          return s2 + ": " + a2;
        }
        __name(y, "y");
        function d(t3) {
          return Array.isArray(t3);
        }
        __name(d, "d");
        function b(t3) {
          return "boolean" == typeof t3;
        }
        __name(b, "b");
        function m(t3) {
          return null === t3;
        }
        __name(m, "m");
        function v(t3) {
          return "number" == typeof t3;
        }
        __name(v, "v");
        function g(t3) {
          return "string" == typeof t3;
        }
        __name(g, "g");
        function _(t3) {
          return void 0 === t3;
        }
        __name(_, "_");
        function w(t3) {
          return O(t3) && "[object RegExp]" === P(t3);
        }
        __name(w, "w");
        function O(t3) {
          return "object" === n(t3) && null !== t3;
        }
        __name(O, "O");
        function S(t3) {
          return O(t3) && "[object Date]" === P(t3);
        }
        __name(S, "S");
        function $(t3) {
          return O(t3) && ("[object Error]" === P(t3) || t3 instanceof Error);
        }
        __name($, "$");
        function j(t3) {
          return "function" == typeof t3;
        }
        __name(j, "j");
        function P(t3) {
          return Object.prototype.toString.call(t3);
        }
        __name(P, "P");
        function A(t3) {
          return t3 < 10 ? "0" + t3.toString(10) : t3.toString(10);
        }
        __name(A, "A");
        e2.debuglog = function(t3) {
          if (t3 = t3.toUpperCase(), !s[t3]) if (a.test(t3)) {
            var r3 = { env: {} }.pid;
            s[t3] = function() {
              var n2 = e2.format.apply(e2, arguments);
              console.error("%s %d: %s", t3, r3, n2);
            };
          } else s[t3] = function() {
          };
          return s[t3];
        }, e2.inspect = c, c.colors = { bold: [1, 22], italic: [3, 23], underline: [4, 24], inverse: [7, 27], white: [37, 39], grey: [90, 39], black: [30, 39], blue: [34, 39], cyan: [36, 39], green: [32, 39], magenta: [35, 39], red: [31, 39], yellow: [33, 39] }, c.styles = { special: "cyan", number: "yellow", boolean: "yellow", undefined: "grey", null: "bold", string: "green", date: "magenta", regexp: "red" }, e2.types = r2(7595), e2.isArray = d, e2.isBoolean = b, e2.isNull = m, e2.isNullOrUndefined = function(t3) {
          return null == t3;
        }, e2.isNumber = v, e2.isString = g, e2.isSymbol = function(t3) {
          return "symbol" === n(t3);
        }, e2.isUndefined = _, e2.isRegExp = w, e2.types.isRegExp = w, e2.isObject = O, e2.isDate = S, e2.types.isDate = S, e2.isError = $, e2.types.isNativeError = $, e2.isFunction = j, e2.isPrimitive = function(t3) {
          return null === t3 || "boolean" == typeof t3 || "number" == typeof t3 || "string" == typeof t3 || "symbol" === n(t3) || void 0 === t3;
        }, e2.isBuffer = r2(7944);
        var E = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
        function x(t3, e3) {
          return Object.prototype.hasOwnProperty.call(t3, e3);
        }
        __name(x, "x");
        e2.log = function() {
          var t3, r3;
          console.log("%s - %s", (r3 = [A((t3 = /* @__PURE__ */ new Date()).getHours()), A(t3.getMinutes()), A(t3.getSeconds())].join(":"), [t3.getDate(), E[t3.getMonth()], r3].join(" ")), e2.format.apply(e2, arguments));
        }, e2.inherits = r2(1679), e2._extend = function(t3, e3) {
          if (!e3 || !O(e3)) return t3;
          for (var r3 = Object.keys(e3), n2 = r3.length; n2--; ) t3[r3[n2]] = e3[r3[n2]];
          return t3;
        };
        var T = "undefined" != typeof Symbol ? Symbol("util.promisify.custom") : void 0;
        function k(t3, e3) {
          if (!t3) {
            var r3 = new Error("Promise was rejected with a falsy value");
            r3.reason = t3, t3 = r3;
          }
          return e3(t3);
        }
        __name(k, "k");
        e2.promisify = function(t3) {
          if ("function" != typeof t3) throw new TypeError('The "original" argument must be of type Function');
          if (T && t3[T]) {
            var e3;
            if ("function" != typeof (e3 = t3[T])) throw new TypeError('The "util.promisify.custom" argument must be of type Function');
            return Object.defineProperty(e3, T, { value: e3, enumerable: false, writable: false, configurable: true }), e3;
          }
          function e3() {
            for (var e4, r3, n2 = new Promise(function(t4, n3) {
              e4 = t4, r3 = n3;
            }), o2 = [], i2 = 0; i2 < arguments.length; i2++) o2.push(arguments[i2]);
            o2.push(function(t4, n3) {
              t4 ? r3(t4) : e4(n3);
            });
            try {
              t3.apply(this, o2);
            } catch (t4) {
              r3(t4);
            }
            return n2;
          }
          __name(e3, "e");
          return Object.setPrototypeOf(e3, Object.getPrototypeOf(t3)), T && Object.defineProperty(e3, T, { value: e3, enumerable: false, writable: false, configurable: true }), Object.defineProperties(e3, o(t3));
        }, e2.promisify.custom = T, e2.callbackify = function(t3) {
          if ("function" != typeof t3) throw new TypeError('The "original" argument must be of type Function');
          function e3() {
            for (var e4 = [], r3 = 0; r3 < arguments.length; r3++) e4.push(arguments[r3]);
            var n2 = e4.pop();
            if ("function" != typeof n2) throw new TypeError("The last argument must be of type Function");
            var o2 = this, i2 = /* @__PURE__ */ __name(function() {
              return n2.apply(o2, arguments);
            }, "i");
            t3.apply(this, e4).then(function(t4) {
              ({ env: {} }).nextTick(i2.bind(null, null, t4));
            }, function(t4) {
              ({ env: {} }).nextTick(k.bind(null, t4, i2));
            });
          }
          __name(e3, "e");
          return Object.setPrototypeOf(e3, Object.getPrototypeOf(t3)), Object.defineProperties(e3, o(t3)), e3;
        };
      }, 7425: (t2, e2, r2) => {
        "use strict";
        var n = r2(2696);
        t2.exports = function(t3, e3) {
          if (null == t3 || null == t3.discriminators) return null;
          for (var r3 = 0, o = Object.keys(t3.discriminators); r3 < o.length; r3++) {
            var i = o[r3], s = t3.discriminators[i];
            if (null != s.discriminatorMapping && n(s.discriminatorMapping.value, e3)) return s;
          }
          return null;
        };
      }, 7430: (t2, e2, r2) => {
        "use strict";
        var n = r2(5832).hp;
        function o(t3) {
          return o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
            return typeof t4;
          } : function(t4) {
            return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
          }, o(t3);
        }
        __name(o, "o");
        var i = r2(6353).Binary, s = r2(3305), a = r2(2497);
        r2(3672), r2(7352);
        function u(t3) {
          return t3 && "object" === o(t3) && !(t3 instanceof Date) && !s(t3, "ObjectId") && (!Array.isArray(t3) || 0 !== t3.length) && !(t3 instanceof n) && !s(t3, "Decimal128") && !(t3 instanceof i);
        }
        __name(u, "u");
        e2.B = /* @__PURE__ */ __name(function t3(e3, r3, o2, i2) {
          var s2, c = (s2 = e3 && a(e3) && !n.isBuffer(e3) ? Object.keys(e3.toObject({ transform: false, virtuals: false }) || {}) : Object.keys(e3 || {})).length, l = {};
          r3 = r3 ? r3 + "." : "";
          for (var f = 0; f < c; ++f) {
            var p = s2[f], h = e3[p];
            l[r3 + p] = h;
            var y = i2 && i2.path && i2.path(r3 + p), d = i2 && i2.nested && i2.nested[r3 + p];
            if (!y || "Mixed" !== y.instance) {
              if (u(h)) {
                if (o2 && o2.skipArrays && Array.isArray(h)) continue;
                var b = t3(h, r3 + p, o2, i2);
                for (var m in b) l[m] = b[m];
                Array.isArray(h) && (l[r3 + p] = h);
              }
              if (d) for (var v = 0, g = Object.keys(i2.paths); v < g.length; v++) {
                var _ = g[v];
                _.startsWith(r3 + p + ".") && !l.hasOwnProperty(_) && (l[_] = void 0);
              }
            }
          }
          return l;
        }, "t");
      }, 7494: (t2, e2, r2) => {
        "use strict";
        function n(t3) {
          return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
            return typeof t4;
          } : function(t4) {
            return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
          }, n(t3);
        }
        __name(n, "n");
        function o() {
          try {
            var t3 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch (t4) {
          }
          return (o = /* @__PURE__ */ __name(function() {
            return !!t3;
          }, "o"))();
        }
        __name(o, "o");
        function i(t3) {
          return i = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t4) {
            return t4.__proto__ || Object.getPrototypeOf(t4);
          }, i(t3);
        }
        __name(i, "i");
        function s(t3, e3) {
          return s = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t4, e4) {
            return t4.__proto__ = e4, t4;
          }, s(t3, e3);
        }
        __name(s, "s");
        var a = function(t3) {
          function e3() {
            return function(t4, e4) {
              if (!(t4 instanceof e4)) throw new TypeError("Cannot call a class as a function");
            }(this, e3), function(t4, e4, r4) {
              return e4 = i(e4), function(t5, e5) {
                if (e5 && ("object" == n(e5) || "function" == typeof e5)) return e5;
                if (void 0 !== e5) throw new TypeError("Derived constructors may only return object or undefined");
                return function(t6) {
                  if (void 0 === t6) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                  return t6;
                }(t5);
              }(t4, o() ? Reflect.construct(e4, r4 || [], i(t4).constructor) : e4.apply(t4, r4));
            }(this, e3, arguments);
          }
          __name(e3, "e");
          return function(t4, e4) {
            if ("function" != typeof e4 && null !== e4) throw new TypeError("Super expression must either be null or a function");
            t4.prototype = Object.create(e4 && e4.prototype, { constructor: { value: t4, writable: true, configurable: true } }), Object.defineProperty(t4, "prototype", { writable: false }), e4 && s(t4, e4);
          }(e3, t3), r3 = e3, Object.defineProperty(r3, "prototype", { writable: false }), r3;
          var r3;
        }(r2(8879)), u = r2(5761);
        Object.defineProperty(a.prototype, "_id", u), Object.defineProperty(a.prototype, "minimize", u), t2.exports = a;
      }, 7557: (t2, e2, r2) => {
        "use strict";
        function n(t3) {
          return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
            return typeof t4;
          } : function(t4) {
            return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
          }, n(t3);
        }
        __name(n, "n");
        function o(t3, e3, r3) {
          return (e3 = function(t4) {
            var e4 = function(t5) {
              if ("object" != n(t5) || !t5) return t5;
              var e5 = t5[Symbol.toPrimitive];
              if (void 0 !== e5) {
                var r4 = e5.call(t5, "string");
                if ("object" != n(r4)) return r4;
                throw new TypeError("@@toPrimitive must return a primitive value.");
              }
              return String(t5);
            }(t4);
            return "symbol" == n(e4) ? e4 : e4 + "";
          }(e3)) in t3 ? Object.defineProperty(t3, e3, { value: r3, enumerable: true, configurable: true, writable: true }) : t3[e3] = r3, t3;
        }
        __name(o, "o");
        var i = r2(8920), s = r2(7930).arrayAtomicsSymbol, a = r2(7930).arrayAtomicsBackupSymbol, u = r2(7930).arrayParentSymbol, c = r2(7930).arrayPathSymbol, l = r2(7930).arraySchemaSymbol, f = Array.prototype.push, p = /^\d+$/;
        t2.exports = function(t3, e3, r3, n2) {
          var h;
          if (Array.isArray(t3)) {
            var y = t3.length;
            if (0 === y) h = new Array();
            else if (1 === y) (h = new Array(1))[0] = t3[0];
            else if (y < 1e4) h = new Array(), f.apply(h, t3);
            else {
              h = new Array();
              for (var d = 0; d < y; ++d) f.call(h, t3[d]);
            }
          } else h = [];
          var b = o(o(o(o(o(o(o(o({}, s, {}), a, void 0), c, e3), l, n2), u, void 0), "isMongooseArray", true), "isMongooseArrayProxy", true), "__array", h);
          t3 && null != t3[s] && (b[s] = t3[s]), null != r3 && r3.$__ && (b[u] = r3, b[l] = n2 || r3.schema.path(e3));
          var m = new Proxy(h, { get: /* @__PURE__ */ __name(function(t4, e4) {
            return b.hasOwnProperty(e4) ? b[e4] : i.hasOwnProperty(e4) ? i[e4] : n2 && n2.virtuals && n2.virtuals.hasOwnProperty(e4) ? n2.virtuals[e4].applyGetters(void 0, t4) : "string" == typeof e4 && p.test(e4) && null != (null == n2 ? void 0 : n2.$embeddedSchemaType) ? n2.$embeddedSchemaType.applyGetters(h[e4], r3) : h[e4];
          }, "get"), set: /* @__PURE__ */ __name(function(t4, e4, r4) {
            return "string" == typeof e4 && p.test(e4) ? i.set.call(m, e4, r4, false) : b.hasOwnProperty(e4) ? b[e4] = r4 : n2 && n2.virtuals && n2.virtuals.hasOwnProperty(e4) ? n2.virtuals[e4].applySetters(r4, t4) : h[e4] = r4, true;
          }, "set") });
          return m;
        };
      }, 7591: (t2) => {
        "use strict";
        var e2 = null;
        t2.exports.get = function() {
          return e2;
        }, t2.exports.set = function(t3) {
          e2 = t3;
        };
      }, 7595: (t2, e2, r2) => {
        "use strict";
        function n(t3) {
          return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
            return typeof t4;
          } : function(t4) {
            return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
          }, n(t3);
        }
        __name(n, "n");
        var o = r2(5899), i = r2(1905), s = r2(9834), a = r2(7911);
        function u(t3) {
          return t3.call.bind(t3);
        }
        __name(u, "u");
        var c = "undefined" != typeof BigInt, l = "undefined" != typeof Symbol, f = u(Object.prototype.toString), p = u(Number.prototype.valueOf), h = u(String.prototype.valueOf), y = u(Boolean.prototype.valueOf);
        if (c) var d = u(BigInt.prototype.valueOf);
        if (l) var b = u(Symbol.prototype.valueOf);
        function m(t3, e3) {
          if ("object" !== n(t3)) return false;
          try {
            return e3(t3), true;
          } catch (t4) {
            return false;
          }
        }
        __name(m, "m");
        function v(t3) {
          return "[object Map]" === f(t3);
        }
        __name(v, "v");
        function g(t3) {
          return "[object Set]" === f(t3);
        }
        __name(g, "g");
        function _(t3) {
          return "[object WeakMap]" === f(t3);
        }
        __name(_, "_");
        function w(t3) {
          return "[object WeakSet]" === f(t3);
        }
        __name(w, "w");
        function O(t3) {
          return "[object ArrayBuffer]" === f(t3);
        }
        __name(O, "O");
        function S(t3) {
          return "undefined" != typeof ArrayBuffer && (O.working ? O(t3) : t3 instanceof ArrayBuffer);
        }
        __name(S, "S");
        function $(t3) {
          return "[object DataView]" === f(t3);
        }
        __name($, "$");
        function j(t3) {
          return "undefined" != typeof DataView && ($.working ? $(t3) : t3 instanceof DataView);
        }
        __name(j, "j");
        e2.isArgumentsObject = o, e2.isGeneratorFunction = i, e2.isTypedArray = a, e2.isPromise = function(t3) {
          return "undefined" != typeof Promise && t3 instanceof Promise || null !== t3 && "object" === n(t3) && "function" == typeof t3.then && "function" == typeof t3.catch;
        }, e2.isArrayBufferView = function(t3) {
          return "undefined" != typeof ArrayBuffer && ArrayBuffer.isView ? ArrayBuffer.isView(t3) : a(t3) || j(t3);
        }, e2.isUint8Array = function(t3) {
          return "Uint8Array" === s(t3);
        }, e2.isUint8ClampedArray = function(t3) {
          return "Uint8ClampedArray" === s(t3);
        }, e2.isUint16Array = function(t3) {
          return "Uint16Array" === s(t3);
        }, e2.isUint32Array = function(t3) {
          return "Uint32Array" === s(t3);
        }, e2.isInt8Array = function(t3) {
          return "Int8Array" === s(t3);
        }, e2.isInt16Array = function(t3) {
          return "Int16Array" === s(t3);
        }, e2.isInt32Array = function(t3) {
          return "Int32Array" === s(t3);
        }, e2.isFloat32Array = function(t3) {
          return "Float32Array" === s(t3);
        }, e2.isFloat64Array = function(t3) {
          return "Float64Array" === s(t3);
        }, e2.isBigInt64Array = function(t3) {
          return "BigInt64Array" === s(t3);
        }, e2.isBigUint64Array = function(t3) {
          return "BigUint64Array" === s(t3);
        }, v.working = "undefined" != typeof Map && v(/* @__PURE__ */ new Map()), e2.isMap = function(t3) {
          return "undefined" != typeof Map && (v.working ? v(t3) : t3 instanceof Map);
        }, g.working = "undefined" != typeof Set && g(/* @__PURE__ */ new Set()), e2.isSet = function(t3) {
          return "undefined" != typeof Set && (g.working ? g(t3) : t3 instanceof Set);
        }, _.working = "undefined" != typeof WeakMap && _(/* @__PURE__ */ new WeakMap()), e2.isWeakMap = function(t3) {
          return "undefined" != typeof WeakMap && (_.working ? _(t3) : t3 instanceof WeakMap);
        }, w.working = "undefined" != typeof WeakSet && w(/* @__PURE__ */ new WeakSet()), e2.isWeakSet = function(t3) {
          return w(t3);
        }, O.working = "undefined" != typeof ArrayBuffer && O(new ArrayBuffer()), e2.isArrayBuffer = S, $.working = "undefined" != typeof ArrayBuffer && "undefined" != typeof DataView && $(new DataView(new ArrayBuffer(1), 0, 1)), e2.isDataView = j;
        var P = "undefined" != typeof SharedArrayBuffer ? SharedArrayBuffer : void 0;
        function A(t3) {
          return "[object SharedArrayBuffer]" === f(t3);
        }
        __name(A, "A");
        function E(t3) {
          return void 0 !== P && (void 0 === A.working && (A.working = A(new P())), A.working ? A(t3) : t3 instanceof P);
        }
        __name(E, "E");
        function x(t3) {
          return m(t3, p);
        }
        __name(x, "x");
        function T(t3) {
          return m(t3, h);
        }
        __name(T, "T");
        function k(t3) {
          return m(t3, y);
        }
        __name(k, "k");
        function N(t3) {
          return c && m(t3, d);
        }
        __name(N, "N");
        function I(t3) {
          return l && m(t3, b);
        }
        __name(I, "I");
        e2.isSharedArrayBuffer = E, e2.isAsyncFunction = function(t3) {
          return "[object AsyncFunction]" === f(t3);
        }, e2.isMapIterator = function(t3) {
          return "[object Map Iterator]" === f(t3);
        }, e2.isSetIterator = function(t3) {
          return "[object Set Iterator]" === f(t3);
        }, e2.isGeneratorObject = function(t3) {
          return "[object Generator]" === f(t3);
        }, e2.isWebAssemblyCompiledModule = function(t3) {
          return "[object WebAssembly.Module]" === f(t3);
        }, e2.isNumberObject = x, e2.isStringObject = T, e2.isBooleanObject = k, e2.isBigIntObject = N, e2.isSymbolObject = I, e2.isBoxedPrimitive = function(t3) {
          return x(t3) || T(t3) || k(t3) || N(t3) || I(t3);
        }, e2.isAnyArrayBuffer = function(t3) {
          return "undefined" != typeof Uint8Array && (S(t3) || E(t3));
        }, ["isProxy", "isExternal", "isModuleNamespaceObject"].forEach(function(t3) {
          Object.defineProperty(e2, t3, { enumerable: false, value: /* @__PURE__ */ __name(function() {
            throw new Error(t3 + " is not supported in userland");
          }, "value") });
        });
      }, 7760: (t2, e2, r2) => {
        "use strict";
        function n(t3, e3) {
          var r3 = Object.keys(t3);
          if (Object.getOwnPropertySymbols) {
            var n2 = Object.getOwnPropertySymbols(t3);
            e3 && (n2 = n2.filter(function(e4) {
              return Object.getOwnPropertyDescriptor(t3, e4).enumerable;
            })), r3.push.apply(r3, n2);
          }
          return r3;
        }
        __name(n, "n");
        function o(t3) {
          for (var e3 = 1; e3 < arguments.length; e3++) {
            var r3 = null != arguments[e3] ? arguments[e3] : {};
            e3 % 2 ? n(Object(r3), true).forEach(function(e4) {
              i(t3, e4, r3[e4]);
            }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t3, Object.getOwnPropertyDescriptors(r3)) : n(Object(r3)).forEach(function(e4) {
              Object.defineProperty(t3, e4, Object.getOwnPropertyDescriptor(r3, e4));
            });
          }
          return t3;
        }
        __name(o, "o");
        function i(t3, e3, r3) {
          return (e3 = function(t4) {
            var e4 = function(t5) {
              if ("object" != a(t5) || !t5) return t5;
              var e5 = t5[Symbol.toPrimitive];
              if (void 0 !== e5) {
                var r4 = e5.call(t5, "string");
                if ("object" != a(r4)) return r4;
                throw new TypeError("@@toPrimitive must return a primitive value.");
              }
              return String(t5);
            }(t4);
            return "symbol" == a(e4) ? e4 : e4 + "";
          }(e3)) in t3 ? Object.defineProperty(t3, e3, { value: r3, enumerable: true, configurable: true, writable: true }) : t3[e3] = r3, t3;
        }
        __name(i, "i");
        function s(t3, e3) {
          (null == e3 || e3 > t3.length) && (e3 = t3.length);
          for (var r3 = 0, n2 = Array(e3); r3 < e3; r3++) n2[r3] = t3[r3];
          return n2;
        }
        __name(s, "s");
        function a(t3) {
          return a = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
            return typeof t4;
          } : function(t4) {
            return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
          }, a(t3);
        }
        __name(a, "a");
        var u, c, l = r2(8499), f = r2(2555), p = r2(8213), h = r2(4592), y = r2(6426), d = y.CastError, b = r2(5022), m = r2(2069), v = r2(622), g = r2(2073), _ = r2(7982), w = r2(4450), O = r2(8260), S = r2(5110), $ = r2(7352), j = r2(8768), P = r2(5558).G, A = r2(4327), E = r2(9604), x = r2(1058), T = Symbol("mongoose#isNestedArray"), k = Object.freeze({});
        function N(t3, e3, n2, o2) {
          c || (c = r2(9600).Embedded);
          var i2, s2, a2 = "type";
          if (o2 && o2.typeKey && (a2 = o2.typeKey), this.schemaOptions = o2, e3) {
            var u2 = {};
            j.isPOJO(e3) && (e3[a2] ? (delete (u2 = w(e3))[a2], e3 = e3[a2]) : e3 = b), null != n2 && null != n2.ref && null == u2.ref && (u2.ref = n2.ref), e3 === Object && (e3 = b);
            var l2 = "string" == typeof e3 ? e3 : j.getFunctionName(e3), f2 = r2(7953), p2 = f2.hasOwnProperty(l2) ? f2[l2] : e3;
            if (this.casterConstructor = p2, this.casterConstructor instanceof N && (this.casterConstructor[T] = true), "function" != typeof p2 || p2.$isArraySubdocument || p2.$isSchemaMap) this.caster = p2, this.caster instanceof c || (this.caster.path = t3);
            else {
              var h2 = this.caster instanceof c ? null : t3;
              this.caster = new p2(h2, u2);
            }
            this.$embeddedSchemaType = this.caster;
          }
          if (this.$isMongooseArray = true, y.call(this, t3, n2, "Array"), null != this.defaultValue && (i2 = this.defaultValue, s2 = "function" == typeof i2), !("defaultValue" in this) || null != this.defaultValue) {
            var d2 = /* @__PURE__ */ __name(function() {
              return s2 ? i2.call(this) : null != i2 ? [].concat(i2) : [];
            }, "d");
            d2.$runBeforeSetters = !s2, this.default(d2);
          }
        }
        __name(N, "N");
        N.schemaName = "Array", N.options = { castNonArrays: true }, N.defaultOptions = {}, N.set = y.set, N.setters = [], N.get = y.get, N.prototype = Object.create(y.prototype), N.prototype.constructor = N, N.prototype.OptionsConstructor = h, N._checkRequired = y.prototype.checkRequired, N.checkRequired = y.checkRequired, N.prototype.virtuals = null, N.prototype.checkRequired = function(t3, e3) {
          return "object" === a(t3) && y._isRef(this, t3, e3, true) ? !!t3 : ("function" == typeof this.constructor.checkRequired ? this.constructor.checkRequired() : N.checkRequired())(t3);
        }, N.prototype.enum = function() {
          for (var t3 = this; ; ) {
            var e3 = t3 && t3.caster && t3.caster.instance;
            if ("Array" !== e3) {
              if ("String" !== e3 && "Number" !== e3) throw new Error("`enum` can only be set on an array of strings or numbers , not " + e3);
              break;
            }
            t3 = t3.caster;
          }
          var r3 = arguments;
          return !Array.isArray(arguments) && j.isObject(arguments) && (r3 = j.object.vals(r3)), t3.caster.enum.apply(t3.caster, r3), this;
        }, N.prototype.applyGetters = function(t3, e3) {
          return null != e3 && null != e3.$__ && e3.$populated(this.path) ? t3 : y.prototype.applyGetters.call(this, t3, e3);
        }, N.prototype._applySetters = function(t3, e3, r3, n2) {
          if (this.casterConstructor.$isMongooseArray && N.options.castNonArrays && !this[T]) {
            for (var o2 = 0, i2 = this; null != i2 && i2.$isMongooseArray && !i2.$isMongooseDocumentArray; ) ++o2, i2 = i2.casterConstructor;
            if (null != t3 && 0 !== t3.length) {
              var s2 = g(t3);
              if (s2.min === s2.max && s2.max < o2 && s2.containsNonArrayItem) for (var a2 = s2.max; a2 < o2; ++a2) t3 = [t3];
            }
          }
          return y.prototype._applySetters.call(this, t3, e3, r3, n2);
        }, N.prototype.cast = function(t3, e3, n2, o2, i2) {
          var s2, a2;
          if (u || (u = r2(9600).Array), Array.isArray(t3)) {
            if (!t3.length && e3) {
              var c2 = e3.schema.indexedPaths(), l2 = this.path;
              for (s2 = 0, a2 = c2.length; s2 < a2; ++s2) {
                var f2 = c2[s2][0][l2];
                if ("2dsphere" === f2 || "2d" === f2) return;
              }
              var p2 = this.path.endsWith(".coordinates") ? this.path.substring(0, this.path.lastIndexOf(".")) : null;
              if (null != p2) {
                for (s2 = 0, a2 = c2.length; s2 < a2; ++s2) if ("2dsphere" === c2[s2][0][p2]) return;
              }
            }
            i2 = i2 || k;
            var h2 = j.isMongooseArray(t3) ? t3.__array : t3, y2 = i2.path || this.path;
            if (null != i2.arrayPathIndex && (y2 += "." + i2.arrayPathIndex), h2 = (t3 = u(h2, y2, e3, this)).__array, n2 && null != e3 && null != e3.$__ && e3.$populated(this.path)) return t3;
            var m2 = this.caster, v2 = m2.$isMongooseArray;
            if (m2 && this.casterConstructor !== b) try {
              var g2 = h2.length;
              for (s2 = 0; s2 < g2; s2++) {
                var _2 = {};
                v2 && (null != i2.arrayPath || null != m2._arrayParentPath) && (_2.arrayPathIndex = s2), i2.hydratedPopulatedDocs && (_2.hydratedPopulatedDocs = i2.hydratedPopulatedDocs), h2[s2] = m2.applySetters(h2[s2], e3, n2, void 0, _2);
              }
            } catch (e4) {
              throw new d("[" + e4.kind + "]", $.inspect(t3), this.path + "." + s2, e4, this);
            }
            return t3;
          }
          var w2 = null != this.options.castNonArrays ? this.options.castNonArrays : N.options.castNonArrays;
          if (n2 || w2) return e3 && n2 && e3.markModified(this.path), this.cast([t3], e3, n2);
          throw new d("Array", $.inspect(t3), this.path, null, this);
        }, N.prototype._castForPopulate = function(t3, e3) {
          if (u || (u = r2(9600).Array), Array.isArray(t3)) {
            var n2, o2 = t3.__array ? t3.__array : t3, i2 = o2.length, s2 = this.caster;
            if (s2 && this.casterConstructor !== b) try {
              for (n2 = 0; n2 < i2; n2++) {
                var a2 = {};
                s2.$isMongooseArray && null != s2._arrayParentPath && (a2.arrayPathIndex = n2), o2[n2] = s2.cast(o2[n2], e3, false, void 0, a2);
              }
            } catch (e4) {
              throw new d("[" + e4.kind + "]", $.inspect(t3), this.path + "." + n2, e4, this);
            }
            return t3;
          }
          throw new d("Array", $.inspect(t3), this.path, null, this);
        }, N.prototype.$toObject = N.prototype.toObject, N.prototype.discriminator = function() {
          for (var t3, e3 = this; e3.$isMongooseArray && !e3.$isMongooseDocumentArray; ) if (null == (e3 = e3.casterConstructor) || "function" == typeof e3) throw new p("You can only add an embedded discriminator on a document array, " + this.path + " is a plain array");
          return (t3 = e3).discriminator.apply(t3, arguments);
        }, N.prototype.clone = function() {
          var t3 = Object.assign({}, this.options), e3 = new this.constructor(this.path, this.caster, t3, this.schemaOptions);
          return e3.validators = this.validators.slice(), void 0 !== this.requiredValidator && (e3.requiredValidator = this.requiredValidator), e3;
        }, N.prototype._castForQuery = function(t3, e3) {
          var r3 = this, n2 = this.casterConstructor;
          if (t3 && n2.discriminators && n2.schema && n2.schema.options && n2.schema.options.discriminatorKey) if ("string" == typeof t3[n2.schema.options.discriminatorKey] && n2.discriminators[t3[n2.schema.options.discriminatorKey]]) n2 = n2.discriminators[t3[n2.schema.options.discriminatorKey]];
          else {
            var o2 = x(n2.discriminators, t3[n2.schema.options.discriminatorKey]);
            o2 && (n2 = o2);
          }
          var i2 = this.casterConstructor.prototype, s2 = i2 && i2.castForQuery, a2 = i2 && i2.cast, u2 = n2.castForQuery, c2 = this.caster;
          return Array.isArray(t3) ? (this.setters.reverse().forEach(function(e4) {
            t3 = e4.call(r3, t3, r3);
          }), t3 = t3.map(function(t4) {
            return j.isObject(t4) && t4.$elemMatch ? t4 : s2 ? t4 = s2.call(c2, null, t4, e3) : a2 ? t4 = a2.call(c2, t4) : u2 ? t4 = u2.call(c2, null, t4, e3) : null != t4 ? t4 = new n2(t4) : t4;
          })) : s2 ? t3 = s2.call(c2, null, t3, e3) : a2 ? t3 = a2.call(c2, t3) : u2 ? t3 = u2.call(c2, null, t3, e3) : null != t3 && (t3 = new n2(t3)), t3;
        }, N.prototype.castForQuery = function(t3, e3, r3) {
          var n2;
          if (null != t3) {
            if (!(n2 = this.$conditionalHandlers[t3])) throw new Error("Can't use " + t3 + " with Array.");
            return n2.call(this, e3, r3);
          }
          return this._castForQuery(e3, r3);
        }, N.prototype.virtual = function(t3, e3) {
          if (t3 instanceof v || "VirtualType" === O(t3)) return this.virtual(t3.path, t3.options);
          if (e3 = new m(e3), j.hasUserDefinedProperty(e3, ["ref", "refPath"])) throw new p("Cannot set populate virtual as a property of an array");
          var r3 = new v(e3, t3);
          return null === this.virtuals && (this.virtuals = {}), this.virtuals[t3] = r3, r3;
        };
        var I = N.prototype.$conditionalHandlers = {};
        function B(t3) {
          return function(e3, r3) {
            if (!Array.isArray(e3)) throw new TypeError("conditional " + t3 + " requires an array");
            var n2, o2 = [], i2 = function(t4, e4) {
              var r4 = "undefined" != typeof Symbol && t4[Symbol.iterator] || t4["@@iterator"];
              if (!r4) {
                if (Array.isArray(t4) || (r4 = function(t5, e5) {
                  if (t5) {
                    if ("string" == typeof t5) return s(t5, e5);
                    var r5 = {}.toString.call(t5).slice(8, -1);
                    return "Object" === r5 && t5.constructor && (r5 = t5.constructor.name), "Map" === r5 || "Set" === r5 ? Array.from(t5) : "Arguments" === r5 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r5) ? s(t5, e5) : void 0;
                  }
                }(t4)) || e4 && t4 && "number" == typeof t4.length) {
                  r4 && (t4 = r4);
                  var n3 = 0, o3 = /* @__PURE__ */ __name(function() {
                  }, "o");
                  return { s: o3, n: /* @__PURE__ */ __name(function() {
                    return n3 >= t4.length ? { done: true } : { done: false, value: t4[n3++] };
                  }, "n"), e: /* @__PURE__ */ __name(function(t5) {
                    throw t5;
                  }, "e"), f: o3 };
                }
                throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
              }
              var i3, a3 = true, u3 = false;
              return { s: /* @__PURE__ */ __name(function() {
                r4 = r4.call(t4);
              }, "s"), n: /* @__PURE__ */ __name(function() {
                var t5 = r4.next();
                return a3 = t5.done, t5;
              }, "n"), e: /* @__PURE__ */ __name(function(t5) {
                u3 = true, i3 = t5;
              }, "e"), f: /* @__PURE__ */ __name(function() {
                try {
                  a3 || null == r4.return || r4.return();
                } finally {
                  if (u3) throw i3;
                }
              }, "f") };
            }(e3);
            try {
              for (i2.s(); !(n2 = i2.n()).done; ) {
                var a2, u2 = n2.value;
                o2.push(_(null !== (a2 = this.casterConstructor.schema) && void 0 !== a2 ? a2 : r3.schema, u2, null, this && this.$$context));
              }
            } catch (t4) {
              i2.e(t4);
            } finally {
              i2.f();
            }
            return o2;
          };
        }
        __name(B, "B");
        I.$all = function(t3, e3) {
          var r3 = this;
          return Array.isArray(t3) || (t3 = [t3]), t3 = t3.map(function(t4) {
            if (!j.isObject(t4)) return t4;
            if (null != t4.$elemMatch) return { $elemMatch: _(r3.casterConstructor.schema, t4.$elemMatch, null, r3 && r3.$$context) };
            var e4 = {};
            return e4[r3.path] = t4, _(r3.casterConstructor.schema, e4, null, r3 && r3.$$context)[r3.path];
          }, this), this.castForQuery(null, t3, e3);
        }, I.$options = String, I.$elemMatch = function(t3, e3) {
          for (var r3 = Object.keys(t3), n2 = r3.length, o2 = 0; o2 < n2; ++o2) {
            var i2 = r3[o2], s2 = t3[i2];
            S(i2) && null != s2 && (t3[i2] = this.castForQuery(i2, s2, e3));
          }
          return t3;
        }, I.$geoIntersects = E.cast$geoIntersects, I.$or = B("$or"), I.$and = B("$and"), I.$nor = B("$nor"), I.$near = I.$nearSphere = E.cast$near, I.$within = I.$geoWithin = E.cast$within, I.$size = I.$minDistance = I.$maxDistance = P, I.$exists = l, I.$type = f, I.$eq = I.$gt = I.$gte = I.$lt = I.$lte = I.$not = I.$regex = I.$ne = N.prototype._castForQuery, I.$nin = y.prototype.$conditionalHandlers.$nin, I.$in = y.prototype.$conditionalHandlers.$in, N.prototype.toJSONSchema = function(t3) {
          var e3 = this.getEmbeddedSchemaType(), r3 = this.options.required && "function" != typeof this.options.required;
          return o(o({}, A("array", "array", null == t3 ? void 0 : t3.useBsonType, r3)), {}, { items: e3.toJSONSchema(t3) });
        }, N.prototype.autoEncryptionType = function() {
          return "array";
        }, t2.exports = N;
      }, 7768: (t2, e2, r2) => {
        "use strict";
        var n = r2(2402);
        t2.exports = function(t3) {
          return null == t3 ? t3 : "" === t3 ? null : ("string" != typeof t3 && "boolean" != typeof t3 || (t3 = Number(t3)), n.ok(!isNaN(t3)), t3 instanceof Number ? t3.valueOf() : "number" == typeof t3 ? t3 : Array.isArray(t3) || "function" != typeof t3.valueOf ? t3.toString && !Array.isArray(t3) && t3.toString() == Number(t3) ? Number(t3) : void n.ok(false) : Number(t3.valueOf()));
        };
      }, 7834: (t2) => {
        "use strict";
        function e2(t3) {
          return e2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
            return typeof t4;
          } : function(t4) {
            return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
          }, e2(t3);
        }
        __name(e2, "e");
        t2.exports = function(t3, r2, n, o) {
          return o.justOne || o.count ? (t3[r2] = Array.isArray(n) ? n[0] : n, "object" !== e2(t3[r2]) && (t3[r2] = o.count ? n : null)) : (t3[r2] = Array.isArray(n) ? n : null == n ? [] : [n], t3[r2] = t3[r2].filter(function(t4) {
            return t4 && "object" === e2(t4);
          })), t3[r2];
        };
      }, 7860: (t2) => {
        "use strict";
        t2.exports = function(t3) {
          for (var e2 = [], r2 = "", n = "DEFAULT", o = 0; o < t3.length; ++o) "IN_SQUARE_BRACKETS" !== n || /\d/.test(t3[o]) || "]" === t3[o] || (n = "DEFAULT", r2 = e2[e2.length - 1] + "[" + r2, e2.splice(e2.length - 1, 1)), "[" === t3[o] ? ("IMMEDIATELY_AFTER_SQUARE_BRACKETS" !== n && (e2.push(r2), r2 = ""), n = "IN_SQUARE_BRACKETS") : "]" === t3[o] ? "IN_SQUARE_BRACKETS" === n ? (n = "IMMEDIATELY_AFTER_SQUARE_BRACKETS", e2.push(r2), r2 = "") : (n = "DEFAULT", r2 += t3[o]) : "." === t3[o] ? ("IMMEDIATELY_AFTER_SQUARE_BRACKETS" !== n && (e2.push(r2), r2 = ""), n = "DEFAULT") : r2 += t3[o];
          return "IMMEDIATELY_AFTER_SQUARE_BRACKETS" !== n && e2.push(r2), e2;
        };
      }, 7878: (t2, e2, r2) => {
        "use strict";
        var n = r2(2273), o = r2(4183);
        t2.exports = function() {
          var t3 = o();
          return n(Number, { isNaN: t3 }, { isNaN: /* @__PURE__ */ __name(function() {
            return Number.isNaN !== t3;
          }, "isNaN") }), t3;
        };
      }, 7910: (t2, e2, r2) => {
        "use strict";
        var n = r2(1058);
        t2.exports = function(t3, e3, r3) {
          var o = t3.schema.options.discriminatorKey, i = null != e3 && e3[o];
          if (null == i && (i = r3), t3.discriminators && null != i) if (t3.discriminators[i]) t3 = t3.discriminators[i];
          else {
            var s = n(t3.discriminators, i);
            s && (t3 = s);
          }
          return t3;
        };
      }, 7911: (t2, e2, r2) => {
        "use strict";
        var n = r2(9834);
        t2.exports = function(t3) {
          return !!n(t3);
        };
      }, 7930: (t2, e2) => {
        "use strict";
        e2.arrayAtomicsBackupSymbol = Symbol("mongoose#Array#atomicsBackup"), e2.arrayAtomicsSymbol = Symbol("mongoose#Array#_atomics"), e2.arrayParentSymbol = Symbol("mongoose#Array#_parent"), e2.arrayPathSymbol = Symbol("mongoose#Array#_path"), e2.arraySchemaSymbol = Symbol("mongoose#Array#_schema"), e2.documentArrayParent = Symbol("mongoose#documentArrayParent"), e2.documentIsSelected = Symbol("mongoose#Document#isSelected"), e2.documentIsModified = Symbol("mongoose#Document#isModified"), e2.documentModifiedPaths = Symbol("mongoose#Document#modifiedPaths"), e2.documentSchemaSymbol = Symbol("mongoose#Document#schema"), e2.getSymbol = Symbol("mongoose#Document#get"), e2.modelSymbol = Symbol("mongoose#Model"), e2.objectIdSymbol = Symbol("mongoose#ObjectId"), e2.populateModelSymbol = Symbol("mongoose#PopulateOptions#Model"), e2.schemaTypeSymbol = Symbol("mongoose#schemaType"), e2.sessionNewDocuments = Symbol("mongoose#ClientSession#newDocuments"), e2.scopeSymbol = Symbol("mongoose#Document#scope"), e2.validatorErrorSymbol = Symbol("mongoose#validatorError");
      }, 7944: (t2) => {
        function e2(t3) {
          return e2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
            return typeof t4;
          } : function(t4) {
            return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
          }, e2(t3);
        }
        __name(e2, "e");
        t2.exports = function(t3) {
          return t3 && "object" === e2(t3) && "function" == typeof t3.copy && "function" == typeof t3.fill && "function" == typeof t3.readUInt8;
        };
      }, 7953: (t2, e2, r2) => {
        "use strict";
        e2.Array = r2(7760), e2.BigInt = r2(3318), e2.Boolean = r2(6413), e2.Buffer = r2(2307), e2.Date = r2(2345), e2.Decimal128 = e2.Decimal = r2(7045), e2.DocumentArray = r2(9123), e2.Double = r2(1732), e2.Int32 = r2(433), e2.Map = r2(6867), e2.Mixed = r2(5022), e2.Number = r2(3660), e2.ObjectId = r2(3091), e2.String = r2(8728), e2.Subdocument = r2(5098), e2.UUID = r2(2134), e2.Union = r2(8866), e2.Oid = e2.ObjectId, e2.Object = e2.Mixed, e2.Bool = e2.Boolean, e2.ObjectID = e2.ObjectId;
      }, 7982: (t2, e2, r2) => {
        "use strict";
        function n(t3, e3) {
          var r3 = "undefined" != typeof Symbol && t3[Symbol.iterator] || t3["@@iterator"];
          if (!r3) {
            if (Array.isArray(t3) || (r3 = function(t4, e4) {
              if (t4) {
                if ("string" == typeof t4) return o(t4, e4);
                var r4 = {}.toString.call(t4).slice(8, -1);
                return "Object" === r4 && t4.constructor && (r4 = t4.constructor.name), "Map" === r4 || "Set" === r4 ? Array.from(t4) : "Arguments" === r4 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r4) ? o(t4, e4) : void 0;
              }
            }(t3)) || e3 && t3 && "number" == typeof t3.length) {
              r3 && (t3 = r3);
              var n2 = 0, i2 = /* @__PURE__ */ __name(function() {
              }, "i");
              return { s: i2, n: /* @__PURE__ */ __name(function() {
                return n2 >= t3.length ? { done: true } : { done: false, value: t3[n2++] };
              }, "n"), e: /* @__PURE__ */ __name(function(t4) {
                throw t4;
              }, "e"), f: i2 };
            }
            throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }
          var s2, a2 = true, u2 = false;
          return { s: /* @__PURE__ */ __name(function() {
            r3 = r3.call(t3);
          }, "s"), n: /* @__PURE__ */ __name(function() {
            var t4 = r3.next();
            return a2 = t4.done, t4;
          }, "n"), e: /* @__PURE__ */ __name(function(t4) {
            u2 = true, s2 = t4;
          }, "e"), f: /* @__PURE__ */ __name(function() {
            try {
              a2 || null == r3.return || r3.return();
            } finally {
              if (u2) throw s2;
            }
          }, "f") };
        }
        __name(n, "n");
        function o(t3, e3) {
          (null == e3 || e3 > t3.length) && (e3 = t3.length);
          for (var r3 = 0, n2 = Array(e3); r3 < e3; r3++) n2[r3] = t3[r3];
          return n2;
        }
        __name(o, "o");
        function i(t3) {
          return i = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
            return typeof t4;
          } : function(t4) {
            return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
          }, i(t3);
        }
        __name(i, "i");
        var s = r2(3609), a = r2(8995), u = r2(7953), c = r2(170), l = r2(1244), f = r2(9064), p = r2(3703), h = r2(7425), y = r2(5110), d = r2(7352), b = r2(608), m = r2(2497), v = r2(8768), g = ["Polygon", "MultiPolygon"];
        function _(t3, e3, r3) {
          if (Array.isArray(t3)) t3.forEach(function(n3, o3) {
            if (Array.isArray(n3) || b(n3)) return _(n3, e3, r3);
            t3[o3] = e3.castForQuery(null, n3, r3);
          });
          else for (var n2 = Object.keys(t3), o2 = n2.length; o2--; ) {
            var i2 = n2[o2], s2 = t3[i2];
            Array.isArray(s2) || b(s2) ? (_(s2, e3, r3), t3[i2] = s2) : t3[i2] = e3.castForQuery({ val: s2, context: r3 });
          }
        }
        __name(_, "_");
        function w(t3, e3, r3, n2) {
          if ("strictQuery" in t3) return t3.strictQuery;
          if ("strictQuery" in e3) return e3.strictQuery;
          var o2 = n2 && n2.mongooseCollection && n2.mongooseCollection.conn && n2.mongooseCollection.conn.base && n2.mongooseCollection.conn.base.options;
          return o2 && "strictQuery" in o2 ? o2.strictQuery : r3.strictQuery;
        }
        __name(w, "w");
        t2.exports = /* @__PURE__ */ __name(function t3(e3, r3, o2, O) {
          if (Array.isArray(r3)) throw new Error("Query filter must be an object, got an array ", d.inspect(r3));
          if (null == r3) return r3;
          null != e3 && null != e3.discriminators && null != r3[e3.options.discriminatorKey] && (e3 = h(e3, r3[e3.options.discriminatorKey]) || e3);
          var S, $, j, P, A, E, x = Object.keys(r3), T = x.length;
          for (o2 = o2 || {}; T--; ) if (E = r3[P = x[T]], "$or" === P || "$nor" === P || "$and" === P) {
            if (!Array.isArray(E)) throw new s("Array", E, P);
            for (var k = E.length - 1; k >= 0; k--) {
              if (null == E[k] || "object" !== i(E[k])) throw new s("Object", E[k], P + "." + k);
              var N = Object.keys(E[k]).length, I = E[k][e3.options.discriminatorKey];
              if (null == I) E[k] = t3(e3, E[k], o2, O);
              else {
                var B = h(O.schema, I);
                E[k] = t3(B || e3, E[k], o2, O);
              }
              0 === Object.keys(E[k]).length && 0 !== N && E.splice(k, 1);
            }
            0 === E.length && delete r3[P];
          } else {
            if ("$where" === P) {
              if ("string" !== (A = i(E)) && "function" !== A) throw new Error("Must have a string or function for $where");
              "function" === A && (r3[P] = E.toString());
              continue;
            }
            if ("$expr" === P) {
              E = c(E, e3);
              continue;
            }
            if ("$elemMatch" === P) E = t3(e3, E, o2, O);
            else if ("$text" === P) E = f(E, P);
            else if ("$comment" !== P || e3.paths.hasOwnProperty("$comment")) {
              if (!e3) continue;
              if (!($ = e3.path(P))) for (var M = P.split("."), D = M.length; D--; ) {
                var R = M.slice(0, D).join("."), U = M.slice(D).join("."), C = e3.path(R), F = C && C.schema && C.schema.options && C.schema.options.discriminatorKey;
                if (null != C && null != (C.schema && C.schema.discriminators) && null != F && U !== F) {
                  var L = p(r3, R + "." + F), V = C.schema.discriminators;
                  "string" == typeof L && null != V[L] ? $ = V[L].path(U) : null != L && 1 === Object.keys(L).length && Array.isArray(L.$in) && 1 === L.$in.length && "string" == typeof L.$in[0] && null != V[L.$in[0]] && ($ = V[L.$in[0]].path(U));
                }
              }
              if ($) {
                if (null == E) continue;
                if (v.isPOJO(E)) if (Object.keys(E).some(y)) for (var q = Object.keys(E), J = void 0, z = q.length; z--; ) if (j = E[J = q[z]], "$elemMatch" === J) j && null != $ && null != $.schema ? t3($.schema, j, o2, O) : j && null != $ && $.$isMongooseArray && (v.isPOJO(j) && null != j.$not ? t3(e3, j, o2, O) : E[J] = $.castForQuery(J, j, O));
                else if ("$not" === J) {
                  if (j && $) {
                    if ((S = Object.keys(j)).length && y(S[0])) for (var K in j) j[K] = $.castForQuery(K, j[K], O);
                    else E[J] = $.castForQuery(J, j, O);
                    continue;
                  }
                } else E[J] = $.castForQuery(J, j, O);
                else r3[P] = $.castForQuery(null, E, O);
                else if (Array.isArray(E) && -1 === ["Buffer", "Array"].indexOf($.instance) && !o2.sanitizeFilter) {
                  var H, W = [], G = n(E);
                  try {
                    for (G.s(); !(H = G.n()).done; ) {
                      var Q = H.value;
                      W.push($.castForQuery(null, Q, O));
                    }
                  } catch (t4) {
                    G.e(t4);
                  } finally {
                    G.f();
                  }
                  r3[P] = { $in: W };
                } else r3[P] = $.castForQuery(null, E, O);
              } else {
                for (var Y = P.split("."), Z = Y.length, X = void 0, tt = void 0, et = void 0; Z-- && (X = Y.slice(0, Z).join("."), !($ = e3.path(X))); ) ;
                if ($) {
                  if ($.caster && $.caster.schema) {
                    (et = {})[tt = Y.slice(Z).join(".")] = E;
                    var rt = t3($.caster.schema, et, o2, O)[tt];
                    void 0 === rt ? delete r3[P] : r3[P] = rt;
                  } else r3[P] = E;
                  continue;
                }
                if (b(E)) {
                  var nt = "";
                  if (E.$near ? nt = "$near" : E.$nearSphere ? nt = "$nearSphere" : E.$within ? nt = "$within" : E.$geoIntersects ? nt = "$geoIntersects" : E.$geoWithin && (nt = "$geoWithin"), nt) {
                    var ot = new u.Number("__QueryCasting__"), it = E[nt];
                    if (null != E.$maxDistance && (E.$maxDistance = ot.castForQuery(null, E.$maxDistance, O)), null != E.$minDistance && (E.$minDistance = ot.castForQuery(null, E.$minDistance, O)), "$within" === nt) {
                      var st = it.$center || it.$centerSphere || it.$box || it.$polygon;
                      if (!st) throw new Error("Bad $within parameter: " + JSON.stringify(E));
                      it = st;
                    } else if ("$near" === nt && "string" == typeof it.type && Array.isArray(it.coordinates)) it = it.coordinates;
                    else if (("$near" === nt || "$nearSphere" === nt || "$geoIntersects" === nt) && it.$geometry && "string" == typeof it.$geometry.type && Array.isArray(it.$geometry.coordinates)) null != it.$maxDistance && (it.$maxDistance = ot.castForQuery(null, it.$maxDistance, O)), null != it.$minDistance && (it.$minDistance = ot.castForQuery(null, it.$minDistance, O)), m(it.$geometry) && (it.$geometry = it.$geometry.toObject({ transform: false, virtuals: false })), it = it.$geometry.coordinates;
                    else if ("$geoWithin" === nt) if (it.$geometry) {
                      m(it.$geometry) && (it.$geometry = it.$geometry.toObject({ virtuals: false }));
                      var at = it.$geometry.type;
                      if (-1 === g.indexOf(at)) throw new Error('Invalid geoJSON type for $geoWithin "' + at + '", must be "Polygon" or "MultiPolygon"');
                      it = it.$geometry.coordinates;
                    } else it = it.$box || it.$polygon || it.$center || it.$centerSphere, m(it) && (it = it.toObject({ virtuals: false }));
                    _(it, ot, O);
                    continue;
                  }
                }
                if (e3.nested[P]) continue;
                var ut = "strict" in o2 ? o2.strict : e3.options.strict, ct = w(o2, e3._userProvidedOptions, e3.options, O);
                if (o2.upsert && ut) {
                  if ("throw" === ut) throw new a(P);
                  throw new a(P, 'Path "' + P + '" is not in schema, strict mode is `true`, and upsert is `true`.');
                }
                if ("throw" === ct) throw new a(P, 'Path "' + P + `" is not in schema and strictQuery is 'throw'.`);
                ct && delete r3[P];
              }
            } else E = l(E, P), r3[P] = E;
          }
          return r3;
        }, "t");
      }, 8063: (t2, e2, r2) => {
        "use strict";
        function n(t3) {
          return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
            return typeof t4;
          } : function(t4) {
            return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
          }, n(t3);
        }
        __name(n, "n");
        function o() {
          try {
            var t3 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch (t4) {
          }
          return (o = /* @__PURE__ */ __name(function() {
            return !!t3;
          }, "o"))();
        }
        __name(o, "o");
        function i(t3) {
          return i = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t4) {
            return t4.__proto__ || Object.getPrototypeOf(t4);
          }, i(t3);
        }
        __name(i, "i");
        function s(t3, e3) {
          return s = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t4, e4) {
            return t4.__proto__ = e4, t4;
          }, s(t3, e3);
        }
        __name(s, "s");
        var a = function(t3) {
          function e3(t4) {
            return function(t5, e4) {
              if (!(t5 instanceof e4)) throw new TypeError("Cannot call a class as a function");
            }(this, e3), function(t5, e4, r4) {
              return e4 = i(e4), function(t6, e5) {
                if (e5 && ("object" == n(e5) || "function" == typeof e5)) return e5;
                if (void 0 !== e5) throw new TypeError("Derived constructors may only return object or undefined");
                return function(t7) {
                  if (void 0 === t7) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                  return t7;
                }(t6);
              }(t5, o() ? Reflect.construct(e4, r4 || [], i(t5).constructor) : e4.apply(t5, r4));
            }(this, e3, [`Schema hasn't been registered for model "` + t4 + '".\nUse mongoose.model(name, schema)']);
          }
          __name(e3, "e");
          return function(t4, e4) {
            if ("function" != typeof e4 && null !== e4) throw new TypeError("Super expression must either be null or a function");
            t4.prototype = Object.create(e4 && e4.prototype, { constructor: { value: t4, writable: true, configurable: true } }), Object.defineProperty(t4, "prototype", { writable: false }), e4 && s(t4, e4);
          }(e3, t3), r3 = e3, Object.defineProperty(r3, "prototype", { writable: false }), r3;
          var r3;
        }(r2(8213));
        Object.defineProperty(a.prototype, "name", { value: "MissingSchemaError" }), t2.exports = a;
      }, 8093: (t2) => {
        "use strict";
        t2.exports = Object;
      }, 8133: (t2, e2, r2) => {
        "use strict";
        var n = r2(8995);
        t2.exports = function(t3) {
          var e3, r3;
          t3.$immutable ? (t3.$immutableSetter = (e3 = t3.path, r3 = t3.options.immutable, function(t4, o, i, s) {
            if (null == this || null == this.$__) return t4;
            if (this.isNew) return t4;
            if (s && s.overwriteImmutable) return t4;
            if (!("function" == typeof r3 ? r3.call(this, this) : r3)) return t4;
            var a = null != this.$__.priorDoc ? this.$__.priorDoc.$__getValue(e3) : this.$__getValue(e3);
            if ("throw" === this.$__.strictMode && t4 !== a) throw new n(e3, "Path `" + e3 + "` is immutable and strict mode is set to throw.", true);
            return a;
          }), t3.set(t3.$immutableSetter)) : t3.$immutableSetter && (t3.setters = t3.setters.filter(function(e4) {
            return e4 !== t3.$immutableSetter;
          }), delete t3.$immutableSetter);
        };
      }, 8188: (t2) => {
        "use strict";
        t2.exports = URIError;
      }, 8213: (t2) => {
        "use strict";
        function e2(t3) {
          return e2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
            return typeof t4;
          } : function(t4) {
            return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
          }, e2(t3);
        }
        __name(e2, "e");
        function r2(t3) {
          var e3 = "function" == typeof Map ? /* @__PURE__ */ new Map() : void 0;
          return r2 = /* @__PURE__ */ __name(function(t4) {
            if (null === t4 || !function(t5) {
              try {
                return -1 !== Function.toString.call(t5).indexOf("[native code]");
              } catch (e4) {
                return "function" == typeof t5;
              }
            }(t4)) return t4;
            if ("function" != typeof t4) throw new TypeError("Super expression must either be null or a function");
            if (void 0 !== e3) {
              if (e3.has(t4)) return e3.get(t4);
              e3.set(t4, r3);
            }
            function r3() {
              return function(t5, e4, r4) {
                if (n()) return Reflect.construct.apply(null, arguments);
                var i2 = [null];
                i2.push.apply(i2, e4);
                var s2 = new (t5.bind.apply(t5, i2))();
                return r4 && o(s2, r4.prototype), s2;
              }(t4, arguments, i(this).constructor);
            }
            __name(r3, "r");
            return r3.prototype = Object.create(t4.prototype, { constructor: { value: r3, enumerable: false, writable: true, configurable: true } }), o(r3, t4);
          }, "r"), r2(t3);
        }
        __name(r2, "r");
        function n() {
          try {
            var t3 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch (t4) {
          }
          return (n = /* @__PURE__ */ __name(function() {
            return !!t3;
          }, "n"))();
        }
        __name(n, "n");
        function o(t3, e3) {
          return o = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t4, e4) {
            return t4.__proto__ = e4, t4;
          }, o(t3, e3);
        }
        __name(o, "o");
        function i(t3) {
          return i = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t4) {
            return t4.__proto__ || Object.getPrototypeOf(t4);
          }, i(t3);
        }
        __name(i, "i");
        var s = function(t3) {
          function r3() {
            return function(t4, e3) {
              if (!(t4 instanceof e3)) throw new TypeError("Cannot call a class as a function");
            }(this, r3), function(t4, r4, o2) {
              return r4 = i(r4), function(t5, r5) {
                if (r5 && ("object" == e2(r5) || "function" == typeof r5)) return r5;
                if (void 0 !== r5) throw new TypeError("Derived constructors may only return object or undefined");
                return function(t6) {
                  if (void 0 === t6) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                  return t6;
                }(t5);
              }(t4, n() ? Reflect.construct(r4, o2 || [], i(t4).constructor) : r4.apply(t4, o2));
            }(this, r3, arguments);
          }
          __name(r3, "r");
          return function(t4, e3) {
            if ("function" != typeof e3 && null !== e3) throw new TypeError("Super expression must either be null or a function");
            t4.prototype = Object.create(e3 && e3.prototype, { constructor: { value: t4, writable: true, configurable: true } }), Object.defineProperty(t4, "prototype", { writable: false }), e3 && o(t4, e3);
          }(r3, t3), s2 = r3, Object.defineProperty(s2, "prototype", { writable: false }), s2;
          var s2;
        }(r2(Error));
        Object.defineProperty(s.prototype, "name", { value: "MongooseError" }), t2.exports = s;
      }, 8235: (t2, e2, r2) => {
        "use strict";
        var n = r2(8213), o = r2(6426), i = r2(5098), s = r2(7910);
        function a(t3, e3) {
          if (this.$parentSchemaType = e3 && e3.$parentSchemaType, !this.$parentSchemaType) throw new n("Cannot create DocumentArrayElement schematype without a parent");
          delete e3.$parentSchemaType, o.call(this, t3, e3, "DocumentArrayElement"), this.$isMongooseDocumentArrayElement = true;
        }
        __name(a, "a");
        a.schemaName = "DocumentArrayElement", a.defaultOptions = {}, a.prototype = Object.create(o.prototype), a.prototype.constructor = a, a.prototype.cast = function() {
          var t3;
          return (t3 = this.$parentSchemaType).cast.apply(t3, arguments)[0];
        }, a.prototype.doValidate = function(t3, e3, r3, n2) {
          var o2 = s(this.caster, t3);
          return !t3 || t3 instanceof o2 || (t3 = new o2(t3, r3, null, null, n2 && null != n2.index ? n2.index : null)), i.prototype.doValidate.call(this, t3, e3, r3, n2);
        }, a.prototype.clone = function() {
          this.options.$parentSchemaType = this.$parentSchemaType;
          var t3 = o.prototype.clone.apply(this, arguments);
          return delete this.options.$parentSchemaType, t3.caster = this.caster, t3.schema = this.schema, t3;
        }, t2.exports = a;
      }, 8250: (t2, e2, r2) => {
        "use strict";
        var n = r2(5832).hp, o = r2(6365), i = /[0-9a-f]{8}-[0-9a-f]{4}-[0-9][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}/i, s = o.Binary;
        function a(t3) {
          "string" != typeof t3 && (t3 = "");
          var e3, r3 = null != (e3 = t3.replace(/[{}-]/g, "")) && n.from(e3, "hex"), i2 = new o(r3);
          return i2._subtype = 4, i2;
        }
        __name(a, "a");
        t2.exports = function(t3) {
          if (null == t3) return t3;
          function e3(t4) {
            var e4 = new o(t4);
            return e4._subtype = 4, e4;
          }
          __name(e3, "e");
          if ("string" == typeof t3) {
            if (i.test(t3)) return a(t3);
            throw new Error('"'.concat(t3, '" is not a valid UUID string'));
          }
          if (n.isBuffer(t3)) return e3(t3);
          if (t3 instanceof s) return e3(t3.value(true));
          if (t3.toString && t3.toString !== Object.prototype.toString && i.test(t3.toString())) return a(t3.toString());
          throw new Error('"'.concat(t3, '" cannot be casted to a UUID'));
        }, t2.exports.UUID_FORMAT = i;
      }, 8260: (t2) => {
        "use strict";
        t2.exports = function(t3) {
          if (null != t3 && "function" == typeof t3.constructor) return t3.constructor.name;
        };
      }, 8285: (t2, e2, r2) => {
        "use strict";
        var n = r2(2400), o = r2(2580), i = false;
        t2.exports = function() {
          return i ? o : n;
        }, t2.exports.setBrowser = function(t3) {
          i = t3;
        };
      }, 8297: (t2) => {
        "use strict";
        function e2(t3, e3) {
          var r3 = "undefined" != typeof Symbol && t3[Symbol.iterator] || t3["@@iterator"];
          if (!r3) {
            if (Array.isArray(t3) || (r3 = n(t3)) || e3 && t3 && "number" == typeof t3.length) {
              r3 && (t3 = r3);
              var o2 = 0, i2 = /* @__PURE__ */ __name(function() {
              }, "i");
              return { s: i2, n: /* @__PURE__ */ __name(function() {
                return o2 >= t3.length ? { done: true } : { done: false, value: t3[o2++] };
              }, "n"), e: /* @__PURE__ */ __name(function(t4) {
                throw t4;
              }, "e"), f: i2 };
            }
            throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }
          var s2, a2 = true, u2 = false;
          return { s: /* @__PURE__ */ __name(function() {
            r3 = r3.call(t3);
          }, "s"), n: /* @__PURE__ */ __name(function() {
            var t4 = r3.next();
            return a2 = t4.done, t4;
          }, "n"), e: /* @__PURE__ */ __name(function(t4) {
            u2 = true, s2 = t4;
          }, "e"), f: /* @__PURE__ */ __name(function() {
            try {
              a2 || null == r3.return || r3.return();
            } finally {
              if (u2) throw s2;
            }
          }, "f") };
        }
        __name(e2, "e");
        function r2(t3) {
          return r2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
            return typeof t4;
          } : function(t4) {
            return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
          }, r2(t3);
        }
        __name(r2, "r");
        function n(t3, e3) {
          if (t3) {
            if ("string" == typeof t3) return o(t3, e3);
            var r3 = {}.toString.call(t3).slice(8, -1);
            return "Object" === r3 && t3.constructor && (r3 = t3.constructor.name), "Map" === r3 || "Set" === r3 ? Array.from(t3) : "Arguments" === r3 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r3) ? o(t3, e3) : void 0;
          }
        }
        __name(n, "n");
        function o(t3, e3) {
          (null == e3 || e3 > t3.length) && (e3 = t3.length);
          for (var r3 = 0, n2 = Array(e3); r3 < e3; r3++) n2[r3] = t3[r3];
          return n2;
        }
        __name(o, "o");
        function i(t3, e3, r3) {
          if (a()) return Reflect.construct.apply(null, arguments);
          var n2 = [null];
          n2.push.apply(n2, e3);
          var o2 = new (t3.bind.apply(t3, n2))();
          return r3 && s(o2, r3.prototype), o2;
        }
        __name(i, "i");
        function s(t3, e3) {
          return s = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t4, e4) {
            return t4.__proto__ = e4, t4;
          }, s(t3, e3);
        }
        __name(s, "s");
        function a() {
          try {
            var t3 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch (t4) {
          }
          return (a = /* @__PURE__ */ __name(function() {
            return !!t3;
          }, "a"))();
        }
        __name(a, "a");
        function u() {
          this._pres = /* @__PURE__ */ new Map(), this._posts = /* @__PURE__ */ new Map();
        }
        __name(u, "u");
        function c(t3, e3, r3, n2, o2, i2, s2) {
          return i2.useErrorHandlers ? t3.execPost(r3, n2, o2, { error: e3 }, function(t4) {
            return "function" == typeof s2 && s2(t4);
          }) : "function" == typeof s2 && s2(e3);
        }
        __name(c, "c");
        function l(t3, e3, r3, n2) {
          var o2;
          try {
            o2 = t3.apply(e3, r3);
          } catch (t4) {
            return n2(t4);
          }
          f(o2) && o2.then(function() {
            return n2();
          }, function(t4) {
            return n2(t4);
          });
        }
        __name(l, "l");
        function f(t3) {
          return "object" === r2(t3) && null !== t3 && "function" == typeof t3.then;
        }
        __name(f, "f");
        function p(t3) {
          var e3 = false, r3 = this;
          return function() {
            var n2 = arguments;
            if (!e3) return e3 = true, h(function() {
              return t3.apply(r3, n2);
            });
          };
        }
        __name(p, "p");
        u.skipWrappedFunction = function() {
          if (!(this instanceof u.skipWrappedFunction)) return i(u.skipWrappedFunction, Array.prototype.slice.call(arguments));
          this.args = Array.prototype.slice.call(arguments);
        }, u.overwriteResult = function() {
          if (!(this instanceof u.overwriteResult)) return i(u.overwriteResult, Array.prototype.slice.call(arguments));
          this.args = Array.prototype.slice.call(arguments);
        }, u.prototype.execPre = function(t3, e3, r3, n2) {
          3 === arguments.length && (n2 = r3, r3 = []);
          var o2 = this._pres.get(t3) || [], i2 = o2.length, s2 = o2.numAsync || 0, a2 = 0, c2 = s2, y2 = false, d = r3, b = null;
          if (!i2) return h(function() {
            n2(null);
          });
          function m() {
            if (!(a2 >= i2)) {
              var t4 = o2[a2];
              if (t4.isAsync) {
                var r4 = [p(v), p(function(t5) {
                  if (t5) {
                    if (y2) return;
                    if (!(t5 instanceof u.skipWrappedFunction)) return y2 = true, n2(t5);
                    b = t5;
                  }
                  if (0 === --c2 && a2 >= i2) return n2(b);
                })];
                l(t4.fn, e3, r4, r4[0]);
              } else if (t4.fn.length > 0) {
                for (var s3 = [p(v)], g = arguments.length >= 2 ? arguments : [null].concat(d), _ = 1; _ < g.length; ++_) _ === g.length - 1 && "function" == typeof g[_] || s3.push(g[_]);
                l(t4.fn, e3, s3, s3[0]);
              } else {
                var w = null;
                try {
                  w = t4.fn.call(e3);
                } catch (t5) {
                  if (null != t5) return n2(t5);
                }
                if (f(w)) w.then(function() {
                  return v();
                }, function(t5) {
                  return v(t5);
                });
                else {
                  if (++a2 >= i2) return c2 > 0 ? void 0 : h(function() {
                    n2(b);
                  });
                  m();
                }
              }
            }
          }
          __name(m, "m");
          function v(t4) {
            if (t4) {
              if (y2) return;
              if (!(t4 instanceof u.skipWrappedFunction)) return y2 = true, n2(t4);
              b = t4;
            }
            if (++a2 >= i2) return c2 > 0 ? void 0 : n2(b);
            m.apply(e3, arguments);
          }
          __name(v, "v");
          m.apply(null, [null].concat(r3));
        }, u.prototype.execPreSync = function(t3, e3, r3) {
          for (var n2 = this._pres.get(t3) || [], o2 = n2.length, i2 = 0; i2 < o2; ++i2) n2[i2].fn.apply(e3, r3 || []);
        }, u.prototype.execPost = function(t3, e3, r3, n2, o2) {
          arguments.length < 5 && (o2 = n2, n2 = null);
          var i2 = this._posts.get(t3) || [], s2 = i2.length, a2 = 0, c2 = null;
          if (n2 && n2.error && (c2 = n2.error), !s2) return h(function() {
            o2.apply(null, [c2].concat(r3));
          });
          !(/* @__PURE__ */ __name(function t4() {
            for (var n3 = i2[a2].fn, h2 = 0, d = r3.length, b = [], m = 0; m < d; ++m) h2 += r3[m] && r3[m]._kareemIgnore ? 0 : 1, r3[m] && r3[m]._kareemIgnore || b.push(r3[m]);
            if (c2) if (y(i2[a2], h2)) {
              var v = p(function(e4) {
                if (e4) {
                  if (e4 instanceof u.overwriteResult) return r3 = e4.args, ++a2 >= s2 ? o2.call(null, c2) : t4();
                  c2 = e4;
                }
                if (++a2 >= s2) return o2.call(null, c2);
                t4();
              });
              l(n3, e3, [c2].concat(b).concat([v]), v);
            } else {
              if (++a2 >= s2) return o2.call(null, c2);
              t4();
            }
            else {
              var g = p(function(e4) {
                return e4 ? e4 instanceof u.overwriteResult ? (r3 = e4.args, ++a2 >= s2 ? o2.apply(null, [null].concat(r3)) : t4()) : (c2 = e4, t4()) : ++a2 >= s2 ? o2.apply(null, [null].concat(r3)) : void t4();
              });
              if (y(i2[a2], h2)) return ++a2 >= s2 ? o2.apply(null, [null].concat(r3)) : t4();
              if (n3.length === h2 + 1) l(n3, e3, b.concat([g]), g);
              else {
                var _, w;
                try {
                  w = n3.apply(e3, b);
                } catch (t5) {
                  _ = t5, c2 = t5;
                }
                if (f(w)) return w.then(function(t5) {
                  g(t5 instanceof u.overwriteResult ? t5 : null);
                }, function(t5) {
                  return g(t5);
                });
                if (w instanceof u.overwriteResult && (r3 = w.args), ++a2 >= s2) return o2.apply(null, [_].concat(r3));
                t4();
              }
            }
          }, "t"))();
        }, u.prototype.execPostSync = function(t3, e3, r3) {
          for (var n2 = this._posts.get(t3) || [], o2 = n2.length, i2 = 0; i2 < o2; ++i2) {
            var s2 = n2[i2].fn.apply(e3, r3 || []);
            s2 instanceof u.overwriteResult && (r3 = s2.args);
          }
          return r3;
        }, u.prototype.createWrapperSync = function(t3, e3) {
          var r3 = this;
          return function() {
            r3.execPreSync(t3, this, arguments);
            var n2 = e3.apply(this, arguments);
            return r3.execPostSync(t3, this, [n2])[0];
          };
        }, u.prototype.wrap = function(t3, e3, r3, i2, s2) {
          var a2 = i2.length > 0 ? i2[i2.length - 1] : null, l2 = Array.from(i2);
          "function" == typeof a2 && l2.pop();
          var p2 = this, h2 = (s2 = s2 || {}).checkForPromise;
          this.execPre(t3, r3, i2, function(i3) {
            if (i3 && !(i3 instanceof u.skipWrappedFunction)) {
              for (var y2 = s2.numCallbackParams || 0, d = s2.contextParameter ? [r3] : [], b = d.length; b < y2; ++b) d.push(null);
              return c(p2, i3, t3, r3, d, s2, a2);
            }
            var m, v, g = e3.length;
            if (i3 instanceof u.skipWrappedFunction) return m = i3.args[0], _.apply(void 0, [null].concat(function(t4) {
              if (Array.isArray(t4)) return o(t4);
            }(v = i3.args) || function(t4) {
              if ("undefined" != typeof Symbol && null != t4[Symbol.iterator] || null != t4["@@iterator"]) return Array.from(t4);
            }(v) || n(v) || function() {
              throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
            }()));
            try {
              m = e3.apply(r3, l2.concat(_));
            } catch (t4) {
              return _(t4);
            }
            if (h2) {
              if (f(m)) return m.then(function(t4) {
                return _(null, t4);
              }, function(t4) {
                return _(t4);
              });
              if (g < l2.length + 1) return _(null, m);
            }
            function _() {
              var e4 = Array.from(arguments);
              if (e4.shift(), s2.nullResultByDefault && 0 === e4.length && e4.push(null), arguments[0]) return c(p2, arguments[0], t3, r3, e4, s2, a2);
              p2.execPost(t3, r3, e4, function() {
                null !== a2 && (arguments[0] ? a2(arguments[0]) : a2.apply(r3, arguments));
              });
            }
            __name(_, "_");
          });
        }, u.prototype.filter = function(t3) {
          for (var e3 = this, r3 = this.clone(), n2 = Array.from(r3._pres.keys()), o2 = function() {
            var n3 = s2[i2], o3 = e3._pres.get(n3).map(function(t4) {
              return Object.assign({}, t4, { name: n3 });
            }).filter(t3);
            if (0 === o3.length) return r3._pres.delete(n3), 1;
            o3.numAsync = o3.filter(function(t4) {
              return t4.isAsync;
            }).length, r3._pres.set(n3, o3);
          }, i2 = 0, s2 = n2; i2 < s2.length; i2++) o2();
          for (var a2 = Array.from(r3._posts.keys()), u2 = function() {
            var n3 = l2[c2], o3 = e3._posts.get(n3).map(function(t4) {
              return Object.assign({}, t4, { name: n3 });
            }).filter(t3);
            if (0 === o3.length) return r3._posts.delete(n3), 1;
            r3._posts.set(n3, o3);
          }, c2 = 0, l2 = a2; c2 < l2.length; c2++) u2();
          return r3;
        }, u.prototype.hasHooks = function(t3) {
          return this._pres.has(t3) || this._posts.has(t3);
        }, u.prototype.createWrapper = function(t3, e3, r3, n2) {
          var o2 = this;
          return this.hasHooks(t3) ? function() {
            var i2 = r3 || this;
            o2.wrap(t3, e3, i2, Array.from(arguments), n2);
          } : function() {
            var t4 = arguments, r4 = this;
            h(function() {
              return e3.apply(r4, t4);
            });
          };
        }, u.prototype.pre = function(t3, e3, n2, o2, i2) {
          var s2 = {};
          "object" === r2(e3) && null !== e3 ? e3 = (s2 = e3).isAsync : "boolean" != typeof arguments[1] && (n2 = e3, e3 = false);
          var a2 = this._pres.get(t3) || [];
          if (this._pres.set(t3, a2), e3 && (a2.numAsync = a2.numAsync || 0, ++a2.numAsync), "function" != typeof n2) throw new Error('pre() requires a function, got "' + r2(n2) + '"');
          return i2 ? a2.unshift(Object.assign({}, s2, { fn: n2, isAsync: e3 })) : a2.push(Object.assign({}, s2, { fn: n2, isAsync: e3 })), this;
        }, u.prototype.post = function(t3, e3, n2, o2) {
          var i2 = this._posts.get(t3) || [];
          if ("function" == typeof e3 && (o2 = !!n2, n2 = e3, e3 = {}), "function" != typeof n2) throw new Error('post() requires a function, got "' + r2(n2) + '"');
          return o2 ? i2.unshift(Object.assign({}, e3, { fn: n2 })) : i2.push(Object.assign({}, e3, { fn: n2 })), this._posts.set(t3, i2), this;
        }, u.prototype.clone = function() {
          var t3, r3 = new u(), n2 = e2(this._pres.keys());
          try {
            for (n2.s(); !(t3 = n2.n()).done; ) {
              var o2 = t3.value, i2 = this._pres.get(o2).slice();
              i2.numAsync = this._pres.get(o2).numAsync, r3._pres.set(o2, i2);
            }
          } catch (t4) {
            n2.e(t4);
          } finally {
            n2.f();
          }
          var s2, a2 = e2(this._posts.keys());
          try {
            for (a2.s(); !(s2 = a2.n()).done; ) {
              var c2 = s2.value;
              r3._posts.set(c2, this._posts.get(c2).slice());
            }
          } catch (t4) {
            a2.e(t4);
          } finally {
            a2.f();
          }
          return r3;
        }, u.prototype.merge = function(t3, r3) {
          var n2, o2 = (r3 = 1 === arguments.length || r3) ? this.clone() : this, i2 = e2(t3._pres.keys());
          try {
            var s2 = /* @__PURE__ */ __name(function() {
              var e3 = n2.value, r4 = o2._pres.get(e3) || [], i3 = t3._pres.get(e3).filter(function(t4) {
                return -1 === r4.map(function(t5) {
                  return t5.fn;
                }).indexOf(t4.fn);
              }), s3 = r4.concat(i3);
              s3.numAsync = r4.numAsync || 0, s3.numAsync += i3.filter(function(t4) {
                return t4.isAsync;
              }).length, o2._pres.set(e3, s3);
            }, "s");
            for (i2.s(); !(n2 = i2.n()).done; ) s2();
          } catch (t4) {
            i2.e(t4);
          } finally {
            i2.f();
          }
          var a2, u2 = e2(t3._posts.keys());
          try {
            var c2 = /* @__PURE__ */ __name(function() {
              var e3 = a2.value, r4 = o2._posts.get(e3) || [], n3 = t3._posts.get(e3).filter(function(t4) {
                return -1 === r4.indexOf(t4);
              });
              o2._posts.set(e3, r4.concat(n3));
            }, "c");
            for (u2.s(); !(a2 = u2.n()).done; ) c2();
          } catch (t4) {
            u2.e(t4);
          } finally {
            u2.f();
          }
          return o2;
        };
        var h = "object" === r2({ env: {} }) && null !== { env: {} } && { env: {} }.nextTick || function(t3) {
          setTimeout(t3, 0);
        };
        function y(t3, e3) {
          return !!t3.errorHandler || t3.fn.length === e3 + 2;
        }
        __name(y, "y");
        t2.exports = u;
      }, 8435: (t2) => {
        "use strict";
        t2.exports = Math.min;
      }, 8442: (t2, e2, r2) => {
        "use strict";
        var n = r2(1898);
        t2.exports = function(t3) {
          for (var e3 = 0, r3 = Object.values(n); e3 < r3.length; e3++) (0, r3[e3])(t3, { deduplicate: true });
          t3.plugins = Object.values(n).map(function(t4) {
            return { fn: t4, opts: { deduplicate: true } };
          }).concat(t3.plugins);
        };
      }, 8499: (t2, e2, r2) => {
        "use strict";
        var n = r2(8953);
        t2.exports = function(t3) {
          var e3 = null != this ? this.path : null;
          return n(t3, e3);
        };
      }, 8517: (t2, e2, r2) => {
        "use strict";
        function n(t3) {
          return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
            return typeof t4;
          } : function(t4) {
            return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
          }, n(t3);
        }
        __name(n, "n");
        function o() {
          try {
            var t3 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch (t4) {
          }
          return (o = /* @__PURE__ */ __name(function() {
            return !!t3;
          }, "o"))();
        }
        __name(o, "o");
        function i(t3) {
          return i = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t4) {
            return t4.__proto__ || Object.getPrototypeOf(t4);
          }, i(t3);
        }
        __name(i, "i");
        function s(t3, e3) {
          return s = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t4, e4) {
            return t4.__proto__ = e4, t4;
          }, s(t3, e3);
        }
        __name(s, "s");
        var a = function(t3) {
          function e3(t4, r4, s2) {
            var a2, u, c;
            !function(t5, e4) {
              if (!(t5 instanceof e4)) throw new TypeError("Cannot call a class as a function");
            }(this, e3);
            var l = null !== (a2 = null == s2 ? void 0 : s2.matchedCount) && void 0 !== a2 ? a2 : 0, f = null !== (u = null == s2 ? void 0 : s2.insertedCount) && void 0 !== u ? u : 0, p = r4.map(function(t5) {
              return t5._id;
            }).join(", ");
            p.length > 100 && (p = p.slice(0, 100) + "...");
            var h = r4.length - l - f;
            return (c = function(t5, e4, r5) {
              return e4 = i(e4), function(t6, e5) {
                if (e5 && ("object" == n(e5) || "function" == typeof e5)) return e5;
                if (void 0 !== e5) throw new TypeError("Derived constructors may only return object or undefined");
                return function(t7) {
                  if (void 0 === t7) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                  return t7;
                }(t6);
              }(t5, o() ? Reflect.construct(e4, r5 || [], i(t5).constructor) : e4.apply(t5, r5));
            }(this, e3, ["".concat(t4, ".bulkSave() was not able to update ").concat(h, " of the given documents due to incorrect version or optimistic concurrency, document ids: ").concat(p)])).modelName = t4, c.documents = r4, c.bulkWriteResult = s2, c.numDocumentsNotUpdated = h, c;
          }
          __name(e3, "e");
          return function(t4, e4) {
            if ("function" != typeof e4 && null !== e4) throw new TypeError("Super expression must either be null or a function");
            t4.prototype = Object.create(e4 && e4.prototype, { constructor: { value: t4, writable: true, configurable: true } }), Object.defineProperty(t4, "prototype", { writable: false }), e4 && s(t4, e4);
          }(e3, t3), r3 = e3, Object.defineProperty(r3, "prototype", { writable: false }), r3;
          var r3;
        }(r2(8213));
        Object.defineProperty(a.prototype, "name", { value: "MongooseBulkSaveIncompleteError" }), t2.exports = a;
      }, 8533: (t2, e2, r2) => {
        "use strict";
        var n = r2(5832).hp;
        function o(t3) {
          return o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
            return typeof t4;
          } : function(t4) {
            return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
          }, o(t3);
        }
        __name(o, "o");
        function i() {
          try {
            var t3 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch (t4) {
          }
          return (i = /* @__PURE__ */ __name(function() {
            return !!t3;
          }, "i"))();
        }
        __name(i, "i");
        function s(t3) {
          return s = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t4) {
            return t4.__proto__ || Object.getPrototypeOf(t4);
          }, s(t3);
        }
        __name(s, "s");
        function a(t3, e3) {
          return a = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t4, e4) {
            return t4.__proto__ = e4, t4;
          }, a(t3, e3);
        }
        __name(a, "a");
        r2(7591).set(r2(4026));
        var u = r2(8285);
        u.setBrowser(true), e2.Error = r2(3672), e2.Schema = r2(7058), e2.Types = r2(9600), e2.VirtualType = r2(622), e2.SchemaType = r2(6426), e2.SchemaTypeOptions = r2(8879), e2.utils = r2(8768), e2.Document = u(), e2.model = function(t3, r3) {
          var n2 = function(t4) {
            function e3(t5, n4) {
              return function(t6, e4) {
                if (!(t6 instanceof e4)) throw new TypeError("Cannot call a class as a function");
              }(this, e3), function(t6, e4, r4) {
                return e4 = s(e4), function(t7, e5) {
                  if (e5 && ("object" == o(e5) || "function" == typeof e5)) return e5;
                  if (void 0 !== e5) throw new TypeError("Derived constructors may only return object or undefined");
                  return function(t8) {
                    if (void 0 === t8) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return t8;
                  }(t7);
                }(t6, i() ? Reflect.construct(e4, r4 || [], s(t6).constructor) : e4.apply(t6, r4));
              }(this, e3, [t5, r3, n4]);
            }
            __name(e3, "e");
            return function(t5, e4) {
              if ("function" != typeof e4 && null !== e4) throw new TypeError("Super expression must either be null or a function");
              t5.prototype = Object.create(e4 && e4.prototype, { constructor: { value: t5, writable: true, configurable: true } }), Object.defineProperty(t5, "prototype", { writable: false }), e4 && a(t5, e4);
            }(e3, t4), n3 = e3, Object.defineProperty(n3, "prototype", { writable: false }), n3;
            var n3;
          }(e2.Document);
          return n2.modelName = t3, n2;
        }, "undefined" != typeof window && (window.mongoose = t2.exports, window.Buffer = n);
      }, 8633: (t2) => {
        "use strict";
        t2.exports = Math.pow;
      }, 8728: (t2, e2, r2) => {
        "use strict";
        function n(t3, e3) {
          var r3 = Object.keys(t3);
          if (Object.getOwnPropertySymbols) {
            var n2 = Object.getOwnPropertySymbols(t3);
            e3 && (n2 = n2.filter(function(e4) {
              return Object.getOwnPropertyDescriptor(t3, e4).enumerable;
            })), r3.push.apply(r3, n2);
          }
          return r3;
        }
        __name(n, "n");
        function o(t3) {
          for (var e3 = 1; e3 < arguments.length; e3++) {
            var r3 = null != arguments[e3] ? arguments[e3] : {};
            e3 % 2 ? n(Object(r3), true).forEach(function(e4) {
              i(t3, e4, r3[e4]);
            }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t3, Object.getOwnPropertyDescriptors(r3)) : n(Object(r3)).forEach(function(e4) {
              Object.defineProperty(t3, e4, Object.getOwnPropertyDescriptor(r3, e4));
            });
          }
          return t3;
        }
        __name(o, "o");
        function i(t3, e3, r3) {
          return (e3 = function(t4) {
            var e4 = function(t5) {
              if ("object" != s(t5) || !t5) return t5;
              var e5 = t5[Symbol.toPrimitive];
              if (void 0 !== e5) {
                var r4 = e5.call(t5, "string");
                if ("object" != s(r4)) return r4;
                throw new TypeError("@@toPrimitive must return a primitive value.");
              }
              return String(t5);
            }(t4);
            return "symbol" == s(e4) ? e4 : e4 + "";
          }(e3)) in t3 ? Object.defineProperty(t3, e3, { value: r3, enumerable: true, configurable: true, writable: true }) : t3[e3] = r3, t3;
        }
        __name(i, "i");
        function s(t3) {
          return s = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
            return typeof t4;
          } : function(t4) {
            return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
          }, s(t3);
        }
        __name(s, "s");
        function a(t3, e3) {
          (null == e3 || e3 > t3.length) && (e3 = t3.length);
          for (var r3 = 0, n2 = Array(e3); r3 < e3; r3++) n2[r3] = t3[r3];
          return n2;
        }
        __name(a, "a");
        var u = r2(6426), c = r2(3672), l = r2(9528), f = r2(1244), p = r2(4327), h = r2(8768), y = r2(3305), d = u.CastError;
        function b(t3, e3) {
          this.enumValues = [], this.regExp = null, u.call(this, t3, e3, "String");
        }
        __name(b, "b");
        function m(t3, e3) {
          return this.castForQuery(null, t3, e3);
        }
        __name(m, "m");
        function v(t3) {
          return null == t3 ? this._castNullish(t3) : this.cast(t3, this);
        }
        __name(v, "v");
        b.schemaName = "String", b.defaultOptions = {}, b.prototype = Object.create(u.prototype), b.prototype.constructor = b, Object.defineProperty(b.prototype, "OptionsConstructor", { configurable: false, enumerable: false, writable: false, value: l }), b._cast = f, b.cast = function(t3) {
          return 0 === arguments.length || (false === t3 && (t3 = this._defaultCaster), this._cast = t3), this._cast;
        }, b._defaultCaster = function(t3) {
          if (null != t3 && "string" != typeof t3) throw new Error();
          return t3;
        }, b.get = u.get, b.set = u.set, b.setters = [], b._checkRequired = function(t3) {
          return (t3 instanceof String || "string" == typeof t3) && t3.length;
        }, b.checkRequired = u.checkRequired, b.prototype.enum = function() {
          if (this.enumValidator && (this.validators = this.validators.filter(function(t4) {
            return t4.validator !== this.enumValidator;
          }, this), this.enumValidator = false), void 0 === arguments[0] || false === arguments[0]) return this;
          var t3, e3;
          h.isObject(arguments[0]) ? Array.isArray(arguments[0].values) ? (t3 = arguments[0].values, e3 = arguments[0].message) : (t3 = h.object.vals(arguments[0]), e3 = c.messages.String.enum) : (t3 = arguments, e3 = c.messages.String.enum);
          var r3, n2 = function(t4, e4) {
            var r4 = "undefined" != typeof Symbol && t4[Symbol.iterator] || t4["@@iterator"];
            if (!r4) {
              if (Array.isArray(t4) || (r4 = function(t5, e5) {
                if (t5) {
                  if ("string" == typeof t5) return a(t5, e5);
                  var r5 = {}.toString.call(t5).slice(8, -1);
                  return "Object" === r5 && t5.constructor && (r5 = t5.constructor.name), "Map" === r5 || "Set" === r5 ? Array.from(t5) : "Arguments" === r5 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r5) ? a(t5, e5) : void 0;
                }
              }(t4)) || e4 && t4 && "number" == typeof t4.length) {
                r4 && (t4 = r4);
                var n3 = 0, o3 = /* @__PURE__ */ __name(function() {
                }, "o");
                return { s: o3, n: /* @__PURE__ */ __name(function() {
                  return n3 >= t4.length ? { done: true } : { done: false, value: t4[n3++] };
                }, "n"), e: /* @__PURE__ */ __name(function(t5) {
                  throw t5;
                }, "e"), f: o3 };
              }
              throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
            }
            var i3, s2 = true, u2 = false;
            return { s: /* @__PURE__ */ __name(function() {
              r4 = r4.call(t4);
            }, "s"), n: /* @__PURE__ */ __name(function() {
              var t5 = r4.next();
              return s2 = t5.done, t5;
            }, "n"), e: /* @__PURE__ */ __name(function(t5) {
              u2 = true, i3 = t5;
            }, "e"), f: /* @__PURE__ */ __name(function() {
              try {
                s2 || null == r4.return || r4.return();
              } finally {
                if (u2) throw i3;
              }
            }, "f") };
          }(t3);
          try {
            for (n2.s(); !(r3 = n2.n()).done; ) {
              var o2 = r3.value;
              void 0 !== o2 && this.enumValues.push(this.cast(o2));
            }
          } catch (t4) {
            n2.e(t4);
          } finally {
            n2.f();
          }
          var i2 = this.enumValues;
          return this.enumValidator = function(t4) {
            return null == t4 || ~i2.indexOf(t4);
          }, this.validators.push({ validator: this.enumValidator, message: e3, type: "enum", enumValues: i2 }), this;
        }, b.prototype.lowercase = function(t3) {
          var e3 = this;
          return arguments.length > 0 && !t3 ? this : this.set(function(t4) {
            return "string" != typeof t4 && (t4 = e3.cast(t4)), t4 ? t4.toLowerCase() : t4;
          });
        }, b.prototype.uppercase = function(t3) {
          var e3 = this;
          return arguments.length > 0 && !t3 ? this : this.set(function(t4) {
            return "string" != typeof t4 && (t4 = e3.cast(t4)), t4 ? t4.toUpperCase() : t4;
          });
        }, b.prototype.trim = function(t3) {
          var e3 = this;
          return arguments.length > 0 && !t3 ? this : this.set(function(t4) {
            return "string" != typeof t4 && (t4 = e3.cast(t4)), t4 ? t4.trim() : t4;
          });
        }, b.prototype.minlength = function(t3, e3) {
          if (this.minlengthValidator && (this.validators = this.validators.filter(function(t4) {
            return t4.validator !== this.minlengthValidator;
          }, this)), null != t3) {
            var r3 = e3 || c.messages.String.minlength;
            r3 = r3.replace(/{MINLENGTH}/, t3), this.validators.push({ validator: this.minlengthValidator = function(e4) {
              return null === e4 || e4.length >= t3;
            }, message: r3, type: "minlength", minlength: t3 });
          }
          return this;
        }, b.prototype.minLength = b.prototype.minlength, b.prototype.maxlength = function(t3, e3) {
          if (this.maxlengthValidator && (this.validators = this.validators.filter(function(t4) {
            return t4.validator !== this.maxlengthValidator;
          }, this)), null != t3) {
            var r3 = e3 || c.messages.String.maxlength;
            r3 = r3.replace(/{MAXLENGTH}/, t3), this.validators.push({ validator: this.maxlengthValidator = function(e4) {
              return null === e4 || e4.length <= t3;
            }, message: r3, type: "maxlength", maxlength: t3 });
          }
          return this;
        }, b.prototype.maxLength = b.prototype.maxlength, b.prototype.match = function(t3, e3) {
          var r3 = e3 || c.messages.String.match;
          return this.validators.push({ validator: /* @__PURE__ */ __name(function(e4) {
            return !!t3 && (t3.lastIndex = 0, null == e4 || "" === e4 || t3.test(e4));
          }, "validator"), message: r3, type: "regexp", regexp: t3 }), this;
        }, b.prototype.checkRequired = function(t3, e3) {
          return "object" === s(t3) && u._isRef(this, t3, e3, true) ? null != t3 : ("function" == typeof this.constructor.checkRequired ? this.constructor.checkRequired() : b.checkRequired())(t3);
        }, b.prototype.cast = function(t3, e3, r3, n2, o2) {
          if ("string" != typeof t3 && u._isRef(this, t3, e3, r3)) return this._castRef(t3, e3, r3, o2);
          var i2;
          i2 = "function" == typeof this._castFunction ? this._castFunction : "function" == typeof this.constructor.cast ? this.constructor.cast() : b.cast();
          try {
            return i2(t3);
          } catch (e4) {
            throw new d("string", t3, this.path, null, this);
          }
        };
        var g = o(o({}, u.prototype.$conditionalHandlers), {}, { $all: /* @__PURE__ */ __name(function(t3, e3) {
          var r3 = this;
          return Array.isArray(t3) ? t3.map(function(t4) {
            return r3.castForQuery(null, t4, e3);
          }) : [this.castForQuery(null, t3, e3)];
        }, "$all"), $gt: m, $gte: m, $lt: m, $lte: m, $options: v, $regex: /* @__PURE__ */ __name(function(t3) {
          return "[object RegExp]" === Object.prototype.toString.call(t3) ? t3 : v.call(this, t3);
        }, "$regex"), $not: m });
        Object.defineProperty(b.prototype, "$conditionalHandlers", { enumerable: false, value: g }), b.prototype.castForQuery = function(t3, e3, r3) {
          var n2;
          if (null != t3) {
            if (!(n2 = this.$conditionalHandlers[t3])) throw new Error("Can't use " + t3 + " with String.");
            return n2.call(this, e3, r3);
          }
          if ("[object RegExp]" === Object.prototype.toString.call(e3) || y(e3, "BSONRegExp")) return e3;
          try {
            return this.applySetters(e3, r3);
          } catch (t4) {
            throw t4 instanceof d && t4.path === this.path && null != this.$fullPath && (t4.path = this.$fullPath), t4;
          }
        }, b.prototype.toJSONSchema = function(t3) {
          var e3 = this.options.required && "function" != typeof this.options.required;
          return p("string", "string", null == t3 ? void 0 : t3.useBsonType, e3);
        }, b.prototype.autoEncryptionType = function() {
          return "string";
        }, t2.exports = b;
      }, 8759: (t2) => {
        "use strict";
        t2.exports = function(t3) {
          return t3.replace(/\.\$(\[[^\]]*\])?(?=\.)/g, ".0").replace(/\.\$(\[[^\]]*\])?$/g, ".0");
        };
      }, 8768: (t2, e2, r2) => {
        "use strict";
        var n = r2(5832).hp;
        function o(t3, e3) {
          var r3 = Object.keys(t3);
          if (Object.getOwnPropertySymbols) {
            var n2 = Object.getOwnPropertySymbols(t3);
            e3 && (n2 = n2.filter(function(e4) {
              return Object.getOwnPropertyDescriptor(t3, e4).enumerable;
            })), r3.push.apply(r3, n2);
          }
          return r3;
        }
        __name(o, "o");
        function i(t3, e3, r3) {
          return (e3 = function(t4) {
            var e4 = function(t5) {
              if ("object" != c(t5) || !t5) return t5;
              var e5 = t5[Symbol.toPrimitive];
              if (void 0 !== e5) {
                var r4 = e5.call(t5, "string");
                if ("object" != c(r4)) return r4;
                throw new TypeError("@@toPrimitive must return a primitive value.");
              }
              return String(t5);
            }(t4);
            return "symbol" == c(e4) ? e4 : e4 + "";
          }(e3)) in t3 ? Object.defineProperty(t3, e3, { value: r3, enumerable: true, configurable: true, writable: true }) : t3[e3] = r3, t3;
        }
        __name(i, "i");
        function s(t3, e3) {
          var r3 = "undefined" != typeof Symbol && t3[Symbol.iterator] || t3["@@iterator"];
          if (!r3) {
            if (Array.isArray(t3) || (r3 = a(t3)) || e3 && t3 && "number" == typeof t3.length) {
              r3 && (t3 = r3);
              var n2 = 0, o2 = /* @__PURE__ */ __name(function() {
              }, "o");
              return { s: o2, n: /* @__PURE__ */ __name(function() {
                return n2 >= t3.length ? { done: true } : { done: false, value: t3[n2++] };
              }, "n"), e: /* @__PURE__ */ __name(function(t4) {
                throw t4;
              }, "e"), f: o2 };
            }
            throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }
          var i2, s2 = true, u2 = false;
          return { s: /* @__PURE__ */ __name(function() {
            r3 = r3.call(t3);
          }, "s"), n: /* @__PURE__ */ __name(function() {
            var t4 = r3.next();
            return s2 = t4.done, t4;
          }, "n"), e: /* @__PURE__ */ __name(function(t4) {
            u2 = true, i2 = t4;
          }, "e"), f: /* @__PURE__ */ __name(function() {
            try {
              s2 || null == r3.return || r3.return();
            } finally {
              if (u2) throw i2;
            }
          }, "f") };
        }
        __name(s, "s");
        function a(t3, e3) {
          if (t3) {
            if ("string" == typeof t3) return u(t3, e3);
            var r3 = {}.toString.call(t3).slice(8, -1);
            return "Object" === r3 && t3.constructor && (r3 = t3.constructor.name), "Map" === r3 || "Set" === r3 ? Array.from(t3) : "Arguments" === r3 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r3) ? u(t3, e3) : void 0;
          }
        }
        __name(a, "a");
        function u(t3, e3) {
          (null == e3 || e3 > t3.length) && (e3 = t3.length);
          for (var r3 = 0, n2 = Array(e3); r3 < e3; r3++) n2[r3] = t3[r3];
          return n2;
        }
        __name(u, "u");
        function c(t3) {
          return c = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
            return typeof t4;
          } : function(t4) {
            return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
          }, c(t3);
        }
        __name(c, "c");
        var l, f = r2(6353).UUID, p = r2(354), h = r2(5678), y = r2(5549), d = r2(6948), b = r2(4450), m = r2(2746), v = r2(608), g = r2(1243), _ = r2(1347), w = r2(3305), O = r2(2789), S = r2(9696), $ = r2(2497), j = r2(5268), P = r2(9539), A = r2(2793), E = r2(7291).trustedSymbol;
        e2.specialProperties = A, e2.isMongooseArray = g.isMongooseArray, e2.isMongooseDocumentArray = _.isMongooseDocumentArray, e2.registerMongooseArray = g.registerMongooseArray, e2.registerMongooseDocumentArray = _.registerMongooseDocumentArray;
        var x = /\s/, T = /\s+/;
        e2.toCollectionName = function(t3, e3) {
          if ("system.profile" === t3) return t3;
          if ("system.indexes" === t3) return t3;
          if ("function" == typeof e3) {
            if ("string" != typeof t3) throw new TypeError("Collection name must be a string");
            if (0 === t3.length) throw new TypeError("Collection name cannot be empty");
            return e3(t3);
          }
          return t3;
        }, e2.deepEqual = /* @__PURE__ */ __name(function t3(r3, o2) {
          if (r3 === o2) return true;
          if ("object" !== c(r3) || "object" !== c(o2)) return r3 === o2;
          if (r3 instanceof Date && o2 instanceof Date) return r3.getTime() === o2.getTime();
          if (w(r3, "ObjectId") && w(o2, "ObjectId") || w(r3, "Decimal128") && w(o2, "Decimal128")) return r3.toString() === o2.toString();
          if (r3 instanceof RegExp && o2 instanceof RegExp) return r3.source === o2.source && r3.ignoreCase === o2.ignoreCase && r3.multiline === o2.multiline && r3.global === o2.global && r3.dotAll === o2.dotAll && r3.unicode === o2.unicode && r3.sticky === o2.sticky && r3.hasIndices === o2.hasIndices;
          if (null == r3 || null == o2) return false;
          if (r3.prototype !== o2.prototype) return false;
          if (r3 instanceof Map || o2 instanceof Map) return r3 instanceof Map && o2 instanceof Map && t3(Array.from(r3.keys()), Array.from(o2.keys())) && t3(Array.from(r3.values()), Array.from(o2.values()));
          if (r3 instanceof Number && o2 instanceof Number) return r3.valueOf() === o2.valueOf();
          if (n.isBuffer(r3)) return e2.buffer.areEqual(r3, o2);
          if (Array.isArray(r3) || Array.isArray(o2)) {
            if (!Array.isArray(r3) || !Array.isArray(o2)) return false;
            var i2 = r3.length;
            if (i2 !== o2.length) return false;
            for (var s2 = 0; s2 < i2; ++s2) if (!t3(r3[s2], o2[s2])) return false;
            return true;
          }
          null != r3.$__ ? r3 = r3._doc : $(r3) && (r3 = r3.toObject()), null != o2.$__ ? o2 = o2._doc : $(o2) && (o2 = o2.toObject());
          var a2 = Object.keys(r3), u2 = Object.keys(o2), l2 = a2.length;
          if (l2 !== u2.length) return false;
          for (var f2 = l2 - 1; f2 >= 0; f2--) if (a2[f2] !== u2[f2]) return false;
          for (var p2 = 0, h2 = a2; p2 < h2.length; p2++) {
            var y2 = h2[p2];
            if (!t3(r3[y2], o2[y2])) return false;
          }
          return true;
        }, "t"), e2.last = function(t3) {
          if (t3.length > 0) return t3[t3.length - 1];
        }, e2.promiseOrCallback = j, e2.cloneArrays = function(t3) {
          return Array.isArray(t3) ? t3.map(function(t4) {
            return e2.cloneArrays(t4);
          }) : t3;
        }, e2.omit = function(t3, e3) {
          if (null == e3) return Object.assign({}, t3);
          Array.isArray(e3) || (e3 = [e3]);
          var r3, n2 = Object.assign({}, t3), o2 = s(e3);
          try {
            for (o2.s(); !(r3 = o2.n()).done; ) delete n2[r3.value];
          } catch (t4) {
            o2.e(t4);
          } finally {
            o2.f();
          }
          return n2;
        }, e2.clonePOJOsAndArrays = function(t3) {
          if (null == t3) return t3;
          if (null != t3.$__) return t3;
          if (O(t3)) {
            t3 = function(t4) {
              for (var e3 = 1; e3 < arguments.length; e3++) {
                var r4 = null != arguments[e3] ? arguments[e3] : {};
                e3 % 2 ? o(Object(r4), true).forEach(function(e4) {
                  i(t4, e4, r4[e4]);
                }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t4, Object.getOwnPropertyDescriptors(r4)) : o(Object(r4)).forEach(function(e4) {
                  Object.defineProperty(t4, e4, Object.getOwnPropertyDescriptor(r4, e4));
                });
              }
              return t4;
            }({}, t3);
            for (var r3 = 0, n2 = Object.keys(t3); r3 < n2.length; r3++) {
              var s2 = n2[r3];
              t3[s2] = e2.clonePOJOsAndArrays(t3[s2]);
            }
            return t3;
          }
          if (Array.isArray(t3)) {
            t3 = function(t4) {
              if (Array.isArray(t4)) return u(t4);
            }(l2 = t3) || function(t4) {
              if ("undefined" != typeof Symbol && null != t4[Symbol.iterator] || null != t4["@@iterator"]) return Array.from(t4);
            }(l2) || a(l2) || function() {
              throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
            }();
            for (var c2 = 0; c2 < t3.length; ++c2) t3[c2] = e2.clonePOJOsAndArrays(t3[c2]);
            return t3;
          }
          var l2;
          return t3;
        }, e2.merge = /* @__PURE__ */ __name(function t3(r3, n2, o2, i2) {
          o2 = o2 || {};
          var s2, a2 = Object.keys(n2), u2 = 0, c2 = a2.length;
          n2[E] && (r3[E] = n2[E]), i2 = i2 || "";
          for (var l2 = o2.omitNested || {}; u2 < c2; ) if (s2 = a2[u2++], !(o2.omit && o2.omit[s2] || l2[i2] || A.has(s2))) if (null == r3[s2]) r3[s2] = e2.clonePOJOsAndArrays(n2[s2]);
          else if (e2.isObject(n2[s2])) {
            if (e2.isObject(r3[s2]) || (r3[s2] = {}), null != n2[s2]) {
              if (o2.isDiscriminatorSchemaMerge && n2[s2].$isSingleNested && r3[s2].$isMongooseDocumentArray || n2[s2].$isMongooseDocumentArray && r3[s2].$isSingleNested) continue;
              if (n2[s2].instanceOfSchema) {
                r3[s2].instanceOfSchema ? P(r3[s2], n2[s2].clone(), o2.isDiscriminatorSchemaMerge) : r3[s2] = n2[s2].clone();
                continue;
              }
              if (w(n2[s2], "ObjectId")) {
                r3[s2] = new y(n2[s2]);
                continue;
              }
            }
            t3(r3[s2], n2[s2], o2, i2 ? i2 + "." + s2 : s2);
          } else o2.overwrite && (r3[s2] = n2[s2]);
          return r3;
        }, "t"), e2.toObject = /* @__PURE__ */ __name(function t3(n2) {
          var o2;
          if (l || (l = r2(2400)), null == n2) return n2;
          if (n2 instanceof l) return n2.toObject();
          if (Array.isArray(n2)) {
            o2 = [];
            var i2, a2 = s(n2);
            try {
              for (a2.s(); !(i2 = a2.n()).done; ) {
                var u2 = i2.value;
                o2.push(t3(u2));
              }
            } catch (t4) {
              a2.e(t4);
            } finally {
              a2.f();
            }
            return o2;
          }
          if (e2.isPOJO(n2)) {
            o2 = {}, n2[E] && (o2[E] = n2[E]);
            for (var c2 = 0, f2 = Object.keys(n2); c2 < f2.length; c2++) {
              var p2 = f2[c2];
              A.has(p2) || (o2[p2] = t3(n2[p2]));
            }
            return o2;
          }
          return n2;
        }, "t"), e2.isObject = v, e2.isPOJO = r2(2789), e2.isNonBuiltinObject = function(t3) {
          return !("object" !== c(t3) || e2.isNativeObject(t3) || e2.isMongooseType(t3) || t3 instanceof f || null == t3);
        }, e2.isNativeObject = function(t3) {
          return Array.isArray(t3) || t3 instanceof Date || t3 instanceof Boolean || t3 instanceof Number || t3 instanceof String;
        }, e2.isEmptyObject = function(t3) {
          return null != t3 && "object" === c(t3) && 0 === Object.keys(t3).length;
        }, e2.hasKey = function(t3, r3) {
          for (var n2 = 0, o2 = Object.keys(t3); n2 < o2.length; n2++) {
            var i2 = o2[n2];
            if (i2 === r3) return true;
            if (e2.isPOJO(t3[i2]) && e2.hasKey(t3[i2], r3)) return true;
          }
          return false;
        }, e2.tick = function(t3) {
          if ("function" == typeof t3) return function() {
            try {
              t3.apply(this, arguments);
            } catch (t4) {
              m(function() {
                throw t4;
              });
            }
          };
        }, e2.isMongooseType = function(t3) {
          return w(t3, "ObjectId") || w(t3, "Decimal128") || t3 instanceof n;
        }, e2.isMongooseObject = $, e2.expires = function(t3) {
          t3 && "Object" === t3.constructor.name && "expires" in t3 && (t3.expireAfterSeconds = "string" != typeof t3.expires ? t3.expires : Math.round(p(t3.expires) / 1e3), delete t3.expires);
        }, e2.populate = function(t3, r3, n2, o2, i2, a2, u2, l2) {
          var f2, p2 = null;
          if (1 === arguments.length) {
            if (t3 instanceof d) return t3._docs = {}, t3._childDocs = [], [t3];
            if (Array.isArray(t3)) {
              var h2 = (f2 = [], t3.forEach(function(t4) {
                x.test(t4.path) ? t4.path.split(T).forEach(function(e3) {
                  var r4 = Object.assign({}, t4);
                  r4.path = e3, f2.push(r4);
                }) : f2.push(t4);
              }), f2);
              return h2.map(function(t4) {
                return e2.populate(t4)[0];
              });
            }
            p2 = e2.isObject(t3) ? Object.assign({}, t3) : { path: t3 };
          } else p2 = "object" === c(n2) ? { path: t3, select: r3, match: n2, options: o2 } : { path: t3, select: r3, model: n2, match: o2, options: i2, populate: a2, justOne: u2, count: l2 };
          if (!("string" == typeof p2.path || Array.isArray(p2.path) && p2.path.every(function(t4) {
            return "string" == typeof t4;
          }))) throw new TypeError("utils.populate: invalid path. Expected string or array of strings. Got typeof `" + c(t3) + "`");
          return function(t4) {
            if (Array.isArray(t4.populate)) {
              var r4 = [];
              t4.populate.forEach(function(t5) {
                if (x.test(t5.path)) {
                  var n4 = Object.assign({}, t5);
                  n4.path.split(T).forEach(function(t6) {
                    n4.path = t6, r4.push(e2.populate(n4)[0]);
                  });
                } else r4.push(e2.populate(t5)[0]);
              }), t4.populate = e2.populate(r4);
            } else null != t4.populate && "object" === c(t4.populate) && (t4.populate = e2.populate(t4.populate));
            var n3 = [], o3 = x.test(t4.path) ? t4.path.split(T) : Array.isArray(t4.path) ? t4.path : [t4.path];
            null != t4.options && (t4.options = b(t4.options));
            var i3, a3 = s(o3);
            try {
              for (a3.s(); !(i3 = a3.n()).done; ) {
                var u3 = i3.value;
                n3.push(new d(Object.assign({}, t4, { path: u3 })));
              }
            } catch (t5) {
              a3.e(t5);
            } finally {
              a3.f();
            }
            return n3;
          }(p2);
        }, e2.getValue = function(t3, e3, r3) {
          return h.get(t3, e3, N, r3);
        };
        var k = Object.freeze({ getters: false });
        function N(t3, e3) {
          if ("$*" === e3 && t3 instanceof Map) return t3;
          var r3 = (null == t3 ? void 0 : t3._doc) || t3;
          return null != r3 && r3.isMongooseArrayProxy && (r3 = r3.__array), r3 instanceof Map ? r3.get(e3, k) : r3[e3];
        }
        __name(N, "N");
        e2.setValue = function(t3, e3, r3, n2, o2) {
          h.set(t3, e3, r3, "_doc", n2, o2);
        }, e2.object = {}, e2.object.vals = function(t3) {
          for (var e3 = Object.keys(t3), r3 = e3.length, n2 = []; r3--; ) n2.push(t3[e3[r3]]);
          return n2;
        };
        var I = Object.prototype.hasOwnProperty;
        e2.object.hasOwnProperty = function(t3, e3) {
          return I.call(t3, e3);
        }, e2.isNullOrUndefined = function(t3) {
          return null == t3;
        }, e2.array = {}, e2.array.flatten = /* @__PURE__ */ __name(function t3(e3, r3, n2) {
          return n2 || (n2 = []), e3.forEach(function(e4) {
            Array.isArray(e4) ? t3(e4, r3, n2) : r3 && !r3(e4) || n2.push(e4);
          }), n2;
        }, "t");
        var B = Object.prototype.hasOwnProperty;
        e2.hasUserDefinedProperty = function(t3, r3) {
          if (null == t3) return false;
          if (Array.isArray(r3)) {
            var n2, o2 = s(r3);
            try {
              for (o2.s(); !(n2 = o2.n()).done; ) {
                var i2 = n2.value;
                if (e2.hasUserDefinedProperty(t3, i2)) return true;
              }
            } catch (t4) {
              o2.e(t4);
            } finally {
              o2.f();
            }
            return false;
          }
          if (B.call(t3, r3)) return true;
          if ("object" === c(t3) && r3 in t3) {
            var a2 = t3[r3];
            return a2 !== Object.prototype[r3] && a2 !== Array.prototype[r3];
          }
          return false;
        };
        var M = Math.pow(2, 32) - 1;
        e2.isArrayIndex = function(t3) {
          return "number" == typeof t3 ? t3 >= 0 && t3 <= M : "string" == typeof t3 && !!/^\d+$/.test(t3) && (t3 = +t3) >= 0 && t3 <= M;
        }, e2.array.unique = function(t3) {
          var e3, r3 = /* @__PURE__ */ new Set(), n2 = /* @__PURE__ */ new Set(), o2 = [], i2 = s(t3);
          try {
            for (i2.s(); !(e3 = i2.n()).done; ) {
              var a2 = e3.value;
              if ("number" == typeof a2 || "string" == typeof a2 || null == a2) {
                if (r3.has(a2)) continue;
                o2.push(a2), r3.add(a2);
              } else if (w(a2, "ObjectId")) {
                if (n2.has(a2.toString())) continue;
                o2.push(a2), n2.add(a2.toString());
              } else o2.push(a2);
            }
          } catch (t4) {
            i2.e(t4);
          } finally {
            i2.f();
          }
          return o2;
        }, e2.buffer = {}, e2.buffer.areEqual = function(t3, e3) {
          if (!n.isBuffer(t3)) return false;
          if (!n.isBuffer(e3)) return false;
          if (t3.length !== e3.length) return false;
          for (var r3 = 0, o2 = t3.length; r3 < o2; ++r3) if (t3[r3] !== e3[r3]) return false;
          return true;
        }, e2.getFunctionName = S, e2.decorate = function(t3, e3) {
          for (var r3 in e3) A.has(r3) || (t3[r3] = e3[r3]);
        }, e2.mergeClone = function(t3, r3) {
          $(r3) && (r3 = r3.toObject({ transform: false, virtuals: false, depopulate: true, getters: false, flattenDecimals: false }));
          for (var o2, i2 = Object.keys(r3), s2 = i2.length, a2 = 0; a2 < s2; ) if (o2 = i2[a2++], !A.has(o2)) if (void 0 === t3[o2]) t3[o2] = b(r3[o2], { transform: false, virtuals: false, depopulate: true, getters: false, flattenDecimals: false });
          else {
            var u2 = r3[o2];
            if (null == u2 || !u2.valueOf || u2 instanceof Date || (u2 = u2.valueOf()), e2.isObject(u2)) {
              var c2 = u2;
              $(u2) && !u2.isMongooseBuffer && (c2 = c2.toObject({ transform: false, virtuals: false, depopulate: true, getters: false, flattenDecimals: false })), u2.isMongooseBuffer && (c2 = n.from(c2)), e2.mergeClone(t3[o2], c2);
            } else t3[o2] = b(u2, { flattenDecimals: false });
          }
        }, e2.each = function(t3, e3) {
          var r3, n2 = s(t3);
          try {
            for (n2.s(); !(r3 = n2.n()).done; ) e3(r3.value);
          } catch (t4) {
            n2.e(t4);
          } finally {
            n2.f();
          }
        }, e2.renameObjKey = function(t3, e3, r3) {
          return Object.keys(t3).reduce(function(n2, o2) {
            return o2 === e3 ? n2[r3] = t3[e3] : n2[o2] = t3[o2], n2;
          }, {});
        }, e2.getOption = function(t3) {
          var e3, r3 = s(Array.prototype.slice.call(arguments, 1));
          try {
            for (r3.s(); !(e3 = r3.n()).done; ) {
              var n2 = e3.value;
              if (null != n2 && null != n2[t3]) return n2[t3];
            }
          } catch (t4) {
            r3.e(t4);
          } finally {
            r3.f();
          }
          return null;
        }, e2.noop = function() {
        }, e2.errorToPOJO = function(t3) {
          if (!(t3 instanceof Error)) throw new Error("`error` must be `instanceof Error`.");
          var e3, r3 = {}, n2 = s(Object.getOwnPropertyNames(t3));
          try {
            for (n2.s(); !(e3 = n2.n()).done; ) {
              var o2 = e3.value;
              r3[o2] = t3[o2];
            }
          } catch (t4) {
            n2.e(t4);
          } finally {
            n2.f();
          }
          return r3;
        }, e2.warn = function(t3) {
          return { env: {} }.emitWarning(t3, { code: "MONGOOSE" });
        }, e2.injectTimestampsOption = function(t3, e3) {
          null != e3 && (t3.timestamps = e3);
        };
      }, 8863: (t2, e2, r2) => {
        "use strict";
        var n = r2(2354), o = r2(2268), i = r2(3123), s = r2(5477);
        t2.exports = function(t3) {
          if (t3.length < 1 || "function" != typeof t3[0]) throw new o("a function is required");
          return s(n, i, t3);
        };
      }, 8866: (t2, e2, r2) => {
        "use strict";
        function n(t3) {
          return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
            return typeof t4;
          } : function(t4) {
            return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
          }, n(t3);
        }
        __name(n, "n");
        function o(t3, e3) {
          for (var r3 = 0; r3 < e3.length; r3++) {
            var n2 = e3[r3];
            n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(t3, i(n2.key), n2);
          }
        }
        __name(o, "o");
        function i(t3) {
          var e3 = function(t4) {
            if ("object" != n(t4) || !t4) return t4;
            var e4 = t4[Symbol.toPrimitive];
            if (void 0 !== e4) {
              var r3 = e4.call(t4, "string");
              if ("object" != n(r3)) return r3;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(t4);
          }(t3);
          return "symbol" == n(e3) ? e3 : e3 + "";
        }
        __name(i, "i");
        function s() {
          try {
            var t3 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch (t4) {
          }
          return (s = /* @__PURE__ */ __name(function() {
            return !!t3;
          }, "s"))();
        }
        __name(s, "s");
        function a() {
          return a = "undefined" != typeof Reflect && Reflect.get ? Reflect.get.bind() : function(t3, e3, r3) {
            var n2 = function(t4, e4) {
              for (; !{}.hasOwnProperty.call(t4, e4) && null !== (t4 = u(t4)); ) ;
              return t4;
            }(t3, e3);
            if (n2) {
              var o2 = Object.getOwnPropertyDescriptor(n2, e3);
              return o2.get ? o2.get.call(arguments.length < 3 ? t3 : r3) : o2.value;
            }
          }, a.apply(null, arguments);
        }
        __name(a, "a");
        function u(t3) {
          return u = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t4) {
            return t4.__proto__ || Object.getPrototypeOf(t4);
          }, u(t3);
        }
        __name(u, "u");
        function c(t3, e3) {
          return c = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t4, e4) {
            return t4.__proto__ = e4, t4;
          }, c(t3, e3);
        }
        __name(c, "c");
        var l = r2(6974), f = r2(6426), p = Symbol("firstValue"), h = function(t3) {
          function e3(t4, r4) {
            var o2, i3 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
            if (function(t5, e4) {
              if (!(t5 instanceof e4)) throw new TypeError("Cannot call a class as a function");
            }(this, e3), o2 = function(t5, e4, r5) {
              return e4 = u(e4), function(t6, e5) {
                if (e5 && ("object" == n(e5) || "function" == typeof e5)) return e5;
                if (void 0 !== e5) throw new TypeError("Derived constructors may only return object or undefined");
                return function(t7) {
                  if (void 0 === t7) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                  return t7;
                }(t6);
              }(t5, s() ? Reflect.construct(e4, r5 || [], u(t5).constructor) : e4.apply(t5, r5));
            }(this, e3, [t4, r4, "Union"]), !r4 || !Array.isArray(r4.of) || 0 === r4.of.length) throw new Error("Union schema type requires an array of types");
            return o2.schemaTypes = r4.of.map(function(e4) {
              return r4.parentSchema.interpretAsType(t4, e4, i3);
            }), o2;
          }
          __name(e3, "e");
          return function(t4, e4) {
            if ("function" != typeof e4 && null !== e4) throw new TypeError("Super expression must either be null or a function");
            t4.prototype = Object.create(e4 && e4.prototype, { constructor: { value: t4, writable: true, configurable: true } }), Object.defineProperty(t4, "prototype", { writable: false }), e4 && c(t4, e4);
          }(e3, t3), r3 = e3, i2 = [{ key: "cast", value: /* @__PURE__ */ __name(function(t4, e4, r4, n2, o2) {
            for (var i3, s2 = p, a2 = 0; a2 < this.schemaTypes.length; ++a2) try {
              var u2 = this.schemaTypes[a2].cast(t4, e4, r4, n2, o2);
              if (u2 === t4) return u2;
              s2 === p && (s2 = u2);
            } catch (t5) {
              i3 = t5;
            }
            if (s2 !== p) return s2;
            throw i3;
          }, "value") }, { key: "applySetters", value: /* @__PURE__ */ __name(function(t4, e4, r4, n2, o2) {
            for (var i3, s2 = p, a2 = 0; a2 < this.schemaTypes.length; ++a2) try {
              var u2 = this.schemaTypes[a2]._applySetters(t4, e4, r4, n2, o2);
              if ((u2 = null == u2 ? this.schemaTypes[a2]._castNullish(u2) : this.schemaTypes[a2].cast(u2, e4, r4, n2, o2)) === t4) return u2;
              s2 === p && (s2 = u2);
            } catch (t5) {
              i3 = t5;
            }
            if (s2 !== p) return s2;
            throw i3;
          }, "value") }, { key: "clone", value: /* @__PURE__ */ __name(function() {
            var t4, r4, n2, o2 = (t4 = e3, r4 = this, "function" == typeof (n2 = a(u(1 & 3 ? t4.prototype : t4), "clone", r4)) ? function(t5) {
              return n2.apply(r4, t5);
            } : n2)([]);
            return o2.schemaTypes = this.schemaTypes.map(function(t5) {
              return t5.clone();
            }), o2;
          }, "value") }], i2 && o(r3.prototype, i2), Object.defineProperty(r3, "prototype", { writable: false }), r3;
          var r3, i2;
        }(f);
        h.schemaName = "Union", h.defaultOptions = {}, h.prototype.OptionsConstructor = l, t2.exports = h;
      }, 8879: (t2, e2, r2) => {
        "use strict";
        function n(t3) {
          return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
            return typeof t4;
          } : function(t4) {
            return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
          }, n(t3);
        }
        __name(n, "n");
        function o(t3, e3) {
          for (var r3 = 0; r3 < e3.length; r3++) {
            var n2 = e3[r3];
            n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(t3, s(n2.key), n2);
          }
        }
        __name(o, "o");
        function i(t3, e3, r3) {
          return e3 && o(t3.prototype, e3), r3 && o(t3, r3), Object.defineProperty(t3, "prototype", { writable: false }), t3;
        }
        __name(i, "i");
        function s(t3) {
          var e3 = function(t4) {
            if ("object" != n(t4) || !t4) return t4;
            var e4 = t4[Symbol.toPrimitive];
            if (void 0 !== e4) {
              var r3 = e4.call(t4, "string");
              if ("object" != n(r3)) return r3;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(t4);
          }(t3);
          return "symbol" == n(e3) ? e3 : e3 + "";
        }
        __name(s, "s");
        var a = r2(4450), u = i(/* @__PURE__ */ __name(function t3(e3) {
          if (function(t4, e4) {
            if (!(t4 instanceof e4)) throw new TypeError("Cannot call a class as a function");
          }(this, t3), null == e3) return this;
          Object.assign(this, a(e3));
        }, "t")), c = r2(5761);
        Object.defineProperty(u.prototype, "type", c), Object.defineProperty(u.prototype, "validate", c), Object.defineProperty(u.prototype, "cast", c), Object.defineProperty(u.prototype, "required", c), Object.defineProperty(u.prototype, "default", c), Object.defineProperty(u.prototype, "ref", c), Object.defineProperty(u.prototype, "refPath", c), Object.defineProperty(u.prototype, "select", c), Object.defineProperty(u.prototype, "index", c), Object.defineProperty(u.prototype, "unique", c), Object.defineProperty(u.prototype, "immutable", c), Object.defineProperty(u.prototype, "sparse", c), Object.defineProperty(u.prototype, "text", c), Object.defineProperty(u.prototype, "transform", c), t2.exports = u;
      }, 8920: (t2, e2, r2) => {
        "use strict";
        var n = r2(5832).hp;
        function o(t3) {
          return o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
            return typeof t4;
          } : function(t4) {
            return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
          }, o(t3);
        }
        __name(o, "o");
        function i(t3, e3) {
          var r3 = "undefined" != typeof Symbol && t3[Symbol.iterator] || t3["@@iterator"];
          if (!r3) {
            if (Array.isArray(t3) || (r3 = s(t3)) || e3 && t3 && "number" == typeof t3.length) {
              r3 && (t3 = r3);
              var n2 = 0, o2 = /* @__PURE__ */ __name(function() {
              }, "o");
              return { s: o2, n: /* @__PURE__ */ __name(function() {
                return n2 >= t3.length ? { done: true } : { done: false, value: t3[n2++] };
              }, "n"), e: /* @__PURE__ */ __name(function(t4) {
                throw t4;
              }, "e"), f: o2 };
            }
            throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }
          var i2, a2 = true, u2 = false;
          return { s: /* @__PURE__ */ __name(function() {
            r3 = r3.call(t3);
          }, "s"), n: /* @__PURE__ */ __name(function() {
            var t4 = r3.next();
            return a2 = t4.done, t4;
          }, "n"), e: /* @__PURE__ */ __name(function(t4) {
            u2 = true, i2 = t4;
          }, "e"), f: /* @__PURE__ */ __name(function() {
            try {
              a2 || null == r3.return || r3.return();
            } finally {
              if (u2) throw i2;
            }
          }, "f") };
        }
        __name(i, "i");
        function s(t3, e3) {
          if (t3) {
            if ("string" == typeof t3) return a(t3, e3);
            var r3 = {}.toString.call(t3).slice(8, -1);
            return "Object" === r3 && t3.constructor && (r3 = t3.constructor.name), "Map" === r3 || "Set" === r3 ? Array.from(t3) : "Arguments" === r3 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r3) ? a(t3, e3) : void 0;
          }
        }
        __name(s, "s");
        function a(t3, e3) {
          (null == e3 || e3 > t3.length) && (e3 = t3.length);
          for (var r3 = 0, n2 = Array(e3); r3 < e3; r3++) n2[r3] = t3[r3];
          return n2;
        }
        __name(a, "a");
        var u = r2(2400), c = r2(6547), l = r2(8213), f = r2(4473), p = r2(4450), h = r2(3303)._, y = r2(5678), d = r2(8768), b = r2(3305), m = r2(7930).arrayAtomicsSymbol, v = r2(7930).arrayParentSymbol, g = r2(7930).arrayPathSymbol, _ = r2(7930).arraySchemaSymbol, w = r2(7930).populateModelSymbol, O = Symbol("mongoose#Array#sliced"), S = Array.prototype.push, $ = { $__getAtomics: /* @__PURE__ */ __name(function() {
          var t3 = [], e3 = Object.keys(this[m] || {}), r3 = e3.length, n2 = Object.assign({}, h, { _isNested: true });
          if (0 === r3) return t3[0] = ["$set", this.toObject(n2)], t3;
          for (; r3--; ) {
            var o2 = e3[r3], i2 = this[m][o2];
            d.isMongooseObject(i2) ? i2 = i2.toObject(n2) : Array.isArray(i2) ? i2 = this.toObject.call(i2, n2) : null != i2 && Array.isArray(i2.$each) ? i2.$each = this.toObject.call(i2.$each, n2) : null != i2 && "function" == typeof i2.valueOf && (i2 = i2.valueOf()), "$addToSet" === o2 && (i2 = { $each: i2 }), t3.push([o2, i2]);
          }
          return t3;
        }, "$__getAtomics"), $atomics: /* @__PURE__ */ __name(function() {
          return this[m];
        }, "$atomics"), $parent: /* @__PURE__ */ __name(function() {
          return this[v];
        }, "$parent"), $path: /* @__PURE__ */ __name(function() {
          return this[g];
        }, "$path"), $shift: /* @__PURE__ */ __name(function() {
          this._registerAtomic("$pop", -1), this._markModified();
          var t3 = this.__array;
          if (!t3._shifted) return t3._shifted = true, [].shift.call(t3);
        }, "$shift"), $pop: /* @__PURE__ */ __name(function() {
          if (this._registerAtomic("$pop", 1), this._markModified(), !this._popped) return this._popped = true, [].pop.call(this);
        }, "$pop"), $schema: /* @__PURE__ */ __name(function() {
          return this[_];
        }, "$schema"), _cast: /* @__PURE__ */ __name(function(t3) {
          var e3, r3 = false, o2 = this[v];
          if (o2 && (r3 = o2.$populated(this[g], true)), r3 && null != t3) {
            if (null == (e3 = r3.options[w])) throw new l("No populated model found for path `" + this[g] + "`. This is likely a bug in Mongoose, please report an issue on github.com/Automattic/mongoose.");
            return (n.isBuffer(t3) || b(t3, "ObjectId") || !d.isObject(t3)) && (t3 = { _id: t3 }), t3.schema && t3.schema.discriminatorMapping && void 0 !== t3.schema.discriminatorMapping.key || (t3 = new e3(t3)), this[_].caster.applySetters(t3, o2, true);
          }
          return this[_].caster.applySetters(t3, o2, false);
        }, "_cast"), _mapCast: /* @__PURE__ */ __name(function(t3, e3) {
          return this._cast(t3, this.length + e3);
        }, "_mapCast"), _markModified: /* @__PURE__ */ __name(function(t3) {
          var e3, r3 = this[v];
          if (r3) {
            if (e3 = this[g], arguments.length && (e3 = e3 + "." + t3), null != e3 && e3.endsWith(".$")) return this;
            r3.markModified(e3, 0 !== arguments.length ? t3 : r3);
          }
          return this;
        }, "_markModified"), _registerAtomic: /* @__PURE__ */ __name(function(t3, e3) {
          if (!this[O]) {
            if ("$set" === t3) return this[m] = { $set: e3 }, f(this[v], this[g]), this._markModified(), this;
            var r3, n2 = this[m];
            if ("$pop" === t3 && !("$pop" in n2)) {
              var o2 = this;
              this[v].once("save", function() {
                o2._popped = o2._shifted = null;
              });
            }
            if (n2.$set || Object.keys(n2).length && !(t3 in n2)) return this[m] = { $set: this }, this;
            if ("$pullAll" === t3 || "$addToSet" === t3) n2[t3] || (n2[t3] = []), n2[t3] = n2[t3].concat(e3);
            else if ("$pullDocs" === t3) {
              var u2 = n2.$pull || (n2.$pull = {});
              e3[0] instanceof c ? (r3 = u2.$or || (u2.$or = []), Array.prototype.push.apply(r3, e3.map(function(t4) {
                return t4.toObject({ transform: /* @__PURE__ */ __name(function(e4, r4) {
                  return null == t4 || null == t4.$__ || Object.keys(t4.$__.activePaths.getStatePaths("default")).forEach(function(t5) {
                    y.unset(t5, r4), j(r4, t5);
                  }), r4;
                }, "transform"), virtuals: false });
              }))) : (r3 = u2._id || (u2._id = { $in: [] })).$in = r3.$in.concat(e3);
            } else if ("$push" === t3) if (n2.$push = n2.$push || { $each: [] }, null != e3 && d.hasUserDefinedProperty(e3, "$each")) n2.$push = e3;
            else if (1 === e3.length) n2.$push.$each.push(e3[0]);
            else if (e3.length < 1e4) {
              var l2;
              (l2 = n2.$push.$each).push.apply(l2, function(t4) {
                if (Array.isArray(t4)) return a(t4);
              }(_2 = e3) || function(t4) {
                if ("undefined" != typeof Symbol && null != t4[Symbol.iterator] || null != t4["@@iterator"]) return Array.from(t4);
              }(_2) || s(_2) || function() {
                throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
              }());
            } else {
              var p2, h2 = i(e3);
              try {
                for (h2.s(); !(p2 = h2.n()).done; ) {
                  var b2 = p2.value;
                  n2.$push.$each.push(b2);
                }
              } catch (t4) {
                h2.e(t4);
              } finally {
                h2.f();
              }
            }
            else n2[t3] = e3;
            return this;
          }
          var _2;
        }, "_registerAtomic"), addToSet: /* @__PURE__ */ __name(function() {
          P(this, arguments), A(this, arguments);
          var t3 = [].map.call(arguments, this._mapCast, this), e3 = [], r3 = "";
          t3[0] instanceof c ? r3 = "doc" : t3[0] instanceof Date ? r3 = "date" : b(t3[0], "ObjectId") && (r3 = "ObjectId");
          var n2 = d.isMongooseArray(t3) ? t3.__array : t3, o2 = d.isMongooseArray(this) ? this.__array : this;
          return n2.forEach(function(t4) {
            var n3, i2 = +t4;
            switch (r3) {
              case "doc":
                n3 = this.some(function(e4) {
                  return e4.equals(t4);
                });
                break;
              case "date":
                n3 = this.some(function(t5) {
                  return +t5 === i2;
                });
                break;
              case "ObjectId":
                n3 = this.find(function(e4) {
                  return e4.toString() === t4.toString();
                });
                break;
              default:
                n3 = ~this.indexOf(t4);
            }
            n3 || (this._markModified(), o2.push(t4), this._registerAtomic("$addToSet", t4), [].push.call(e3, t4));
          }, this), e3;
        }, "addToSet"), hasAtomics: /* @__PURE__ */ __name(function() {
          return d.isPOJO(this[m]) ? Object.keys(this[m]).length : 0;
        }, "hasAtomics"), includes: /* @__PURE__ */ __name(function(t3, e3) {
          return -1 !== this.indexOf(t3, e3);
        }, "includes"), indexOf: /* @__PURE__ */ __name(function(t3, e3) {
          b(t3, "ObjectId") && (t3 = t3.toString()), e3 = null == e3 ? 0 : e3;
          for (var r3 = this.length, n2 = e3; n2 < r3; ++n2) if (t3 == this[n2]) return n2;
          return -1;
        }, "indexOf"), inspect: /* @__PURE__ */ __name(function() {
          return JSON.stringify(this);
        }, "inspect"), nonAtomicPush: /* @__PURE__ */ __name(function() {
          var t3 = [].map.call(arguments, this._mapCast, this);
          this._markModified();
          var e3 = [].push.apply(this, t3);
          return this._registerAtomic("$set", this), e3;
        }, "nonAtomicPush"), pop: /* @__PURE__ */ __name(function() {
          this._markModified();
          var t3 = [].pop.call(this);
          return this._registerAtomic("$set", this), t3;
        }, "pop"), pull: /* @__PURE__ */ __name(function() {
          var t3 = this, e3 = [].map.call(arguments, function(e4, r4) {
            return t3._cast(e4, r4, { defaults: false });
          }, this), r3 = this[v].get(this[g]);
          d.isMongooseArray(r3) && (r3 = r3.__array);
          var n2, o2 = r3.length;
          for (this._markModified(); o2--; ) (n2 = r3[o2]) instanceof u ? e3.some(function(t4) {
            return n2.equals(t4);
          }) && r3.splice(o2, 1) : ~this.indexOf.call(e3, n2) && r3.splice(o2, 1);
          return e3[0] instanceof c ? this._registerAtomic("$pullDocs", e3.map(function(t4) {
            var e4 = t4.$__getValue("_id");
            return void 0 === e4 || t4.$isDefault("_id") ? t4 : e4;
          })) : this._registerAtomic("$pullAll", e3), f(this[v], this[g]) > 0 && this._registerAtomic("$set", this), this;
        }, "pull"), push: /* @__PURE__ */ __name(function() {
          var t3, e3 = arguments, r3 = e3, n2 = null != e3[0] && d.hasUserDefinedProperty(e3[0], "$each"), o2 = d.isMongooseArray(this) ? this.__array : this;
          if (n2 && (r3 = e3[0], e3 = e3[0].$each), null == this[_]) return S.apply(this, e3);
          P(this, e3), A(this, e3), e3 = [].map.call(e3, this._mapCast, this);
          var i2 = this[m];
          return this._markModified(), n2 ? (r3.$each = e3, 0 !== (i2.$push && i2.$push.$each && i2.$push.$each.length || 0) && i2.$push.$position != r3.$position ? (null != r3.$position ? ([].splice.apply(o2, [r3.$position, 0].concat(e3)), t3 = o2.length) : t3 = [].push.apply(o2, e3), this._registerAtomic("$set", this)) : null != r3.$position ? ([].splice.apply(o2, [r3.$position, 0].concat(e3)), t3 = this.length) : t3 = [].push.apply(o2, e3)) : (r3 = e3, t3 = S.apply(o2, e3)), this._registerAtomic("$push", r3), t3;
        }, "push"), remove: /* @__PURE__ */ __name(function() {
          return this.pull.apply(this, arguments);
        }, "remove"), set: /* @__PURE__ */ __name(function(t3, e3, r3) {
          var n2 = this.__array;
          if (r3) return n2[t3] = e3, this;
          var o2 = $._cast.call(this, e3, t3);
          return $._markModified.call(this, t3), n2[t3] = o2, this;
        }, "set"), shift: /* @__PURE__ */ __name(function() {
          var t3 = d.isMongooseArray(this) ? this.__array : this;
          this._markModified();
          var e3 = [].shift.call(t3);
          return this._registerAtomic("$set", this), e3;
        }, "shift"), sort: /* @__PURE__ */ __name(function() {
          var t3 = d.isMongooseArray(this) ? this.__array : this, e3 = [].sort.apply(t3, arguments);
          return this._registerAtomic("$set", this), e3;
        }, "sort"), splice: /* @__PURE__ */ __name(function() {
          var t3, e3 = d.isMongooseArray(this) ? this.__array : this;
          if (this._markModified(), P(this, Array.prototype.slice.call(arguments, 2)), arguments.length) {
            var r3;
            if (null == this[_]) r3 = arguments;
            else {
              r3 = [];
              for (var n2 = 0; n2 < arguments.length; ++n2) r3[n2] = n2 < 2 ? arguments[n2] : this._cast(arguments[n2], arguments[0] + (n2 - 2));
            }
            t3 = [].splice.apply(e3, r3), this._registerAtomic("$set", this);
          }
          return t3;
        }, "splice"), toBSON: /* @__PURE__ */ __name(function() {
          return this.toObject(h);
        }, "toBSON"), toObject: /* @__PURE__ */ __name(function(t3) {
          var e3 = d.isMongooseArray(this) ? this.__array : this;
          return t3 && t3.depopulate ? ((t3 = p(t3))._isNested = true, [].concat(e3).map(function(e4) {
            return e4 instanceof u ? e4.toObject(t3) : e4;
          })) : [].concat(e3);
        }, "toObject"), $toObject: /* @__PURE__ */ __name(function() {
          return this.constructor.prototype.toObject.apply(this, arguments);
        }, "$toObject"), unshift: /* @__PURE__ */ __name(function() {
          var t3;
          P(this, arguments), t3 = null == this[_] ? arguments : [].map.call(arguments, this._cast, this);
          var e3 = d.isMongooseArray(this) ? this.__array : this;
          return this._markModified(), [].unshift.apply(e3, t3), this._registerAtomic("$set", this), this.length;
        }, "unshift") };
        function j(t3, e3, r3) {
          if ("string" == typeof e3) {
            if (-1 === e3.indexOf(".")) return;
            e3 = y.stringToParts(e3);
          }
          (r3 = r3 || 0) >= e3.length || null != t3 && "object" === o(t3) && (j(t3[e3[0]], e3, r3 + 1), null != t3[e3[0]] && "object" === o(t3[e3[0]]) && 0 === Object.keys(t3[e3[0]]).length && delete t3[e3[0]]);
        }
        __name(j, "j");
        function P(t3, e3) {
          var r3, n2, s2, a2 = null == t3 ? null : t3[_] && t3[_].caster && t3[_].caster.options && t3[_].caster.options.ref || null;
          0 === t3.length && 0 !== e3.length && function(t4, e4) {
            if (!e4) return false;
            var r4, n3 = i(t4);
            try {
              for (n3.s(); !(r4 = n3.n()).done; ) {
                var o2 = r4.value;
                if (null == o2) return false;
                var s3 = o2.constructor;
                if (!(o2 instanceof u) || s3.modelName !== e4 && s3.baseModelName !== e4) return false;
              }
            } catch (t5) {
              n3.e(t5);
            } finally {
              n3.f();
            }
            return true;
          }(e3, a2) && t3[v].$populated(t3[g], [], (r3 = {}, n2 = w, s2 = e3[0].constructor, (n2 = function(t4) {
            var e4 = function(t5) {
              if ("object" != o(t5) || !t5) return t5;
              var e5 = t5[Symbol.toPrimitive];
              if (void 0 !== e5) {
                var r4 = e5.call(t5, "string");
                if ("object" != o(r4)) return r4;
                throw new TypeError("@@toPrimitive must return a primitive value.");
              }
              return String(t5);
            }(t4);
            return "symbol" == o(e4) ? e4 : e4 + "";
          }(n2)) in r3 ? Object.defineProperty(r3, n2, { value: s2, enumerable: true, configurable: true, writable: true }) : r3[n2] = s2, r3));
        }
        __name(P, "P");
        function A(t3, e3) {
          var r3 = null == t3 ? null : t3[_] && t3[_].caster && t3[_].caster.options && t3[_].caster.options.ref || null, s2 = t3[v], a2 = t3[g];
          if (r3 && s2.populated(a2)) {
            var u2, c2 = i(e3);
            try {
              for (c2.s(); !(u2 = c2.n()).done; ) {
                var l2 = u2.value;
                if (null != l2 && ("object" !== o(l2) || l2 instanceof String || l2 instanceof Number || l2 instanceof n || d.isMongooseType(l2))) {
                  s2.depopulate(a2);
                  break;
                }
              }
            } catch (t4) {
              c2.e(t4);
            } finally {
              c2.f();
            }
          }
        }
        __name(A, "A");
        for (var E = function() {
          var t3 = T[x];
          if (null == Array.prototype[t3]) return 1;
          $[t3] = function() {
            var e3 = d.isMongooseArray(this) ? this.__array : this, r3 = [].concat(e3);
            return r3[t3].apply(r3, arguments);
          };
        }, x = 0, T = ["filter", "flat", "flatMap", "map", "slice"]; x < T.length; x++) E();
        t2.exports = $;
      }, 8953: (t2, e2, r2) => {
        "use strict";
        var n = r2(3609);
        t2.exports = function(e3, r3) {
          if (t2.exports.convertToTrue.has(e3)) return true;
          if (t2.exports.convertToFalse.has(e3)) return false;
          if (null == e3) return e3;
          throw new n("boolean", e3, r3);
        }, t2.exports.convertToTrue = /* @__PURE__ */ new Set([true, "true", 1, "1", "yes"]), t2.exports.convertToFalse = /* @__PURE__ */ new Set([false, "false", 0, "0", "no"]);
      }, 8995: (t2, e2, r2) => {
        "use strict";
        function n(t3) {
          return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
            return typeof t4;
          } : function(t4) {
            return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
          }, n(t3);
        }
        __name(n, "n");
        function o() {
          try {
            var t3 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch (t4) {
          }
          return (o = /* @__PURE__ */ __name(function() {
            return !!t3;
          }, "o"))();
        }
        __name(o, "o");
        function i(t3) {
          return i = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t4) {
            return t4.__proto__ || Object.getPrototypeOf(t4);
          }, i(t3);
        }
        __name(i, "i");
        function s(t3, e3) {
          return s = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t4, e4) {
            return t4.__proto__ = e4, t4;
          }, s(t3, e3);
        }
        __name(s, "s");
        var a = function(t3) {
          function e3(t4, r4, s2) {
            var a2;
            return function(t5, e4) {
              if (!(t5 instanceof e4)) throw new TypeError("Cannot call a class as a function");
            }(this, e3), (a2 = function(t5, e4, r5) {
              return e4 = i(e4), function(t6, e5) {
                if (e5 && ("object" == n(e5) || "function" == typeof e5)) return e5;
                if (void 0 !== e5) throw new TypeError("Derived constructors may only return object or undefined");
                return function(t7) {
                  if (void 0 === t7) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                  return t7;
                }(t6);
              }(t5, o() ? Reflect.construct(e4, r5 || [], i(t5).constructor) : e4.apply(t5, r5));
            }(this, e3, [r4 = r4 || "Field `" + t4 + "` is not in schema and strict mode is set to throw."])).isImmutableError = !!s2, a2.path = t4, a2;
          }
          __name(e3, "e");
          return function(t4, e4) {
            if ("function" != typeof e4 && null !== e4) throw new TypeError("Super expression must either be null or a function");
            t4.prototype = Object.create(e4 && e4.prototype, { constructor: { value: t4, writable: true, configurable: true } }), Object.defineProperty(t4, "prototype", { writable: false }), e4 && s(t4, e4);
          }(e3, t3), r3 = e3, Object.defineProperty(r3, "prototype", { writable: false }), r3;
          var r3;
        }(r2(8213));
        Object.defineProperty(a.prototype, "name", { value: "StrictModeError" }), t2.exports = a;
      }, 9064: (t2, e2, r2) => {
        "use strict";
        function n(t3) {
          return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
            return typeof t4;
          } : function(t4) {
            return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
          }, n(t3);
        }
        __name(n, "n");
        var o = r2(3609), i = r2(8953), s = r2(1244);
        t2.exports = function(t3, e3) {
          if (null == t3 || "object" !== n(t3)) throw new o("$text", t3, e3);
          return null != t3.$search && (t3.$search = s(t3.$search, e3 + ".$search")), null != t3.$language && (t3.$language = s(t3.$language, e3 + ".$language")), null != t3.$caseSensitive && (t3.$caseSensitive = i(t3.$caseSensitive, e3 + ".$castSensitive")), null != t3.$diacriticSensitive && (t3.$diacriticSensitive = i(t3.$diacriticSensitive, e3 + ".$diacriticSensitive")), t3;
        };
      }, 9068: (t2, e2, r2) => {
        "use strict";
        function n(t3) {
          return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
            return typeof t4;
          } : function(t4) {
            return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
          }, n(t3);
        }
        __name(n, "n");
        function o(t3, e3, r3) {
          return e3 in t3 ? Object.defineProperty(t3, e3, { value: r3, enumerable: true, configurable: true, writable: true }) : t3[e3] = r3, t3;
        }
        __name(o, "o");
        function i(t3, e3) {
          for (var r3 = 0; r3 < e3.length; r3++) {
            var n2 = e3[r3];
            n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(t3, n2.key, n2);
          }
        }
        __name(i, "i");
        function s(t3, e3) {
          return !e3 || "object" !== p(e3) && "function" != typeof e3 ? a(t3) : e3;
        }
        __name(s, "s");
        function a(t3) {
          if (void 0 === t3) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
          return t3;
        }
        __name(a, "a");
        function u(t3) {
          var e3 = "function" == typeof Map ? /* @__PURE__ */ new Map() : void 0;
          return u = /* @__PURE__ */ __name(function(t4) {
            if (null === t4 || (r3 = t4, -1 === Function.toString.call(r3).indexOf("[native code]"))) return t4;
            var r3;
            if ("function" != typeof t4) throw new TypeError("Super expression must either be null or a function");
            if (void 0 !== e3) {
              if (e3.has(t4)) return e3.get(t4);
              e3.set(t4, n2);
            }
            function n2() {
              return c(t4, arguments, f(this).constructor);
            }
            __name(n2, "n");
            return n2.prototype = Object.create(t4.prototype, { constructor: { value: n2, enumerable: false, writable: true, configurable: true } }), l(n2, t4);
          }, "u"), u(t3);
        }
        __name(u, "u");
        function c(t3, e3, r3) {
          return c = function() {
            if ("undefined" == typeof Reflect || !Reflect.construct) return false;
            if (Reflect.construct.sham) return false;
            if ("function" == typeof Proxy) return true;
            try {
              return Date.prototype.toString.call(Reflect.construct(Date, [], function() {
              })), true;
            } catch (t4) {
              return false;
            }
          }() ? Reflect.construct : function(t4, e4, r4) {
            var n2 = [null];
            n2.push.apply(n2, e4);
            var o2 = new (Function.bind.apply(t4, n2))();
            return r4 && l(o2, r4.prototype), o2;
          }, c.apply(null, arguments);
        }
        __name(c, "c");
        function l(t3, e3) {
          return l = Object.setPrototypeOf || function(t4, e4) {
            return t4.__proto__ = e4, t4;
          }, l(t3, e3);
        }
        __name(l, "l");
        function f(t3) {
          return f = Object.setPrototypeOf ? Object.getPrototypeOf : function(t4) {
            return t4.__proto__ || Object.getPrototypeOf(t4);
          }, f(t3);
        }
        __name(f, "f");
        function p(t3) {
          return p = "function" == typeof Symbol && "symbol" === n(Symbol.iterator) ? function(t4) {
            return n(t4);
          } : function(t4) {
            return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : n(t4);
          }, p(t3);
        }
        __name(p, "p");
        var h = r2(7352).inspect, y = r2(3743).codes.ERR_INVALID_ARG_TYPE;
        function d(t3, e3, r3) {
          return (void 0 === r3 || r3 > t3.length) && (r3 = t3.length), t3.substring(r3 - e3.length, r3) === e3;
        }
        __name(d, "d");
        var b = "", m = "", v = "", g = "", _ = { deepStrictEqual: "Expected values to be strictly deep-equal:", strictEqual: "Expected values to be strictly equal:", strictEqualObject: 'Expected "actual" to be reference-equal to "expected":', deepEqual: "Expected values to be loosely deep-equal:", equal: "Expected values to be loosely equal:", notDeepStrictEqual: 'Expected "actual" not to be strictly deep-equal to:', notStrictEqual: 'Expected "actual" to be strictly unequal to:', notStrictEqualObject: 'Expected "actual" not to be reference-equal to "expected":', notDeepEqual: 'Expected "actual" not to be loosely deep-equal to:', notEqual: 'Expected "actual" to be loosely unequal to:', notIdentical: "Values identical but not reference-equal:" };
        function w(t3) {
          var e3 = Object.keys(t3), r3 = Object.create(Object.getPrototypeOf(t3));
          return e3.forEach(function(e4) {
            r3[e4] = t3[e4];
          }), Object.defineProperty(r3, "message", { value: t3.message }), r3;
        }
        __name(w, "w");
        function O(t3) {
          return h(t3, { compact: false, customInspect: false, depth: 1e3, maxArrayLength: 1 / 0, showHidden: false, breakLength: 1 / 0, showProxy: false, sorted: true, getters: true });
        }
        __name(O, "O");
        var S = function(t3) {
          function e3(t4) {
            var r4;
            if (function(t5, e4) {
              if (!(t5 instanceof e4)) throw new TypeError("Cannot call a class as a function");
            }(this, e3), "object" !== p(t4) || null === t4) throw new y("options", "Object", t4);
            var n3 = t4.message, o2 = t4.operator, i2 = t4.stackStartFn, u2 = t4.actual, c2 = t4.expected, l2 = Error.stackTraceLimit;
            if (Error.stackTraceLimit = 0, null != n3) r4 = s(this, f(e3).call(this, String(n3)));
            else if ({ env: {} }.stderr && { env: {} }.stderr.isTTY && ({ env: {} }.stderr && { env: {} }.stderr.getColorDepth && 1 !== { env: {} }.stderr.getColorDepth() ? (b = "\x1B[34m", m = "\x1B[32m", g = "\x1B[39m", v = "\x1B[31m") : (b = "", m = "", g = "", v = "")), "object" === p(u2) && null !== u2 && "object" === p(c2) && null !== c2 && "stack" in u2 && u2 instanceof Error && "stack" in c2 && c2 instanceof Error && (u2 = w(u2), c2 = w(c2)), "deepStrictEqual" === o2 || "strictEqual" === o2) r4 = s(this, f(e3).call(this, function(t5, e4, r5) {
              var n4 = "", o3 = "", i3 = 0, s2 = "", a2 = false, u3 = O(t5), c3 = u3.split("\n"), l3 = O(e4).split("\n"), f2 = 0, h3 = "";
              if ("strictEqual" === r5 && "object" === p(t5) && "object" === p(e4) && null !== t5 && null !== e4 && (r5 = "strictEqualObject"), 1 === c3.length && 1 === l3.length && c3[0] !== l3[0]) {
                var y2 = c3[0].length + l3[0].length;
                if (y2 <= 10) {
                  if (!("object" === p(t5) && null !== t5 || "object" === p(e4) && null !== e4 || 0 === t5 && 0 === e4)) return "".concat(_[r5], "\n\n") + "".concat(c3[0], " !== ").concat(l3[0], "\n");
                } else if ("strictEqualObject" !== r5 && y2 < ({ env: {} }.stderr && { env: {} }.stderr.isTTY ? { env: {} }.stderr.columns : 80)) {
                  for (; c3[0][f2] === l3[0][f2]; ) f2++;
                  f2 > 2 && (h3 = "\n  ".concat(function(t6, e5) {
                    if (e5 = Math.floor(e5), 0 == t6.length || 0 == e5) return "";
                    var r6 = t6.length * e5;
                    for (e5 = Math.floor(Math.log(e5) / Math.log(2)); e5; ) t6 += t6, e5--;
                    return t6 + t6.substring(0, r6 - t6.length);
                  }(" ", f2), "^"), f2 = 0);
                }
              }
              for (var w2 = c3[c3.length - 1], S3 = l3[l3.length - 1]; w2 === S3 && (f2++ < 2 ? s2 = "\n  ".concat(w2).concat(s2) : n4 = w2, c3.pop(), l3.pop(), 0 !== c3.length && 0 !== l3.length); ) w2 = c3[c3.length - 1], S3 = l3[l3.length - 1];
              var $2 = Math.max(c3.length, l3.length);
              if (0 === $2) {
                var j2 = u3.split("\n");
                if (j2.length > 30) for (j2[26] = "".concat(b, "...").concat(g); j2.length > 27; ) j2.pop();
                return "".concat(_.notIdentical, "\n\n").concat(j2.join("\n"), "\n");
              }
              f2 > 3 && (s2 = "\n".concat(b, "...").concat(g).concat(s2), a2 = true), "" !== n4 && (s2 = "\n  ".concat(n4).concat(s2), n4 = "");
              var P2 = 0, A = _[r5] + "\n".concat(m, "+ actual").concat(g, " ").concat(v, "- expected").concat(g), E = " ".concat(b, "...").concat(g, " Lines skipped");
              for (f2 = 0; f2 < $2; f2++) {
                var x = f2 - i3;
                if (c3.length < f2 + 1) x > 1 && f2 > 2 && (x > 4 ? (o3 += "\n".concat(b, "...").concat(g), a2 = true) : x > 3 && (o3 += "\n  ".concat(l3[f2 - 2]), P2++), o3 += "\n  ".concat(l3[f2 - 1]), P2++), i3 = f2, n4 += "\n".concat(v, "-").concat(g, " ").concat(l3[f2]), P2++;
                else if (l3.length < f2 + 1) x > 1 && f2 > 2 && (x > 4 ? (o3 += "\n".concat(b, "...").concat(g), a2 = true) : x > 3 && (o3 += "\n  ".concat(c3[f2 - 2]), P2++), o3 += "\n  ".concat(c3[f2 - 1]), P2++), i3 = f2, o3 += "\n".concat(m, "+").concat(g, " ").concat(c3[f2]), P2++;
                else {
                  var T = l3[f2], k = c3[f2], N = k !== T && (!d(k, ",") || k.slice(0, -1) !== T);
                  N && d(T, ",") && T.slice(0, -1) === k && (N = false, k += ","), N ? (x > 1 && f2 > 2 && (x > 4 ? (o3 += "\n".concat(b, "...").concat(g), a2 = true) : x > 3 && (o3 += "\n  ".concat(c3[f2 - 2]), P2++), o3 += "\n  ".concat(c3[f2 - 1]), P2++), i3 = f2, o3 += "\n".concat(m, "+").concat(g, " ").concat(k), n4 += "\n".concat(v, "-").concat(g, " ").concat(T), P2 += 2) : (o3 += n4, n4 = "", 1 !== x && 0 !== f2 || (o3 += "\n  ".concat(k), P2++));
                }
                if (P2 > 20 && f2 < $2 - 2) return "".concat(A).concat(E, "\n").concat(o3, "\n").concat(b, "...").concat(g).concat(n4, "\n") + "".concat(b, "...").concat(g);
              }
              return "".concat(A).concat(a2 ? E : "", "\n").concat(o3).concat(n4).concat(s2).concat(h3);
            }(u2, c2, o2)));
            else if ("notDeepStrictEqual" === o2 || "notStrictEqual" === o2) {
              var h2 = _[o2], S2 = O(u2).split("\n");
              if ("notStrictEqual" === o2 && "object" === p(u2) && null !== u2 && (h2 = _.notStrictEqualObject), S2.length > 30) for (S2[26] = "".concat(b, "...").concat(g); S2.length > 27; ) S2.pop();
              r4 = 1 === S2.length ? s(this, f(e3).call(this, "".concat(h2, " ").concat(S2[0]))) : s(this, f(e3).call(this, "".concat(h2, "\n\n").concat(S2.join("\n"), "\n")));
            } else {
              var $ = O(u2), j = "", P = _[o2];
              "notDeepEqual" === o2 || "notEqual" === o2 ? ($ = "".concat(_[o2], "\n\n").concat($)).length > 1024 && ($ = "".concat($.slice(0, 1021), "...")) : (j = "".concat(O(c2)), $.length > 512 && ($ = "".concat($.slice(0, 509), "...")), j.length > 512 && (j = "".concat(j.slice(0, 509), "...")), "deepEqual" === o2 || "equal" === o2 ? $ = "".concat(P, "\n\n").concat($, "\n\nshould equal\n\n") : j = " ".concat(o2, " ").concat(j)), r4 = s(this, f(e3).call(this, "".concat($).concat(j)));
            }
            return Error.stackTraceLimit = l2, r4.generatedMessage = !n3, Object.defineProperty(a(r4), "name", { value: "AssertionError [ERR_ASSERTION]", enumerable: false, writable: true, configurable: true }), r4.code = "ERR_ASSERTION", r4.actual = u2, r4.expected = c2, r4.operator = o2, Error.captureStackTrace && Error.captureStackTrace(a(r4), i2), r4.stack, r4.name = "AssertionError", s(r4);
          }
          __name(e3, "e");
          var r3, n2;
          return function(t4, e4) {
            if ("function" != typeof e4 && null !== e4) throw new TypeError("Super expression must either be null or a function");
            t4.prototype = Object.create(e4 && e4.prototype, { constructor: { value: t4, writable: true, configurable: true } }), e4 && l(t4, e4);
          }(e3, t3), r3 = e3, n2 = [{ key: "toString", value: /* @__PURE__ */ __name(function() {
            return "".concat(this.name, " [").concat(this.code, "]: ").concat(this.message);
          }, "value") }, { key: h.custom, value: /* @__PURE__ */ __name(function(t4, e4) {
            return h(this, function(t5) {
              for (var e5 = 1; e5 < arguments.length; e5++) {
                var r4 = null != arguments[e5] ? arguments[e5] : {}, n3 = Object.keys(r4);
                "function" == typeof Object.getOwnPropertySymbols && (n3 = n3.concat(Object.getOwnPropertySymbols(r4).filter(function(t6) {
                  return Object.getOwnPropertyDescriptor(r4, t6).enumerable;
                }))), n3.forEach(function(e6) {
                  o(t5, e6, r4[e6]);
                });
              }
              return t5;
            }({}, e4, { customInspect: false, depth: 0 }));
          }, "value") }], n2 && i(r3.prototype, n2), e3;
        }(u(Error));
        t2.exports = S;
      }, 9122: (t2, e2, r2) => {
        "use strict";
        var n = r2(3900), o = r2(988), i = r2(8863), s = r2(5804);
        t2.exports = function(t3) {
          var e3 = i(arguments), r3 = t3.length - (arguments.length - 1);
          return n(e3, 1 + (r3 > 0 ? r3 : 0), true);
        }, o ? o(t2.exports, "apply", { value: s }) : t2.exports.apply = s;
      }, 9123: (t2, e2, r2) => {
        "use strict";
        function n(t3) {
          return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
            return typeof t4;
          } : function(t4) {
            return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
          }, n(t3);
        }
        __name(n, "n");
        function o(t3, e3) {
          var r3 = Object.keys(t3);
          if (Object.getOwnPropertySymbols) {
            var n2 = Object.getOwnPropertySymbols(t3);
            e3 && (n2 = n2.filter(function(e4) {
              return Object.getOwnPropertyDescriptor(t3, e4).enumerable;
            })), r3.push.apply(r3, n2);
          }
          return r3;
        }
        __name(o, "o");
        function i(t3) {
          for (var e3 = 1; e3 < arguments.length; e3++) {
            var r3 = null != arguments[e3] ? arguments[e3] : {};
            e3 % 2 ? o(Object(r3), true).forEach(function(e4) {
              s(t3, e4, r3[e4]);
            }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t3, Object.getOwnPropertyDescriptors(r3)) : o(Object(r3)).forEach(function(e4) {
              Object.defineProperty(t3, e4, Object.getOwnPropertyDescriptor(r3, e4));
            });
          }
          return t3;
        }
        __name(i, "i");
        function s(t3, e3, r3) {
          return (e3 = function(t4) {
            var e4 = function(t5) {
              if ("object" != n(t5) || !t5) return t5;
              var e5 = t5[Symbol.toPrimitive];
              if (void 0 !== e5) {
                var r4 = e5.call(t5, "string");
                if ("object" != n(r4)) return r4;
                throw new TypeError("@@toPrimitive must return a primitive value.");
              }
              return String(t5);
            }(t4);
            return "symbol" == n(e4) ? e4 : e4 + "";
          }(e3)) in t3 ? Object.defineProperty(t3, e3, { value: r3, enumerable: true, configurable: true, writable: true }) : t3[e3] = r3, t3;
        }
        __name(s, "s");
        var a, u, c = r2(3609), l = r2(8235), f = r2(3550).EventEmitter, p = r2(7760), h = r2(4561), y = r2(6426), d = r2(7982), b = r2(4327), m = r2(1469), v = r2(1313), g = r2(3216), _ = r2(5110), w = r2(8768), O = r2(7910), S = r2(5537), $ = r2(7930).arrayAtomicsSymbol, j = r2(7930).arrayPathSymbol, P = r2(7930).documentArrayParent;
        function A(t3, e3, r3, n2) {
          if (e3.options && e3.options.timeseries) throw new S(t3, "timeseries");
          var o2 = A.defaultOptions && A.defaultOptions._id;
          null != o2 && ((n2 = n2 || {})._id = o2), null != n2 && null != n2._id ? e3 = v(e3, n2) : null != r3 && null != r3._id && (e3 = v(e3, r3));
          var s2 = E(e3, r3);
          s2.prototype.$basePath = t3, p.call(this, t3, s2, r3), this.schema = e3, this.schemaOptions = n2 || {}, this.$isMongooseDocumentArray = true, this.Constructor = s2, s2.base = e3.base;
          var a2 = this.defaultValue;
          "defaultValue" in this && null == a2 || this.default(function() {
            var t4 = a2.call(this);
            return null == t4 || Array.isArray(t4) || (t4 = [t4]), t4;
          }), this.$embeddedSchemaType = new l(t3 + ".$", i(i({}, n2 || {}), {}, { $parentSchemaType: this })), this.$embeddedSchemaType.caster = this.Constructor, this.$embeddedSchemaType.schema = this.schema;
        }
        __name(A, "A");
        function E(t3, e3, n2) {
          function o2() {
            u.apply(this, arguments), null != this.__parentArray && null != this.__parentArray.getArrayParent() && this.$session(this.__parentArray.getArrayParent().$session());
          }
          __name(o2, "o");
          u || (u = r2(6547)), t3._preCompile();
          var i2 = null != n2 ? n2.prototype : u.prototype;
          for (var s2 in o2.prototype = Object.create(i2), o2.prototype.$__setSchema(t3), o2.schema = t3, o2.prototype.constructor = o2, o2.$isArraySubdocument = true, o2.events = new f(), o2.base = t3.base, t3.methods) o2.prototype[s2] = t3.methods[s2];
          for (var a2 in t3.statics) o2[a2] = t3.statics[a2];
          for (var c2 in f.prototype) o2[c2] = f.prototype[c2];
          return o2.options = e3, o2;
        }
        __name(E, "E");
        A.schemaName = "DocumentArray", A.options = { castNonArrays: true }, A.prototype = Object.create(p.prototype), A.prototype.constructor = A, A.prototype.OptionsConstructor = h, Object.defineProperty(A.prototype, "$conditionalHandlers", { enumerable: false, value: i({}, p.prototype.$conditionalHandlers) }), A.prototype.discriminator = function(t3, e3, r3) {
          var n2;
          "function" == typeof t3 && (t3 = w.getFunctionName(t3)), r3 = r3 || {};
          var o2 = w.isPOJO(r3) ? r3.value : r3, i2 = "boolean" != typeof r3.clone || r3.clone;
          e3.instanceOfSchema && i2 && (e3 = e3.clone());
          var s2 = E(e3 = m(this.casterConstructor, t3, e3, o2, null, null, null === (n2 = r3) || void 0 === n2 ? void 0 : n2.overwriteExisting), null, this.casterConstructor);
          s2.baseCasterConstructor = this.casterConstructor;
          try {
            Object.defineProperty(s2, "name", { value: t3 });
          } catch (t4) {
          }
          return this.casterConstructor.discriminators[t3] = s2, this.casterConstructor.discriminators[t3];
        }, A.prototype.doValidate = function(t3, e3, n2, o2) {
          a || (a = r2(4878));
          var i2 = this;
          try {
            y.prototype.doValidate.call(this, t3, function(r3) {
              if (r3) return e3(r3);
              var s2, c2 = t3 && t3.length;
              if (!c2) return e3();
              if (o2 && o2.updateValidator) return e3();
              function l2(t4) {
                null != t4 && (s2 = t4), --c2 || e3(s2);
              }
              __name(l2, "l");
              w.isMongooseDocumentArray(t3) || (t3 = new a(t3, i2.path, n2));
              for (var f2 = 0, p2 = c2; f2 < p2; ++f2) {
                var h2 = t3[f2];
                if (null != h2) {
                  if (!(h2 instanceof u)) {
                    var y2 = O(i2.casterConstructor, t3[f2]);
                    h2 = t3[f2] = new y2(h2, t3, void 0, void 0, f2);
                  }
                  null == o2 || !o2.validateModifiedOnly || h2.$isModified() ? h2.$__validate(null, o2, l2) : --c2 || e3(s2);
                } else --c2 || e3(s2);
              }
            }, n2);
          } catch (t4) {
            return e3(t4);
          }
        }, A.prototype.doValidateSync = function(t3, e3, r3) {
          var n2 = y.prototype.doValidateSync.call(this, t3, e3);
          if (null != n2) return n2;
          var o2 = t3 && t3.length, i2 = null;
          if (o2) {
            for (var s2 = 0, a2 = o2; s2 < a2; ++s2) {
              var c2 = t3[s2];
              if (c2) {
                if (!(c2 instanceof u)) {
                  var l2 = O(this.casterConstructor, t3[s2]);
                  c2 = t3[s2] = new l2(c2, t3, void 0, void 0, s2);
                }
                if (null == r3 || !r3.validateModifiedOnly || c2.$isModified()) {
                  var f2 = c2.validateSync(r3);
                  f2 && null == i2 && (i2 = f2);
                }
              }
            }
            return i2;
          }
        }, A.prototype.getDefault = function(t3, e3, n2) {
          var o2 = "function" == typeof this.defaultValue ? this.defaultValue.call(t3) : this.defaultValue;
          if (null == o2) return o2;
          if (n2 && n2.skipCast) return o2;
          a || (a = r2(4878)), Array.isArray(o2) || (o2 = [o2]), o2 = new a(o2, this.path, t3);
          for (var i2 = 0; i2 < o2.length; ++i2) {
            var s2 = new (O(this.casterConstructor, o2[i2]))({}, o2, void 0, void 0, i2);
            s2.$init(o2[i2]), s2.isNew = true, Object.assign(s2.$__.activePaths.default, s2.$__.activePaths.init), s2.$__.activePaths.init = {}, o2[i2] = s2;
          }
          return o2;
        };
        var x = Object.freeze({ transform: false, virtuals: false }), T = Object.freeze({ skipId: false, willInit: true });
        function k(t3, e3, r3) {
          if (r3 && e3) {
            for (var n2, o2, i2, s2 = t3.path + ".", a2 = Object.keys(e3), u2 = a2.length, c2 = {}; u2--; ) if ((o2 = a2[u2]).startsWith(s2)) {
              if ("$" === (i2 = o2.substring(s2.length))) continue;
              i2.startsWith("$.") && (i2 = i2.substring(2)), n2 || (n2 = true), c2[i2] = e3[o2];
            }
            return n2 && c2 || void 0;
          }
        }
        __name(k, "k");
        A.prototype.cast = function(t3, e3, n2, o2, i2) {
          if (a || (a = r2(4878)), null != t3 && null != t3[j] && t3 === o2) return t3;
          var s2, l2, f2 = (i2 = i2 || {}).path || this.path;
          if (!Array.isArray(t3)) {
            if (!n2 && !A.options.castNonArrays) throw new c("DocumentArray", t3, this.path, null, this);
            return e3 && n2 && e3.markModified(f2), this.cast([t3], e3, n2, o2, i2);
          }
          i2.skipDocumentArrayCast && !w.isMongooseDocumentArray(t3) || (t3 = new a(t3, f2, e3, this)), null != o2 && (t3[$] = o2[$] || {}), null != i2.arrayPathIndex && (t3[j] = f2 + "." + i2.arrayPathIndex);
          for (var p2 = w.isMongooseDocumentArray(t3) ? t3.__array : t3, h2 = p2.length, y2 = 0; y2 < h2; ++y2) if (p2[y2]) {
            var d2 = O(this.casterConstructor, p2[y2]), b2 = g(p2[y2], true);
            if (p2[y2] !== b2 && (p2[y2] = b2), p2[y2] instanceof u) {
              if (p2[y2][P] !== e3) if (n2) {
                var m2 = new d2(null, t3, T, s2, y2);
                p2[y2] = m2.$init(p2[y2]);
              } else {
                var v2 = new d2(p2[y2], t3, void 0, void 0, y2);
                p2[y2] = v2;
              }
              null == p2[y2].__index && p2[y2].$setIndex(y2);
            } else if (null != p2[y2]) if (n2) e3 ? s2 || (s2 = k(this, e3.$__.selected, n2)) : s2 = true, l2 = new d2(null, t3, T, s2, y2), p2[y2] = l2.$init(p2[y2]);
            else if (o2 && "function" == typeof o2.id && (l2 = o2.id(p2[y2]._id)), o2 && l2 && w.deepEqual(l2.toObject(x), p2[y2])) l2.set(p2[y2]), p2[y2] = l2;
            else try {
              l2 = new d2(p2[y2], t3, void 0, void 0, y2), p2[y2] = l2;
            } catch (e4) {
              throw new c("embedded", p2[y2], t3[j], e4, this);
            }
          }
          return t3;
        }, A.prototype.clone = function() {
          var t3 = Object.assign({}, this.options), e3 = new this.constructor(this.path, this.schema, t3, this.schemaOptions);
          return e3.validators = this.validators.slice(), void 0 !== this.requiredValidator && (e3.requiredValidator = this.requiredValidator), e3.Constructor.discriminators = Object.assign({}, this.Constructor.discriminators), e3._appliedDiscriminators = this._appliedDiscriminators, e3;
        }, A.prototype.applyGetters = function(t3, e3) {
          return y.prototype.applyGetters.call(this, t3, e3);
        }, A.defaultOptions = {}, A.set = y.set, A.setters = [], A.get = y.get, A.prototype.$conditionalHandlers.$elemMatch = function(t3, e3) {
          for (var r3, n2 = Object.keys(t3), o2 = n2.length, i2 = 0; i2 < o2; ++i2) {
            var s2 = n2[i2], a2 = t3[s2];
            _(s2) && null != a2 && (t3[s2] = this.castForQuery(s2, a2, e3));
          }
          var u2 = this && this.casterConstructor && this.casterConstructor.schema && this.casterConstructor.schema.options && this.casterConstructor.schema.options.discriminatorKey, c2 = this && this.casterConstructor && this.casterConstructor.schema && this.casterConstructor.schema.discriminators || {};
          if (null != u2 && null != t3[u2] && null != c2[t3[u2]]) return d(c2[t3[u2]], t3, null, this && this.$$context);
          var l2 = null !== (r3 = this.casterConstructor.schema) && void 0 !== r3 ? r3 : e3.schema;
          return d(l2, t3, null, this && this.$$context);
        }, A.prototype.toJSONSchema = function(t3) {
          var e3 = b("object", "object", null == t3 ? void 0 : t3.useBsonType, false), r3 = this.options.required && "function" != typeof this.options.required;
          return i(i({}, b("array", "array", null == t3 ? void 0 : t3.useBsonType, r3)), {}, { items: i(i({}, e3), this.schema.toJSONSchema(t3)) });
        }, t2.exports = A;
      }, 9166: (t2, e2, r2) => {
        "use strict";
        function n(t3, e3) {
          var r3 = "undefined" != typeof Symbol && t3[Symbol.iterator] || t3["@@iterator"];
          if (!r3) {
            if (Array.isArray(t3) || (r3 = function(t4, e4) {
              if (t4) {
                if ("string" == typeof t4) return o(t4, e4);
                var r4 = {}.toString.call(t4).slice(8, -1);
                return "Object" === r4 && t4.constructor && (r4 = t4.constructor.name), "Map" === r4 || "Set" === r4 ? Array.from(t4) : "Arguments" === r4 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r4) ? o(t4, e4) : void 0;
              }
            }(t3)) || e3 && t3 && "number" == typeof t3.length) {
              r3 && (t3 = r3);
              var n2 = 0, i2 = /* @__PURE__ */ __name(function() {
              }, "i");
              return { s: i2, n: /* @__PURE__ */ __name(function() {
                return n2 >= t3.length ? { done: true } : { done: false, value: t3[n2++] };
              }, "n"), e: /* @__PURE__ */ __name(function(t4) {
                throw t4;
              }, "e"), f: i2 };
            }
            throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }
          var s2, a2 = true, u2 = false;
          return { s: /* @__PURE__ */ __name(function() {
            r3 = r3.call(t3);
          }, "s"), n: /* @__PURE__ */ __name(function() {
            var t4 = r3.next();
            return a2 = t4.done, t4;
          }, "n"), e: /* @__PURE__ */ __name(function(t4) {
            u2 = true, s2 = t4;
          }, "e"), f: /* @__PURE__ */ __name(function() {
            try {
              a2 || null == r3.return || r3.return();
            } finally {
              if (u2) throw s2;
            }
          }, "f") };
        }
        __name(n, "n");
        function o(t3, e3) {
          (null == e3 || e3 > t3.length) && (e3 = t3.length);
          for (var r3 = 0, n2 = Array(e3); r3 < e3; r3++) n2[r3] = t3[r3];
          return n2;
        }
        __name(o, "o");
        var i = r2(8759), s = r2(3696);
        function a(t3, e3, r3) {
          if (null != e3) {
            var o2 = Object.keys(e3).some(function(t4) {
              return "$" === t4[0];
            });
            if (o2) {
              if (e3.$push && v(e3.$push), e3.$addToSet && v(e3.$addToSet), null != e3.$set) for (var i2 = 0, c = Object.keys(e3.$set); i2 < c.length; i2++) {
                var l = c[i2];
                u(r3, l, e3.$set, t3);
              }
              if (null != e3.$setOnInsert) for (var f = 0, p = Object.keys(e3.$setOnInsert); f < p.length; f++) {
                var h = p[f];
                u(r3, h, e3.$setOnInsert, t3);
              }
            }
            var y, d = Object.keys(e3).filter(function(t4) {
              return "$" !== t4[0];
            }), b = n(d);
            try {
              for (b.s(); !(y = b.n()).done; ) {
                var m = y.value;
                u(r3, m, e3, t3);
              }
            } catch (t4) {
              b.e(t4);
            } finally {
              b.f();
            }
          }
          function v(e4) {
            for (var n2 = function() {
              var n3 = i3[o3], u2 = r3.path(n3.replace(/\.\$\./i, ".").replace(/.\$$/, ""));
              if (e4[n3] && u2 && u2.$isMongooseDocumentArray && u2.schema.options.timestamps) {
                var c2 = u2.schema.options.timestamps, l2 = s(c2, "createdAt"), f2 = s(c2, "updatedAt");
                e4[n3].$each ? e4[n3].$each.forEach(function(e5) {
                  null != f2 && (e5[f2] = t3), null != l2 && (e5[l2] = t3), a(t3, e5, u2.schema);
                }) : (null != f2 && (e4[n3][f2] = t3), null != l2 && (e4[n3][l2] = t3), a(t3, e4[n3], u2.schema));
              }
            }, o3 = 0, i3 = Object.keys(e4); o3 < i3.length; o3++) n2();
          }
          __name(v, "v");
        }
        __name(a, "a");
        function u(t3, e3, r3, o2) {
          var u2 = i(e3), c = t3.path(u2);
          if (c) {
            for (var l = [], f = u2.split("."), p = f.length - 1; p > 0; --p) {
              var h = t3.path(f.slice(0, p).join("."));
              null != h && (h.$isMongooseDocumentArray || h.$isSingleNested) && l.push({ parentPath: e3.split(".").slice(0, p).join("."), parentSchemaType: h });
            }
            if (Array.isArray(r3[e3]) && c.$isMongooseDocumentArray) !function(t4, e4, r4) {
              var n2 = e4.schema.options.timestamps, o3 = t4.length;
              if (n2) for (var i2 = s(n2, "createdAt"), u3 = s(n2, "updatedAt"), c2 = 0; c2 < o3; ++c2) null != u3 && (t4[c2][u3] = r4), null != i2 && (t4[c2][i2] = r4), a(r4, t4[c2], e4.schema);
              else for (var l2 = 0; l2 < o3; ++l2) a(r4, t4[l2], e4.schema);
            }(r3[e3], c, o2);
            else if (r3[e3] && c.$isSingleNested) !function(t4, e4, r4) {
              var n2 = e4.schema.options.timestamps;
              if (n2) {
                var o3 = s(n2, "createdAt"), i2 = s(n2, "updatedAt");
                null != i2 && (t4[i2] = r4), null != o3 && (t4[o3] = r4), a(r4, t4, e4.schema);
              } else a(r4, t4, e4.schema);
            }(r3[e3], c, o2);
            else if (l.length > 0) {
              var y, d = n(l);
              try {
                for (d.s(); !(y = d.n()).done; ) {
                  var b = y.value, m = b.parentPath, v = b.parentSchemaType, g = v.schema.options.timestamps, _ = s(g, "updatedAt");
                  if (g && null != _) {
                    if (v.$isSingleNested) r3[m + "." + _] = o2;
                    else if (v.$isMongooseDocumentArray) {
                      var w = e3.substring(m.length + 1);
                      if (/^\d+$/.test(w)) {
                        r3[m + "." + w][_] = o2;
                        continue;
                      }
                      var O = w.indexOf(".");
                      r3[m + "." + (w = -1 !== O ? w.substring(0, O) : w) + "." + _] = o2;
                    }
                  }
                }
              } catch (t4) {
                d.e(t4);
              } finally {
                d.f();
              }
            } else if (null != c.schema && c.schema != t3 && r3[e3]) {
              var S = c.schema.options.timestamps, $ = s(S, "createdAt"), j = s(S, "updatedAt");
              if (!S) return;
              null != j && (r3[e3][j] = o2), null != $ && (r3[e3][$] = o2);
            }
          }
        }
        __name(u, "u");
        t2.exports = a;
      }, 9183: (t2) => {
        "use strict";
        t2.exports = function(t3) {
          return "function" == typeof t3 && t3.constructor && "AsyncFunction" === t3.constructor.name;
        };
      }, 9206: (t2) => {
        "use strict";
        t2.exports = EvalError;
      }, 9247: (t2, e2, r2) => {
        "use strict";
        var n = r2(2481), o = r2(2273);
        t2.exports = function() {
          var t3 = n();
          return o(Object, { is: t3 }, { is: /* @__PURE__ */ __name(function() {
            return Object.is !== t3;
          }, "is") }), t3;
        };
      }, 9344: (t2, e2, r2) => {
        "use strict";
        function n(t3) {
          return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
            return typeof t4;
          } : function(t4) {
            return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
          }, n(t3);
        }
        __name(n, "n");
        var o, i = r2(3071), s = r2(953)(), a = r2(5994), u = r2(1464);
        if (s) {
          var c = i("RegExp.prototype.exec"), l = {}, f = /* @__PURE__ */ __name(function() {
            throw l;
          }, "f"), p = { toString: f, valueOf: f };
          "symbol" === n(Symbol.toPrimitive) && (p[Symbol.toPrimitive] = f), o = /* @__PURE__ */ __name(function(t3) {
            if (!t3 || "object" !== n(t3)) return false;
            var e3 = u(t3, "lastIndex");
            if (!e3 || !a(e3, "value")) return false;
            try {
              c(t3, p);
            } catch (t4) {
              return t4 === l;
            }
          }, "o");
        } else {
          var h = i("Object.prototype.toString");
          o = /* @__PURE__ */ __name(function(t3) {
            return !(!t3 || "object" !== n(t3) && "function" != typeof t3) && "[object RegExp]" === h(t3);
          }, "o");
        }
        t2.exports = o;
      }, 9380: (t2, e2, r2) => {
        "use strict";
        function n() {
          var t3, e3, r3 = "function" == typeof Symbol ? Symbol : {}, i2 = r3.iterator || "@@iterator", s2 = r3.toStringTag || "@@toStringTag";
          function a2(r4, n2, i3, s3) {
            var a3 = n2 && n2.prototype instanceof c2 ? n2 : c2, l3 = Object.create(a3.prototype);
            return o(l3, "_invoke", function(r5, n3, o2) {
              var i4, s4, a4, c3 = 0, l4 = o2 || [], f3 = false, p3 = { p: 0, n: 0, v: t3, a: h2, f: h2.bind(t3, 4), d: /* @__PURE__ */ __name(function(e4, r6) {
                return i4 = e4, s4 = 0, a4 = t3, p3.n = r6, u2;
              }, "d") };
              function h2(r6, n4) {
                for (s4 = r6, a4 = n4, e3 = 0; !f3 && c3 && !o3 && e3 < l4.length; e3++) {
                  var o3, i5 = l4[e3], h3 = p3.p, y2 = i5[2];
                  r6 > 3 ? (o3 = y2 === n4) && (a4 = i5[(s4 = i5[4]) ? 5 : (s4 = 3, 3)], i5[4] = i5[5] = t3) : i5[0] <= h3 && ((o3 = r6 < 2 && h3 < i5[1]) ? (s4 = 0, p3.v = n4, p3.n = i5[1]) : h3 < y2 && (o3 = r6 < 3 || i5[0] > n4 || n4 > y2) && (i5[4] = r6, i5[5] = n4, p3.n = y2, s4 = 0));
                }
                if (o3 || r6 > 1) return u2;
                throw f3 = true, n4;
              }
              __name(h2, "h");
              return function(o3, l5, y2) {
                if (c3 > 1) throw TypeError("Generator is already running");
                for (f3 && 1 === l5 && h2(l5, y2), s4 = l5, a4 = y2; (e3 = s4 < 2 ? t3 : a4) || !f3; ) {
                  i4 || (s4 ? s4 < 3 ? (s4 > 1 && (p3.n = -1), h2(s4, a4)) : p3.n = a4 : p3.v = a4);
                  try {
                    if (c3 = 2, i4) {
                      if (s4 || (o3 = "next"), e3 = i4[o3]) {
                        if (!(e3 = e3.call(i4, a4))) throw TypeError("iterator result is not an object");
                        if (!e3.done) return e3;
                        a4 = e3.value, s4 < 2 && (s4 = 0);
                      } else 1 === s4 && (e3 = i4.return) && e3.call(i4), s4 < 2 && (a4 = TypeError("The iterator does not provide a '" + o3 + "' method"), s4 = 1);
                      i4 = t3;
                    } else if ((e3 = (f3 = p3.n < 0) ? a4 : r5.call(n3, p3)) !== u2) break;
                  } catch (e4) {
                    i4 = t3, s4 = 1, a4 = e4;
                  } finally {
                    c3 = 1;
                  }
                }
                return { value: e3, done: f3 };
              };
            }(r4, i3, s3), true), l3;
          }
          __name(a2, "a");
          var u2 = {};
          function c2() {
          }
          __name(c2, "c");
          function l2() {
          }
          __name(l2, "l");
          function f2() {
          }
          __name(f2, "f");
          e3 = Object.getPrototypeOf;
          var p2 = [][i2] ? e3(e3([][i2]())) : (o(e3 = {}, i2, function() {
            return this;
          }), e3), h = f2.prototype = c2.prototype = Object.create(p2);
          function y(t4) {
            return Object.setPrototypeOf ? Object.setPrototypeOf(t4, f2) : (t4.__proto__ = f2, o(t4, s2, "GeneratorFunction")), t4.prototype = Object.create(h), t4;
          }
          __name(y, "y");
          return l2.prototype = f2, o(h, "constructor", f2), o(f2, "constructor", l2), l2.displayName = "GeneratorFunction", o(f2, s2, "GeneratorFunction"), o(h), o(h, s2, "Generator"), o(h, i2, function() {
            return this;
          }), o(h, "toString", function() {
            return "[object Generator]";
          }), (n = /* @__PURE__ */ __name(function() {
            return { w: a2, m: y };
          }, "n"))();
        }
        __name(n, "n");
        function o(t3, e3, r3, n2) {
          var i2 = Object.defineProperty;
          try {
            i2({}, "", {});
          } catch (t4) {
            i2 = 0;
          }
          o = /* @__PURE__ */ __name(function(t4, e4, r4, n3) {
            function s2(e5, r5) {
              o(t4, e5, function(t5) {
                return this._invoke(e5, r5, t5);
              });
            }
            __name(s2, "s");
            e4 ? i2 ? i2(t4, e4, { value: r4, enumerable: !n3, configurable: !n3, writable: !n3 }) : t4[e4] = r4 : (s2("next", 0), s2("throw", 1), s2("return", 2));
          }, "o"), o(t3, e3, r3, n2);
        }
        __name(o, "o");
        function i(t3, e3, r3, n2, o2, i2, s2) {
          try {
            var a2 = t3[i2](s2), u2 = a2.value;
          } catch (t4) {
            return void r3(t4);
          }
          a2.done ? e3(u2) : Promise.resolve(u2).then(n2, o2);
        }
        __name(i, "i");
        function s(t3) {
          return s = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
            return typeof t4;
          } : function(t4) {
            return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
          }, s(t3);
        }
        __name(s, "s");
        var a = r2(2400), u = r2(2746), c = r2(3303)._, l = r2(7352), f = r2(8768);
        function p(t3, e3, r3, n2, o2) {
          if ("object" === s(n2) && null != n2 && null == o2 && (o2 = n2, n2 = void 0), null != r3) {
            var i2 = { isNew: r3.isNew };
            "defaults" in r3.$__ && (i2.defaults = r3.$__.defaults), o2 = Object.assign(i2, o2);
          }
          null != o2 && null != o2.path && (this.$basePath = o2.path), a.call(this, t3, e3, n2, o2), delete this.$__.priorDoc;
        }
        __name(p, "p");
        t2.exports = p, p.prototype = Object.create(a.prototype), Object.defineProperty(p.prototype, "$isSubdocument", { configurable: false, writable: false, value: true }), Object.defineProperty(p.prototype, "$isSingleNested", { configurable: false, writable: false, value: true }), p.prototype.toBSON = function() {
          return this.toObject(c);
        }, p.prototype.save = function() {
          var t3, e3 = (t3 = n().m(/* @__PURE__ */ __name(function t4(e4) {
            var r3 = this;
            return n().w(function(t5) {
              for (; ; ) if (0 === t5.n) return (e4 = e4 || {}).suppressWarning || f.warn("mongoose: calling `save()` on a subdoc does **not** save the document to MongoDB, it only runs save middleware. Use `subdoc.save({ suppressWarning: true })` to hide this warning if you're sure this behavior is right for your app."), t5.a(2, new Promise(function(t6, e5) {
                r3.$__save(function(n2) {
                  if (null != n2) return e5(n2);
                  t6(r3);
                });
              }));
            }, t4);
          }, "t")), function() {
            var e4 = this, r3 = arguments;
            return new Promise(function(n2, o2) {
              var s2 = t3.apply(e4, r3);
              function a2(t4) {
                i(s2, n2, o2, a2, u2, "next", t4);
              }
              __name(a2, "a");
              function u2(t4) {
                i(s2, n2, o2, a2, u2, "throw", t4);
              }
              __name(u2, "u");
              a2(void 0);
            });
          });
          return function(t4) {
            return e3.apply(this, arguments);
          };
        }(), p.prototype.$__fullPath = function(t3) {
          return this.$__.fullPath || this.ownerDocument(), t3 ? this.$__.fullPath + "." + t3 : this.$__.fullPath;
        }, p.prototype.$__pathRelativeToParent = function(t3) {
          return null == t3 ? this.$basePath : [this.$basePath, t3].join(".");
        }, p.prototype.$__save = function(t3) {
          var e3 = this;
          return u(function() {
            return t3(null, e3);
          });
        }, p.prototype.$isValid = function(t3) {
          var e3 = this.$parent(), r3 = this.$__pathRelativeToParent(t3);
          return null != e3 && null != r3 ? e3.$isValid(r3) : a.prototype.$isValid.call(this, t3);
        }, p.prototype.markModified = function(t3) {
          a.prototype.markModified.call(this, t3);
          var e3 = this.$parent(), r3 = this.$__pathRelativeToParent(t3);
          if (null != e3 && null != r3) {
            var n2 = this.$__pathRelativeToParent().replace(/\.$/, "");
            e3.isDirectModified(n2) || this.isNew || this.$__parent.markModified(r3, this);
          }
        }, p.prototype.isModified = function(t3, e3, r3) {
          var n2 = this, o2 = this.$parent();
          return null != o2 ? (Array.isArray(t3) || "string" == typeof t3 ? t3 = (t3 = Array.isArray(t3) ? t3 : t3.split(" ")).map(function(t4) {
            return n2.$__pathRelativeToParent(t4);
          }).filter(function(t4) {
            return null != t4;
          }) : t3 || (t3 = this.$__pathRelativeToParent()), o2.$isModified(t3, e3, r3)) : a.prototype.isModified.call(this, t3, e3, r3);
        }, p.prototype.$markValid = function(t3) {
          a.prototype.$markValid.call(this, t3);
          var e3 = this.$parent(), r3 = this.$__pathRelativeToParent(t3);
          null != e3 && null != r3 && e3.$markValid(r3);
        }, p.prototype.invalidate = function(t3, e3, r3) {
          a.prototype.invalidate.call(this, t3, e3, r3);
          var n2 = this.$parent(), o2 = this.$__pathRelativeToParent(t3);
          if (null != n2 && null != o2) n2.invalidate(o2, e3, r3);
          else if ("cast" === e3.kind || "CastError" === e3.name || null == o2) throw e3;
          return this.ownerDocument().$__.validationError;
        }, p.prototype.$ignore = function(t3) {
          a.prototype.$ignore.call(this, t3);
          var e3 = this.$parent(), r3 = this.$__pathRelativeToParent(t3);
          null != e3 && null != r3 && e3.$ignore(r3);
        }, p.prototype.ownerDocument = function() {
          if (this.$__.ownerDocument) return this.$__.ownerDocument;
          for (var t3 = this, e3 = [], r3 = /* @__PURE__ */ new Set([t3]); "function" == typeof t3.$__pathRelativeToParent; ) {
            e3.unshift(t3.$__pathRelativeToParent(void 0, true));
            var n2 = t3.$parent();
            if (null == n2) break;
            if (t3 = n2, r3.has(t3)) throw new Error("Infinite subdocument loop: subdoc with _id " + t3._id + " is a parent of itself");
            r3.add(t3);
          }
          return this.$__.fullPath = e3.join("."), this.$__.ownerDocument = t3, this.$__.ownerDocument;
        }, p.prototype.$__fullPathWithIndexes = function() {
          for (var t3 = this, e3 = [], r3 = /* @__PURE__ */ new Set([t3]); "function" == typeof t3.$__pathRelativeToParent; ) {
            e3.unshift(t3.$__pathRelativeToParent(void 0, false));
            var n2 = t3.$parent();
            if (null == n2) break;
            if (t3 = n2, r3.has(t3)) throw new Error("Infinite subdocument loop: subdoc with _id " + t3._id + " is a parent of itself");
            r3.add(t3);
          }
          return e3.join(".");
        }, p.prototype.parent = function() {
          return this.$__parent;
        }, p.prototype.$parent = p.prototype.parent, p.prototype.$__deleteOne = function(t3) {
          if (null != t3) return t3(null, this);
        }, p.prototype.$__removeFromParent = function() {
          this.$__parent.set(this.$basePath, null);
        }, p.prototype.deleteOne = function(t3, e3) {
          if ("function" == typeof t3 && (e3 = t3, t3 = null), function(t4) {
            var e4 = t4.ownerDocument();
            function r4() {
              e4.$removeListener("save", r4), e4.$removeListener("deleteOne", r4), t4.emit("deleteOne", t4), t4.constructor.emit("deleteOne", t4);
            }
            __name(r4, "r");
            e4.$on("save", r4), e4.$on("deleteOne", r4);
          }(this), !t3 || !t3.noop) {
            this.$__removeFromParent();
            var r3 = this.ownerDocument();
            r3.$__.removedSubdocs = r3.$__.removedSubdocs || [], r3.$__.removedSubdocs.push(this);
          }
          return this.$__deleteOne(e3);
        }, p.prototype.populate = function() {
          throw new Error('Mongoose does not support calling populate() on nested docs. Instead of `doc.nested.populate("path")`, use `doc.populate("nested.path")`');
        }, p.prototype.inspect = function() {
          return this.toObject();
        }, l.inspect.custom && (p.prototype[l.inspect.custom] = p.prototype.inspect), p.prototype.$toObject = function(t3, e3) {
          var r3, n2, o2, i2, s2 = a.prototype.$toObject.call(this, t3, e3);
          if (0 !== Object.keys(s2).length || null == (null == t3 ? void 0 : t3._calledWithOptions) || !(null !== (r3 = null !== (n2 = null === (o2 = t3._calledWithOptions) || void 0 === o2 ? void 0 : o2.minimize) && void 0 !== n2 ? n2 : null == this || null === (i2 = this.$__schemaTypeOptions) || void 0 === i2 ? void 0 : i2.minimize) && void 0 !== r3 ? r3 : t3.minimize) || this.constructor.$__required) return s2;
        };
      }, 9460: (t2, e2, r2) => {
        "use strict";
        var n = r2(5832).hp, o = r2(3609);
        function i(t3, e3) {
          var r3 = Number(e3);
          if (isNaN(r3)) throw new o("number", e3, t3);
          return r3;
        }
        __name(i, "i");
        t2.exports = function(t3) {
          var e3 = this;
          return Array.isArray(t3) ? t3.map(function(t4) {
            return i(e3.path, t4);
          }) : n.isBuffer(t3) ? t3 : i(e3.path, t3);
        };
      }, 9471: (t2) => {
        "use strict";
        t2.exports = Math.abs;
      }, 9528: (t2, e2, r2) => {
        "use strict";
        function n(t3) {
          return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
            return typeof t4;
          } : function(t4) {
            return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
          }, n(t3);
        }
        __name(n, "n");
        function o() {
          try {
            var t3 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch (t4) {
          }
          return (o = /* @__PURE__ */ __name(function() {
            return !!t3;
          }, "o"))();
        }
        __name(o, "o");
        function i(t3) {
          return i = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t4) {
            return t4.__proto__ || Object.getPrototypeOf(t4);
          }, i(t3);
        }
        __name(i, "i");
        function s(t3, e3) {
          return s = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t4, e4) {
            return t4.__proto__ = e4, t4;
          }, s(t3, e3);
        }
        __name(s, "s");
        var a = function(t3) {
          function e3() {
            return function(t4, e4) {
              if (!(t4 instanceof e4)) throw new TypeError("Cannot call a class as a function");
            }(this, e3), function(t4, e4, r4) {
              return e4 = i(e4), function(t5, e5) {
                if (e5 && ("object" == n(e5) || "function" == typeof e5)) return e5;
                if (void 0 !== e5) throw new TypeError("Derived constructors may only return object or undefined");
                return function(t6) {
                  if (void 0 === t6) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                  return t6;
                }(t5);
              }(t4, o() ? Reflect.construct(e4, r4 || [], i(t4).constructor) : e4.apply(t4, r4));
            }(this, e3, arguments);
          }
          __name(e3, "e");
          return function(t4, e4) {
            if ("function" != typeof e4 && null !== e4) throw new TypeError("Super expression must either be null or a function");
            t4.prototype = Object.create(e4 && e4.prototype, { constructor: { value: t4, writable: true, configurable: true } }), Object.defineProperty(t4, "prototype", { writable: false }), e4 && s(t4, e4);
          }(e3, t3), r3 = e3, Object.defineProperty(r3, "prototype", { writable: false }), r3;
          var r3;
        }(r2(8879)), u = r2(5761);
        Object.defineProperty(a.prototype, "enum", u), Object.defineProperty(a.prototype, "match", u), Object.defineProperty(a.prototype, "lowercase", u), Object.defineProperty(a.prototype, "trim", u), Object.defineProperty(a.prototype, "uppercase", u), Object.defineProperty(a.prototype, "minLength", u), Object.defineProperty(a.prototype, "minlength", u), Object.defineProperty(a.prototype, "maxLength", u), Object.defineProperty(a.prototype, "maxlength", u), Object.defineProperty(a.prototype, "populate", u), t2.exports = a;
      }, 9538: (t2, e2, r2) => {
        "use strict";
        function n(t3) {
          return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
            return typeof t4;
          } : function(t4) {
            return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
          }, n(t3);
        }
        __name(n, "n");
        function o(t3, e3) {
          for (var r3 = 0; r3 < e3.length; r3++) {
            var n2 = e3[r3];
            n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(t3, i(n2.key), n2);
          }
        }
        __name(o, "o");
        function i(t3) {
          var e3 = function(t4) {
            if ("object" != n(t4) || !t4) return t4;
            var e4 = t4[Symbol.toPrimitive];
            if (void 0 !== e4) {
              var r3 = e4.call(t4, "string");
              if ("object" != n(r3)) return r3;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(t4);
          }(t3);
          return "symbol" == n(e3) ? e3 : e3 + "";
        }
        __name(i, "i");
        function s() {
          try {
            var t3 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch (t4) {
          }
          return (s = /* @__PURE__ */ __name(function() {
            return !!t3;
          }, "s"))();
        }
        __name(s, "s");
        function a(t3) {
          return a = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t4) {
            return t4.__proto__ || Object.getPrototypeOf(t4);
          }, a(t3);
        }
        __name(a, "a");
        function u(t3, e3) {
          return u = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t4, e4) {
            return t4.__proto__ = e4, t4;
          }, u(t3, e3);
        }
        __name(u, "u");
        var c = r2(8213), l = function(t3) {
          function e3(t4, r4) {
            var o2;
            !function(t5, e4) {
              if (!(t5 instanceof e4)) throw new TypeError("Cannot call a class as a function");
            }(this, e3);
            var i3 = t4.message;
            i3 || (i3 = c.messages.general.default);
            var u2 = f(i3, t4, r4);
            return o2 = function(t5, e4, r5) {
              return e4 = a(e4), function(t6, e5) {
                if (e5 && ("object" == n(e5) || "function" == typeof e5)) return e5;
                if (void 0 !== e5) throw new TypeError("Derived constructors may only return object or undefined");
                return function(t7) {
                  if (void 0 === t7) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                  return t7;
                }(t6);
              }(t5, s() ? Reflect.construct(e4, r5 || [], a(t5).constructor) : e4.apply(t5, r5));
            }(this, e3, [u2]), t4 = Object.assign({}, t4, { message: u2 }), o2.properties = t4, o2.kind = t4.type, o2.path = t4.path, o2.value = t4.value, o2.reason = t4.reason, o2;
          }
          __name(e3, "e");
          return function(t4, e4) {
            if ("function" != typeof e4 && null !== e4) throw new TypeError("Super expression must either be null or a function");
            t4.prototype = Object.create(e4 && e4.prototype, { constructor: { value: t4, writable: true, configurable: true } }), Object.defineProperty(t4, "prototype", { writable: false }), e4 && u(t4, e4);
          }(e3, t3), r3 = e3, (i2 = [{ key: "toString", value: /* @__PURE__ */ __name(function() {
            return this.message;
          }, "value") }, { key: "toJSON", value: /* @__PURE__ */ __name(function() {
            return Object.assign({ name: this.name, message: this.message }, this);
          }, "value") }]) && o(r3.prototype, i2), Object.defineProperty(r3, "prototype", { writable: false }), r3;
          var r3, i2;
        }(c);
        function f(t3, e3, r3) {
          if ("function" == typeof t3) return t3(e3, r3);
          for (var n2 = 0, o2 = Object.keys(e3); n2 < o2.length; n2++) {
            var i2 = o2[n2];
            "message" !== i2 && (t3 = t3.replace("{" + i2.toUpperCase() + "}", e3[i2]));
          }
          return t3;
        }
        __name(f, "f");
        Object.defineProperty(l.prototype, "name", { value: "ValidatorError" }), Object.defineProperty(l.prototype, "properties", { enumerable: false, writable: true, value: null }), l.prototype.formatMessage = f, t2.exports = l;
      }, 9539: (t2) => {
        "use strict";
        function e2(t3, e3) {
          return function(t4) {
            if (Array.isArray(t4)) return t4;
          }(t3) || function(t4, e4) {
            var r3 = null == t4 ? null : "undefined" != typeof Symbol && t4[Symbol.iterator] || t4["@@iterator"];
            if (null != r3) {
              var n, o, i, s, a = [], u = true, c = false;
              try {
                if (i = (r3 = r3.call(t4)).next, 0 === e4) {
                  if (Object(r3) !== r3) return;
                  u = false;
                } else for (; !(u = (n = i.call(r3)).done) && (a.push(n.value), a.length !== e4); u = true) ;
              } catch (t5) {
                c = true, o = t5;
              } finally {
                try {
                  if (!u && null != r3.return && (s = r3.return(), Object(s) !== s)) return;
                } finally {
                  if (c) throw o;
                }
              }
              return a;
            }
          }(t3, e3) || function(t4, e4) {
            if (t4) {
              if ("string" == typeof t4) return r2(t4, e4);
              var n = {}.toString.call(t4).slice(8, -1);
              return "Object" === n && t4.constructor && (n = t4.constructor.name), "Map" === n || "Set" === n ? Array.from(t4) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? r2(t4, e4) : void 0;
            }
          }(t3, e3) || function() {
            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }();
        }
        __name(e2, "e");
        function r2(t3, e3) {
          (null == e3 || e3 > t3.length) && (e3 = t3.length);
          for (var r3 = 0, n = Array(e3); r3 < e3; r3++) n[r3] = t3[r3];
          return n;
        }
        __name(r2, "r");
        t2.exports = function(t3, r3, n) {
          for (var o = {}, i = 0, s = Object.keys(r3.tree); i < s.length; i++) {
            var a = s[i];
            n && (t3.paths[a] || t3.nested[a] || t3.singleNestedPaths[a]) || (o[a] = r3.tree[a]);
          }
          t3.options._isMerging = true, t3.add(o, null), delete t3.options._isMerging, t3.callQueue = t3.callQueue.concat(r3.callQueue), t3.method(r3.methods), t3.static(r3.statics);
          for (var u = 0, c = Object.entries(r3._userProvidedOptions); u < c.length; u++) {
            var l = e2(c[u], 2), f = l[0], p = l[1];
            f in t3._userProvidedOptions || t3.set(f, p);
          }
          for (var h in r3.query) t3.query[h] = r3.query[h];
          for (var y in r3.virtuals) t3.virtuals[y] = r3.virtuals[y].clone();
          t3._indexes = t3._indexes.concat(r3._indexes || []), t3.s.hooks.merge(r3.s.hooks, false);
        };
      }, 9553: (t2, e2, r2) => {
        "use strict";
        var n = r2(5832).hp;
        function o(t3) {
          return o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
            return typeof t4;
          } : function(t4) {
            return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
          }, o(t3);
        }
        __name(o, "o");
        var i = r2(9639), s = r2(2402);
        t2.exports = function(t3) {
          return null == t3 ? t3 : "object" === o(t3) && "string" == typeof t3.$numberDecimal ? i.fromString(t3.$numberDecimal) : t3 instanceof i ? t3 : "string" == typeof t3 ? i.fromString(t3) : "function" == typeof n && n.isBuffer(t3) || "function" == typeof Uint8Array && t3 instanceof Uint8Array ? new i(t3) : "number" == typeof t3 ? i.fromString(String(t3)) : "function" == typeof t3.valueOf && "string" == typeof t3.valueOf() ? i.fromString(t3.valueOf()) : void s.ok(false);
        };
      }, 9600: (t2, e2, r2) => {
        "use strict";
        e2.Array = r2(7557), e2.Buffer = r2(6365), e2.Document = e2.Embedded = r2(6547), e2.DocumentArray = r2(4878), e2.Double = r2(2822), e2.Decimal128 = r2(9639), e2.ObjectId = r2(5549), e2.Map = r2(2081), e2.Subdocument = r2(9380), e2.UUID = r2(1344);
      }, 9604: (t2, e2, r2) => {
        "use strict";
        var n = r2(5558).p, o = r2(5558).G;
        function i(t3, e3) {
          switch (t3.$geometry.type) {
            case "Polygon":
            case "LineString":
            case "Point":
              n(t3.$geometry.coordinates, e3);
          }
          return s(e3, t3), t3;
        }
        __name(i, "i");
        function s(t3, e3) {
          e3.$maxDistance && (e3.$maxDistance = o.call(t3, e3.$maxDistance)), e3.$minDistance && (e3.$minDistance = o.call(t3, e3.$minDistance));
        }
        __name(s, "s");
        e2.cast$geoIntersects = function(t3) {
          if (t3.$geometry) return i(t3, this), t3;
        }, e2.cast$near = function(t3) {
          var e3 = r2(7760);
          if (Array.isArray(t3)) return n(t3, this), t3;
          if (s(this, t3), t3 && t3.$geometry) return i(t3, this);
          if (!Array.isArray(t3)) throw new TypeError("$near must be either an array or an object with a $geometry property");
          return e3.prototype.castForQuery.call(this, null, t3);
        }, e2.cast$within = function(t3) {
          var e3 = this;
          if (s(this, t3), t3.$box || t3.$polygon) {
            var r3 = t3.$box ? "$box" : "$polygon";
            t3[r3].forEach(function(t4) {
              if (!Array.isArray(t4)) throw new TypeError("Invalid $within $box argument. Expected an array, received " + t4);
              t4.forEach(function(r4, n3) {
                t4[n3] = o.call(e3, r4);
              });
            });
          } else if (t3.$center || t3.$centerSphere) {
            var n2 = t3.$center ? "$center" : "$centerSphere";
            t3[n2].forEach(function(r4, i2) {
              Array.isArray(r4) ? r4.forEach(function(t4, n3) {
                r4[n3] = o.call(e3, t4);
              }) : t3[n2][i2] = o.call(e3, r4);
            });
          } else t3.$geometry && i(t3, this);
          return t3;
        };
      }, 9639: (t2, e2, r2) => {
        "use strict";
        t2.exports = r2(6353).Decimal128;
      }, 9696: (t2) => {
        "use strict";
        var e2 = /^function\s*([^\s(]+)/;
        t2.exports = function(t3) {
          return t3.name || (t3.toString().trim().match(e2) || [])[1];
        };
      }, 9809: (t2) => {
        "use strict";
        function e2(t3) {
          return e2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
            return typeof t4;
          } : function(t4) {
            return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
          }, e2(t3);
        }
        __name(e2, "e");
        var r2, n, o = Function.prototype.toString, i = "object" === ("undefined" == typeof Reflect ? "undefined" : e2(Reflect)) && null !== Reflect && Reflect.apply;
        if ("function" == typeof i && "function" == typeof Object.defineProperty) try {
          r2 = Object.defineProperty({}, "length", { get: /* @__PURE__ */ __name(function() {
            throw n;
          }, "get") }), n = {}, i(function() {
            throw 42;
          }, null, r2);
        } catch (t3) {
          t3 !== n && (i = null);
        }
        else i = null;
        var s = /^\s*class\b/, a = /* @__PURE__ */ __name(function(t3) {
          try {
            var e3 = o.call(t3);
            return s.test(e3);
          } catch (t4) {
            return false;
          }
        }, "a"), u = /* @__PURE__ */ __name(function(t3) {
          try {
            return !a(t3) && (o.call(t3), true);
          } catch (t4) {
            return false;
          }
        }, "u"), c = Object.prototype.toString, l = "function" == typeof Symbol && !!Symbol.toStringTag, f = !(0 in [,]), p = /* @__PURE__ */ __name(function() {
          return false;
        }, "p");
        if ("object" === ("undefined" == typeof document ? "undefined" : e2(document))) {
          var h = document.all;
          c.call(h) === c.call(document.all) && (p = /* @__PURE__ */ __name(function(t3) {
            if ((f || !t3) && (void 0 === t3 || "object" === e2(t3))) try {
              var r3 = c.call(t3);
              return ("[object HTMLAllCollection]" === r3 || "[object HTML document.all class]" === r3 || "[object HTMLCollection]" === r3 || "[object Object]" === r3) && null == t3("");
            } catch (t4) {
            }
            return false;
          }, "p"));
        }
        t2.exports = i ? function(t3) {
          if (p(t3)) return true;
          if (!t3) return false;
          if ("function" != typeof t3 && "object" !== e2(t3)) return false;
          try {
            i(t3, null, r2);
          } catch (t4) {
            if (t4 !== n) return false;
          }
          return !a(t3) && u(t3);
        } : function(t3) {
          if (p(t3)) return true;
          if (!t3) return false;
          if ("function" != typeof t3 && "object" !== e2(t3)) return false;
          if (l) return u(t3);
          if (a(t3)) return false;
          var r3 = c.call(t3);
          return !("[object Function]" !== r3 && "[object GeneratorFunction]" !== r3 && !/^\[object HTML/.test(r3)) && u(t3);
        };
      }, 9834: (t2, e2, r2) => {
        "use strict";
        function n(t3) {
          return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
            return typeof t4;
          } : function(t4) {
            return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
          }, n(t3);
        }
        __name(n, "n");
        var o = r2(3777), i = r2(3426), s = r2(9122), a = r2(3071), u = r2(1464), c = r2(209), l = a("Object.prototype.toString"), f = r2(953)(), p = "undefined" == typeof globalThis ? r2.g : globalThis, h = i(), y = a("String.prototype.slice"), d = a("Array.prototype.indexOf", true) || function(t3, e3) {
          for (var r3 = 0; r3 < t3.length; r3 += 1) if (t3[r3] === e3) return r3;
          return -1;
        }, b = { __proto__: null };
        o(h, f && u && c ? function(t3) {
          var e3 = new p[t3]();
          if (Symbol.toStringTag in e3 && c) {
            var r3 = c(e3), n2 = u(r3, Symbol.toStringTag);
            if (!n2 && r3) {
              var o2 = c(r3);
              n2 = u(o2, Symbol.toStringTag);
            }
            b["$" + t3] = s(n2.get);
          }
        } : function(t3) {
          var e3 = new p[t3](), r3 = e3.slice || e3.set;
          r3 && (b["$" + t3] = s(r3));
        }), t2.exports = function(t3) {
          if (!t3 || "object" !== n(t3)) return false;
          if (!f) {
            var e3 = y(l(t3), 8, -1);
            return d(h, e3) > -1 ? e3 : "Object" === e3 && function(t4) {
              var e4 = false;
              return o(b, function(r3, n2) {
                if (!e4) try {
                  r3(t4), e4 = y(n2, 1);
                } catch (t5) {
                }
              }), e4;
            }(t3);
          }
          return u ? function(t4) {
            var e4 = false;
            return o(b, function(r3, n2) {
              if (!e4) try {
                "$" + r3(t4) === n2 && (e4 = y(n2, 1));
              } catch (t5) {
              }
            }), e4;
          }(t3) : null;
        };
      }, 9848: (t2) => {
        "use strict";
        function e2(t3) {
          return e2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
            return typeof t4;
          } : function(t4) {
            return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
          }, e2(t3);
        }
        __name(e2, "e");
        t2.exports = function(t3) {
          t3.pre("save", false, function(t4, r2) {
            var n = this, o = this;
            if (this.$isSubdocument) return t4();
            if (r2 && "object" === e2(r2) && "validateBeforeSave" in r2 ? r2.validateBeforeSave : this.$__schema.options.validateBeforeSave) {
              var i = r2 && "object" === e2(r2) && "validateModifiedOnly" in r2 ? { validateModifiedOnly: r2.validateModifiedOnly } : null;
              this.$validate(i).then(function() {
                n.$op = "save", t4();
              }, function(e3) {
                o.$__schema.s.hooks.execPost("save:error", o, [o], { error: e3 }, function(e4) {
                  o.$op = "save", t4(e4);
                });
              });
            } else t4();
          }, null, true);
        };
      }, 9870: (t2) => {
        "use strict";
        t2.exports = Error;
      }, 9907: (t2) => {
        "use strict";
        t2.exports = SyntaxError;
      }, 9939: (t2) => {
        "use strict";
        t2.exports = RangeError;
      } }, e = {};
      function r(n) {
        var o = e[n];
        if (void 0 !== o) return o.exports;
        var i = e[n] = { exports: {} };
        return t[n](i, i.exports, r), i.exports;
      }
      __name(r, "r");
      return r.d = (t2, e2) => {
        for (var n in e2) r.o(e2, n) && !r.o(t2, n) && Object.defineProperty(t2, n, { enumerable: true, get: e2[n] });
      }, r.g = function() {
        if ("object" == typeof globalThis) return globalThis;
        try {
          return this || new Function("return this")();
        } catch (t2) {
          if ("object" == typeof window) return window;
        }
      }(), r.o = (t2, e2) => Object.prototype.hasOwnProperty.call(t2, e2), r.r = (t2) => {
        "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(t2, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(t2, "__esModule", { value: true });
      }, r(4829);
    })());
  }
});

// node-built-in-modules:buffer
import libDefault from "buffer";
var require_buffer = __commonJS({
  "node-built-in-modules:buffer"(exports, module) {
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    module.exports = libDefault;
  }
});

// node_modules/safe-buffer/index.js
var require_safe_buffer = __commonJS({
  "node_modules/safe-buffer/index.js"(exports, module) {
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    var buffer = require_buffer();
    var Buffer2 = buffer.Buffer;
    function copyProps(src, dst) {
      for (var key in src) {
        dst[key] = src[key];
      }
    }
    __name(copyProps, "copyProps");
    if (Buffer2.from && Buffer2.alloc && Buffer2.allocUnsafe && Buffer2.allocUnsafeSlow) {
      module.exports = buffer;
    } else {
      copyProps(buffer, exports);
      exports.Buffer = SafeBuffer;
    }
    function SafeBuffer(arg, encodingOrOffset, length) {
      return Buffer2(arg, encodingOrOffset, length);
    }
    __name(SafeBuffer, "SafeBuffer");
    SafeBuffer.prototype = Object.create(Buffer2.prototype);
    copyProps(Buffer2, SafeBuffer);
    SafeBuffer.from = function(arg, encodingOrOffset, length) {
      if (typeof arg === "number") {
        throw new TypeError("Argument must not be a number");
      }
      return Buffer2(arg, encodingOrOffset, length);
    };
    SafeBuffer.alloc = function(size, fill, encoding) {
      if (typeof size !== "number") {
        throw new TypeError("Argument must be a number");
      }
      var buf = Buffer2(size);
      if (fill !== void 0) {
        if (typeof encoding === "string") {
          buf.fill(fill, encoding);
        } else {
          buf.fill(fill);
        }
      } else {
        buf.fill(0);
      }
      return buf;
    };
    SafeBuffer.allocUnsafe = function(size) {
      if (typeof size !== "number") {
        throw new TypeError("Argument must be a number");
      }
      return Buffer2(size);
    };
    SafeBuffer.allocUnsafeSlow = function(size) {
      if (typeof size !== "number") {
        throw new TypeError("Argument must be a number");
      }
      return buffer.SlowBuffer(size);
    };
  }
});

// node-built-in-modules:stream
import libDefault2 from "stream";
var require_stream = __commonJS({
  "node-built-in-modules:stream"(exports, module) {
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    module.exports = libDefault2;
  }
});

// node-built-in-modules:util
import libDefault3 from "util";
var require_util = __commonJS({
  "node-built-in-modules:util"(exports, module) {
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    module.exports = libDefault3;
  }
});

// node_modules/jws/lib/data-stream.js
var require_data_stream = __commonJS({
  "node_modules/jws/lib/data-stream.js"(exports, module) {
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    var Buffer2 = require_safe_buffer().Buffer;
    var Stream = require_stream();
    var util = require_util();
    function DataStream(data) {
      this.buffer = null;
      this.writable = true;
      this.readable = true;
      if (!data) {
        this.buffer = Buffer2.alloc(0);
        return this;
      }
      if (typeof data.pipe === "function") {
        this.buffer = Buffer2.alloc(0);
        data.pipe(this);
        return this;
      }
      if (data.length || typeof data === "object") {
        this.buffer = data;
        this.writable = false;
        process.nextTick(function() {
          this.emit("end", data);
          this.readable = false;
          this.emit("close");
        }.bind(this));
        return this;
      }
      throw new TypeError("Unexpected data type (" + typeof data + ")");
    }
    __name(DataStream, "DataStream");
    util.inherits(DataStream, Stream);
    DataStream.prototype.write = /* @__PURE__ */ __name(function write(data) {
      this.buffer = Buffer2.concat([this.buffer, Buffer2.from(data)]);
      this.emit("data", data);
    }, "write");
    DataStream.prototype.end = /* @__PURE__ */ __name(function end(data) {
      if (data)
        this.write(data);
      this.emit("end", data);
      this.emit("close");
      this.writable = false;
      this.readable = false;
    }, "end");
    module.exports = DataStream;
  }
});

// node-built-in-modules:crypto
import libDefault4 from "crypto";
var require_crypto = __commonJS({
  "node-built-in-modules:crypto"(exports, module) {
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    module.exports = libDefault4;
  }
});

// node_modules/ecdsa-sig-formatter/src/param-bytes-for-alg.js
var require_param_bytes_for_alg = __commonJS({
  "node_modules/ecdsa-sig-formatter/src/param-bytes-for-alg.js"(exports, module) {
    "use strict";
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    function getParamSize(keySize) {
      var result = (keySize / 8 | 0) + (keySize % 8 === 0 ? 0 : 1);
      return result;
    }
    __name(getParamSize, "getParamSize");
    var paramBytesForAlg = {
      ES256: getParamSize(256),
      ES384: getParamSize(384),
      ES512: getParamSize(521)
    };
    function getParamBytesForAlg(alg) {
      var paramBytes = paramBytesForAlg[alg];
      if (paramBytes) {
        return paramBytes;
      }
      throw new Error('Unknown algorithm "' + alg + '"');
    }
    __name(getParamBytesForAlg, "getParamBytesForAlg");
    module.exports = getParamBytesForAlg;
  }
});

// node_modules/ecdsa-sig-formatter/src/ecdsa-sig-formatter.js
var require_ecdsa_sig_formatter = __commonJS({
  "node_modules/ecdsa-sig-formatter/src/ecdsa-sig-formatter.js"(exports, module) {
    "use strict";
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    var Buffer2 = require_safe_buffer().Buffer;
    var getParamBytesForAlg = require_param_bytes_for_alg();
    var MAX_OCTET = 128;
    var CLASS_UNIVERSAL = 0;
    var PRIMITIVE_BIT = 32;
    var TAG_SEQ = 16;
    var TAG_INT = 2;
    var ENCODED_TAG_SEQ = TAG_SEQ | PRIMITIVE_BIT | CLASS_UNIVERSAL << 6;
    var ENCODED_TAG_INT = TAG_INT | CLASS_UNIVERSAL << 6;
    function base64Url(base64) {
      return base64.replace(/=/g, "").replace(/\+/g, "-").replace(/\//g, "_");
    }
    __name(base64Url, "base64Url");
    function signatureAsBuffer(signature) {
      if (Buffer2.isBuffer(signature)) {
        return signature;
      } else if ("string" === typeof signature) {
        return Buffer2.from(signature, "base64");
      }
      throw new TypeError("ECDSA signature must be a Base64 string or a Buffer");
    }
    __name(signatureAsBuffer, "signatureAsBuffer");
    function derToJose(signature, alg) {
      signature = signatureAsBuffer(signature);
      var paramBytes = getParamBytesForAlg(alg);
      var maxEncodedParamLength = paramBytes + 1;
      var inputLength = signature.length;
      var offset = 0;
      if (signature[offset++] !== ENCODED_TAG_SEQ) {
        throw new Error('Could not find expected "seq"');
      }
      var seqLength = signature[offset++];
      if (seqLength === (MAX_OCTET | 1)) {
        seqLength = signature[offset++];
      }
      if (inputLength - offset < seqLength) {
        throw new Error('"seq" specified length of "' + seqLength + '", only "' + (inputLength - offset) + '" remaining');
      }
      if (signature[offset++] !== ENCODED_TAG_INT) {
        throw new Error('Could not find expected "int" for "r"');
      }
      var rLength = signature[offset++];
      if (inputLength - offset - 2 < rLength) {
        throw new Error('"r" specified length of "' + rLength + '", only "' + (inputLength - offset - 2) + '" available');
      }
      if (maxEncodedParamLength < rLength) {
        throw new Error('"r" specified length of "' + rLength + '", max of "' + maxEncodedParamLength + '" is acceptable');
      }
      var rOffset = offset;
      offset += rLength;
      if (signature[offset++] !== ENCODED_TAG_INT) {
        throw new Error('Could not find expected "int" for "s"');
      }
      var sLength = signature[offset++];
      if (inputLength - offset !== sLength) {
        throw new Error('"s" specified length of "' + sLength + '", expected "' + (inputLength - offset) + '"');
      }
      if (maxEncodedParamLength < sLength) {
        throw new Error('"s" specified length of "' + sLength + '", max of "' + maxEncodedParamLength + '" is acceptable');
      }
      var sOffset = offset;
      offset += sLength;
      if (offset !== inputLength) {
        throw new Error('Expected to consume entire buffer, but "' + (inputLength - offset) + '" bytes remain');
      }
      var rPadding = paramBytes - rLength, sPadding = paramBytes - sLength;
      var dst = Buffer2.allocUnsafe(rPadding + rLength + sPadding + sLength);
      for (offset = 0; offset < rPadding; ++offset) {
        dst[offset] = 0;
      }
      signature.copy(dst, offset, rOffset + Math.max(-rPadding, 0), rOffset + rLength);
      offset = paramBytes;
      for (var o = offset; offset < o + sPadding; ++offset) {
        dst[offset] = 0;
      }
      signature.copy(dst, offset, sOffset + Math.max(-sPadding, 0), sOffset + sLength);
      dst = dst.toString("base64");
      dst = base64Url(dst);
      return dst;
    }
    __name(derToJose, "derToJose");
    function countPadding(buf, start, stop) {
      var padding = 0;
      while (start + padding < stop && buf[start + padding] === 0) {
        ++padding;
      }
      var needsSign = buf[start + padding] >= MAX_OCTET;
      if (needsSign) {
        --padding;
      }
      return padding;
    }
    __name(countPadding, "countPadding");
    function joseToDer(signature, alg) {
      signature = signatureAsBuffer(signature);
      var paramBytes = getParamBytesForAlg(alg);
      var signatureBytes = signature.length;
      if (signatureBytes !== paramBytes * 2) {
        throw new TypeError('"' + alg + '" signatures must be "' + paramBytes * 2 + '" bytes, saw "' + signatureBytes + '"');
      }
      var rPadding = countPadding(signature, 0, paramBytes);
      var sPadding = countPadding(signature, paramBytes, signature.length);
      var rLength = paramBytes - rPadding;
      var sLength = paramBytes - sPadding;
      var rsBytes = 1 + 1 + rLength + 1 + 1 + sLength;
      var shortLength = rsBytes < MAX_OCTET;
      var dst = Buffer2.allocUnsafe((shortLength ? 2 : 3) + rsBytes);
      var offset = 0;
      dst[offset++] = ENCODED_TAG_SEQ;
      if (shortLength) {
        dst[offset++] = rsBytes;
      } else {
        dst[offset++] = MAX_OCTET | 1;
        dst[offset++] = rsBytes & 255;
      }
      dst[offset++] = ENCODED_TAG_INT;
      dst[offset++] = rLength;
      if (rPadding < 0) {
        dst[offset++] = 0;
        offset += signature.copy(dst, offset, 0, paramBytes);
      } else {
        offset += signature.copy(dst, offset, rPadding, paramBytes);
      }
      dst[offset++] = ENCODED_TAG_INT;
      dst[offset++] = sLength;
      if (sPadding < 0) {
        dst[offset++] = 0;
        signature.copy(dst, offset, paramBytes);
      } else {
        signature.copy(dst, offset, paramBytes + sPadding);
      }
      return dst;
    }
    __name(joseToDer, "joseToDer");
    module.exports = {
      derToJose,
      joseToDer
    };
  }
});

// node_modules/buffer-equal-constant-time/index.js
var require_buffer_equal_constant_time = __commonJS({
  "node_modules/buffer-equal-constant-time/index.js"(exports, module) {
    "use strict";
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    var Buffer2 = require_buffer().Buffer;
    var SlowBuffer = require_buffer().SlowBuffer;
    module.exports = bufferEq;
    function bufferEq(a, b) {
      if (!Buffer2.isBuffer(a) || !Buffer2.isBuffer(b)) {
        return false;
      }
      if (a.length !== b.length) {
        return false;
      }
      var c = 0;
      for (var i = 0; i < a.length; i++) {
        c |= a[i] ^ b[i];
      }
      return c === 0;
    }
    __name(bufferEq, "bufferEq");
    bufferEq.install = function() {
      Buffer2.prototype.equal = SlowBuffer.prototype.equal = /* @__PURE__ */ __name(function equal(that) {
        return bufferEq(this, that);
      }, "equal");
    };
    var origBufEqual = Buffer2.prototype.equal;
    var origSlowBufEqual = SlowBuffer.prototype.equal;
    bufferEq.restore = function() {
      Buffer2.prototype.equal = origBufEqual;
      SlowBuffer.prototype.equal = origSlowBufEqual;
    };
  }
});

// node_modules/jwa/index.js
var require_jwa = __commonJS({
  "node_modules/jwa/index.js"(exports, module) {
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    var Buffer2 = require_safe_buffer().Buffer;
    var crypto2 = require_crypto();
    var formatEcdsa = require_ecdsa_sig_formatter();
    var util = require_util();
    var MSG_INVALID_ALGORITHM = '"%s" is not a valid algorithm.\n  Supported algorithms are:\n  "HS256", "HS384", "HS512", "RS256", "RS384", "RS512", "PS256", "PS384", "PS512", "ES256", "ES384", "ES512" and "none".';
    var MSG_INVALID_SECRET = "secret must be a string or buffer";
    var MSG_INVALID_VERIFIER_KEY = "key must be a string or a buffer";
    var MSG_INVALID_SIGNER_KEY = "key must be a string, a buffer or an object";
    var supportsKeyObjects = typeof crypto2.createPublicKey === "function";
    if (supportsKeyObjects) {
      MSG_INVALID_VERIFIER_KEY += " or a KeyObject";
      MSG_INVALID_SECRET += "or a KeyObject";
    }
    function checkIsPublicKey(key) {
      if (Buffer2.isBuffer(key)) {
        return;
      }
      if (typeof key === "string") {
        return;
      }
      if (!supportsKeyObjects) {
        throw typeError(MSG_INVALID_VERIFIER_KEY);
      }
      if (typeof key !== "object") {
        throw typeError(MSG_INVALID_VERIFIER_KEY);
      }
      if (typeof key.type !== "string") {
        throw typeError(MSG_INVALID_VERIFIER_KEY);
      }
      if (typeof key.asymmetricKeyType !== "string") {
        throw typeError(MSG_INVALID_VERIFIER_KEY);
      }
      if (typeof key.export !== "function") {
        throw typeError(MSG_INVALID_VERIFIER_KEY);
      }
    }
    __name(checkIsPublicKey, "checkIsPublicKey");
    function checkIsPrivateKey(key) {
      if (Buffer2.isBuffer(key)) {
        return;
      }
      if (typeof key === "string") {
        return;
      }
      if (typeof key === "object") {
        return;
      }
      throw typeError(MSG_INVALID_SIGNER_KEY);
    }
    __name(checkIsPrivateKey, "checkIsPrivateKey");
    function checkIsSecretKey(key) {
      if (Buffer2.isBuffer(key)) {
        return;
      }
      if (typeof key === "string") {
        return key;
      }
      if (!supportsKeyObjects) {
        throw typeError(MSG_INVALID_SECRET);
      }
      if (typeof key !== "object") {
        throw typeError(MSG_INVALID_SECRET);
      }
      if (key.type !== "secret") {
        throw typeError(MSG_INVALID_SECRET);
      }
      if (typeof key.export !== "function") {
        throw typeError(MSG_INVALID_SECRET);
      }
    }
    __name(checkIsSecretKey, "checkIsSecretKey");
    function fromBase64(base64) {
      return base64.replace(/=/g, "").replace(/\+/g, "-").replace(/\//g, "_");
    }
    __name(fromBase64, "fromBase64");
    function toBase64(base64url) {
      base64url = base64url.toString();
      var padding = 4 - base64url.length % 4;
      if (padding !== 4) {
        for (var i = 0; i < padding; ++i) {
          base64url += "=";
        }
      }
      return base64url.replace(/\-/g, "+").replace(/_/g, "/");
    }
    __name(toBase64, "toBase64");
    function typeError(template) {
      var args = [].slice.call(arguments, 1);
      var errMsg = util.format.bind(util, template).apply(null, args);
      return new TypeError(errMsg);
    }
    __name(typeError, "typeError");
    function bufferOrString(obj) {
      return Buffer2.isBuffer(obj) || typeof obj === "string";
    }
    __name(bufferOrString, "bufferOrString");
    function normalizeInput(thing) {
      if (!bufferOrString(thing))
        thing = JSON.stringify(thing);
      return thing;
    }
    __name(normalizeInput, "normalizeInput");
    function createHmacSigner(bits) {
      return /* @__PURE__ */ __name(function sign4(thing, secret) {
        checkIsSecretKey(secret);
        thing = normalizeInput(thing);
        var hmac = crypto2.createHmac("sha" + bits, secret);
        var sig = (hmac.update(thing), hmac.digest("base64"));
        return fromBase64(sig);
      }, "sign");
    }
    __name(createHmacSigner, "createHmacSigner");
    var bufferEqual;
    var timingSafeEqual = "timingSafeEqual" in crypto2 ? /* @__PURE__ */ __name(function timingSafeEqual2(a, b) {
      if (a.byteLength !== b.byteLength) {
        return false;
      }
      return crypto2.timingSafeEqual(a, b);
    }, "timingSafeEqual") : /* @__PURE__ */ __name(function timingSafeEqual2(a, b) {
      if (!bufferEqual) {
        bufferEqual = require_buffer_equal_constant_time();
      }
      return bufferEqual(a, b);
    }, "timingSafeEqual");
    function createHmacVerifier(bits) {
      return /* @__PURE__ */ __name(function verify3(thing, signature, secret) {
        var computedSig = createHmacSigner(bits)(thing, secret);
        return timingSafeEqual(Buffer2.from(signature), Buffer2.from(computedSig));
      }, "verify");
    }
    __name(createHmacVerifier, "createHmacVerifier");
    function createKeySigner(bits) {
      return /* @__PURE__ */ __name(function sign4(thing, privateKey) {
        checkIsPrivateKey(privateKey);
        thing = normalizeInput(thing);
        var signer = crypto2.createSign("RSA-SHA" + bits);
        var sig = (signer.update(thing), signer.sign(privateKey, "base64"));
        return fromBase64(sig);
      }, "sign");
    }
    __name(createKeySigner, "createKeySigner");
    function createKeyVerifier(bits) {
      return /* @__PURE__ */ __name(function verify3(thing, signature, publicKey) {
        checkIsPublicKey(publicKey);
        thing = normalizeInput(thing);
        signature = toBase64(signature);
        var verifier = crypto2.createVerify("RSA-SHA" + bits);
        verifier.update(thing);
        return verifier.verify(publicKey, signature, "base64");
      }, "verify");
    }
    __name(createKeyVerifier, "createKeyVerifier");
    function createPSSKeySigner(bits) {
      return /* @__PURE__ */ __name(function sign4(thing, privateKey) {
        checkIsPrivateKey(privateKey);
        thing = normalizeInput(thing);
        var signer = crypto2.createSign("RSA-SHA" + bits);
        var sig = (signer.update(thing), signer.sign({
          key: privateKey,
          padding: crypto2.constants.RSA_PKCS1_PSS_PADDING,
          saltLength: crypto2.constants.RSA_PSS_SALTLEN_DIGEST
        }, "base64"));
        return fromBase64(sig);
      }, "sign");
    }
    __name(createPSSKeySigner, "createPSSKeySigner");
    function createPSSKeyVerifier(bits) {
      return /* @__PURE__ */ __name(function verify3(thing, signature, publicKey) {
        checkIsPublicKey(publicKey);
        thing = normalizeInput(thing);
        signature = toBase64(signature);
        var verifier = crypto2.createVerify("RSA-SHA" + bits);
        verifier.update(thing);
        return verifier.verify({
          key: publicKey,
          padding: crypto2.constants.RSA_PKCS1_PSS_PADDING,
          saltLength: crypto2.constants.RSA_PSS_SALTLEN_DIGEST
        }, signature, "base64");
      }, "verify");
    }
    __name(createPSSKeyVerifier, "createPSSKeyVerifier");
    function createECDSASigner(bits) {
      var inner = createKeySigner(bits);
      return /* @__PURE__ */ __name(function sign4() {
        var signature = inner.apply(null, arguments);
        signature = formatEcdsa.derToJose(signature, "ES" + bits);
        return signature;
      }, "sign");
    }
    __name(createECDSASigner, "createECDSASigner");
    function createECDSAVerifer(bits) {
      var inner = createKeyVerifier(bits);
      return /* @__PURE__ */ __name(function verify3(thing, signature, publicKey) {
        signature = formatEcdsa.joseToDer(signature, "ES" + bits).toString("base64");
        var result = inner(thing, signature, publicKey);
        return result;
      }, "verify");
    }
    __name(createECDSAVerifer, "createECDSAVerifer");
    function createNoneSigner() {
      return /* @__PURE__ */ __name(function sign4() {
        return "";
      }, "sign");
    }
    __name(createNoneSigner, "createNoneSigner");
    function createNoneVerifier() {
      return /* @__PURE__ */ __name(function verify3(thing, signature) {
        return signature === "";
      }, "verify");
    }
    __name(createNoneVerifier, "createNoneVerifier");
    module.exports = /* @__PURE__ */ __name(function jwa(algorithm) {
      var signerFactories = {
        hs: createHmacSigner,
        rs: createKeySigner,
        ps: createPSSKeySigner,
        es: createECDSASigner,
        none: createNoneSigner
      };
      var verifierFactories = {
        hs: createHmacVerifier,
        rs: createKeyVerifier,
        ps: createPSSKeyVerifier,
        es: createECDSAVerifer,
        none: createNoneVerifier
      };
      var match = algorithm.match(/^(RS|PS|ES|HS)(256|384|512)$|^(none)$/i);
      if (!match)
        throw typeError(MSG_INVALID_ALGORITHM, algorithm);
      var algo = (match[1] || match[3]).toLowerCase();
      var bits = match[2];
      return {
        sign: signerFactories[algo](bits),
        verify: verifierFactories[algo](bits)
      };
    }, "jwa");
  }
});

// node_modules/jws/lib/tostring.js
var require_tostring = __commonJS({
  "node_modules/jws/lib/tostring.js"(exports, module) {
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    var Buffer2 = require_buffer().Buffer;
    module.exports = /* @__PURE__ */ __name(function toString(obj) {
      if (typeof obj === "string")
        return obj;
      if (typeof obj === "number" || Buffer2.isBuffer(obj))
        return obj.toString();
      return JSON.stringify(obj);
    }, "toString");
  }
});

// node_modules/jws/lib/sign-stream.js
var require_sign_stream = __commonJS({
  "node_modules/jws/lib/sign-stream.js"(exports, module) {
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    var Buffer2 = require_safe_buffer().Buffer;
    var DataStream = require_data_stream();
    var jwa = require_jwa();
    var Stream = require_stream();
    var toString = require_tostring();
    var util = require_util();
    function base64url(string, encoding) {
      return Buffer2.from(string, encoding).toString("base64").replace(/=/g, "").replace(/\+/g, "-").replace(/\//g, "_");
    }
    __name(base64url, "base64url");
    function jwsSecuredInput(header, payload, encoding) {
      encoding = encoding || "utf8";
      var encodedHeader = base64url(toString(header), "binary");
      var encodedPayload = base64url(toString(payload), encoding);
      return util.format("%s.%s", encodedHeader, encodedPayload);
    }
    __name(jwsSecuredInput, "jwsSecuredInput");
    function jwsSign(opts) {
      var header = opts.header;
      var payload = opts.payload;
      var secretOrKey = opts.secret || opts.privateKey;
      var encoding = opts.encoding;
      var algo = jwa(header.alg);
      var securedInput = jwsSecuredInput(header, payload, encoding);
      var signature = algo.sign(securedInput, secretOrKey);
      return util.format("%s.%s", securedInput, signature);
    }
    __name(jwsSign, "jwsSign");
    function SignStream(opts) {
      var secret = opts.secret || opts.privateKey || opts.key;
      var secretStream = new DataStream(secret);
      this.readable = true;
      this.header = opts.header;
      this.encoding = opts.encoding;
      this.secret = this.privateKey = this.key = secretStream;
      this.payload = new DataStream(opts.payload);
      this.secret.once("close", function() {
        if (!this.payload.writable && this.readable)
          this.sign();
      }.bind(this));
      this.payload.once("close", function() {
        if (!this.secret.writable && this.readable)
          this.sign();
      }.bind(this));
    }
    __name(SignStream, "SignStream");
    util.inherits(SignStream, Stream);
    SignStream.prototype.sign = /* @__PURE__ */ __name(function sign4() {
      try {
        var signature = jwsSign({
          header: this.header,
          payload: this.payload.buffer,
          secret: this.secret.buffer,
          encoding: this.encoding
        });
        this.emit("done", signature);
        this.emit("data", signature);
        this.emit("end");
        this.readable = false;
        return signature;
      } catch (e) {
        this.readable = false;
        this.emit("error", e);
        this.emit("close");
      }
    }, "sign");
    SignStream.sign = jwsSign;
    module.exports = SignStream;
  }
});

// node_modules/jws/lib/verify-stream.js
var require_verify_stream = __commonJS({
  "node_modules/jws/lib/verify-stream.js"(exports, module) {
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    var Buffer2 = require_safe_buffer().Buffer;
    var DataStream = require_data_stream();
    var jwa = require_jwa();
    var Stream = require_stream();
    var toString = require_tostring();
    var util = require_util();
    var JWS_REGEX = /^[a-zA-Z0-9\-_]+?\.[a-zA-Z0-9\-_]+?\.([a-zA-Z0-9\-_]+)?$/;
    function isObject(thing) {
      return Object.prototype.toString.call(thing) === "[object Object]";
    }
    __name(isObject, "isObject");
    function safeJsonParse(thing) {
      if (isObject(thing))
        return thing;
      try {
        return JSON.parse(thing);
      } catch (e) {
        return void 0;
      }
    }
    __name(safeJsonParse, "safeJsonParse");
    function headerFromJWS(jwsSig) {
      var encodedHeader = jwsSig.split(".", 1)[0];
      return safeJsonParse(Buffer2.from(encodedHeader, "base64").toString("binary"));
    }
    __name(headerFromJWS, "headerFromJWS");
    function securedInputFromJWS(jwsSig) {
      return jwsSig.split(".", 2).join(".");
    }
    __name(securedInputFromJWS, "securedInputFromJWS");
    function signatureFromJWS(jwsSig) {
      return jwsSig.split(".")[2];
    }
    __name(signatureFromJWS, "signatureFromJWS");
    function payloadFromJWS(jwsSig, encoding) {
      encoding = encoding || "utf8";
      var payload = jwsSig.split(".")[1];
      return Buffer2.from(payload, "base64").toString(encoding);
    }
    __name(payloadFromJWS, "payloadFromJWS");
    function isValidJws(string) {
      return JWS_REGEX.test(string) && !!headerFromJWS(string);
    }
    __name(isValidJws, "isValidJws");
    function jwsVerify(jwsSig, algorithm, secretOrKey) {
      if (!algorithm) {
        var err = new Error("Missing algorithm parameter for jws.verify");
        err.code = "MISSING_ALGORITHM";
        throw err;
      }
      jwsSig = toString(jwsSig);
      var signature = signatureFromJWS(jwsSig);
      var securedInput = securedInputFromJWS(jwsSig);
      var algo = jwa(algorithm);
      return algo.verify(securedInput, signature, secretOrKey);
    }
    __name(jwsVerify, "jwsVerify");
    function jwsDecode(jwsSig, opts) {
      opts = opts || {};
      jwsSig = toString(jwsSig);
      if (!isValidJws(jwsSig))
        return null;
      var header = headerFromJWS(jwsSig);
      if (!header)
        return null;
      var payload = payloadFromJWS(jwsSig);
      if (header.typ === "JWT" || opts.json)
        payload = JSON.parse(payload, opts.encoding);
      return {
        header,
        payload,
        signature: signatureFromJWS(jwsSig)
      };
    }
    __name(jwsDecode, "jwsDecode");
    function VerifyStream(opts) {
      opts = opts || {};
      var secretOrKey = opts.secret || opts.publicKey || opts.key;
      var secretStream = new DataStream(secretOrKey);
      this.readable = true;
      this.algorithm = opts.algorithm;
      this.encoding = opts.encoding;
      this.secret = this.publicKey = this.key = secretStream;
      this.signature = new DataStream(opts.signature);
      this.secret.once("close", function() {
        if (!this.signature.writable && this.readable)
          this.verify();
      }.bind(this));
      this.signature.once("close", function() {
        if (!this.secret.writable && this.readable)
          this.verify();
      }.bind(this));
    }
    __name(VerifyStream, "VerifyStream");
    util.inherits(VerifyStream, Stream);
    VerifyStream.prototype.verify = /* @__PURE__ */ __name(function verify3() {
      try {
        var valid = jwsVerify(this.signature.buffer, this.algorithm, this.key.buffer);
        var obj = jwsDecode(this.signature.buffer, this.encoding);
        this.emit("done", valid, obj);
        this.emit("data", valid);
        this.emit("end");
        this.readable = false;
        return valid;
      } catch (e) {
        this.readable = false;
        this.emit("error", e);
        this.emit("close");
      }
    }, "verify");
    VerifyStream.decode = jwsDecode;
    VerifyStream.isValid = isValidJws;
    VerifyStream.verify = jwsVerify;
    module.exports = VerifyStream;
  }
});

// node_modules/jws/index.js
var require_jws = __commonJS({
  "node_modules/jws/index.js"(exports) {
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    var SignStream = require_sign_stream();
    var VerifyStream = require_verify_stream();
    var ALGORITHMS = [
      "HS256",
      "HS384",
      "HS512",
      "RS256",
      "RS384",
      "RS512",
      "PS256",
      "PS384",
      "PS512",
      "ES256",
      "ES384",
      "ES512"
    ];
    exports.ALGORITHMS = ALGORITHMS;
    exports.sign = SignStream.sign;
    exports.verify = VerifyStream.verify;
    exports.decode = VerifyStream.decode;
    exports.isValid = VerifyStream.isValid;
    exports.createSign = /* @__PURE__ */ __name(function createSign(opts) {
      return new SignStream(opts);
    }, "createSign");
    exports.createVerify = /* @__PURE__ */ __name(function createVerify(opts) {
      return new VerifyStream(opts);
    }, "createVerify");
  }
});

// node_modules/jsonwebtoken/decode.js
var require_decode = __commonJS({
  "node_modules/jsonwebtoken/decode.js"(exports, module) {
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    var jws = require_jws();
    module.exports = function(jwt3, options) {
      options = options || {};
      var decoded = jws.decode(jwt3, options);
      if (!decoded) {
        return null;
      }
      var payload = decoded.payload;
      if (typeof payload === "string") {
        try {
          var obj = JSON.parse(payload);
          if (obj !== null && typeof obj === "object") {
            payload = obj;
          }
        } catch (e) {
        }
      }
      if (options.complete === true) {
        return {
          header: decoded.header,
          payload,
          signature: decoded.signature
        };
      }
      return payload;
    };
  }
});

// node_modules/jsonwebtoken/lib/JsonWebTokenError.js
var require_JsonWebTokenError = __commonJS({
  "node_modules/jsonwebtoken/lib/JsonWebTokenError.js"(exports, module) {
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    var JsonWebTokenError = /* @__PURE__ */ __name(function(message, error3) {
      Error.call(this, message);
      if (Error.captureStackTrace) {
        Error.captureStackTrace(this, this.constructor);
      }
      this.name = "JsonWebTokenError";
      this.message = message;
      if (error3) this.inner = error3;
    }, "JsonWebTokenError");
    JsonWebTokenError.prototype = Object.create(Error.prototype);
    JsonWebTokenError.prototype.constructor = JsonWebTokenError;
    module.exports = JsonWebTokenError;
  }
});

// node_modules/jsonwebtoken/lib/NotBeforeError.js
var require_NotBeforeError = __commonJS({
  "node_modules/jsonwebtoken/lib/NotBeforeError.js"(exports, module) {
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    var JsonWebTokenError = require_JsonWebTokenError();
    var NotBeforeError = /* @__PURE__ */ __name(function(message, date) {
      JsonWebTokenError.call(this, message);
      this.name = "NotBeforeError";
      this.date = date;
    }, "NotBeforeError");
    NotBeforeError.prototype = Object.create(JsonWebTokenError.prototype);
    NotBeforeError.prototype.constructor = NotBeforeError;
    module.exports = NotBeforeError;
  }
});

// node_modules/jsonwebtoken/lib/TokenExpiredError.js
var require_TokenExpiredError = __commonJS({
  "node_modules/jsonwebtoken/lib/TokenExpiredError.js"(exports, module) {
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    var JsonWebTokenError = require_JsonWebTokenError();
    var TokenExpiredError = /* @__PURE__ */ __name(function(message, expiredAt) {
      JsonWebTokenError.call(this, message);
      this.name = "TokenExpiredError";
      this.expiredAt = expiredAt;
    }, "TokenExpiredError");
    TokenExpiredError.prototype = Object.create(JsonWebTokenError.prototype);
    TokenExpiredError.prototype.constructor = TokenExpiredError;
    module.exports = TokenExpiredError;
  }
});

// node_modules/ms/index.js
var require_ms = __commonJS({
  "node_modules/ms/index.js"(exports, module) {
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    var s = 1e3;
    var m = s * 60;
    var h = m * 60;
    var d = h * 24;
    var w = d * 7;
    var y = d * 365.25;
    module.exports = function(val, options) {
      options = options || {};
      var type = typeof val;
      if (type === "string" && val.length > 0) {
        return parse2(val);
      } else if (type === "number" && isFinite(val)) {
        return options.long ? fmtLong(val) : fmtShort(val);
      }
      throw new Error(
        "val is not a non-empty string or a valid number. val=" + JSON.stringify(val)
      );
    };
    function parse2(str) {
      str = String(str);
      if (str.length > 100) {
        return;
      }
      var match = /^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(
        str
      );
      if (!match) {
        return;
      }
      var n = parseFloat(match[1]);
      var type = (match[2] || "ms").toLowerCase();
      switch (type) {
        case "years":
        case "year":
        case "yrs":
        case "yr":
        case "y":
          return n * y;
        case "weeks":
        case "week":
        case "w":
          return n * w;
        case "days":
        case "day":
        case "d":
          return n * d;
        case "hours":
        case "hour":
        case "hrs":
        case "hr":
        case "h":
          return n * h;
        case "minutes":
        case "minute":
        case "mins":
        case "min":
        case "m":
          return n * m;
        case "seconds":
        case "second":
        case "secs":
        case "sec":
        case "s":
          return n * s;
        case "milliseconds":
        case "millisecond":
        case "msecs":
        case "msec":
        case "ms":
          return n;
        default:
          return void 0;
      }
    }
    __name(parse2, "parse");
    function fmtShort(ms) {
      var msAbs = Math.abs(ms);
      if (msAbs >= d) {
        return Math.round(ms / d) + "d";
      }
      if (msAbs >= h) {
        return Math.round(ms / h) + "h";
      }
      if (msAbs >= m) {
        return Math.round(ms / m) + "m";
      }
      if (msAbs >= s) {
        return Math.round(ms / s) + "s";
      }
      return ms + "ms";
    }
    __name(fmtShort, "fmtShort");
    function fmtLong(ms) {
      var msAbs = Math.abs(ms);
      if (msAbs >= d) {
        return plural(ms, msAbs, d, "day");
      }
      if (msAbs >= h) {
        return plural(ms, msAbs, h, "hour");
      }
      if (msAbs >= m) {
        return plural(ms, msAbs, m, "minute");
      }
      if (msAbs >= s) {
        return plural(ms, msAbs, s, "second");
      }
      return ms + " ms";
    }
    __name(fmtLong, "fmtLong");
    function plural(ms, msAbs, n, name) {
      var isPlural = msAbs >= n * 1.5;
      return Math.round(ms / n) + " " + name + (isPlural ? "s" : "");
    }
    __name(plural, "plural");
  }
});

// node_modules/jsonwebtoken/lib/timespan.js
var require_timespan = __commonJS({
  "node_modules/jsonwebtoken/lib/timespan.js"(exports, module) {
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    var ms = require_ms();
    module.exports = function(time4, iat) {
      var timestamp = iat || Math.floor(Date.now() / 1e3);
      if (typeof time4 === "string") {
        var milliseconds = ms(time4);
        if (typeof milliseconds === "undefined") {
          return;
        }
        return Math.floor(timestamp + milliseconds / 1e3);
      } else if (typeof time4 === "number") {
        return timestamp + time4;
      } else {
        return;
      }
    };
  }
});

// node_modules/semver/internal/constants.js
var require_constants = __commonJS({
  "node_modules/semver/internal/constants.js"(exports, module) {
    "use strict";
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    var SEMVER_SPEC_VERSION = "2.0.0";
    var MAX_LENGTH = 256;
    var MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER || /* istanbul ignore next */
    9007199254740991;
    var MAX_SAFE_COMPONENT_LENGTH = 16;
    var MAX_SAFE_BUILD_LENGTH = MAX_LENGTH - 6;
    var RELEASE_TYPES = [
      "major",
      "premajor",
      "minor",
      "preminor",
      "patch",
      "prepatch",
      "prerelease"
    ];
    module.exports = {
      MAX_LENGTH,
      MAX_SAFE_COMPONENT_LENGTH,
      MAX_SAFE_BUILD_LENGTH,
      MAX_SAFE_INTEGER,
      RELEASE_TYPES,
      SEMVER_SPEC_VERSION,
      FLAG_INCLUDE_PRERELEASE: 1,
      FLAG_LOOSE: 2
    };
  }
});

// node_modules/semver/internal/debug.js
var require_debug = __commonJS({
  "node_modules/semver/internal/debug.js"(exports, module) {
    "use strict";
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    var debug3 = typeof process === "object" && process.env && process.env.NODE_DEBUG && /\bsemver\b/i.test(process.env.NODE_DEBUG) ? (...args) => console.error("SEMVER", ...args) : () => {
    };
    module.exports = debug3;
  }
});

// node_modules/semver/internal/re.js
var require_re = __commonJS({
  "node_modules/semver/internal/re.js"(exports, module) {
    "use strict";
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    var {
      MAX_SAFE_COMPONENT_LENGTH,
      MAX_SAFE_BUILD_LENGTH,
      MAX_LENGTH
    } = require_constants();
    var debug3 = require_debug();
    exports = module.exports = {};
    var re = exports.re = [];
    var safeRe = exports.safeRe = [];
    var src = exports.src = [];
    var safeSrc = exports.safeSrc = [];
    var t = exports.t = {};
    var R = 0;
    var LETTERDASHNUMBER = "[a-zA-Z0-9-]";
    var safeRegexReplacements = [
      ["\\s", 1],
      ["\\d", MAX_LENGTH],
      [LETTERDASHNUMBER, MAX_SAFE_BUILD_LENGTH]
    ];
    var makeSafeRegex = /* @__PURE__ */ __name((value) => {
      for (const [token, max] of safeRegexReplacements) {
        value = value.split(`${token}*`).join(`${token}{0,${max}}`).split(`${token}+`).join(`${token}{1,${max}}`);
      }
      return value;
    }, "makeSafeRegex");
    var createToken = /* @__PURE__ */ __name((name, value, isGlobal) => {
      const safe = makeSafeRegex(value);
      const index = R++;
      debug3(name, index, value);
      t[name] = index;
      src[index] = value;
      safeSrc[index] = safe;
      re[index] = new RegExp(value, isGlobal ? "g" : void 0);
      safeRe[index] = new RegExp(safe, isGlobal ? "g" : void 0);
    }, "createToken");
    createToken("NUMERICIDENTIFIER", "0|[1-9]\\d*");
    createToken("NUMERICIDENTIFIERLOOSE", "\\d+");
    createToken("NONNUMERICIDENTIFIER", `\\d*[a-zA-Z-]${LETTERDASHNUMBER}*`);
    createToken("MAINVERSION", `(${src[t.NUMERICIDENTIFIER]})\\.(${src[t.NUMERICIDENTIFIER]})\\.(${src[t.NUMERICIDENTIFIER]})`);
    createToken("MAINVERSIONLOOSE", `(${src[t.NUMERICIDENTIFIERLOOSE]})\\.(${src[t.NUMERICIDENTIFIERLOOSE]})\\.(${src[t.NUMERICIDENTIFIERLOOSE]})`);
    createToken("PRERELEASEIDENTIFIER", `(?:${src[t.NONNUMERICIDENTIFIER]}|${src[t.NUMERICIDENTIFIER]})`);
    createToken("PRERELEASEIDENTIFIERLOOSE", `(?:${src[t.NONNUMERICIDENTIFIER]}|${src[t.NUMERICIDENTIFIERLOOSE]})`);
    createToken("PRERELEASE", `(?:-(${src[t.PRERELEASEIDENTIFIER]}(?:\\.${src[t.PRERELEASEIDENTIFIER]})*))`);
    createToken("PRERELEASELOOSE", `(?:-?(${src[t.PRERELEASEIDENTIFIERLOOSE]}(?:\\.${src[t.PRERELEASEIDENTIFIERLOOSE]})*))`);
    createToken("BUILDIDENTIFIER", `${LETTERDASHNUMBER}+`);
    createToken("BUILD", `(?:\\+(${src[t.BUILDIDENTIFIER]}(?:\\.${src[t.BUILDIDENTIFIER]})*))`);
    createToken("FULLPLAIN", `v?${src[t.MAINVERSION]}${src[t.PRERELEASE]}?${src[t.BUILD]}?`);
    createToken("FULL", `^${src[t.FULLPLAIN]}$`);
    createToken("LOOSEPLAIN", `[v=\\s]*${src[t.MAINVERSIONLOOSE]}${src[t.PRERELEASELOOSE]}?${src[t.BUILD]}?`);
    createToken("LOOSE", `^${src[t.LOOSEPLAIN]}$`);
    createToken("GTLT", "((?:<|>)?=?)");
    createToken("XRANGEIDENTIFIERLOOSE", `${src[t.NUMERICIDENTIFIERLOOSE]}|x|X|\\*`);
    createToken("XRANGEIDENTIFIER", `${src[t.NUMERICIDENTIFIER]}|x|X|\\*`);
    createToken("XRANGEPLAIN", `[v=\\s]*(${src[t.XRANGEIDENTIFIER]})(?:\\.(${src[t.XRANGEIDENTIFIER]})(?:\\.(${src[t.XRANGEIDENTIFIER]})(?:${src[t.PRERELEASE]})?${src[t.BUILD]}?)?)?`);
    createToken("XRANGEPLAINLOOSE", `[v=\\s]*(${src[t.XRANGEIDENTIFIERLOOSE]})(?:\\.(${src[t.XRANGEIDENTIFIERLOOSE]})(?:\\.(${src[t.XRANGEIDENTIFIERLOOSE]})(?:${src[t.PRERELEASELOOSE]})?${src[t.BUILD]}?)?)?`);
    createToken("XRANGE", `^${src[t.GTLT]}\\s*${src[t.XRANGEPLAIN]}$`);
    createToken("XRANGELOOSE", `^${src[t.GTLT]}\\s*${src[t.XRANGEPLAINLOOSE]}$`);
    createToken("COERCEPLAIN", `${"(^|[^\\d])(\\d{1,"}${MAX_SAFE_COMPONENT_LENGTH}})(?:\\.(\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?(?:\\.(\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?`);
    createToken("COERCE", `${src[t.COERCEPLAIN]}(?:$|[^\\d])`);
    createToken("COERCEFULL", src[t.COERCEPLAIN] + `(?:${src[t.PRERELEASE]})?(?:${src[t.BUILD]})?(?:$|[^\\d])`);
    createToken("COERCERTL", src[t.COERCE], true);
    createToken("COERCERTLFULL", src[t.COERCEFULL], true);
    createToken("LONETILDE", "(?:~>?)");
    createToken("TILDETRIM", `(\\s*)${src[t.LONETILDE]}\\s+`, true);
    exports.tildeTrimReplace = "$1~";
    createToken("TILDE", `^${src[t.LONETILDE]}${src[t.XRANGEPLAIN]}$`);
    createToken("TILDELOOSE", `^${src[t.LONETILDE]}${src[t.XRANGEPLAINLOOSE]}$`);
    createToken("LONECARET", "(?:\\^)");
    createToken("CARETTRIM", `(\\s*)${src[t.LONECARET]}\\s+`, true);
    exports.caretTrimReplace = "$1^";
    createToken("CARET", `^${src[t.LONECARET]}${src[t.XRANGEPLAIN]}$`);
    createToken("CARETLOOSE", `^${src[t.LONECARET]}${src[t.XRANGEPLAINLOOSE]}$`);
    createToken("COMPARATORLOOSE", `^${src[t.GTLT]}\\s*(${src[t.LOOSEPLAIN]})$|^$`);
    createToken("COMPARATOR", `^${src[t.GTLT]}\\s*(${src[t.FULLPLAIN]})$|^$`);
    createToken("COMPARATORTRIM", `(\\s*)${src[t.GTLT]}\\s*(${src[t.LOOSEPLAIN]}|${src[t.XRANGEPLAIN]})`, true);
    exports.comparatorTrimReplace = "$1$2$3";
    createToken("HYPHENRANGE", `^\\s*(${src[t.XRANGEPLAIN]})\\s+-\\s+(${src[t.XRANGEPLAIN]})\\s*$`);
    createToken("HYPHENRANGELOOSE", `^\\s*(${src[t.XRANGEPLAINLOOSE]})\\s+-\\s+(${src[t.XRANGEPLAINLOOSE]})\\s*$`);
    createToken("STAR", "(<|>)?=?\\s*\\*");
    createToken("GTE0", "^\\s*>=\\s*0\\.0\\.0\\s*$");
    createToken("GTE0PRE", "^\\s*>=\\s*0\\.0\\.0-0\\s*$");
  }
});

// node_modules/semver/internal/parse-options.js
var require_parse_options = __commonJS({
  "node_modules/semver/internal/parse-options.js"(exports, module) {
    "use strict";
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    var looseOption = Object.freeze({ loose: true });
    var emptyOpts = Object.freeze({});
    var parseOptions = /* @__PURE__ */ __name((options) => {
      if (!options) {
        return emptyOpts;
      }
      if (typeof options !== "object") {
        return looseOption;
      }
      return options;
    }, "parseOptions");
    module.exports = parseOptions;
  }
});

// node_modules/semver/internal/identifiers.js
var require_identifiers = __commonJS({
  "node_modules/semver/internal/identifiers.js"(exports, module) {
    "use strict";
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    var numeric = /^[0-9]+$/;
    var compareIdentifiers = /* @__PURE__ */ __name((a, b) => {
      const anum = numeric.test(a);
      const bnum = numeric.test(b);
      if (anum && bnum) {
        a = +a;
        b = +b;
      }
      return a === b ? 0 : anum && !bnum ? -1 : bnum && !anum ? 1 : a < b ? -1 : 1;
    }, "compareIdentifiers");
    var rcompareIdentifiers = /* @__PURE__ */ __name((a, b) => compareIdentifiers(b, a), "rcompareIdentifiers");
    module.exports = {
      compareIdentifiers,
      rcompareIdentifiers
    };
  }
});

// node_modules/semver/classes/semver.js
var require_semver = __commonJS({
  "node_modules/semver/classes/semver.js"(exports, module) {
    "use strict";
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    var debug3 = require_debug();
    var { MAX_LENGTH, MAX_SAFE_INTEGER } = require_constants();
    var { safeRe: re, t } = require_re();
    var parseOptions = require_parse_options();
    var { compareIdentifiers } = require_identifiers();
    var SemVer = class _SemVer {
      static {
        __name(this, "SemVer");
      }
      constructor(version2, options) {
        options = parseOptions(options);
        if (version2 instanceof _SemVer) {
          if (version2.loose === !!options.loose && version2.includePrerelease === !!options.includePrerelease) {
            return version2;
          } else {
            version2 = version2.version;
          }
        } else if (typeof version2 !== "string") {
          throw new TypeError(`Invalid version. Must be a string. Got type "${typeof version2}".`);
        }
        if (version2.length > MAX_LENGTH) {
          throw new TypeError(
            `version is longer than ${MAX_LENGTH} characters`
          );
        }
        debug3("SemVer", version2, options);
        this.options = options;
        this.loose = !!options.loose;
        this.includePrerelease = !!options.includePrerelease;
        const m = version2.trim().match(options.loose ? re[t.LOOSE] : re[t.FULL]);
        if (!m) {
          throw new TypeError(`Invalid Version: ${version2}`);
        }
        this.raw = version2;
        this.major = +m[1];
        this.minor = +m[2];
        this.patch = +m[3];
        if (this.major > MAX_SAFE_INTEGER || this.major < 0) {
          throw new TypeError("Invalid major version");
        }
        if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {
          throw new TypeError("Invalid minor version");
        }
        if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {
          throw new TypeError("Invalid patch version");
        }
        if (!m[4]) {
          this.prerelease = [];
        } else {
          this.prerelease = m[4].split(".").map((id) => {
            if (/^[0-9]+$/.test(id)) {
              const num = +id;
              if (num >= 0 && num < MAX_SAFE_INTEGER) {
                return num;
              }
            }
            return id;
          });
        }
        this.build = m[5] ? m[5].split(".") : [];
        this.format();
      }
      format() {
        this.version = `${this.major}.${this.minor}.${this.patch}`;
        if (this.prerelease.length) {
          this.version += `-${this.prerelease.join(".")}`;
        }
        return this.version;
      }
      toString() {
        return this.version;
      }
      compare(other) {
        debug3("SemVer.compare", this.version, this.options, other);
        if (!(other instanceof _SemVer)) {
          if (typeof other === "string" && other === this.version) {
            return 0;
          }
          other = new _SemVer(other, this.options);
        }
        if (other.version === this.version) {
          return 0;
        }
        return this.compareMain(other) || this.comparePre(other);
      }
      compareMain(other) {
        if (!(other instanceof _SemVer)) {
          other = new _SemVer(other, this.options);
        }
        return compareIdentifiers(this.major, other.major) || compareIdentifiers(this.minor, other.minor) || compareIdentifiers(this.patch, other.patch);
      }
      comparePre(other) {
        if (!(other instanceof _SemVer)) {
          other = new _SemVer(other, this.options);
        }
        if (this.prerelease.length && !other.prerelease.length) {
          return -1;
        } else if (!this.prerelease.length && other.prerelease.length) {
          return 1;
        } else if (!this.prerelease.length && !other.prerelease.length) {
          return 0;
        }
        let i = 0;
        do {
          const a = this.prerelease[i];
          const b = other.prerelease[i];
          debug3("prerelease compare", i, a, b);
          if (a === void 0 && b === void 0) {
            return 0;
          } else if (b === void 0) {
            return 1;
          } else if (a === void 0) {
            return -1;
          } else if (a === b) {
            continue;
          } else {
            return compareIdentifiers(a, b);
          }
        } while (++i);
      }
      compareBuild(other) {
        if (!(other instanceof _SemVer)) {
          other = new _SemVer(other, this.options);
        }
        let i = 0;
        do {
          const a = this.build[i];
          const b = other.build[i];
          debug3("build compare", i, a, b);
          if (a === void 0 && b === void 0) {
            return 0;
          } else if (b === void 0) {
            return 1;
          } else if (a === void 0) {
            return -1;
          } else if (a === b) {
            continue;
          } else {
            return compareIdentifiers(a, b);
          }
        } while (++i);
      }
      // preminor will bump the version up to the next minor release, and immediately
      // down to pre-release. premajor and prepatch work the same way.
      inc(release2, identifier, identifierBase) {
        if (release2.startsWith("pre")) {
          if (!identifier && identifierBase === false) {
            throw new Error("invalid increment argument: identifier is empty");
          }
          if (identifier) {
            const match = `-${identifier}`.match(this.options.loose ? re[t.PRERELEASELOOSE] : re[t.PRERELEASE]);
            if (!match || match[1] !== identifier) {
              throw new Error(`invalid identifier: ${identifier}`);
            }
          }
        }
        switch (release2) {
          case "premajor":
            this.prerelease.length = 0;
            this.patch = 0;
            this.minor = 0;
            this.major++;
            this.inc("pre", identifier, identifierBase);
            break;
          case "preminor":
            this.prerelease.length = 0;
            this.patch = 0;
            this.minor++;
            this.inc("pre", identifier, identifierBase);
            break;
          case "prepatch":
            this.prerelease.length = 0;
            this.inc("patch", identifier, identifierBase);
            this.inc("pre", identifier, identifierBase);
            break;
          // If the input is a non-prerelease version, this acts the same as
          // prepatch.
          case "prerelease":
            if (this.prerelease.length === 0) {
              this.inc("patch", identifier, identifierBase);
            }
            this.inc("pre", identifier, identifierBase);
            break;
          case "release":
            if (this.prerelease.length === 0) {
              throw new Error(`version ${this.raw} is not a prerelease`);
            }
            this.prerelease.length = 0;
            break;
          case "major":
            if (this.minor !== 0 || this.patch !== 0 || this.prerelease.length === 0) {
              this.major++;
            }
            this.minor = 0;
            this.patch = 0;
            this.prerelease = [];
            break;
          case "minor":
            if (this.patch !== 0 || this.prerelease.length === 0) {
              this.minor++;
            }
            this.patch = 0;
            this.prerelease = [];
            break;
          case "patch":
            if (this.prerelease.length === 0) {
              this.patch++;
            }
            this.prerelease = [];
            break;
          // This probably shouldn't be used publicly.
          // 1.0.0 'pre' would become 1.0.0-0 which is the wrong direction.
          case "pre": {
            const base = Number(identifierBase) ? 1 : 0;
            if (this.prerelease.length === 0) {
              this.prerelease = [base];
            } else {
              let i = this.prerelease.length;
              while (--i >= 0) {
                if (typeof this.prerelease[i] === "number") {
                  this.prerelease[i]++;
                  i = -2;
                }
              }
              if (i === -1) {
                if (identifier === this.prerelease.join(".") && identifierBase === false) {
                  throw new Error("invalid increment argument: identifier already exists");
                }
                this.prerelease.push(base);
              }
            }
            if (identifier) {
              let prerelease = [identifier, base];
              if (identifierBase === false) {
                prerelease = [identifier];
              }
              if (compareIdentifiers(this.prerelease[0], identifier) === 0) {
                if (isNaN(this.prerelease[1])) {
                  this.prerelease = prerelease;
                }
              } else {
                this.prerelease = prerelease;
              }
            }
            break;
          }
          default:
            throw new Error(`invalid increment argument: ${release2}`);
        }
        this.raw = this.format();
        if (this.build.length) {
          this.raw += `+${this.build.join(".")}`;
        }
        return this;
      }
    };
    module.exports = SemVer;
  }
});

// node_modules/semver/functions/parse.js
var require_parse = __commonJS({
  "node_modules/semver/functions/parse.js"(exports, module) {
    "use strict";
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    var SemVer = require_semver();
    var parse2 = /* @__PURE__ */ __name((version2, options, throwErrors = false) => {
      if (version2 instanceof SemVer) {
        return version2;
      }
      try {
        return new SemVer(version2, options);
      } catch (er) {
        if (!throwErrors) {
          return null;
        }
        throw er;
      }
    }, "parse");
    module.exports = parse2;
  }
});

// node_modules/semver/functions/valid.js
var require_valid = __commonJS({
  "node_modules/semver/functions/valid.js"(exports, module) {
    "use strict";
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    var parse2 = require_parse();
    var valid = /* @__PURE__ */ __name((version2, options) => {
      const v = parse2(version2, options);
      return v ? v.version : null;
    }, "valid");
    module.exports = valid;
  }
});

// node_modules/semver/functions/clean.js
var require_clean = __commonJS({
  "node_modules/semver/functions/clean.js"(exports, module) {
    "use strict";
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    var parse2 = require_parse();
    var clean = /* @__PURE__ */ __name((version2, options) => {
      const s = parse2(version2.trim().replace(/^[=v]+/, ""), options);
      return s ? s.version : null;
    }, "clean");
    module.exports = clean;
  }
});

// node_modules/semver/functions/inc.js
var require_inc = __commonJS({
  "node_modules/semver/functions/inc.js"(exports, module) {
    "use strict";
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    var SemVer = require_semver();
    var inc = /* @__PURE__ */ __name((version2, release2, options, identifier, identifierBase) => {
      if (typeof options === "string") {
        identifierBase = identifier;
        identifier = options;
        options = void 0;
      }
      try {
        return new SemVer(
          version2 instanceof SemVer ? version2.version : version2,
          options
        ).inc(release2, identifier, identifierBase).version;
      } catch (er) {
        return null;
      }
    }, "inc");
    module.exports = inc;
  }
});

// node_modules/semver/functions/diff.js
var require_diff = __commonJS({
  "node_modules/semver/functions/diff.js"(exports, module) {
    "use strict";
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    var parse2 = require_parse();
    var diff = /* @__PURE__ */ __name((version1, version2) => {
      const v1 = parse2(version1, null, true);
      const v2 = parse2(version2, null, true);
      const comparison = v1.compare(v2);
      if (comparison === 0) {
        return null;
      }
      const v1Higher = comparison > 0;
      const highVersion = v1Higher ? v1 : v2;
      const lowVersion = v1Higher ? v2 : v1;
      const highHasPre = !!highVersion.prerelease.length;
      const lowHasPre = !!lowVersion.prerelease.length;
      if (lowHasPre && !highHasPre) {
        if (!lowVersion.patch && !lowVersion.minor) {
          return "major";
        }
        if (lowVersion.compareMain(highVersion) === 0) {
          if (lowVersion.minor && !lowVersion.patch) {
            return "minor";
          }
          return "patch";
        }
      }
      const prefix = highHasPre ? "pre" : "";
      if (v1.major !== v2.major) {
        return prefix + "major";
      }
      if (v1.minor !== v2.minor) {
        return prefix + "minor";
      }
      if (v1.patch !== v2.patch) {
        return prefix + "patch";
      }
      return "prerelease";
    }, "diff");
    module.exports = diff;
  }
});

// node_modules/semver/functions/major.js
var require_major = __commonJS({
  "node_modules/semver/functions/major.js"(exports, module) {
    "use strict";
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    var SemVer = require_semver();
    var major = /* @__PURE__ */ __name((a, loose) => new SemVer(a, loose).major, "major");
    module.exports = major;
  }
});

// node_modules/semver/functions/minor.js
var require_minor = __commonJS({
  "node_modules/semver/functions/minor.js"(exports, module) {
    "use strict";
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    var SemVer = require_semver();
    var minor = /* @__PURE__ */ __name((a, loose) => new SemVer(a, loose).minor, "minor");
    module.exports = minor;
  }
});

// node_modules/semver/functions/patch.js
var require_patch = __commonJS({
  "node_modules/semver/functions/patch.js"(exports, module) {
    "use strict";
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    var SemVer = require_semver();
    var patch = /* @__PURE__ */ __name((a, loose) => new SemVer(a, loose).patch, "patch");
    module.exports = patch;
  }
});

// node_modules/semver/functions/prerelease.js
var require_prerelease = __commonJS({
  "node_modules/semver/functions/prerelease.js"(exports, module) {
    "use strict";
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    var parse2 = require_parse();
    var prerelease = /* @__PURE__ */ __name((version2, options) => {
      const parsed = parse2(version2, options);
      return parsed && parsed.prerelease.length ? parsed.prerelease : null;
    }, "prerelease");
    module.exports = prerelease;
  }
});

// node_modules/semver/functions/compare.js
var require_compare = __commonJS({
  "node_modules/semver/functions/compare.js"(exports, module) {
    "use strict";
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    var SemVer = require_semver();
    var compare2 = /* @__PURE__ */ __name((a, b, loose) => new SemVer(a, loose).compare(new SemVer(b, loose)), "compare");
    module.exports = compare2;
  }
});

// node_modules/semver/functions/rcompare.js
var require_rcompare = __commonJS({
  "node_modules/semver/functions/rcompare.js"(exports, module) {
    "use strict";
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    var compare2 = require_compare();
    var rcompare = /* @__PURE__ */ __name((a, b, loose) => compare2(b, a, loose), "rcompare");
    module.exports = rcompare;
  }
});

// node_modules/semver/functions/compare-loose.js
var require_compare_loose = __commonJS({
  "node_modules/semver/functions/compare-loose.js"(exports, module) {
    "use strict";
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    var compare2 = require_compare();
    var compareLoose = /* @__PURE__ */ __name((a, b) => compare2(a, b, true), "compareLoose");
    module.exports = compareLoose;
  }
});

// node_modules/semver/functions/compare-build.js
var require_compare_build = __commonJS({
  "node_modules/semver/functions/compare-build.js"(exports, module) {
    "use strict";
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    var SemVer = require_semver();
    var compareBuild = /* @__PURE__ */ __name((a, b, loose) => {
      const versionA = new SemVer(a, loose);
      const versionB = new SemVer(b, loose);
      return versionA.compare(versionB) || versionA.compareBuild(versionB);
    }, "compareBuild");
    module.exports = compareBuild;
  }
});

// node_modules/semver/functions/sort.js
var require_sort = __commonJS({
  "node_modules/semver/functions/sort.js"(exports, module) {
    "use strict";
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    var compareBuild = require_compare_build();
    var sort = /* @__PURE__ */ __name((list, loose) => list.sort((a, b) => compareBuild(a, b, loose)), "sort");
    module.exports = sort;
  }
});

// node_modules/semver/functions/rsort.js
var require_rsort = __commonJS({
  "node_modules/semver/functions/rsort.js"(exports, module) {
    "use strict";
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    var compareBuild = require_compare_build();
    var rsort = /* @__PURE__ */ __name((list, loose) => list.sort((a, b) => compareBuild(b, a, loose)), "rsort");
    module.exports = rsort;
  }
});

// node_modules/semver/functions/gt.js
var require_gt = __commonJS({
  "node_modules/semver/functions/gt.js"(exports, module) {
    "use strict";
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    var compare2 = require_compare();
    var gt = /* @__PURE__ */ __name((a, b, loose) => compare2(a, b, loose) > 0, "gt");
    module.exports = gt;
  }
});

// node_modules/semver/functions/lt.js
var require_lt = __commonJS({
  "node_modules/semver/functions/lt.js"(exports, module) {
    "use strict";
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    var compare2 = require_compare();
    var lt = /* @__PURE__ */ __name((a, b, loose) => compare2(a, b, loose) < 0, "lt");
    module.exports = lt;
  }
});

// node_modules/semver/functions/eq.js
var require_eq = __commonJS({
  "node_modules/semver/functions/eq.js"(exports, module) {
    "use strict";
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    var compare2 = require_compare();
    var eq = /* @__PURE__ */ __name((a, b, loose) => compare2(a, b, loose) === 0, "eq");
    module.exports = eq;
  }
});

// node_modules/semver/functions/neq.js
var require_neq = __commonJS({
  "node_modules/semver/functions/neq.js"(exports, module) {
    "use strict";
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    var compare2 = require_compare();
    var neq = /* @__PURE__ */ __name((a, b, loose) => compare2(a, b, loose) !== 0, "neq");
    module.exports = neq;
  }
});

// node_modules/semver/functions/gte.js
var require_gte = __commonJS({
  "node_modules/semver/functions/gte.js"(exports, module) {
    "use strict";
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    var compare2 = require_compare();
    var gte = /* @__PURE__ */ __name((a, b, loose) => compare2(a, b, loose) >= 0, "gte");
    module.exports = gte;
  }
});

// node_modules/semver/functions/lte.js
var require_lte = __commonJS({
  "node_modules/semver/functions/lte.js"(exports, module) {
    "use strict";
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    var compare2 = require_compare();
    var lte = /* @__PURE__ */ __name((a, b, loose) => compare2(a, b, loose) <= 0, "lte");
    module.exports = lte;
  }
});

// node_modules/semver/functions/cmp.js
var require_cmp = __commonJS({
  "node_modules/semver/functions/cmp.js"(exports, module) {
    "use strict";
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    var eq = require_eq();
    var neq = require_neq();
    var gt = require_gt();
    var gte = require_gte();
    var lt = require_lt();
    var lte = require_lte();
    var cmp = /* @__PURE__ */ __name((a, op, b, loose) => {
      switch (op) {
        case "===":
          if (typeof a === "object") {
            a = a.version;
          }
          if (typeof b === "object") {
            b = b.version;
          }
          return a === b;
        case "!==":
          if (typeof a === "object") {
            a = a.version;
          }
          if (typeof b === "object") {
            b = b.version;
          }
          return a !== b;
        case "":
        case "=":
        case "==":
          return eq(a, b, loose);
        case "!=":
          return neq(a, b, loose);
        case ">":
          return gt(a, b, loose);
        case ">=":
          return gte(a, b, loose);
        case "<":
          return lt(a, b, loose);
        case "<=":
          return lte(a, b, loose);
        default:
          throw new TypeError(`Invalid operator: ${op}`);
      }
    }, "cmp");
    module.exports = cmp;
  }
});

// node_modules/semver/functions/coerce.js
var require_coerce = __commonJS({
  "node_modules/semver/functions/coerce.js"(exports, module) {
    "use strict";
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    var SemVer = require_semver();
    var parse2 = require_parse();
    var { safeRe: re, t } = require_re();
    var coerce = /* @__PURE__ */ __name((version2, options) => {
      if (version2 instanceof SemVer) {
        return version2;
      }
      if (typeof version2 === "number") {
        version2 = String(version2);
      }
      if (typeof version2 !== "string") {
        return null;
      }
      options = options || {};
      let match = null;
      if (!options.rtl) {
        match = version2.match(options.includePrerelease ? re[t.COERCEFULL] : re[t.COERCE]);
      } else {
        const coerceRtlRegex = options.includePrerelease ? re[t.COERCERTLFULL] : re[t.COERCERTL];
        let next;
        while ((next = coerceRtlRegex.exec(version2)) && (!match || match.index + match[0].length !== version2.length)) {
          if (!match || next.index + next[0].length !== match.index + match[0].length) {
            match = next;
          }
          coerceRtlRegex.lastIndex = next.index + next[1].length + next[2].length;
        }
        coerceRtlRegex.lastIndex = -1;
      }
      if (match === null) {
        return null;
      }
      const major = match[2];
      const minor = match[3] || "0";
      const patch = match[4] || "0";
      const prerelease = options.includePrerelease && match[5] ? `-${match[5]}` : "";
      const build = options.includePrerelease && match[6] ? `+${match[6]}` : "";
      return parse2(`${major}.${minor}.${patch}${prerelease}${build}`, options);
    }, "coerce");
    module.exports = coerce;
  }
});

// node_modules/semver/internal/lrucache.js
var require_lrucache = __commonJS({
  "node_modules/semver/internal/lrucache.js"(exports, module) {
    "use strict";
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    var LRUCache = class {
      static {
        __name(this, "LRUCache");
      }
      constructor() {
        this.max = 1e3;
        this.map = /* @__PURE__ */ new Map();
      }
      get(key) {
        const value = this.map.get(key);
        if (value === void 0) {
          return void 0;
        } else {
          this.map.delete(key);
          this.map.set(key, value);
          return value;
        }
      }
      delete(key) {
        return this.map.delete(key);
      }
      set(key, value) {
        const deleted = this.delete(key);
        if (!deleted && value !== void 0) {
          if (this.map.size >= this.max) {
            const firstKey = this.map.keys().next().value;
            this.delete(firstKey);
          }
          this.map.set(key, value);
        }
        return this;
      }
    };
    module.exports = LRUCache;
  }
});

// node_modules/semver/classes/range.js
var require_range = __commonJS({
  "node_modules/semver/classes/range.js"(exports, module) {
    "use strict";
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    var SPACE_CHARACTERS = /\s+/g;
    var Range = class _Range {
      static {
        __name(this, "Range");
      }
      constructor(range, options) {
        options = parseOptions(options);
        if (range instanceof _Range) {
          if (range.loose === !!options.loose && range.includePrerelease === !!options.includePrerelease) {
            return range;
          } else {
            return new _Range(range.raw, options);
          }
        }
        if (range instanceof Comparator) {
          this.raw = range.value;
          this.set = [[range]];
          this.formatted = void 0;
          return this;
        }
        this.options = options;
        this.loose = !!options.loose;
        this.includePrerelease = !!options.includePrerelease;
        this.raw = range.trim().replace(SPACE_CHARACTERS, " ");
        this.set = this.raw.split("||").map((r) => this.parseRange(r.trim())).filter((c) => c.length);
        if (!this.set.length) {
          throw new TypeError(`Invalid SemVer Range: ${this.raw}`);
        }
        if (this.set.length > 1) {
          const first = this.set[0];
          this.set = this.set.filter((c) => !isNullSet(c[0]));
          if (this.set.length === 0) {
            this.set = [first];
          } else if (this.set.length > 1) {
            for (const c of this.set) {
              if (c.length === 1 && isAny(c[0])) {
                this.set = [c];
                break;
              }
            }
          }
        }
        this.formatted = void 0;
      }
      get range() {
        if (this.formatted === void 0) {
          this.formatted = "";
          for (let i = 0; i < this.set.length; i++) {
            if (i > 0) {
              this.formatted += "||";
            }
            const comps = this.set[i];
            for (let k = 0; k < comps.length; k++) {
              if (k > 0) {
                this.formatted += " ";
              }
              this.formatted += comps[k].toString().trim();
            }
          }
        }
        return this.formatted;
      }
      format() {
        return this.range;
      }
      toString() {
        return this.range;
      }
      parseRange(range) {
        const memoOpts = (this.options.includePrerelease && FLAG_INCLUDE_PRERELEASE) | (this.options.loose && FLAG_LOOSE);
        const memoKey = memoOpts + ":" + range;
        const cached = cache.get(memoKey);
        if (cached) {
          return cached;
        }
        const loose = this.options.loose;
        const hr = loose ? re[t.HYPHENRANGELOOSE] : re[t.HYPHENRANGE];
        range = range.replace(hr, hyphenReplace(this.options.includePrerelease));
        debug3("hyphen replace", range);
        range = range.replace(re[t.COMPARATORTRIM], comparatorTrimReplace);
        debug3("comparator trim", range);
        range = range.replace(re[t.TILDETRIM], tildeTrimReplace);
        debug3("tilde trim", range);
        range = range.replace(re[t.CARETTRIM], caretTrimReplace);
        debug3("caret trim", range);
        let rangeList = range.split(" ").map((comp) => parseComparator(comp, this.options)).join(" ").split(/\s+/).map((comp) => replaceGTE0(comp, this.options));
        if (loose) {
          rangeList = rangeList.filter((comp) => {
            debug3("loose invalid filter", comp, this.options);
            return !!comp.match(re[t.COMPARATORLOOSE]);
          });
        }
        debug3("range list", rangeList);
        const rangeMap = /* @__PURE__ */ new Map();
        const comparators = rangeList.map((comp) => new Comparator(comp, this.options));
        for (const comp of comparators) {
          if (isNullSet(comp)) {
            return [comp];
          }
          rangeMap.set(comp.value, comp);
        }
        if (rangeMap.size > 1 && rangeMap.has("")) {
          rangeMap.delete("");
        }
        const result = [...rangeMap.values()];
        cache.set(memoKey, result);
        return result;
      }
      intersects(range, options) {
        if (!(range instanceof _Range)) {
          throw new TypeError("a Range is required");
        }
        return this.set.some((thisComparators) => {
          return isSatisfiable(thisComparators, options) && range.set.some((rangeComparators) => {
            return isSatisfiable(rangeComparators, options) && thisComparators.every((thisComparator) => {
              return rangeComparators.every((rangeComparator) => {
                return thisComparator.intersects(rangeComparator, options);
              });
            });
          });
        });
      }
      // if ANY of the sets match ALL of its comparators, then pass
      test(version2) {
        if (!version2) {
          return false;
        }
        if (typeof version2 === "string") {
          try {
            version2 = new SemVer(version2, this.options);
          } catch (er) {
            return false;
          }
        }
        for (let i = 0; i < this.set.length; i++) {
          if (testSet(this.set[i], version2, this.options)) {
            return true;
          }
        }
        return false;
      }
    };
    module.exports = Range;
    var LRU = require_lrucache();
    var cache = new LRU();
    var parseOptions = require_parse_options();
    var Comparator = require_comparator();
    var debug3 = require_debug();
    var SemVer = require_semver();
    var {
      safeRe: re,
      t,
      comparatorTrimReplace,
      tildeTrimReplace,
      caretTrimReplace
    } = require_re();
    var { FLAG_INCLUDE_PRERELEASE, FLAG_LOOSE } = require_constants();
    var isNullSet = /* @__PURE__ */ __name((c) => c.value === "<0.0.0-0", "isNullSet");
    var isAny = /* @__PURE__ */ __name((c) => c.value === "", "isAny");
    var isSatisfiable = /* @__PURE__ */ __name((comparators, options) => {
      let result = true;
      const remainingComparators = comparators.slice();
      let testComparator = remainingComparators.pop();
      while (result && remainingComparators.length) {
        result = remainingComparators.every((otherComparator) => {
          return testComparator.intersects(otherComparator, options);
        });
        testComparator = remainingComparators.pop();
      }
      return result;
    }, "isSatisfiable");
    var parseComparator = /* @__PURE__ */ __name((comp, options) => {
      debug3("comp", comp, options);
      comp = replaceCarets(comp, options);
      debug3("caret", comp);
      comp = replaceTildes(comp, options);
      debug3("tildes", comp);
      comp = replaceXRanges(comp, options);
      debug3("xrange", comp);
      comp = replaceStars(comp, options);
      debug3("stars", comp);
      return comp;
    }, "parseComparator");
    var isX = /* @__PURE__ */ __name((id) => !id || id.toLowerCase() === "x" || id === "*", "isX");
    var replaceTildes = /* @__PURE__ */ __name((comp, options) => {
      return comp.trim().split(/\s+/).map((c) => replaceTilde(c, options)).join(" ");
    }, "replaceTildes");
    var replaceTilde = /* @__PURE__ */ __name((comp, options) => {
      const r = options.loose ? re[t.TILDELOOSE] : re[t.TILDE];
      return comp.replace(r, (_, M, m, p, pr) => {
        debug3("tilde", comp, _, M, m, p, pr);
        let ret;
        if (isX(M)) {
          ret = "";
        } else if (isX(m)) {
          ret = `>=${M}.0.0 <${+M + 1}.0.0-0`;
        } else if (isX(p)) {
          ret = `>=${M}.${m}.0 <${M}.${+m + 1}.0-0`;
        } else if (pr) {
          debug3("replaceTilde pr", pr);
          ret = `>=${M}.${m}.${p}-${pr} <${M}.${+m + 1}.0-0`;
        } else {
          ret = `>=${M}.${m}.${p} <${M}.${+m + 1}.0-0`;
        }
        debug3("tilde return", ret);
        return ret;
      });
    }, "replaceTilde");
    var replaceCarets = /* @__PURE__ */ __name((comp, options) => {
      return comp.trim().split(/\s+/).map((c) => replaceCaret(c, options)).join(" ");
    }, "replaceCarets");
    var replaceCaret = /* @__PURE__ */ __name((comp, options) => {
      debug3("caret", comp, options);
      const r = options.loose ? re[t.CARETLOOSE] : re[t.CARET];
      const z = options.includePrerelease ? "-0" : "";
      return comp.replace(r, (_, M, m, p, pr) => {
        debug3("caret", comp, _, M, m, p, pr);
        let ret;
        if (isX(M)) {
          ret = "";
        } else if (isX(m)) {
          ret = `>=${M}.0.0${z} <${+M + 1}.0.0-0`;
        } else if (isX(p)) {
          if (M === "0") {
            ret = `>=${M}.${m}.0${z} <${M}.${+m + 1}.0-0`;
          } else {
            ret = `>=${M}.${m}.0${z} <${+M + 1}.0.0-0`;
          }
        } else if (pr) {
          debug3("replaceCaret pr", pr);
          if (M === "0") {
            if (m === "0") {
              ret = `>=${M}.${m}.${p}-${pr} <${M}.${m}.${+p + 1}-0`;
            } else {
              ret = `>=${M}.${m}.${p}-${pr} <${M}.${+m + 1}.0-0`;
            }
          } else {
            ret = `>=${M}.${m}.${p}-${pr} <${+M + 1}.0.0-0`;
          }
        } else {
          debug3("no pr");
          if (M === "0") {
            if (m === "0") {
              ret = `>=${M}.${m}.${p}${z} <${M}.${m}.${+p + 1}-0`;
            } else {
              ret = `>=${M}.${m}.${p}${z} <${M}.${+m + 1}.0-0`;
            }
          } else {
            ret = `>=${M}.${m}.${p} <${+M + 1}.0.0-0`;
          }
        }
        debug3("caret return", ret);
        return ret;
      });
    }, "replaceCaret");
    var replaceXRanges = /* @__PURE__ */ __name((comp, options) => {
      debug3("replaceXRanges", comp, options);
      return comp.split(/\s+/).map((c) => replaceXRange(c, options)).join(" ");
    }, "replaceXRanges");
    var replaceXRange = /* @__PURE__ */ __name((comp, options) => {
      comp = comp.trim();
      const r = options.loose ? re[t.XRANGELOOSE] : re[t.XRANGE];
      return comp.replace(r, (ret, gtlt, M, m, p, pr) => {
        debug3("xRange", comp, ret, gtlt, M, m, p, pr);
        const xM = isX(M);
        const xm = xM || isX(m);
        const xp = xm || isX(p);
        const anyX = xp;
        if (gtlt === "=" && anyX) {
          gtlt = "";
        }
        pr = options.includePrerelease ? "-0" : "";
        if (xM) {
          if (gtlt === ">" || gtlt === "<") {
            ret = "<0.0.0-0";
          } else {
            ret = "*";
          }
        } else if (gtlt && anyX) {
          if (xm) {
            m = 0;
          }
          p = 0;
          if (gtlt === ">") {
            gtlt = ">=";
            if (xm) {
              M = +M + 1;
              m = 0;
              p = 0;
            } else {
              m = +m + 1;
              p = 0;
            }
          } else if (gtlt === "<=") {
            gtlt = "<";
            if (xm) {
              M = +M + 1;
            } else {
              m = +m + 1;
            }
          }
          if (gtlt === "<") {
            pr = "-0";
          }
          ret = `${gtlt + M}.${m}.${p}${pr}`;
        } else if (xm) {
          ret = `>=${M}.0.0${pr} <${+M + 1}.0.0-0`;
        } else if (xp) {
          ret = `>=${M}.${m}.0${pr} <${M}.${+m + 1}.0-0`;
        }
        debug3("xRange return", ret);
        return ret;
      });
    }, "replaceXRange");
    var replaceStars = /* @__PURE__ */ __name((comp, options) => {
      debug3("replaceStars", comp, options);
      return comp.trim().replace(re[t.STAR], "");
    }, "replaceStars");
    var replaceGTE0 = /* @__PURE__ */ __name((comp, options) => {
      debug3("replaceGTE0", comp, options);
      return comp.trim().replace(re[options.includePrerelease ? t.GTE0PRE : t.GTE0], "");
    }, "replaceGTE0");
    var hyphenReplace = /* @__PURE__ */ __name((incPr) => ($0, from, fM, fm, fp, fpr, fb, to, tM, tm, tp, tpr) => {
      if (isX(fM)) {
        from = "";
      } else if (isX(fm)) {
        from = `>=${fM}.0.0${incPr ? "-0" : ""}`;
      } else if (isX(fp)) {
        from = `>=${fM}.${fm}.0${incPr ? "-0" : ""}`;
      } else if (fpr) {
        from = `>=${from}`;
      } else {
        from = `>=${from}${incPr ? "-0" : ""}`;
      }
      if (isX(tM)) {
        to = "";
      } else if (isX(tm)) {
        to = `<${+tM + 1}.0.0-0`;
      } else if (isX(tp)) {
        to = `<${tM}.${+tm + 1}.0-0`;
      } else if (tpr) {
        to = `<=${tM}.${tm}.${tp}-${tpr}`;
      } else if (incPr) {
        to = `<${tM}.${tm}.${+tp + 1}-0`;
      } else {
        to = `<=${to}`;
      }
      return `${from} ${to}`.trim();
    }, "hyphenReplace");
    var testSet = /* @__PURE__ */ __name((set, version2, options) => {
      for (let i = 0; i < set.length; i++) {
        if (!set[i].test(version2)) {
          return false;
        }
      }
      if (version2.prerelease.length && !options.includePrerelease) {
        for (let i = 0; i < set.length; i++) {
          debug3(set[i].semver);
          if (set[i].semver === Comparator.ANY) {
            continue;
          }
          if (set[i].semver.prerelease.length > 0) {
            const allowed = set[i].semver;
            if (allowed.major === version2.major && allowed.minor === version2.minor && allowed.patch === version2.patch) {
              return true;
            }
          }
        }
        return false;
      }
      return true;
    }, "testSet");
  }
});

// node_modules/semver/classes/comparator.js
var require_comparator = __commonJS({
  "node_modules/semver/classes/comparator.js"(exports, module) {
    "use strict";
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    var ANY = Symbol("SemVer ANY");
    var Comparator = class _Comparator {
      static {
        __name(this, "Comparator");
      }
      static get ANY() {
        return ANY;
      }
      constructor(comp, options) {
        options = parseOptions(options);
        if (comp instanceof _Comparator) {
          if (comp.loose === !!options.loose) {
            return comp;
          } else {
            comp = comp.value;
          }
        }
        comp = comp.trim().split(/\s+/).join(" ");
        debug3("comparator", comp, options);
        this.options = options;
        this.loose = !!options.loose;
        this.parse(comp);
        if (this.semver === ANY) {
          this.value = "";
        } else {
          this.value = this.operator + this.semver.version;
        }
        debug3("comp", this);
      }
      parse(comp) {
        const r = this.options.loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR];
        const m = comp.match(r);
        if (!m) {
          throw new TypeError(`Invalid comparator: ${comp}`);
        }
        this.operator = m[1] !== void 0 ? m[1] : "";
        if (this.operator === "=") {
          this.operator = "";
        }
        if (!m[2]) {
          this.semver = ANY;
        } else {
          this.semver = new SemVer(m[2], this.options.loose);
        }
      }
      toString() {
        return this.value;
      }
      test(version2) {
        debug3("Comparator.test", version2, this.options.loose);
        if (this.semver === ANY || version2 === ANY) {
          return true;
        }
        if (typeof version2 === "string") {
          try {
            version2 = new SemVer(version2, this.options);
          } catch (er) {
            return false;
          }
        }
        return cmp(version2, this.operator, this.semver, this.options);
      }
      intersects(comp, options) {
        if (!(comp instanceof _Comparator)) {
          throw new TypeError("a Comparator is required");
        }
        if (this.operator === "") {
          if (this.value === "") {
            return true;
          }
          return new Range(comp.value, options).test(this.value);
        } else if (comp.operator === "") {
          if (comp.value === "") {
            return true;
          }
          return new Range(this.value, options).test(comp.semver);
        }
        options = parseOptions(options);
        if (options.includePrerelease && (this.value === "<0.0.0-0" || comp.value === "<0.0.0-0")) {
          return false;
        }
        if (!options.includePrerelease && (this.value.startsWith("<0.0.0") || comp.value.startsWith("<0.0.0"))) {
          return false;
        }
        if (this.operator.startsWith(">") && comp.operator.startsWith(">")) {
          return true;
        }
        if (this.operator.startsWith("<") && comp.operator.startsWith("<")) {
          return true;
        }
        if (this.semver.version === comp.semver.version && this.operator.includes("=") && comp.operator.includes("=")) {
          return true;
        }
        if (cmp(this.semver, "<", comp.semver, options) && this.operator.startsWith(">") && comp.operator.startsWith("<")) {
          return true;
        }
        if (cmp(this.semver, ">", comp.semver, options) && this.operator.startsWith("<") && comp.operator.startsWith(">")) {
          return true;
        }
        return false;
      }
    };
    module.exports = Comparator;
    var parseOptions = require_parse_options();
    var { safeRe: re, t } = require_re();
    var cmp = require_cmp();
    var debug3 = require_debug();
    var SemVer = require_semver();
    var Range = require_range();
  }
});

// node_modules/semver/functions/satisfies.js
var require_satisfies = __commonJS({
  "node_modules/semver/functions/satisfies.js"(exports, module) {
    "use strict";
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    var Range = require_range();
    var satisfies = /* @__PURE__ */ __name((version2, range, options) => {
      try {
        range = new Range(range, options);
      } catch (er) {
        return false;
      }
      return range.test(version2);
    }, "satisfies");
    module.exports = satisfies;
  }
});

// node_modules/semver/ranges/to-comparators.js
var require_to_comparators = __commonJS({
  "node_modules/semver/ranges/to-comparators.js"(exports, module) {
    "use strict";
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    var Range = require_range();
    var toComparators = /* @__PURE__ */ __name((range, options) => new Range(range, options).set.map((comp) => comp.map((c) => c.value).join(" ").trim().split(" ")), "toComparators");
    module.exports = toComparators;
  }
});

// node_modules/semver/ranges/max-satisfying.js
var require_max_satisfying = __commonJS({
  "node_modules/semver/ranges/max-satisfying.js"(exports, module) {
    "use strict";
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    var SemVer = require_semver();
    var Range = require_range();
    var maxSatisfying = /* @__PURE__ */ __name((versions2, range, options) => {
      let max = null;
      let maxSV = null;
      let rangeObj = null;
      try {
        rangeObj = new Range(range, options);
      } catch (er) {
        return null;
      }
      versions2.forEach((v) => {
        if (rangeObj.test(v)) {
          if (!max || maxSV.compare(v) === -1) {
            max = v;
            maxSV = new SemVer(max, options);
          }
        }
      });
      return max;
    }, "maxSatisfying");
    module.exports = maxSatisfying;
  }
});

// node_modules/semver/ranges/min-satisfying.js
var require_min_satisfying = __commonJS({
  "node_modules/semver/ranges/min-satisfying.js"(exports, module) {
    "use strict";
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    var SemVer = require_semver();
    var Range = require_range();
    var minSatisfying = /* @__PURE__ */ __name((versions2, range, options) => {
      let min = null;
      let minSV = null;
      let rangeObj = null;
      try {
        rangeObj = new Range(range, options);
      } catch (er) {
        return null;
      }
      versions2.forEach((v) => {
        if (rangeObj.test(v)) {
          if (!min || minSV.compare(v) === 1) {
            min = v;
            minSV = new SemVer(min, options);
          }
        }
      });
      return min;
    }, "minSatisfying");
    module.exports = minSatisfying;
  }
});

// node_modules/semver/ranges/min-version.js
var require_min_version = __commonJS({
  "node_modules/semver/ranges/min-version.js"(exports, module) {
    "use strict";
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    var SemVer = require_semver();
    var Range = require_range();
    var gt = require_gt();
    var minVersion = /* @__PURE__ */ __name((range, loose) => {
      range = new Range(range, loose);
      let minver = new SemVer("0.0.0");
      if (range.test(minver)) {
        return minver;
      }
      minver = new SemVer("0.0.0-0");
      if (range.test(minver)) {
        return minver;
      }
      minver = null;
      for (let i = 0; i < range.set.length; ++i) {
        const comparators = range.set[i];
        let setMin = null;
        comparators.forEach((comparator) => {
          const compver = new SemVer(comparator.semver.version);
          switch (comparator.operator) {
            case ">":
              if (compver.prerelease.length === 0) {
                compver.patch++;
              } else {
                compver.prerelease.push(0);
              }
              compver.raw = compver.format();
            /* fallthrough */
            case "":
            case ">=":
              if (!setMin || gt(compver, setMin)) {
                setMin = compver;
              }
              break;
            case "<":
            case "<=":
              break;
            /* istanbul ignore next */
            default:
              throw new Error(`Unexpected operation: ${comparator.operator}`);
          }
        });
        if (setMin && (!minver || gt(minver, setMin))) {
          minver = setMin;
        }
      }
      if (minver && range.test(minver)) {
        return minver;
      }
      return null;
    }, "minVersion");
    module.exports = minVersion;
  }
});

// node_modules/semver/ranges/valid.js
var require_valid2 = __commonJS({
  "node_modules/semver/ranges/valid.js"(exports, module) {
    "use strict";
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    var Range = require_range();
    var validRange = /* @__PURE__ */ __name((range, options) => {
      try {
        return new Range(range, options).range || "*";
      } catch (er) {
        return null;
      }
    }, "validRange");
    module.exports = validRange;
  }
});

// node_modules/semver/ranges/outside.js
var require_outside = __commonJS({
  "node_modules/semver/ranges/outside.js"(exports, module) {
    "use strict";
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    var SemVer = require_semver();
    var Comparator = require_comparator();
    var { ANY } = Comparator;
    var Range = require_range();
    var satisfies = require_satisfies();
    var gt = require_gt();
    var lt = require_lt();
    var lte = require_lte();
    var gte = require_gte();
    var outside = /* @__PURE__ */ __name((version2, range, hilo, options) => {
      version2 = new SemVer(version2, options);
      range = new Range(range, options);
      let gtfn, ltefn, ltfn, comp, ecomp;
      switch (hilo) {
        case ">":
          gtfn = gt;
          ltefn = lte;
          ltfn = lt;
          comp = ">";
          ecomp = ">=";
          break;
        case "<":
          gtfn = lt;
          ltefn = gte;
          ltfn = gt;
          comp = "<";
          ecomp = "<=";
          break;
        default:
          throw new TypeError('Must provide a hilo val of "<" or ">"');
      }
      if (satisfies(version2, range, options)) {
        return false;
      }
      for (let i = 0; i < range.set.length; ++i) {
        const comparators = range.set[i];
        let high = null;
        let low = null;
        comparators.forEach((comparator) => {
          if (comparator.semver === ANY) {
            comparator = new Comparator(">=0.0.0");
          }
          high = high || comparator;
          low = low || comparator;
          if (gtfn(comparator.semver, high.semver, options)) {
            high = comparator;
          } else if (ltfn(comparator.semver, low.semver, options)) {
            low = comparator;
          }
        });
        if (high.operator === comp || high.operator === ecomp) {
          return false;
        }
        if ((!low.operator || low.operator === comp) && ltefn(version2, low.semver)) {
          return false;
        } else if (low.operator === ecomp && ltfn(version2, low.semver)) {
          return false;
        }
      }
      return true;
    }, "outside");
    module.exports = outside;
  }
});

// node_modules/semver/ranges/gtr.js
var require_gtr = __commonJS({
  "node_modules/semver/ranges/gtr.js"(exports, module) {
    "use strict";
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    var outside = require_outside();
    var gtr = /* @__PURE__ */ __name((version2, range, options) => outside(version2, range, ">", options), "gtr");
    module.exports = gtr;
  }
});

// node_modules/semver/ranges/ltr.js
var require_ltr = __commonJS({
  "node_modules/semver/ranges/ltr.js"(exports, module) {
    "use strict";
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    var outside = require_outside();
    var ltr = /* @__PURE__ */ __name((version2, range, options) => outside(version2, range, "<", options), "ltr");
    module.exports = ltr;
  }
});

// node_modules/semver/ranges/intersects.js
var require_intersects = __commonJS({
  "node_modules/semver/ranges/intersects.js"(exports, module) {
    "use strict";
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    var Range = require_range();
    var intersects = /* @__PURE__ */ __name((r1, r2, options) => {
      r1 = new Range(r1, options);
      r2 = new Range(r2, options);
      return r1.intersects(r2, options);
    }, "intersects");
    module.exports = intersects;
  }
});

// node_modules/semver/ranges/simplify.js
var require_simplify = __commonJS({
  "node_modules/semver/ranges/simplify.js"(exports, module) {
    "use strict";
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    var satisfies = require_satisfies();
    var compare2 = require_compare();
    module.exports = (versions2, range, options) => {
      const set = [];
      let first = null;
      let prev = null;
      const v = versions2.sort((a, b) => compare2(a, b, options));
      for (const version2 of v) {
        const included = satisfies(version2, range, options);
        if (included) {
          prev = version2;
          if (!first) {
            first = version2;
          }
        } else {
          if (prev) {
            set.push([first, prev]);
          }
          prev = null;
          first = null;
        }
      }
      if (first) {
        set.push([first, null]);
      }
      const ranges = [];
      for (const [min, max] of set) {
        if (min === max) {
          ranges.push(min);
        } else if (!max && min === v[0]) {
          ranges.push("*");
        } else if (!max) {
          ranges.push(`>=${min}`);
        } else if (min === v[0]) {
          ranges.push(`<=${max}`);
        } else {
          ranges.push(`${min} - ${max}`);
        }
      }
      const simplified = ranges.join(" || ");
      const original = typeof range.raw === "string" ? range.raw : String(range);
      return simplified.length < original.length ? simplified : range;
    };
  }
});

// node_modules/semver/ranges/subset.js
var require_subset = __commonJS({
  "node_modules/semver/ranges/subset.js"(exports, module) {
    "use strict";
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    var Range = require_range();
    var Comparator = require_comparator();
    var { ANY } = Comparator;
    var satisfies = require_satisfies();
    var compare2 = require_compare();
    var subset = /* @__PURE__ */ __name((sub, dom, options = {}) => {
      if (sub === dom) {
        return true;
      }
      sub = new Range(sub, options);
      dom = new Range(dom, options);
      let sawNonNull = false;
      OUTER: for (const simpleSub of sub.set) {
        for (const simpleDom of dom.set) {
          const isSub = simpleSubset(simpleSub, simpleDom, options);
          sawNonNull = sawNonNull || isSub !== null;
          if (isSub) {
            continue OUTER;
          }
        }
        if (sawNonNull) {
          return false;
        }
      }
      return true;
    }, "subset");
    var minimumVersionWithPreRelease = [new Comparator(">=0.0.0-0")];
    var minimumVersion = [new Comparator(">=0.0.0")];
    var simpleSubset = /* @__PURE__ */ __name((sub, dom, options) => {
      if (sub === dom) {
        return true;
      }
      if (sub.length === 1 && sub[0].semver === ANY) {
        if (dom.length === 1 && dom[0].semver === ANY) {
          return true;
        } else if (options.includePrerelease) {
          sub = minimumVersionWithPreRelease;
        } else {
          sub = minimumVersion;
        }
      }
      if (dom.length === 1 && dom[0].semver === ANY) {
        if (options.includePrerelease) {
          return true;
        } else {
          dom = minimumVersion;
        }
      }
      const eqSet = /* @__PURE__ */ new Set();
      let gt, lt;
      for (const c of sub) {
        if (c.operator === ">" || c.operator === ">=") {
          gt = higherGT(gt, c, options);
        } else if (c.operator === "<" || c.operator === "<=") {
          lt = lowerLT(lt, c, options);
        } else {
          eqSet.add(c.semver);
        }
      }
      if (eqSet.size > 1) {
        return null;
      }
      let gtltComp;
      if (gt && lt) {
        gtltComp = compare2(gt.semver, lt.semver, options);
        if (gtltComp > 0) {
          return null;
        } else if (gtltComp === 0 && (gt.operator !== ">=" || lt.operator !== "<=")) {
          return null;
        }
      }
      for (const eq of eqSet) {
        if (gt && !satisfies(eq, String(gt), options)) {
          return null;
        }
        if (lt && !satisfies(eq, String(lt), options)) {
          return null;
        }
        for (const c of dom) {
          if (!satisfies(eq, String(c), options)) {
            return false;
          }
        }
        return true;
      }
      let higher, lower;
      let hasDomLT, hasDomGT;
      let needDomLTPre = lt && !options.includePrerelease && lt.semver.prerelease.length ? lt.semver : false;
      let needDomGTPre = gt && !options.includePrerelease && gt.semver.prerelease.length ? gt.semver : false;
      if (needDomLTPre && needDomLTPre.prerelease.length === 1 && lt.operator === "<" && needDomLTPre.prerelease[0] === 0) {
        needDomLTPre = false;
      }
      for (const c of dom) {
        hasDomGT = hasDomGT || c.operator === ">" || c.operator === ">=";
        hasDomLT = hasDomLT || c.operator === "<" || c.operator === "<=";
        if (gt) {
          if (needDomGTPre) {
            if (c.semver.prerelease && c.semver.prerelease.length && c.semver.major === needDomGTPre.major && c.semver.minor === needDomGTPre.minor && c.semver.patch === needDomGTPre.patch) {
              needDomGTPre = false;
            }
          }
          if (c.operator === ">" || c.operator === ">=") {
            higher = higherGT(gt, c, options);
            if (higher === c && higher !== gt) {
              return false;
            }
          } else if (gt.operator === ">=" && !satisfies(gt.semver, String(c), options)) {
            return false;
          }
        }
        if (lt) {
          if (needDomLTPre) {
            if (c.semver.prerelease && c.semver.prerelease.length && c.semver.major === needDomLTPre.major && c.semver.minor === needDomLTPre.minor && c.semver.patch === needDomLTPre.patch) {
              needDomLTPre = false;
            }
          }
          if (c.operator === "<" || c.operator === "<=") {
            lower = lowerLT(lt, c, options);
            if (lower === c && lower !== lt) {
              return false;
            }
          } else if (lt.operator === "<=" && !satisfies(lt.semver, String(c), options)) {
            return false;
          }
        }
        if (!c.operator && (lt || gt) && gtltComp !== 0) {
          return false;
        }
      }
      if (gt && hasDomLT && !lt && gtltComp !== 0) {
        return false;
      }
      if (lt && hasDomGT && !gt && gtltComp !== 0) {
        return false;
      }
      if (needDomGTPre || needDomLTPre) {
        return false;
      }
      return true;
    }, "simpleSubset");
    var higherGT = /* @__PURE__ */ __name((a, b, options) => {
      if (!a) {
        return b;
      }
      const comp = compare2(a.semver, b.semver, options);
      return comp > 0 ? a : comp < 0 ? b : b.operator === ">" && a.operator === ">=" ? b : a;
    }, "higherGT");
    var lowerLT = /* @__PURE__ */ __name((a, b, options) => {
      if (!a) {
        return b;
      }
      const comp = compare2(a.semver, b.semver, options);
      return comp < 0 ? a : comp > 0 ? b : b.operator === "<" && a.operator === "<=" ? b : a;
    }, "lowerLT");
    module.exports = subset;
  }
});

// node_modules/semver/index.js
var require_semver2 = __commonJS({
  "node_modules/semver/index.js"(exports, module) {
    "use strict";
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    var internalRe = require_re();
    var constants = require_constants();
    var SemVer = require_semver();
    var identifiers = require_identifiers();
    var parse2 = require_parse();
    var valid = require_valid();
    var clean = require_clean();
    var inc = require_inc();
    var diff = require_diff();
    var major = require_major();
    var minor = require_minor();
    var patch = require_patch();
    var prerelease = require_prerelease();
    var compare2 = require_compare();
    var rcompare = require_rcompare();
    var compareLoose = require_compare_loose();
    var compareBuild = require_compare_build();
    var sort = require_sort();
    var rsort = require_rsort();
    var gt = require_gt();
    var lt = require_lt();
    var eq = require_eq();
    var neq = require_neq();
    var gte = require_gte();
    var lte = require_lte();
    var cmp = require_cmp();
    var coerce = require_coerce();
    var Comparator = require_comparator();
    var Range = require_range();
    var satisfies = require_satisfies();
    var toComparators = require_to_comparators();
    var maxSatisfying = require_max_satisfying();
    var minSatisfying = require_min_satisfying();
    var minVersion = require_min_version();
    var validRange = require_valid2();
    var outside = require_outside();
    var gtr = require_gtr();
    var ltr = require_ltr();
    var intersects = require_intersects();
    var simplifyRange = require_simplify();
    var subset = require_subset();
    module.exports = {
      parse: parse2,
      valid,
      clean,
      inc,
      diff,
      major,
      minor,
      patch,
      prerelease,
      compare: compare2,
      rcompare,
      compareLoose,
      compareBuild,
      sort,
      rsort,
      gt,
      lt,
      eq,
      neq,
      gte,
      lte,
      cmp,
      coerce,
      Comparator,
      Range,
      satisfies,
      toComparators,
      maxSatisfying,
      minSatisfying,
      minVersion,
      validRange,
      outside,
      gtr,
      ltr,
      intersects,
      simplifyRange,
      subset,
      SemVer,
      re: internalRe.re,
      src: internalRe.src,
      tokens: internalRe.t,
      SEMVER_SPEC_VERSION: constants.SEMVER_SPEC_VERSION,
      RELEASE_TYPES: constants.RELEASE_TYPES,
      compareIdentifiers: identifiers.compareIdentifiers,
      rcompareIdentifiers: identifiers.rcompareIdentifiers
    };
  }
});

// node_modules/jsonwebtoken/lib/asymmetricKeyDetailsSupported.js
var require_asymmetricKeyDetailsSupported = __commonJS({
  "node_modules/jsonwebtoken/lib/asymmetricKeyDetailsSupported.js"(exports, module) {
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    var semver = require_semver2();
    module.exports = semver.satisfies(process.version, ">=15.7.0");
  }
});

// node_modules/jsonwebtoken/lib/rsaPssKeyDetailsSupported.js
var require_rsaPssKeyDetailsSupported = __commonJS({
  "node_modules/jsonwebtoken/lib/rsaPssKeyDetailsSupported.js"(exports, module) {
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    var semver = require_semver2();
    module.exports = semver.satisfies(process.version, ">=16.9.0");
  }
});

// node_modules/jsonwebtoken/lib/validateAsymmetricKey.js
var require_validateAsymmetricKey = __commonJS({
  "node_modules/jsonwebtoken/lib/validateAsymmetricKey.js"(exports, module) {
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    var ASYMMETRIC_KEY_DETAILS_SUPPORTED = require_asymmetricKeyDetailsSupported();
    var RSA_PSS_KEY_DETAILS_SUPPORTED = require_rsaPssKeyDetailsSupported();
    var allowedAlgorithmsForKeys = {
      "ec": ["ES256", "ES384", "ES512"],
      "rsa": ["RS256", "PS256", "RS384", "PS384", "RS512", "PS512"],
      "rsa-pss": ["PS256", "PS384", "PS512"]
    };
    var allowedCurves = {
      ES256: "prime256v1",
      ES384: "secp384r1",
      ES512: "secp521r1"
    };
    module.exports = function(algorithm, key) {
      if (!algorithm || !key) return;
      const keyType = key.asymmetricKeyType;
      if (!keyType) return;
      const allowedAlgorithms = allowedAlgorithmsForKeys[keyType];
      if (!allowedAlgorithms) {
        throw new Error(`Unknown key type "${keyType}".`);
      }
      if (!allowedAlgorithms.includes(algorithm)) {
        throw new Error(`"alg" parameter for "${keyType}" key type must be one of: ${allowedAlgorithms.join(", ")}.`);
      }
      if (ASYMMETRIC_KEY_DETAILS_SUPPORTED) {
        switch (keyType) {
          case "ec":
            const keyCurve = key.asymmetricKeyDetails.namedCurve;
            const allowedCurve = allowedCurves[algorithm];
            if (keyCurve !== allowedCurve) {
              throw new Error(`"alg" parameter "${algorithm}" requires curve "${allowedCurve}".`);
            }
            break;
          case "rsa-pss":
            if (RSA_PSS_KEY_DETAILS_SUPPORTED) {
              const length = parseInt(algorithm.slice(-3), 10);
              const { hashAlgorithm, mgf1HashAlgorithm, saltLength } = key.asymmetricKeyDetails;
              if (hashAlgorithm !== `sha${length}` || mgf1HashAlgorithm !== hashAlgorithm) {
                throw new Error(`Invalid key for this operation, its RSA-PSS parameters do not meet the requirements of "alg" ${algorithm}.`);
              }
              if (saltLength !== void 0 && saltLength > length >> 3) {
                throw new Error(`Invalid key for this operation, its RSA-PSS parameter saltLength does not meet the requirements of "alg" ${algorithm}.`);
              }
            }
            break;
        }
      }
    };
  }
});

// node_modules/jsonwebtoken/lib/psSupported.js
var require_psSupported = __commonJS({
  "node_modules/jsonwebtoken/lib/psSupported.js"(exports, module) {
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    var semver = require_semver2();
    module.exports = semver.satisfies(process.version, "^6.12.0 || >=8.0.0");
  }
});

// node_modules/jsonwebtoken/verify.js
var require_verify = __commonJS({
  "node_modules/jsonwebtoken/verify.js"(exports, module) {
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    var JsonWebTokenError = require_JsonWebTokenError();
    var NotBeforeError = require_NotBeforeError();
    var TokenExpiredError = require_TokenExpiredError();
    var decode3 = require_decode();
    var timespan = require_timespan();
    var validateAsymmetricKey = require_validateAsymmetricKey();
    var PS_SUPPORTED = require_psSupported();
    var jws = require_jws();
    var { KeyObject, createSecretKey, createPublicKey } = require_crypto();
    var PUB_KEY_ALGS = ["RS256", "RS384", "RS512"];
    var EC_KEY_ALGS = ["ES256", "ES384", "ES512"];
    var RSA_KEY_ALGS = ["RS256", "RS384", "RS512"];
    var HS_ALGS = ["HS256", "HS384", "HS512"];
    if (PS_SUPPORTED) {
      PUB_KEY_ALGS.splice(PUB_KEY_ALGS.length, 0, "PS256", "PS384", "PS512");
      RSA_KEY_ALGS.splice(RSA_KEY_ALGS.length, 0, "PS256", "PS384", "PS512");
    }
    module.exports = function(jwtString, secretOrPublicKey, options, callback) {
      if (typeof options === "function" && !callback) {
        callback = options;
        options = {};
      }
      if (!options) {
        options = {};
      }
      options = Object.assign({}, options);
      let done;
      if (callback) {
        done = callback;
      } else {
        done = /* @__PURE__ */ __name(function(err, data) {
          if (err) throw err;
          return data;
        }, "done");
      }
      if (options.clockTimestamp && typeof options.clockTimestamp !== "number") {
        return done(new JsonWebTokenError("clockTimestamp must be a number"));
      }
      if (options.nonce !== void 0 && (typeof options.nonce !== "string" || options.nonce.trim() === "")) {
        return done(new JsonWebTokenError("nonce must be a non-empty string"));
      }
      if (options.allowInvalidAsymmetricKeyTypes !== void 0 && typeof options.allowInvalidAsymmetricKeyTypes !== "boolean") {
        return done(new JsonWebTokenError("allowInvalidAsymmetricKeyTypes must be a boolean"));
      }
      const clockTimestamp = options.clockTimestamp || Math.floor(Date.now() / 1e3);
      if (!jwtString) {
        return done(new JsonWebTokenError("jwt must be provided"));
      }
      if (typeof jwtString !== "string") {
        return done(new JsonWebTokenError("jwt must be a string"));
      }
      const parts = jwtString.split(".");
      if (parts.length !== 3) {
        return done(new JsonWebTokenError("jwt malformed"));
      }
      let decodedToken;
      try {
        decodedToken = decode3(jwtString, { complete: true });
      } catch (err) {
        return done(err);
      }
      if (!decodedToken) {
        return done(new JsonWebTokenError("invalid token"));
      }
      const header = decodedToken.header;
      let getSecret;
      if (typeof secretOrPublicKey === "function") {
        if (!callback) {
          return done(new JsonWebTokenError("verify must be called asynchronous if secret or public key is provided as a callback"));
        }
        getSecret = secretOrPublicKey;
      } else {
        getSecret = /* @__PURE__ */ __name(function(header2, secretCallback) {
          return secretCallback(null, secretOrPublicKey);
        }, "getSecret");
      }
      return getSecret(header, function(err, secretOrPublicKey2) {
        if (err) {
          return done(new JsonWebTokenError("error in secret or public key callback: " + err.message));
        }
        const hasSignature = parts[2].trim() !== "";
        if (!hasSignature && secretOrPublicKey2) {
          return done(new JsonWebTokenError("jwt signature is required"));
        }
        if (hasSignature && !secretOrPublicKey2) {
          return done(new JsonWebTokenError("secret or public key must be provided"));
        }
        if (!hasSignature && !options.algorithms) {
          return done(new JsonWebTokenError('please specify "none" in "algorithms" to verify unsigned tokens'));
        }
        if (secretOrPublicKey2 != null && !(secretOrPublicKey2 instanceof KeyObject)) {
          try {
            secretOrPublicKey2 = createPublicKey(secretOrPublicKey2);
          } catch (_) {
            try {
              secretOrPublicKey2 = createSecretKey(typeof secretOrPublicKey2 === "string" ? Buffer.from(secretOrPublicKey2) : secretOrPublicKey2);
            } catch (_2) {
              return done(new JsonWebTokenError("secretOrPublicKey is not valid key material"));
            }
          }
        }
        if (!options.algorithms) {
          if (secretOrPublicKey2.type === "secret") {
            options.algorithms = HS_ALGS;
          } else if (["rsa", "rsa-pss"].includes(secretOrPublicKey2.asymmetricKeyType)) {
            options.algorithms = RSA_KEY_ALGS;
          } else if (secretOrPublicKey2.asymmetricKeyType === "ec") {
            options.algorithms = EC_KEY_ALGS;
          } else {
            options.algorithms = PUB_KEY_ALGS;
          }
        }
        if (options.algorithms.indexOf(decodedToken.header.alg) === -1) {
          return done(new JsonWebTokenError("invalid algorithm"));
        }
        if (header.alg.startsWith("HS") && secretOrPublicKey2.type !== "secret") {
          return done(new JsonWebTokenError(`secretOrPublicKey must be a symmetric key when using ${header.alg}`));
        } else if (/^(?:RS|PS|ES)/.test(header.alg) && secretOrPublicKey2.type !== "public") {
          return done(new JsonWebTokenError(`secretOrPublicKey must be an asymmetric key when using ${header.alg}`));
        }
        if (!options.allowInvalidAsymmetricKeyTypes) {
          try {
            validateAsymmetricKey(header.alg, secretOrPublicKey2);
          } catch (e) {
            return done(e);
          }
        }
        let valid;
        try {
          valid = jws.verify(jwtString, decodedToken.header.alg, secretOrPublicKey2);
        } catch (e) {
          return done(e);
        }
        if (!valid) {
          return done(new JsonWebTokenError("invalid signature"));
        }
        const payload = decodedToken.payload;
        if (typeof payload.nbf !== "undefined" && !options.ignoreNotBefore) {
          if (typeof payload.nbf !== "number") {
            return done(new JsonWebTokenError("invalid nbf value"));
          }
          if (payload.nbf > clockTimestamp + (options.clockTolerance || 0)) {
            return done(new NotBeforeError("jwt not active", new Date(payload.nbf * 1e3)));
          }
        }
        if (typeof payload.exp !== "undefined" && !options.ignoreExpiration) {
          if (typeof payload.exp !== "number") {
            return done(new JsonWebTokenError("invalid exp value"));
          }
          if (clockTimestamp >= payload.exp + (options.clockTolerance || 0)) {
            return done(new TokenExpiredError("jwt expired", new Date(payload.exp * 1e3)));
          }
        }
        if (options.audience) {
          const audiences = Array.isArray(options.audience) ? options.audience : [options.audience];
          const target = Array.isArray(payload.aud) ? payload.aud : [payload.aud];
          const match = target.some(function(targetAudience) {
            return audiences.some(function(audience) {
              return audience instanceof RegExp ? audience.test(targetAudience) : audience === targetAudience;
            });
          });
          if (!match) {
            return done(new JsonWebTokenError("jwt audience invalid. expected: " + audiences.join(" or ")));
          }
        }
        if (options.issuer) {
          const invalid_issuer = typeof options.issuer === "string" && payload.iss !== options.issuer || Array.isArray(options.issuer) && options.issuer.indexOf(payload.iss) === -1;
          if (invalid_issuer) {
            return done(new JsonWebTokenError("jwt issuer invalid. expected: " + options.issuer));
          }
        }
        if (options.subject) {
          if (payload.sub !== options.subject) {
            return done(new JsonWebTokenError("jwt subject invalid. expected: " + options.subject));
          }
        }
        if (options.jwtid) {
          if (payload.jti !== options.jwtid) {
            return done(new JsonWebTokenError("jwt jwtid invalid. expected: " + options.jwtid));
          }
        }
        if (options.nonce) {
          if (payload.nonce !== options.nonce) {
            return done(new JsonWebTokenError("jwt nonce invalid. expected: " + options.nonce));
          }
        }
        if (options.maxAge) {
          if (typeof payload.iat !== "number") {
            return done(new JsonWebTokenError("iat required when maxAge is specified"));
          }
          const maxAgeTimestamp = timespan(options.maxAge, payload.iat);
          if (typeof maxAgeTimestamp === "undefined") {
            return done(new JsonWebTokenError('"maxAge" should be a number of seconds or string representing a timespan eg: "1d", "20h", 60'));
          }
          if (clockTimestamp >= maxAgeTimestamp + (options.clockTolerance || 0)) {
            return done(new TokenExpiredError("maxAge exceeded", new Date(maxAgeTimestamp * 1e3)));
          }
        }
        if (options.complete === true) {
          const signature = decodedToken.signature;
          return done(null, {
            header,
            payload,
            signature
          });
        }
        return done(null, payload);
      });
    };
  }
});

// node_modules/lodash.includes/index.js
var require_lodash = __commonJS({
  "node_modules/lodash.includes/index.js"(exports, module) {
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    var INFINITY = 1 / 0;
    var MAX_SAFE_INTEGER = 9007199254740991;
    var MAX_INTEGER = 17976931348623157e292;
    var NAN = 0 / 0;
    var argsTag = "[object Arguments]";
    var funcTag = "[object Function]";
    var genTag = "[object GeneratorFunction]";
    var stringTag = "[object String]";
    var symbolTag = "[object Symbol]";
    var reTrim = /^\s+|\s+$/g;
    var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;
    var reIsBinary = /^0b[01]+$/i;
    var reIsOctal = /^0o[0-7]+$/i;
    var reIsUint = /^(?:0|[1-9]\d*)$/;
    var freeParseInt = parseInt;
    function arrayMap(array, iteratee) {
      var index = -1, length = array ? array.length : 0, result = Array(length);
      while (++index < length) {
        result[index] = iteratee(array[index], index, array);
      }
      return result;
    }
    __name(arrayMap, "arrayMap");
    function baseFindIndex(array, predicate, fromIndex, fromRight) {
      var length = array.length, index = fromIndex + (fromRight ? 1 : -1);
      while (fromRight ? index-- : ++index < length) {
        if (predicate(array[index], index, array)) {
          return index;
        }
      }
      return -1;
    }
    __name(baseFindIndex, "baseFindIndex");
    function baseIndexOf(array, value, fromIndex) {
      if (value !== value) {
        return baseFindIndex(array, baseIsNaN, fromIndex);
      }
      var index = fromIndex - 1, length = array.length;
      while (++index < length) {
        if (array[index] === value) {
          return index;
        }
      }
      return -1;
    }
    __name(baseIndexOf, "baseIndexOf");
    function baseIsNaN(value) {
      return value !== value;
    }
    __name(baseIsNaN, "baseIsNaN");
    function baseTimes(n, iteratee) {
      var index = -1, result = Array(n);
      while (++index < n) {
        result[index] = iteratee(index);
      }
      return result;
    }
    __name(baseTimes, "baseTimes");
    function baseValues(object, props) {
      return arrayMap(props, function(key) {
        return object[key];
      });
    }
    __name(baseValues, "baseValues");
    function overArg(func, transform) {
      return function(arg) {
        return func(transform(arg));
      };
    }
    __name(overArg, "overArg");
    var objectProto = Object.prototype;
    var hasOwnProperty = objectProto.hasOwnProperty;
    var objectToString = objectProto.toString;
    var propertyIsEnumerable = objectProto.propertyIsEnumerable;
    var nativeKeys = overArg(Object.keys, Object);
    var nativeMax = Math.max;
    function arrayLikeKeys(value, inherited) {
      var result = isArray(value) || isArguments(value) ? baseTimes(value.length, String) : [];
      var length = result.length, skipIndexes = !!length;
      for (var key in value) {
        if ((inherited || hasOwnProperty.call(value, key)) && !(skipIndexes && (key == "length" || isIndex(key, length)))) {
          result.push(key);
        }
      }
      return result;
    }
    __name(arrayLikeKeys, "arrayLikeKeys");
    function baseKeys(object) {
      if (!isPrototype(object)) {
        return nativeKeys(object);
      }
      var result = [];
      for (var key in Object(object)) {
        if (hasOwnProperty.call(object, key) && key != "constructor") {
          result.push(key);
        }
      }
      return result;
    }
    __name(baseKeys, "baseKeys");
    function isIndex(value, length) {
      length = length == null ? MAX_SAFE_INTEGER : length;
      return !!length && (typeof value == "number" || reIsUint.test(value)) && (value > -1 && value % 1 == 0 && value < length);
    }
    __name(isIndex, "isIndex");
    function isPrototype(value) {
      var Ctor = value && value.constructor, proto = typeof Ctor == "function" && Ctor.prototype || objectProto;
      return value === proto;
    }
    __name(isPrototype, "isPrototype");
    function includes(collection, value, fromIndex, guard) {
      collection = isArrayLike(collection) ? collection : values(collection);
      fromIndex = fromIndex && !guard ? toInteger(fromIndex) : 0;
      var length = collection.length;
      if (fromIndex < 0) {
        fromIndex = nativeMax(length + fromIndex, 0);
      }
      return isString(collection) ? fromIndex <= length && collection.indexOf(value, fromIndex) > -1 : !!length && baseIndexOf(collection, value, fromIndex) > -1;
    }
    __name(includes, "includes");
    function isArguments(value) {
      return isArrayLikeObject(value) && hasOwnProperty.call(value, "callee") && (!propertyIsEnumerable.call(value, "callee") || objectToString.call(value) == argsTag);
    }
    __name(isArguments, "isArguments");
    var isArray = Array.isArray;
    function isArrayLike(value) {
      return value != null && isLength(value.length) && !isFunction(value);
    }
    __name(isArrayLike, "isArrayLike");
    function isArrayLikeObject(value) {
      return isObjectLike(value) && isArrayLike(value);
    }
    __name(isArrayLikeObject, "isArrayLikeObject");
    function isFunction(value) {
      var tag = isObject(value) ? objectToString.call(value) : "";
      return tag == funcTag || tag == genTag;
    }
    __name(isFunction, "isFunction");
    function isLength(value) {
      return typeof value == "number" && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
    }
    __name(isLength, "isLength");
    function isObject(value) {
      var type = typeof value;
      return !!value && (type == "object" || type == "function");
    }
    __name(isObject, "isObject");
    function isObjectLike(value) {
      return !!value && typeof value == "object";
    }
    __name(isObjectLike, "isObjectLike");
    function isString(value) {
      return typeof value == "string" || !isArray(value) && isObjectLike(value) && objectToString.call(value) == stringTag;
    }
    __name(isString, "isString");
    function isSymbol(value) {
      return typeof value == "symbol" || isObjectLike(value) && objectToString.call(value) == symbolTag;
    }
    __name(isSymbol, "isSymbol");
    function toFinite(value) {
      if (!value) {
        return value === 0 ? value : 0;
      }
      value = toNumber(value);
      if (value === INFINITY || value === -INFINITY) {
        var sign4 = value < 0 ? -1 : 1;
        return sign4 * MAX_INTEGER;
      }
      return value === value ? value : 0;
    }
    __name(toFinite, "toFinite");
    function toInteger(value) {
      var result = toFinite(value), remainder = result % 1;
      return result === result ? remainder ? result - remainder : result : 0;
    }
    __name(toInteger, "toInteger");
    function toNumber(value) {
      if (typeof value == "number") {
        return value;
      }
      if (isSymbol(value)) {
        return NAN;
      }
      if (isObject(value)) {
        var other = typeof value.valueOf == "function" ? value.valueOf() : value;
        value = isObject(other) ? other + "" : other;
      }
      if (typeof value != "string") {
        return value === 0 ? value : +value;
      }
      value = value.replace(reTrim, "");
      var isBinary = reIsBinary.test(value);
      return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;
    }
    __name(toNumber, "toNumber");
    function keys(object) {
      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
    }
    __name(keys, "keys");
    function values(object) {
      return object ? baseValues(object, keys(object)) : [];
    }
    __name(values, "values");
    module.exports = includes;
  }
});

// node_modules/lodash.isboolean/index.js
var require_lodash2 = __commonJS({
  "node_modules/lodash.isboolean/index.js"(exports, module) {
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    var boolTag = "[object Boolean]";
    var objectProto = Object.prototype;
    var objectToString = objectProto.toString;
    function isBoolean(value) {
      return value === true || value === false || isObjectLike(value) && objectToString.call(value) == boolTag;
    }
    __name(isBoolean, "isBoolean");
    function isObjectLike(value) {
      return !!value && typeof value == "object";
    }
    __name(isObjectLike, "isObjectLike");
    module.exports = isBoolean;
  }
});

// node_modules/lodash.isinteger/index.js
var require_lodash3 = __commonJS({
  "node_modules/lodash.isinteger/index.js"(exports, module) {
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    var INFINITY = 1 / 0;
    var MAX_INTEGER = 17976931348623157e292;
    var NAN = 0 / 0;
    var symbolTag = "[object Symbol]";
    var reTrim = /^\s+|\s+$/g;
    var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;
    var reIsBinary = /^0b[01]+$/i;
    var reIsOctal = /^0o[0-7]+$/i;
    var freeParseInt = parseInt;
    var objectProto = Object.prototype;
    var objectToString = objectProto.toString;
    function isInteger(value) {
      return typeof value == "number" && value == toInteger(value);
    }
    __name(isInteger, "isInteger");
    function isObject(value) {
      var type = typeof value;
      return !!value && (type == "object" || type == "function");
    }
    __name(isObject, "isObject");
    function isObjectLike(value) {
      return !!value && typeof value == "object";
    }
    __name(isObjectLike, "isObjectLike");
    function isSymbol(value) {
      return typeof value == "symbol" || isObjectLike(value) && objectToString.call(value) == symbolTag;
    }
    __name(isSymbol, "isSymbol");
    function toFinite(value) {
      if (!value) {
        return value === 0 ? value : 0;
      }
      value = toNumber(value);
      if (value === INFINITY || value === -INFINITY) {
        var sign4 = value < 0 ? -1 : 1;
        return sign4 * MAX_INTEGER;
      }
      return value === value ? value : 0;
    }
    __name(toFinite, "toFinite");
    function toInteger(value) {
      var result = toFinite(value), remainder = result % 1;
      return result === result ? remainder ? result - remainder : result : 0;
    }
    __name(toInteger, "toInteger");
    function toNumber(value) {
      if (typeof value == "number") {
        return value;
      }
      if (isSymbol(value)) {
        return NAN;
      }
      if (isObject(value)) {
        var other = typeof value.valueOf == "function" ? value.valueOf() : value;
        value = isObject(other) ? other + "" : other;
      }
      if (typeof value != "string") {
        return value === 0 ? value : +value;
      }
      value = value.replace(reTrim, "");
      var isBinary = reIsBinary.test(value);
      return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;
    }
    __name(toNumber, "toNumber");
    module.exports = isInteger;
  }
});

// node_modules/lodash.isnumber/index.js
var require_lodash4 = __commonJS({
  "node_modules/lodash.isnumber/index.js"(exports, module) {
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    var numberTag = "[object Number]";
    var objectProto = Object.prototype;
    var objectToString = objectProto.toString;
    function isObjectLike(value) {
      return !!value && typeof value == "object";
    }
    __name(isObjectLike, "isObjectLike");
    function isNumber(value) {
      return typeof value == "number" || isObjectLike(value) && objectToString.call(value) == numberTag;
    }
    __name(isNumber, "isNumber");
    module.exports = isNumber;
  }
});

// node_modules/lodash.isplainobject/index.js
var require_lodash5 = __commonJS({
  "node_modules/lodash.isplainobject/index.js"(exports, module) {
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    var objectTag = "[object Object]";
    function isHostObject(value) {
      var result = false;
      if (value != null && typeof value.toString != "function") {
        try {
          result = !!(value + "");
        } catch (e) {
        }
      }
      return result;
    }
    __name(isHostObject, "isHostObject");
    function overArg(func, transform) {
      return function(arg) {
        return func(transform(arg));
      };
    }
    __name(overArg, "overArg");
    var funcProto = Function.prototype;
    var objectProto = Object.prototype;
    var funcToString = funcProto.toString;
    var hasOwnProperty = objectProto.hasOwnProperty;
    var objectCtorString = funcToString.call(Object);
    var objectToString = objectProto.toString;
    var getPrototype = overArg(Object.getPrototypeOf, Object);
    function isObjectLike(value) {
      return !!value && typeof value == "object";
    }
    __name(isObjectLike, "isObjectLike");
    function isPlainObject(value) {
      if (!isObjectLike(value) || objectToString.call(value) != objectTag || isHostObject(value)) {
        return false;
      }
      var proto = getPrototype(value);
      if (proto === null) {
        return true;
      }
      var Ctor = hasOwnProperty.call(proto, "constructor") && proto.constructor;
      return typeof Ctor == "function" && Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString;
    }
    __name(isPlainObject, "isPlainObject");
    module.exports = isPlainObject;
  }
});

// node_modules/lodash.isstring/index.js
var require_lodash6 = __commonJS({
  "node_modules/lodash.isstring/index.js"(exports, module) {
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    var stringTag = "[object String]";
    var objectProto = Object.prototype;
    var objectToString = objectProto.toString;
    var isArray = Array.isArray;
    function isObjectLike(value) {
      return !!value && typeof value == "object";
    }
    __name(isObjectLike, "isObjectLike");
    function isString(value) {
      return typeof value == "string" || !isArray(value) && isObjectLike(value) && objectToString.call(value) == stringTag;
    }
    __name(isString, "isString");
    module.exports = isString;
  }
});

// node_modules/lodash.once/index.js
var require_lodash7 = __commonJS({
  "node_modules/lodash.once/index.js"(exports, module) {
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    var FUNC_ERROR_TEXT = "Expected a function";
    var INFINITY = 1 / 0;
    var MAX_INTEGER = 17976931348623157e292;
    var NAN = 0 / 0;
    var symbolTag = "[object Symbol]";
    var reTrim = /^\s+|\s+$/g;
    var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;
    var reIsBinary = /^0b[01]+$/i;
    var reIsOctal = /^0o[0-7]+$/i;
    var freeParseInt = parseInt;
    var objectProto = Object.prototype;
    var objectToString = objectProto.toString;
    function before(n, func) {
      var result;
      if (typeof func != "function") {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      n = toInteger(n);
      return function() {
        if (--n > 0) {
          result = func.apply(this, arguments);
        }
        if (n <= 1) {
          func = void 0;
        }
        return result;
      };
    }
    __name(before, "before");
    function once2(func) {
      return before(2, func);
    }
    __name(once2, "once");
    function isObject(value) {
      var type = typeof value;
      return !!value && (type == "object" || type == "function");
    }
    __name(isObject, "isObject");
    function isObjectLike(value) {
      return !!value && typeof value == "object";
    }
    __name(isObjectLike, "isObjectLike");
    function isSymbol(value) {
      return typeof value == "symbol" || isObjectLike(value) && objectToString.call(value) == symbolTag;
    }
    __name(isSymbol, "isSymbol");
    function toFinite(value) {
      if (!value) {
        return value === 0 ? value : 0;
      }
      value = toNumber(value);
      if (value === INFINITY || value === -INFINITY) {
        var sign4 = value < 0 ? -1 : 1;
        return sign4 * MAX_INTEGER;
      }
      return value === value ? value : 0;
    }
    __name(toFinite, "toFinite");
    function toInteger(value) {
      var result = toFinite(value), remainder = result % 1;
      return result === result ? remainder ? result - remainder : result : 0;
    }
    __name(toInteger, "toInteger");
    function toNumber(value) {
      if (typeof value == "number") {
        return value;
      }
      if (isSymbol(value)) {
        return NAN;
      }
      if (isObject(value)) {
        var other = typeof value.valueOf == "function" ? value.valueOf() : value;
        value = isObject(other) ? other + "" : other;
      }
      if (typeof value != "string") {
        return value === 0 ? value : +value;
      }
      value = value.replace(reTrim, "");
      var isBinary = reIsBinary.test(value);
      return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;
    }
    __name(toNumber, "toNumber");
    module.exports = once2;
  }
});

// node_modules/jsonwebtoken/sign.js
var require_sign = __commonJS({
  "node_modules/jsonwebtoken/sign.js"(exports, module) {
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    var timespan = require_timespan();
    var PS_SUPPORTED = require_psSupported();
    var validateAsymmetricKey = require_validateAsymmetricKey();
    var jws = require_jws();
    var includes = require_lodash();
    var isBoolean = require_lodash2();
    var isInteger = require_lodash3();
    var isNumber = require_lodash4();
    var isPlainObject = require_lodash5();
    var isString = require_lodash6();
    var once2 = require_lodash7();
    var { KeyObject, createSecretKey, createPrivateKey } = require_crypto();
    var SUPPORTED_ALGS = ["RS256", "RS384", "RS512", "ES256", "ES384", "ES512", "HS256", "HS384", "HS512", "none"];
    if (PS_SUPPORTED) {
      SUPPORTED_ALGS.splice(3, 0, "PS256", "PS384", "PS512");
    }
    var sign_options_schema = {
      expiresIn: { isValid: /* @__PURE__ */ __name(function(value) {
        return isInteger(value) || isString(value) && value;
      }, "isValid"), message: '"expiresIn" should be a number of seconds or string representing a timespan' },
      notBefore: { isValid: /* @__PURE__ */ __name(function(value) {
        return isInteger(value) || isString(value) && value;
      }, "isValid"), message: '"notBefore" should be a number of seconds or string representing a timespan' },
      audience: { isValid: /* @__PURE__ */ __name(function(value) {
        return isString(value) || Array.isArray(value);
      }, "isValid"), message: '"audience" must be a string or array' },
      algorithm: { isValid: includes.bind(null, SUPPORTED_ALGS), message: '"algorithm" must be a valid string enum value' },
      header: { isValid: isPlainObject, message: '"header" must be an object' },
      encoding: { isValid: isString, message: '"encoding" must be a string' },
      issuer: { isValid: isString, message: '"issuer" must be a string' },
      subject: { isValid: isString, message: '"subject" must be a string' },
      jwtid: { isValid: isString, message: '"jwtid" must be a string' },
      noTimestamp: { isValid: isBoolean, message: '"noTimestamp" must be a boolean' },
      keyid: { isValid: isString, message: '"keyid" must be a string' },
      mutatePayload: { isValid: isBoolean, message: '"mutatePayload" must be a boolean' },
      allowInsecureKeySizes: { isValid: isBoolean, message: '"allowInsecureKeySizes" must be a boolean' },
      allowInvalidAsymmetricKeyTypes: { isValid: isBoolean, message: '"allowInvalidAsymmetricKeyTypes" must be a boolean' }
    };
    var registered_claims_schema = {
      iat: { isValid: isNumber, message: '"iat" should be a number of seconds' },
      exp: { isValid: isNumber, message: '"exp" should be a number of seconds' },
      nbf: { isValid: isNumber, message: '"nbf" should be a number of seconds' }
    };
    function validate(schema, allowUnknown, object, parameterName) {
      if (!isPlainObject(object)) {
        throw new Error('Expected "' + parameterName + '" to be a plain object.');
      }
      Object.keys(object).forEach(function(key) {
        const validator = schema[key];
        if (!validator) {
          if (!allowUnknown) {
            throw new Error('"' + key + '" is not allowed in "' + parameterName + '"');
          }
          return;
        }
        if (!validator.isValid(object[key])) {
          throw new Error(validator.message);
        }
      });
    }
    __name(validate, "validate");
    function validateOptions(options) {
      return validate(sign_options_schema, false, options, "options");
    }
    __name(validateOptions, "validateOptions");
    function validatePayload(payload) {
      return validate(registered_claims_schema, true, payload, "payload");
    }
    __name(validatePayload, "validatePayload");
    var options_to_payload = {
      "audience": "aud",
      "issuer": "iss",
      "subject": "sub",
      "jwtid": "jti"
    };
    var options_for_objects = [
      "expiresIn",
      "notBefore",
      "noTimestamp",
      "audience",
      "issuer",
      "subject",
      "jwtid"
    ];
    module.exports = function(payload, secretOrPrivateKey, options, callback) {
      if (typeof options === "function") {
        callback = options;
        options = {};
      } else {
        options = options || {};
      }
      const isObjectPayload = typeof payload === "object" && !Buffer.isBuffer(payload);
      const header = Object.assign({
        alg: options.algorithm || "HS256",
        typ: isObjectPayload ? "JWT" : void 0,
        kid: options.keyid
      }, options.header);
      function failure(err) {
        if (callback) {
          return callback(err);
        }
        throw err;
      }
      __name(failure, "failure");
      if (!secretOrPrivateKey && options.algorithm !== "none") {
        return failure(new Error("secretOrPrivateKey must have a value"));
      }
      if (secretOrPrivateKey != null && !(secretOrPrivateKey instanceof KeyObject)) {
        try {
          secretOrPrivateKey = createPrivateKey(secretOrPrivateKey);
        } catch (_) {
          try {
            secretOrPrivateKey = createSecretKey(typeof secretOrPrivateKey === "string" ? Buffer.from(secretOrPrivateKey) : secretOrPrivateKey);
          } catch (_2) {
            return failure(new Error("secretOrPrivateKey is not valid key material"));
          }
        }
      }
      if (header.alg.startsWith("HS") && secretOrPrivateKey.type !== "secret") {
        return failure(new Error(`secretOrPrivateKey must be a symmetric key when using ${header.alg}`));
      } else if (/^(?:RS|PS|ES)/.test(header.alg)) {
        if (secretOrPrivateKey.type !== "private") {
          return failure(new Error(`secretOrPrivateKey must be an asymmetric key when using ${header.alg}`));
        }
        if (!options.allowInsecureKeySizes && !header.alg.startsWith("ES") && secretOrPrivateKey.asymmetricKeyDetails !== void 0 && //KeyObject.asymmetricKeyDetails is supported in Node 15+
        secretOrPrivateKey.asymmetricKeyDetails.modulusLength < 2048) {
          return failure(new Error(`secretOrPrivateKey has a minimum key size of 2048 bits for ${header.alg}`));
        }
      }
      if (typeof payload === "undefined") {
        return failure(new Error("payload is required"));
      } else if (isObjectPayload) {
        try {
          validatePayload(payload);
        } catch (error3) {
          return failure(error3);
        }
        if (!options.mutatePayload) {
          payload = Object.assign({}, payload);
        }
      } else {
        const invalid_options = options_for_objects.filter(function(opt) {
          return typeof options[opt] !== "undefined";
        });
        if (invalid_options.length > 0) {
          return failure(new Error("invalid " + invalid_options.join(",") + " option for " + typeof payload + " payload"));
        }
      }
      if (typeof payload.exp !== "undefined" && typeof options.expiresIn !== "undefined") {
        return failure(new Error('Bad "options.expiresIn" option the payload already has an "exp" property.'));
      }
      if (typeof payload.nbf !== "undefined" && typeof options.notBefore !== "undefined") {
        return failure(new Error('Bad "options.notBefore" option the payload already has an "nbf" property.'));
      }
      try {
        validateOptions(options);
      } catch (error3) {
        return failure(error3);
      }
      if (!options.allowInvalidAsymmetricKeyTypes) {
        try {
          validateAsymmetricKey(header.alg, secretOrPrivateKey);
        } catch (error3) {
          return failure(error3);
        }
      }
      const timestamp = payload.iat || Math.floor(Date.now() / 1e3);
      if (options.noTimestamp) {
        delete payload.iat;
      } else if (isObjectPayload) {
        payload.iat = timestamp;
      }
      if (typeof options.notBefore !== "undefined") {
        try {
          payload.nbf = timespan(options.notBefore, timestamp);
        } catch (err) {
          return failure(err);
        }
        if (typeof payload.nbf === "undefined") {
          return failure(new Error('"notBefore" should be a number of seconds or string representing a timespan eg: "1d", "20h", 60'));
        }
      }
      if (typeof options.expiresIn !== "undefined" && typeof payload === "object") {
        try {
          payload.exp = timespan(options.expiresIn, timestamp);
        } catch (err) {
          return failure(err);
        }
        if (typeof payload.exp === "undefined") {
          return failure(new Error('"expiresIn" should be a number of seconds or string representing a timespan eg: "1d", "20h", 60'));
        }
      }
      Object.keys(options_to_payload).forEach(function(key) {
        const claim = options_to_payload[key];
        if (typeof options[key] !== "undefined") {
          if (typeof payload[claim] !== "undefined") {
            return failure(new Error('Bad "options.' + key + '" option. The payload already has an "' + claim + '" property.'));
          }
          payload[claim] = options[key];
        }
      });
      const encoding = options.encoding || "utf8";
      if (typeof callback === "function") {
        callback = callback && once2(callback);
        jws.createSign({
          header,
          privateKey: secretOrPrivateKey,
          payload,
          encoding
        }).once("error", callback).once("done", function(signature) {
          if (!options.allowInsecureKeySizes && /^(?:RS|PS)/.test(header.alg) && signature.length < 256) {
            return callback(new Error(`secretOrPrivateKey has a minimum key size of 2048 bits for ${header.alg}`));
          }
          callback(null, signature);
        });
      } else {
        let signature = jws.sign({ header, payload, secret: secretOrPrivateKey, encoding });
        if (!options.allowInsecureKeySizes && /^(?:RS|PS)/.test(header.alg) && signature.length < 256) {
          throw new Error(`secretOrPrivateKey has a minimum key size of 2048 bits for ${header.alg}`);
        }
        return signature;
      }
    };
  }
});

// node_modules/jsonwebtoken/index.js
var require_jsonwebtoken = __commonJS({
  "node_modules/jsonwebtoken/index.js"(exports, module) {
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    module.exports = {
      decode: require_decode(),
      verify: require_verify(),
      sign: require_sign(),
      JsonWebTokenError: require_JsonWebTokenError(),
      NotBeforeError: require_NotBeforeError(),
      TokenExpiredError: require_TokenExpiredError()
    };
  }
});

// node-built-in-modules:fs
import libDefault5 from "fs";
var require_fs = __commonJS({
  "node-built-in-modules:fs"(exports, module) {
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    module.exports = libDefault5;
  }
});

// node-built-in-modules:path
import libDefault6 from "path";
var require_path = __commonJS({
  "node-built-in-modules:path"(exports, module) {
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    module.exports = libDefault6;
  }
});

// node-built-in-modules:os
import libDefault7 from "os";
var require_os = __commonJS({
  "node-built-in-modules:os"(exports, module) {
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    module.exports = libDefault7;
  }
});

// node_modules/dotenv/package.json
var require_package = __commonJS({
  "node_modules/dotenv/package.json"(exports, module) {
    module.exports = {
      name: "dotenv",
      version: "17.2.2",
      description: "Loads environment variables from .env file",
      main: "lib/main.js",
      types: "lib/main.d.ts",
      exports: {
        ".": {
          types: "./lib/main.d.ts",
          require: "./lib/main.js",
          default: "./lib/main.js"
        },
        "./config": "./config.js",
        "./config.js": "./config.js",
        "./lib/env-options": "./lib/env-options.js",
        "./lib/env-options.js": "./lib/env-options.js",
        "./lib/cli-options": "./lib/cli-options.js",
        "./lib/cli-options.js": "./lib/cli-options.js",
        "./package.json": "./package.json"
      },
      scripts: {
        "dts-check": "tsc --project tests/types/tsconfig.json",
        lint: "standard",
        pretest: "npm run lint && npm run dts-check",
        test: "tap run --allow-empty-coverage --disable-coverage --timeout=60000",
        "test:coverage": "tap run --show-full-coverage --timeout=60000 --coverage-report=text --coverage-report=lcov",
        prerelease: "npm test",
        release: "standard-version"
      },
      repository: {
        type: "git",
        url: "git://github.com/motdotla/dotenv.git"
      },
      homepage: "https://github.com/motdotla/dotenv#readme",
      funding: "https://dotenvx.com",
      keywords: [
        "dotenv",
        "env",
        ".env",
        "environment",
        "variables",
        "config",
        "settings"
      ],
      readmeFilename: "README.md",
      license: "BSD-2-Clause",
      devDependencies: {
        "@types/node": "^18.11.3",
        decache: "^4.6.2",
        sinon: "^14.0.1",
        standard: "^17.0.0",
        "standard-version": "^9.5.0",
        tap: "^19.2.0",
        typescript: "^4.8.4"
      },
      engines: {
        node: ">=12"
      },
      browser: {
        fs: false
      }
    };
  }
});

// node_modules/dotenv/lib/main.js
var require_main = __commonJS({
  "node_modules/dotenv/lib/main.js"(exports, module) {
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    var fs = require_fs();
    var path = require_path();
    var os = require_os();
    var crypto2 = require_crypto();
    var packageJson = require_package();
    var version2 = packageJson.version;
    var TIPS = [
      "\u{1F510} encrypt with Dotenvx: https://dotenvx.com",
      "\u{1F510} prevent committing .env to code: https://dotenvx.com/precommit",
      "\u{1F510} prevent building .env in docker: https://dotenvx.com/prebuild",
      "\u{1F4E1} observe env with Radar: https://dotenvx.com/radar",
      "\u{1F4E1} auto-backup env with Radar: https://dotenvx.com/radar",
      "\u{1F4E1} version env with Radar: https://dotenvx.com/radar",
      "\u{1F6E0}\uFE0F  run anywhere with `dotenvx run -- yourcommand`",
      "\u2699\uFE0F  specify custom .env file path with { path: '/custom/path/.env' }",
      "\u2699\uFE0F  enable debug logging with { debug: true }",
      "\u2699\uFE0F  override existing env vars with { override: true }",
      "\u2699\uFE0F  suppress all logs with { quiet: true }",
      "\u2699\uFE0F  write to custom object with { processEnv: myObject }",
      "\u2699\uFE0F  load multiple .env files with { path: ['.env.local', '.env'] }"
    ];
    function _getRandomTip() {
      return TIPS[Math.floor(Math.random() * TIPS.length)];
    }
    __name(_getRandomTip, "_getRandomTip");
    function parseBoolean(value) {
      if (typeof value === "string") {
        return !["false", "0", "no", "off", ""].includes(value.toLowerCase());
      }
      return Boolean(value);
    }
    __name(parseBoolean, "parseBoolean");
    function supportsAnsi() {
      return process.stdout.isTTY;
    }
    __name(supportsAnsi, "supportsAnsi");
    function dim(text) {
      return supportsAnsi() ? `\x1B[2m${text}\x1B[0m` : text;
    }
    __name(dim, "dim");
    var LINE = /(?:^|^)\s*(?:export\s+)?([\w.-]+)(?:\s*=\s*?|:\s+?)(\s*'(?:\\'|[^'])*'|\s*"(?:\\"|[^"])*"|\s*`(?:\\`|[^`])*`|[^#\r\n]+)?\s*(?:#.*)?(?:$|$)/mg;
    function parse2(src) {
      const obj = {};
      let lines = src.toString();
      lines = lines.replace(/\r\n?/mg, "\n");
      let match;
      while ((match = LINE.exec(lines)) != null) {
        const key = match[1];
        let value = match[2] || "";
        value = value.trim();
        const maybeQuote = value[0];
        value = value.replace(/^(['"`])([\s\S]*)\1$/mg, "$2");
        if (maybeQuote === '"') {
          value = value.replace(/\\n/g, "\n");
          value = value.replace(/\\r/g, "\r");
        }
        obj[key] = value;
      }
      return obj;
    }
    __name(parse2, "parse");
    function _parseVault(options) {
      options = options || {};
      const vaultPath = _vaultPath(options);
      options.path = vaultPath;
      const result = DotenvModule.configDotenv(options);
      if (!result.parsed) {
        const err = new Error(`MISSING_DATA: Cannot parse ${vaultPath} for an unknown reason`);
        err.code = "MISSING_DATA";
        throw err;
      }
      const keys = _dotenvKey(options).split(",");
      const length = keys.length;
      let decrypted;
      for (let i = 0; i < length; i++) {
        try {
          const key = keys[i].trim();
          const attrs = _instructions(result, key);
          decrypted = DotenvModule.decrypt(attrs.ciphertext, attrs.key);
          break;
        } catch (error3) {
          if (i + 1 >= length) {
            throw error3;
          }
        }
      }
      return DotenvModule.parse(decrypted);
    }
    __name(_parseVault, "_parseVault");
    function _warn(message) {
      console.error(`[dotenv@${version2}][WARN] ${message}`);
    }
    __name(_warn, "_warn");
    function _debug(message) {
      console.log(`[dotenv@${version2}][DEBUG] ${message}`);
    }
    __name(_debug, "_debug");
    function _log(message) {
      console.log(`[dotenv@${version2}] ${message}`);
    }
    __name(_log, "_log");
    function _dotenvKey(options) {
      if (options && options.DOTENV_KEY && options.DOTENV_KEY.length > 0) {
        return options.DOTENV_KEY;
      }
      if (process.env.DOTENV_KEY && process.env.DOTENV_KEY.length > 0) {
        return process.env.DOTENV_KEY;
      }
      return "";
    }
    __name(_dotenvKey, "_dotenvKey");
    function _instructions(result, dotenvKey) {
      let uri;
      try {
        uri = new URL(dotenvKey);
      } catch (error3) {
        if (error3.code === "ERR_INVALID_URL") {
          const err = new Error("INVALID_DOTENV_KEY: Wrong format. Must be in valid uri format like dotenv://:key_1234@dotenvx.com/vault/.env.vault?environment=development");
          err.code = "INVALID_DOTENV_KEY";
          throw err;
        }
        throw error3;
      }
      const key = uri.password;
      if (!key) {
        const err = new Error("INVALID_DOTENV_KEY: Missing key part");
        err.code = "INVALID_DOTENV_KEY";
        throw err;
      }
      const environment = uri.searchParams.get("environment");
      if (!environment) {
        const err = new Error("INVALID_DOTENV_KEY: Missing environment part");
        err.code = "INVALID_DOTENV_KEY";
        throw err;
      }
      const environmentKey = `DOTENV_VAULT_${environment.toUpperCase()}`;
      const ciphertext = result.parsed[environmentKey];
      if (!ciphertext) {
        const err = new Error(`NOT_FOUND_DOTENV_ENVIRONMENT: Cannot locate environment ${environmentKey} in your .env.vault file.`);
        err.code = "NOT_FOUND_DOTENV_ENVIRONMENT";
        throw err;
      }
      return { ciphertext, key };
    }
    __name(_instructions, "_instructions");
    function _vaultPath(options) {
      let possibleVaultPath = null;
      if (options && options.path && options.path.length > 0) {
        if (Array.isArray(options.path)) {
          for (const filepath of options.path) {
            if (fs.existsSync(filepath)) {
              possibleVaultPath = filepath.endsWith(".vault") ? filepath : `${filepath}.vault`;
            }
          }
        } else {
          possibleVaultPath = options.path.endsWith(".vault") ? options.path : `${options.path}.vault`;
        }
      } else {
        possibleVaultPath = path.resolve(process.cwd(), ".env.vault");
      }
      if (fs.existsSync(possibleVaultPath)) {
        return possibleVaultPath;
      }
      return null;
    }
    __name(_vaultPath, "_vaultPath");
    function _resolveHome(envPath) {
      return envPath[0] === "~" ? path.join(os.homedir(), envPath.slice(1)) : envPath;
    }
    __name(_resolveHome, "_resolveHome");
    function _configVault(options) {
      const debug3 = parseBoolean(process.env.DOTENV_CONFIG_DEBUG || options && options.debug);
      const quiet = parseBoolean(process.env.DOTENV_CONFIG_QUIET || options && options.quiet);
      if (debug3 || !quiet) {
        _log("Loading env from encrypted .env.vault");
      }
      const parsed = DotenvModule._parseVault(options);
      let processEnv = process.env;
      if (options && options.processEnv != null) {
        processEnv = options.processEnv;
      }
      DotenvModule.populate(processEnv, parsed, options);
      return { parsed };
    }
    __name(_configVault, "_configVault");
    function configDotenv(options) {
      const dotenvPath = path.resolve(process.cwd(), ".env");
      let encoding = "utf8";
      let processEnv = process.env;
      if (options && options.processEnv != null) {
        processEnv = options.processEnv;
      }
      let debug3 = parseBoolean(processEnv.DOTENV_CONFIG_DEBUG || options && options.debug);
      let quiet = parseBoolean(processEnv.DOTENV_CONFIG_QUIET || options && options.quiet);
      if (options && options.encoding) {
        encoding = options.encoding;
      } else {
        if (debug3) {
          _debug("No encoding is specified. UTF-8 is used by default");
        }
      }
      let optionPaths = [dotenvPath];
      if (options && options.path) {
        if (!Array.isArray(options.path)) {
          optionPaths = [_resolveHome(options.path)];
        } else {
          optionPaths = [];
          for (const filepath of options.path) {
            optionPaths.push(_resolveHome(filepath));
          }
        }
      }
      let lastError;
      const parsedAll = {};
      for (const path2 of optionPaths) {
        try {
          const parsed = DotenvModule.parse(fs.readFileSync(path2, { encoding }));
          DotenvModule.populate(parsedAll, parsed, options);
        } catch (e) {
          if (debug3) {
            _debug(`Failed to load ${path2} ${e.message}`);
          }
          lastError = e;
        }
      }
      const populated = DotenvModule.populate(processEnv, parsedAll, options);
      debug3 = parseBoolean(processEnv.DOTENV_CONFIG_DEBUG || debug3);
      quiet = parseBoolean(processEnv.DOTENV_CONFIG_QUIET || quiet);
      if (debug3 || !quiet) {
        const keysCount = Object.keys(populated).length;
        const shortPaths = [];
        for (const filePath of optionPaths) {
          try {
            const relative = path.relative(process.cwd(), filePath);
            shortPaths.push(relative);
          } catch (e) {
            if (debug3) {
              _debug(`Failed to load ${filePath} ${e.message}`);
            }
            lastError = e;
          }
        }
        _log(`injecting env (${keysCount}) from ${shortPaths.join(",")} ${dim(`-- tip: ${_getRandomTip()}`)}`);
      }
      if (lastError) {
        return { parsed: parsedAll, error: lastError };
      } else {
        return { parsed: parsedAll };
      }
    }
    __name(configDotenv, "configDotenv");
    function config2(options) {
      if (_dotenvKey(options).length === 0) {
        return DotenvModule.configDotenv(options);
      }
      const vaultPath = _vaultPath(options);
      if (!vaultPath) {
        _warn(`You set DOTENV_KEY but you are missing a .env.vault file at ${vaultPath}. Did you forget to build it?`);
        return DotenvModule.configDotenv(options);
      }
      return DotenvModule._configVault(options);
    }
    __name(config2, "config");
    function decrypt(encrypted, keyStr) {
      const key = Buffer.from(keyStr.slice(-64), "hex");
      let ciphertext = Buffer.from(encrypted, "base64");
      const nonce = ciphertext.subarray(0, 12);
      const authTag = ciphertext.subarray(-16);
      ciphertext = ciphertext.subarray(12, -16);
      try {
        const aesgcm = crypto2.createDecipheriv("aes-256-gcm", key, nonce);
        aesgcm.setAuthTag(authTag);
        return `${aesgcm.update(ciphertext)}${aesgcm.final()}`;
      } catch (error3) {
        const isRange = error3 instanceof RangeError;
        const invalidKeyLength = error3.message === "Invalid key length";
        const decryptionFailed = error3.message === "Unsupported state or unable to authenticate data";
        if (isRange || invalidKeyLength) {
          const err = new Error("INVALID_DOTENV_KEY: It must be 64 characters long (or more)");
          err.code = "INVALID_DOTENV_KEY";
          throw err;
        } else if (decryptionFailed) {
          const err = new Error("DECRYPTION_FAILED: Please check your DOTENV_KEY");
          err.code = "DECRYPTION_FAILED";
          throw err;
        } else {
          throw error3;
        }
      }
    }
    __name(decrypt, "decrypt");
    function populate(processEnv, parsed, options = {}) {
      const debug3 = Boolean(options && options.debug);
      const override = Boolean(options && options.override);
      const populated = {};
      if (typeof parsed !== "object") {
        const err = new Error("OBJECT_REQUIRED: Please check the processEnv argument being passed to populate");
        err.code = "OBJECT_REQUIRED";
        throw err;
      }
      for (const key of Object.keys(parsed)) {
        if (Object.prototype.hasOwnProperty.call(processEnv, key)) {
          if (override === true) {
            processEnv[key] = parsed[key];
            populated[key] = parsed[key];
          }
          if (debug3) {
            if (override === true) {
              _debug(`"${key}" is already defined and WAS overwritten`);
            } else {
              _debug(`"${key}" is already defined and was NOT overwritten`);
            }
          }
        } else {
          processEnv[key] = parsed[key];
          populated[key] = parsed[key];
        }
      }
      return populated;
    }
    __name(populate, "populate");
    var DotenvModule = {
      configDotenv,
      _configVault,
      _parseVault,
      config: config2,
      decrypt,
      parse: parse2,
      populate
    };
    module.exports.configDotenv = DotenvModule.configDotenv;
    module.exports._configVault = DotenvModule._configVault;
    module.exports._parseVault = DotenvModule._parseVault;
    module.exports.config = DotenvModule.config;
    module.exports.decrypt = DotenvModule.decrypt;
    module.exports.parse = DotenvModule.parse;
    module.exports.populate = DotenvModule.populate;
    module.exports = DotenvModule;
  }
});

// node_modules/dotenv/lib/env-options.js
var require_env_options = __commonJS({
  "node_modules/dotenv/lib/env-options.js"(exports, module) {
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    var options = {};
    if (process.env.DOTENV_CONFIG_ENCODING != null) {
      options.encoding = process.env.DOTENV_CONFIG_ENCODING;
    }
    if (process.env.DOTENV_CONFIG_PATH != null) {
      options.path = process.env.DOTENV_CONFIG_PATH;
    }
    if (process.env.DOTENV_CONFIG_QUIET != null) {
      options.quiet = process.env.DOTENV_CONFIG_QUIET;
    }
    if (process.env.DOTENV_CONFIG_DEBUG != null) {
      options.debug = process.env.DOTENV_CONFIG_DEBUG;
    }
    if (process.env.DOTENV_CONFIG_OVERRIDE != null) {
      options.override = process.env.DOTENV_CONFIG_OVERRIDE;
    }
    if (process.env.DOTENV_CONFIG_DOTENV_KEY != null) {
      options.DOTENV_KEY = process.env.DOTENV_CONFIG_DOTENV_KEY;
    }
    module.exports = options;
  }
});

// node_modules/dotenv/lib/cli-options.js
var require_cli_options = __commonJS({
  "node_modules/dotenv/lib/cli-options.js"(exports, module) {
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    var re = /^dotenv_config_(encoding|path|quiet|debug|override|DOTENV_KEY)=(.+)$/;
    module.exports = /* @__PURE__ */ __name(function optionMatcher(args) {
      const options = args.reduce(function(acc, cur) {
        const matches = cur.match(re);
        if (matches) {
          acc[matches[1]] = matches[2];
        }
        return acc;
      }, {});
      if (!("quiet" in options)) {
        options.quiet = "true";
      }
      return options;
    }, "optionMatcher");
  }
});

// node-built-in-modules:events
import libDefault8 from "events";
var require_events = __commonJS({
  "node-built-in-modules:events"(exports, module) {
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    module.exports = libDefault8;
  }
});

// node-built-in-modules:url
import libDefault9 from "url";
var require_url = __commonJS({
  "node-built-in-modules:url"(exports, module) {
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    module.exports = libDefault9;
  }
});

// node-built-in-modules:http
import libDefault10 from "http";
var require_http = __commonJS({
  "node-built-in-modules:http"(exports, module) {
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    module.exports = libDefault10;
  }
});

// node-built-in-modules:https
import libDefault11 from "https";
var require_https = __commonJS({
  "node-built-in-modules:https"(exports, module) {
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    module.exports = libDefault11;
  }
});

// node-built-in-modules:zlib
import libDefault12 from "zlib";
var require_zlib = __commonJS({
  "node-built-in-modules:zlib"(exports, module) {
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    module.exports = libDefault12;
  }
});

// node_modules/nodemailer/lib/fetch/cookies.js
var require_cookies = __commonJS({
  "node_modules/nodemailer/lib/fetch/cookies.js"(exports, module) {
    "use strict";
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    var urllib = require_url();
    var SESSION_TIMEOUT = 1800;
    var Cookies = class {
      static {
        __name(this, "Cookies");
      }
      constructor(options) {
        this.options = options || {};
        this.cookies = [];
      }
      /**
       * Stores a cookie string to the cookie storage
       *
       * @param {String} cookieStr Value from the 'Set-Cookie:' header
       * @param {String} url Current URL
       */
      set(cookieStr, url) {
        let urlparts = urllib.parse(url || "");
        let cookie = this.parse(cookieStr);
        let domain2;
        if (cookie.domain) {
          domain2 = cookie.domain.replace(/^\./, "");
          if (
            // can't be valid if the requested domain is shorter than current hostname
            urlparts.hostname.length < domain2.length || // prefix domains with dot to be sure that partial matches are not used
            ("." + urlparts.hostname).substr(-domain2.length + 1) !== "." + domain2
          ) {
            cookie.domain = urlparts.hostname;
          }
        } else {
          cookie.domain = urlparts.hostname;
        }
        if (!cookie.path) {
          cookie.path = this.getPath(urlparts.pathname);
        }
        if (!cookie.expires) {
          cookie.expires = new Date(Date.now() + (Number(this.options.sessionTimeout || SESSION_TIMEOUT) || SESSION_TIMEOUT) * 1e3);
        }
        return this.add(cookie);
      }
      /**
       * Returns cookie string for the 'Cookie:' header.
       *
       * @param {String} url URL to check for
       * @returns {String} Cookie header or empty string if no matches were found
       */
      get(url) {
        return this.list(url).map((cookie) => cookie.name + "=" + cookie.value).join("; ");
      }
      /**
       * Lists all valied cookie objects for the specified URL
       *
       * @param {String} url URL to check for
       * @returns {Array} An array of cookie objects
       */
      list(url) {
        let result = [];
        let i;
        let cookie;
        for (i = this.cookies.length - 1; i >= 0; i--) {
          cookie = this.cookies[i];
          if (this.isExpired(cookie)) {
            this.cookies.splice(i, i);
            continue;
          }
          if (this.match(cookie, url)) {
            result.unshift(cookie);
          }
        }
        return result;
      }
      /**
       * Parses cookie string from the 'Set-Cookie:' header
       *
       * @param {String} cookieStr String from the 'Set-Cookie:' header
       * @returns {Object} Cookie object
       */
      parse(cookieStr) {
        let cookie = {};
        (cookieStr || "").toString().split(";").forEach((cookiePart) => {
          let valueParts = cookiePart.split("=");
          let key = valueParts.shift().trim().toLowerCase();
          let value = valueParts.join("=").trim();
          let domain2;
          if (!key) {
            return;
          }
          switch (key) {
            case "expires":
              value = new Date(value);
              if (value.toString() !== "Invalid Date") {
                cookie.expires = value;
              }
              break;
            case "path":
              cookie.path = value;
              break;
            case "domain":
              domain2 = value.toLowerCase();
              if (domain2.length && domain2.charAt(0) !== ".") {
                domain2 = "." + domain2;
              }
              cookie.domain = domain2;
              break;
            case "max-age":
              cookie.expires = new Date(Date.now() + (Number(value) || 0) * 1e3);
              break;
            case "secure":
              cookie.secure = true;
              break;
            case "httponly":
              cookie.httponly = true;
              break;
            default:
              if (!cookie.name) {
                cookie.name = key;
                cookie.value = value;
              }
          }
        });
        return cookie;
      }
      /**
       * Checks if a cookie object is valid for a specified URL
       *
       * @param {Object} cookie Cookie object
       * @param {String} url URL to check for
       * @returns {Boolean} true if cookie is valid for specifiec URL
       */
      match(cookie, url) {
        let urlparts = urllib.parse(url || "");
        if (urlparts.hostname !== cookie.domain && (cookie.domain.charAt(0) !== "." || ("." + urlparts.hostname).substr(-cookie.domain.length) !== cookie.domain)) {
          return false;
        }
        let path = this.getPath(urlparts.pathname);
        if (path.substr(0, cookie.path.length) !== cookie.path) {
          return false;
        }
        if (cookie.secure && urlparts.protocol !== "https:") {
          return false;
        }
        return true;
      }
      /**
       * Adds (or updates/removes if needed) a cookie object to the cookie storage
       *
       * @param {Object} cookie Cookie value to be stored
       */
      add(cookie) {
        let i;
        let len;
        if (!cookie || !cookie.name) {
          return false;
        }
        for (i = 0, len = this.cookies.length; i < len; i++) {
          if (this.compare(this.cookies[i], cookie)) {
            if (this.isExpired(cookie)) {
              this.cookies.splice(i, 1);
              return false;
            }
            this.cookies[i] = cookie;
            return true;
          }
        }
        if (!this.isExpired(cookie)) {
          this.cookies.push(cookie);
        }
        return true;
      }
      /**
       * Checks if two cookie objects are the same
       *
       * @param {Object} a Cookie to check against
       * @param {Object} b Cookie to check against
       * @returns {Boolean} True, if the cookies are the same
       */
      compare(a, b) {
        return a.name === b.name && a.path === b.path && a.domain === b.domain && a.secure === b.secure && a.httponly === a.httponly;
      }
      /**
       * Checks if a cookie is expired
       *
       * @param {Object} cookie Cookie object to check against
       * @returns {Boolean} True, if the cookie is expired
       */
      isExpired(cookie) {
        return cookie.expires && cookie.expires < /* @__PURE__ */ new Date() || !cookie.value;
      }
      /**
       * Returns normalized cookie path for an URL path argument
       *
       * @param {String} pathname
       * @returns {String} Normalized path
       */
      getPath(pathname) {
        let path = (pathname || "/").split("/");
        path.pop();
        path = path.join("/").trim();
        if (path.charAt(0) !== "/") {
          path = "/" + path;
        }
        if (path.substr(-1) !== "/") {
          path += "/";
        }
        return path;
      }
    };
    module.exports = Cookies;
  }
});

// node_modules/nodemailer/package.json
var require_package2 = __commonJS({
  "node_modules/nodemailer/package.json"(exports, module) {
    module.exports = {
      name: "nodemailer",
      version: "7.0.6",
      description: "Easy as cake e-mail sending from your Node.js applications",
      main: "lib/nodemailer.js",
      scripts: {
        test: "node --test --test-concurrency=1 test/**/*.test.js test/**/*-test.js",
        "test:coverage": "c8 node --test --test-concurrency=1 test/**/*.test.js test/**/*-test.js",
        lint: "eslint .",
        update: "rm -rf node_modules/ package-lock.json && ncu -u && npm install"
      },
      repository: {
        type: "git",
        url: "https://github.com/nodemailer/nodemailer.git"
      },
      keywords: [
        "Nodemailer"
      ],
      author: "Andris Reinman",
      license: "MIT-0",
      bugs: {
        url: "https://github.com/nodemailer/nodemailer/issues"
      },
      homepage: "https://nodemailer.com/",
      devDependencies: {
        "@aws-sdk/client-sesv2": "3.876.0",
        bunyan: "1.8.15",
        c8: "10.1.3",
        eslint: "8.57.0",
        "eslint-config-nodemailer": "1.2.0",
        "eslint-config-prettier": "9.1.0",
        libbase64: "1.3.0",
        libmime: "5.3.7",
        libqp: "2.1.1",
        "nodemailer-ntlm-auth": "1.0.4",
        proxy: "1.0.2",
        "proxy-test-server": "1.0.0",
        "smtp-server": "3.14.0"
      },
      engines: {
        node: ">=6.0.0"
      }
    };
  }
});

// node-built-in-modules:net
import libDefault13 from "net";
var require_net = __commonJS({
  "node-built-in-modules:net"(exports, module) {
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    module.exports = libDefault13;
  }
});

// node_modules/nodemailer/lib/fetch/index.js
var require_fetch = __commonJS({
  "node_modules/nodemailer/lib/fetch/index.js"(exports, module) {
    "use strict";
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    var http = require_http();
    var https = require_https();
    var urllib = require_url();
    var zlib = require_zlib();
    var PassThrough = require_stream().PassThrough;
    var Cookies = require_cookies();
    var packageData = require_package2();
    var net = require_net();
    var MAX_REDIRECTS = 5;
    module.exports = function(url, options) {
      return nmfetch(url, options);
    };
    module.exports.Cookies = Cookies;
    function nmfetch(url, options) {
      options = options || {};
      options.fetchRes = options.fetchRes || new PassThrough();
      options.cookies = options.cookies || new Cookies();
      options.redirects = options.redirects || 0;
      options.maxRedirects = isNaN(options.maxRedirects) ? MAX_REDIRECTS : options.maxRedirects;
      if (options.cookie) {
        [].concat(options.cookie || []).forEach((cookie) => {
          options.cookies.set(cookie, url);
        });
        options.cookie = false;
      }
      let fetchRes = options.fetchRes;
      let parsed = urllib.parse(url);
      let method = (options.method || "").toString().trim().toUpperCase() || "GET";
      let finished = false;
      let cookies;
      let body;
      let handler = parsed.protocol === "https:" ? https : http;
      let headers = {
        "accept-encoding": "gzip,deflate",
        "user-agent": "nodemailer/" + packageData.version
      };
      Object.keys(options.headers || {}).forEach((key) => {
        headers[key.toLowerCase().trim()] = options.headers[key];
      });
      if (options.userAgent) {
        headers["user-agent"] = options.userAgent;
      }
      if (parsed.auth) {
        headers.Authorization = "Basic " + Buffer.from(parsed.auth).toString("base64");
      }
      if (cookies = options.cookies.get(url)) {
        headers.cookie = cookies;
      }
      if (options.body) {
        if (options.contentType !== false) {
          headers["Content-Type"] = options.contentType || "application/x-www-form-urlencoded";
        }
        if (typeof options.body.pipe === "function") {
          headers["Transfer-Encoding"] = "chunked";
          body = options.body;
          body.on("error", (err) => {
            if (finished) {
              return;
            }
            finished = true;
            err.type = "FETCH";
            err.sourceUrl = url;
            fetchRes.emit("error", err);
          });
        } else {
          if (options.body instanceof Buffer) {
            body = options.body;
          } else if (typeof options.body === "object") {
            try {
              body = Buffer.from(
                Object.keys(options.body).map((key) => {
                  let value = options.body[key].toString().trim();
                  return encodeURIComponent(key) + "=" + encodeURIComponent(value);
                }).join("&")
              );
            } catch (E) {
              if (finished) {
                return;
              }
              finished = true;
              E.type = "FETCH";
              E.sourceUrl = url;
              fetchRes.emit("error", E);
              return;
            }
          } else {
            body = Buffer.from(options.body.toString().trim());
          }
          headers["Content-Type"] = options.contentType || "application/x-www-form-urlencoded";
          headers["Content-Length"] = body.length;
        }
        method = (options.method || "").toString().trim().toUpperCase() || "POST";
      }
      let req;
      let reqOptions = {
        method,
        host: parsed.hostname,
        path: parsed.path,
        port: parsed.port ? parsed.port : parsed.protocol === "https:" ? 443 : 80,
        headers,
        rejectUnauthorized: false,
        agent: false
      };
      if (options.tls) {
        Object.keys(options.tls).forEach((key) => {
          reqOptions[key] = options.tls[key];
        });
      }
      if (parsed.protocol === "https:" && parsed.hostname && parsed.hostname !== reqOptions.host && !net.isIP(parsed.hostname) && !reqOptions.servername) {
        reqOptions.servername = parsed.hostname;
      }
      try {
        req = handler.request(reqOptions);
      } catch (E) {
        finished = true;
        setImmediate(() => {
          E.type = "FETCH";
          E.sourceUrl = url;
          fetchRes.emit("error", E);
        });
        return fetchRes;
      }
      if (options.timeout) {
        req.setTimeout(options.timeout, () => {
          if (finished) {
            return;
          }
          finished = true;
          req.abort();
          let err = new Error("Request Timeout");
          err.type = "FETCH";
          err.sourceUrl = url;
          fetchRes.emit("error", err);
        });
      }
      req.on("error", (err) => {
        if (finished) {
          return;
        }
        finished = true;
        err.type = "FETCH";
        err.sourceUrl = url;
        fetchRes.emit("error", err);
      });
      req.on("response", (res) => {
        let inflate;
        if (finished) {
          return;
        }
        switch (res.headers["content-encoding"]) {
          case "gzip":
          case "deflate":
            inflate = zlib.createUnzip();
            break;
        }
        if (res.headers["set-cookie"]) {
          [].concat(res.headers["set-cookie"] || []).forEach((cookie) => {
            options.cookies.set(cookie, url);
          });
        }
        if ([301, 302, 303, 307, 308].includes(res.statusCode) && res.headers.location) {
          options.redirects++;
          if (options.redirects > options.maxRedirects) {
            finished = true;
            let err = new Error("Maximum redirect count exceeded");
            err.type = "FETCH";
            err.sourceUrl = url;
            fetchRes.emit("error", err);
            req.abort();
            return;
          }
          options.method = "GET";
          options.body = false;
          return nmfetch(urllib.resolve(url, res.headers.location), options);
        }
        fetchRes.statusCode = res.statusCode;
        fetchRes.headers = res.headers;
        if (res.statusCode >= 300 && !options.allowErrorResponse) {
          finished = true;
          let err = new Error("Invalid status code " + res.statusCode);
          err.type = "FETCH";
          err.sourceUrl = url;
          fetchRes.emit("error", err);
          req.abort();
          return;
        }
        res.on("error", (err) => {
          if (finished) {
            return;
          }
          finished = true;
          err.type = "FETCH";
          err.sourceUrl = url;
          fetchRes.emit("error", err);
          req.abort();
        });
        if (inflate) {
          res.pipe(inflate).pipe(fetchRes);
          inflate.on("error", (err) => {
            if (finished) {
              return;
            }
            finished = true;
            err.type = "FETCH";
            err.sourceUrl = url;
            fetchRes.emit("error", err);
            req.abort();
          });
        } else {
          res.pipe(fetchRes);
        }
      });
      setImmediate(() => {
        if (body) {
          try {
            if (typeof body.pipe === "function") {
              return body.pipe(req);
            } else {
              req.write(body);
            }
          } catch (err) {
            finished = true;
            err.type = "FETCH";
            err.sourceUrl = url;
            fetchRes.emit("error", err);
            return;
          }
        }
        req.end();
      });
      return fetchRes;
    }
    __name(nmfetch, "nmfetch");
  }
});

// node-built-in-modules:dns
import libDefault14 from "dns";
var require_dns = __commonJS({
  "node-built-in-modules:dns"(exports, module) {
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    module.exports = libDefault14;
  }
});

// node_modules/nodemailer/lib/shared/index.js
var require_shared = __commonJS({
  "node_modules/nodemailer/lib/shared/index.js"(exports, module) {
    "use strict";
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    var urllib = require_url();
    var util = require_util();
    var fs = require_fs();
    var nmfetch = require_fetch();
    var dns = require_dns();
    var net = require_net();
    var os = require_os();
    var DNS_TTL = 5 * 60 * 1e3;
    var networkInterfaces;
    try {
      networkInterfaces = os.networkInterfaces();
    } catch (err) {
    }
    module.exports.networkInterfaces = networkInterfaces;
    var isFamilySupported = /* @__PURE__ */ __name((family, allowInternal) => {
      let networkInterfaces2 = module.exports.networkInterfaces;
      if (!networkInterfaces2) {
        return true;
      }
      const familySupported = (
        // crux that replaces Object.values(networkInterfaces) as Object.values is not supported in nodejs v6
        Object.keys(networkInterfaces2).map((key) => networkInterfaces2[key]).reduce((acc, val) => acc.concat(val), []).filter((i) => !i.internal || allowInternal).filter((i) => i.family === "IPv" + family || i.family === family).length > 0
      );
      return familySupported;
    }, "isFamilySupported");
    var resolver = /* @__PURE__ */ __name((family, hostname, options, callback) => {
      options = options || {};
      const familySupported = isFamilySupported(family, options.allowInternalNetworkInterfaces);
      if (!familySupported) {
        return callback(null, []);
      }
      const resolver2 = dns.Resolver ? new dns.Resolver(options) : dns;
      resolver2["resolve" + family](hostname, (err, addresses) => {
        if (err) {
          switch (err.code) {
            case dns.NODATA:
            case dns.NOTFOUND:
            case dns.NOTIMP:
            case dns.SERVFAIL:
            case dns.CONNREFUSED:
            case dns.REFUSED:
            case "EAI_AGAIN":
              return callback(null, []);
          }
          return callback(err);
        }
        return callback(null, Array.isArray(addresses) ? addresses : [].concat(addresses || []));
      });
    }, "resolver");
    var dnsCache = module.exports.dnsCache = /* @__PURE__ */ new Map();
    var formatDNSValue = /* @__PURE__ */ __name((value, extra) => {
      if (!value) {
        return Object.assign({}, extra || {});
      }
      return Object.assign(
        {
          servername: value.servername,
          host: !value.addresses || !value.addresses.length ? null : value.addresses.length === 1 ? value.addresses[0] : value.addresses[Math.floor(Math.random() * value.addresses.length)]
        },
        extra || {}
      );
    }, "formatDNSValue");
    module.exports.resolveHostname = (options, callback) => {
      options = options || {};
      if (!options.host && options.servername) {
        options.host = options.servername;
      }
      if (!options.host || net.isIP(options.host)) {
        let value = {
          addresses: [options.host],
          servername: options.servername || false
        };
        return callback(
          null,
          formatDNSValue(value, {
            cached: false
          })
        );
      }
      let cached;
      if (dnsCache.has(options.host)) {
        cached = dnsCache.get(options.host);
        if (!cached.expires || cached.expires >= Date.now()) {
          return callback(
            null,
            formatDNSValue(cached.value, {
              cached: true
            })
          );
        }
      }
      resolver(4, options.host, options, (err, addresses) => {
        if (err) {
          if (cached) {
            return callback(
              null,
              formatDNSValue(cached.value, {
                cached: true,
                error: err
              })
            );
          }
          return callback(err);
        }
        if (addresses && addresses.length) {
          let value = {
            addresses,
            servername: options.servername || options.host
          };
          dnsCache.set(options.host, {
            value,
            expires: Date.now() + (options.dnsTtl || DNS_TTL)
          });
          return callback(
            null,
            formatDNSValue(value, {
              cached: false
            })
          );
        }
        resolver(6, options.host, options, (err2, addresses2) => {
          if (err2) {
            if (cached) {
              return callback(
                null,
                formatDNSValue(cached.value, {
                  cached: true,
                  error: err2
                })
              );
            }
            return callback(err2);
          }
          if (addresses2 && addresses2.length) {
            let value = {
              addresses: addresses2,
              servername: options.servername || options.host
            };
            dnsCache.set(options.host, {
              value,
              expires: Date.now() + (options.dnsTtl || DNS_TTL)
            });
            return callback(
              null,
              formatDNSValue(value, {
                cached: false
              })
            );
          }
          try {
            dns.lookup(options.host, { all: true }, (err3, addresses3) => {
              if (err3) {
                if (cached) {
                  return callback(
                    null,
                    formatDNSValue(cached.value, {
                      cached: true,
                      error: err3
                    })
                  );
                }
                return callback(err3);
              }
              let address = addresses3 ? addresses3.filter((addr) => isFamilySupported(addr.family)).map((addr) => addr.address).shift() : false;
              if (addresses3 && addresses3.length && !address) {
                console.warn(`Failed to resolve IPv${addresses3[0].family} addresses with current network`);
              }
              if (!address && cached) {
                return callback(
                  null,
                  formatDNSValue(cached.value, {
                    cached: true
                  })
                );
              }
              let value = {
                addresses: address ? [address] : [options.host],
                servername: options.servername || options.host
              };
              dnsCache.set(options.host, {
                value,
                expires: Date.now() + (options.dnsTtl || DNS_TTL)
              });
              return callback(
                null,
                formatDNSValue(value, {
                  cached: false
                })
              );
            });
          } catch (err3) {
            if (cached) {
              return callback(
                null,
                formatDNSValue(cached.value, {
                  cached: true,
                  error: err3
                })
              );
            }
            return callback(err3);
          }
        });
      });
    };
    module.exports.parseConnectionUrl = (str) => {
      str = str || "";
      let options = {};
      [urllib.parse(str, true)].forEach((url) => {
        let auth2;
        switch (url.protocol) {
          case "smtp:":
            options.secure = false;
            break;
          case "smtps:":
            options.secure = true;
            break;
          case "direct:":
            options.direct = true;
            break;
        }
        if (!isNaN(url.port) && Number(url.port)) {
          options.port = Number(url.port);
        }
        if (url.hostname) {
          options.host = url.hostname;
        }
        if (url.auth) {
          auth2 = url.auth.split(":");
          if (!options.auth) {
            options.auth = {};
          }
          options.auth.user = auth2.shift();
          options.auth.pass = auth2.join(":");
        }
        Object.keys(url.query || {}).forEach((key) => {
          let obj = options;
          let lKey = key;
          let value = url.query[key];
          if (!isNaN(value)) {
            value = Number(value);
          }
          switch (value) {
            case "true":
              value = true;
              break;
            case "false":
              value = false;
              break;
          }
          if (key.indexOf("tls.") === 0) {
            lKey = key.substr(4);
            if (!options.tls) {
              options.tls = {};
            }
            obj = options.tls;
          } else if (key.indexOf(".") >= 0) {
            return;
          }
          if (!(lKey in obj)) {
            obj[lKey] = value;
          }
        });
      });
      return options;
    };
    module.exports._logFunc = (logger2, level, defaults, data, message, ...args) => {
      let entry = {};
      Object.keys(defaults || {}).forEach((key) => {
        if (key !== "level") {
          entry[key] = defaults[key];
        }
      });
      Object.keys(data || {}).forEach((key) => {
        if (key !== "level") {
          entry[key] = data[key];
        }
      });
      logger2[level](entry, message, ...args);
    };
    module.exports.getLogger = (options, defaults) => {
      options = options || {};
      let response = {};
      let levels = ["trace", "debug", "info", "warn", "error", "fatal"];
      if (!options.logger) {
        levels.forEach((level) => {
          response[level] = () => false;
        });
        return response;
      }
      let logger2 = options.logger;
      if (options.logger === true) {
        logger2 = createDefaultLogger(levels);
      }
      levels.forEach((level) => {
        response[level] = (data, message, ...args) => {
          module.exports._logFunc(logger2, level, defaults, data, message, ...args);
        };
      });
      return response;
    };
    module.exports.callbackPromise = (resolve, reject) => function() {
      let args = Array.from(arguments);
      let err = args.shift();
      if (err) {
        reject(err);
      } else {
        resolve(...args);
      }
    };
    module.exports.parseDataURI = (uri) => {
      if (typeof uri !== "string") {
        return null;
      }
      if (!uri.startsWith("data:")) {
        return null;
      }
      const commaPos = uri.indexOf(",");
      if (commaPos === -1) {
        return null;
      }
      const data = uri.substring(commaPos + 1);
      const metaStr = uri.substring("data:".length, commaPos);
      let encoding;
      const metaEntries = metaStr.split(";");
      if (metaEntries.length > 0) {
        const lastEntry = metaEntries[metaEntries.length - 1].toLowerCase().trim();
        if (["base64", "utf8", "utf-8"].includes(lastEntry) && lastEntry.indexOf("=") === -1) {
          encoding = lastEntry;
          metaEntries.pop();
        }
      }
      const contentType = metaEntries.length > 0 ? metaEntries.shift() : "application/octet-stream";
      const params = {};
      for (let i = 0; i < metaEntries.length; i++) {
        const entry = metaEntries[i];
        const sepPos = entry.indexOf("=");
        if (sepPos > 0) {
          const key = entry.substring(0, sepPos).trim();
          const value = entry.substring(sepPos + 1).trim();
          if (key) {
            params[key] = value;
          }
        }
      }
      let bufferData;
      try {
        if (encoding === "base64") {
          bufferData = Buffer.from(data, "base64");
        } else {
          try {
            bufferData = Buffer.from(decodeURIComponent(data));
          } catch (decodeError) {
            bufferData = Buffer.from(data);
          }
        }
      } catch (bufferError) {
        bufferData = Buffer.alloc(0);
      }
      return {
        data: bufferData,
        encoding: encoding || null,
        contentType: contentType || "application/octet-stream",
        params
      };
    };
    module.exports.resolveContent = (data, key, callback) => {
      let promise;
      if (!callback) {
        promise = new Promise((resolve, reject) => {
          callback = module.exports.callbackPromise(resolve, reject);
        });
      }
      let content = data && data[key] && data[key].content || data[key];
      let contentStream;
      let encoding = (typeof data[key] === "object" && data[key].encoding || "utf8").toString().toLowerCase().replace(/[-_\s]/g, "");
      if (!content) {
        return callback(null, content);
      }
      if (typeof content === "object") {
        if (typeof content.pipe === "function") {
          return resolveStream(content, (err, value) => {
            if (err) {
              return callback(err);
            }
            if (data[key].content) {
              data[key].content = value;
            } else {
              data[key] = value;
            }
            callback(null, value);
          });
        } else if (/^https?:\/\//i.test(content.path || content.href)) {
          contentStream = nmfetch(content.path || content.href);
          return resolveStream(contentStream, callback);
        } else if (/^data:/i.test(content.path || content.href)) {
          let parsedDataUri = module.exports.parseDataURI(content.path || content.href);
          if (!parsedDataUri || !parsedDataUri.data) {
            return callback(null, Buffer.from(0));
          }
          return callback(null, parsedDataUri.data);
        } else if (content.path) {
          return resolveStream(fs.createReadStream(content.path), callback);
        }
      }
      if (typeof data[key].content === "string" && !["utf8", "usascii", "ascii"].includes(encoding)) {
        content = Buffer.from(data[key].content, encoding);
      }
      setImmediate(() => callback(null, content));
      return promise;
    };
    module.exports.assign = function() {
      let args = Array.from(arguments);
      let target = args.shift() || {};
      args.forEach((source) => {
        Object.keys(source || {}).forEach((key) => {
          if (["tls", "auth"].includes(key) && source[key] && typeof source[key] === "object") {
            if (!target[key]) {
              target[key] = {};
            }
            Object.keys(source[key]).forEach((subKey) => {
              target[key][subKey] = source[key][subKey];
            });
          } else {
            target[key] = source[key];
          }
        });
      });
      return target;
    };
    module.exports.encodeXText = (str) => {
      if (!/[^\x21-\x2A\x2C-\x3C\x3E-\x7E]/.test(str)) {
        return str;
      }
      let buf = Buffer.from(str);
      let result = "";
      for (let i = 0, len = buf.length; i < len; i++) {
        let c = buf[i];
        if (c < 33 || c > 126 || c === 43 || c === 61) {
          result += "+" + (c < 16 ? "0" : "") + c.toString(16).toUpperCase();
        } else {
          result += String.fromCharCode(c);
        }
      }
      return result;
    };
    function resolveStream(stream, callback) {
      let responded = false;
      let chunks = [];
      let chunklen = 0;
      stream.on("error", (err) => {
        if (responded) {
          return;
        }
        responded = true;
        callback(err);
      });
      stream.on("readable", () => {
        let chunk;
        while ((chunk = stream.read()) !== null) {
          chunks.push(chunk);
          chunklen += chunk.length;
        }
      });
      stream.on("end", () => {
        if (responded) {
          return;
        }
        responded = true;
        let value;
        try {
          value = Buffer.concat(chunks, chunklen);
        } catch (E) {
          return callback(E);
        }
        callback(null, value);
      });
    }
    __name(resolveStream, "resolveStream");
    function createDefaultLogger(levels) {
      let levelMaxLen = 0;
      let levelNames = /* @__PURE__ */ new Map();
      levels.forEach((level) => {
        if (level.length > levelMaxLen) {
          levelMaxLen = level.length;
        }
      });
      levels.forEach((level) => {
        let levelName = level.toUpperCase();
        if (levelName.length < levelMaxLen) {
          levelName += " ".repeat(levelMaxLen - levelName.length);
        }
        levelNames.set(level, levelName);
      });
      let print = /* @__PURE__ */ __name((level, entry, message, ...args) => {
        let prefix = "";
        if (entry) {
          if (entry.tnx === "server") {
            prefix = "S: ";
          } else if (entry.tnx === "client") {
            prefix = "C: ";
          }
          if (entry.sid) {
            prefix = "[" + entry.sid + "] " + prefix;
          }
          if (entry.cid) {
            prefix = "[#" + entry.cid + "] " + prefix;
          }
        }
        message = util.format(message, ...args);
        message.split(/\r?\n/).forEach((line) => {
          console.log("[%s] %s %s", (/* @__PURE__ */ new Date()).toISOString().substr(0, 19).replace(/T/, " "), levelNames.get(level), prefix + line);
        });
      }, "print");
      let logger2 = {};
      levels.forEach((level) => {
        logger2[level] = print.bind(null, level);
      });
      return logger2;
    }
    __name(createDefaultLogger, "createDefaultLogger");
  }
});

// node_modules/nodemailer/lib/mime-funcs/mime-types.js
var require_mime_types = __commonJS({
  "node_modules/nodemailer/lib/mime-funcs/mime-types.js"(exports, module) {
    "use strict";
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    var path = require_path();
    var defaultMimeType = "application/octet-stream";
    var defaultExtension = "bin";
    var mimeTypes = /* @__PURE__ */ new Map([
      ["application/acad", "dwg"],
      ["application/applixware", "aw"],
      ["application/arj", "arj"],
      ["application/atom+xml", "xml"],
      ["application/atomcat+xml", "atomcat"],
      ["application/atomsvc+xml", "atomsvc"],
      ["application/base64", ["mm", "mme"]],
      ["application/binhex", "hqx"],
      ["application/binhex4", "hqx"],
      ["application/book", ["book", "boo"]],
      ["application/ccxml+xml,", "ccxml"],
      ["application/cdf", "cdf"],
      ["application/cdmi-capability", "cdmia"],
      ["application/cdmi-container", "cdmic"],
      ["application/cdmi-domain", "cdmid"],
      ["application/cdmi-object", "cdmio"],
      ["application/cdmi-queue", "cdmiq"],
      ["application/clariscad", "ccad"],
      ["application/commonground", "dp"],
      ["application/cu-seeme", "cu"],
      ["application/davmount+xml", "davmount"],
      ["application/drafting", "drw"],
      ["application/dsptype", "tsp"],
      ["application/dssc+der", "dssc"],
      ["application/dssc+xml", "xdssc"],
      ["application/dxf", "dxf"],
      ["application/ecmascript", ["js", "es"]],
      ["application/emma+xml", "emma"],
      ["application/envoy", "evy"],
      ["application/epub+zip", "epub"],
      ["application/excel", ["xls", "xl", "xla", "xlb", "xlc", "xld", "xlk", "xll", "xlm", "xlt", "xlv", "xlw"]],
      ["application/exi", "exi"],
      ["application/font-tdpfr", "pfr"],
      ["application/fractals", "fif"],
      ["application/freeloader", "frl"],
      ["application/futuresplash", "spl"],
      ["application/geo+json", "geojson"],
      ["application/gnutar", "tgz"],
      ["application/groupwise", "vew"],
      ["application/hlp", "hlp"],
      ["application/hta", "hta"],
      ["application/hyperstudio", "stk"],
      ["application/i-deas", "unv"],
      ["application/iges", ["iges", "igs"]],
      ["application/inf", "inf"],
      ["application/internet-property-stream", "acx"],
      ["application/ipfix", "ipfix"],
      ["application/java", "class"],
      ["application/java-archive", "jar"],
      ["application/java-byte-code", "class"],
      ["application/java-serialized-object", "ser"],
      ["application/java-vm", "class"],
      ["application/javascript", "js"],
      ["application/json", "json"],
      ["application/lha", "lha"],
      ["application/lzx", "lzx"],
      ["application/mac-binary", "bin"],
      ["application/mac-binhex", "hqx"],
      ["application/mac-binhex40", "hqx"],
      ["application/mac-compactpro", "cpt"],
      ["application/macbinary", "bin"],
      ["application/mads+xml", "mads"],
      ["application/marc", "mrc"],
      ["application/marcxml+xml", "mrcx"],
      ["application/mathematica", "ma"],
      ["application/mathml+xml", "mathml"],
      ["application/mbedlet", "mbd"],
      ["application/mbox", "mbox"],
      ["application/mcad", "mcd"],
      ["application/mediaservercontrol+xml", "mscml"],
      ["application/metalink4+xml", "meta4"],
      ["application/mets+xml", "mets"],
      ["application/mime", "aps"],
      ["application/mods+xml", "mods"],
      ["application/mp21", "m21"],
      ["application/mp4", "mp4"],
      ["application/mspowerpoint", ["ppt", "pot", "pps", "ppz"]],
      ["application/msword", ["doc", "dot", "w6w", "wiz", "word"]],
      ["application/mswrite", "wri"],
      ["application/mxf", "mxf"],
      ["application/netmc", "mcp"],
      ["application/octet-stream", ["*"]],
      ["application/oda", "oda"],
      ["application/oebps-package+xml", "opf"],
      ["application/ogg", "ogx"],
      ["application/olescript", "axs"],
      ["application/onenote", "onetoc"],
      ["application/patch-ops-error+xml", "xer"],
      ["application/pdf", "pdf"],
      ["application/pgp-encrypted", "asc"],
      ["application/pgp-signature", "pgp"],
      ["application/pics-rules", "prf"],
      ["application/pkcs-12", "p12"],
      ["application/pkcs-crl", "crl"],
      ["application/pkcs10", "p10"],
      ["application/pkcs7-mime", ["p7c", "p7m"]],
      ["application/pkcs7-signature", "p7s"],
      ["application/pkcs8", "p8"],
      ["application/pkix-attr-cert", "ac"],
      ["application/pkix-cert", ["cer", "crt"]],
      ["application/pkix-crl", "crl"],
      ["application/pkix-pkipath", "pkipath"],
      ["application/pkixcmp", "pki"],
      ["application/plain", "text"],
      ["application/pls+xml", "pls"],
      ["application/postscript", ["ps", "ai", "eps"]],
      ["application/powerpoint", "ppt"],
      ["application/pro_eng", ["part", "prt"]],
      ["application/prs.cww", "cww"],
      ["application/pskc+xml", "pskcxml"],
      ["application/rdf+xml", "rdf"],
      ["application/reginfo+xml", "rif"],
      ["application/relax-ng-compact-syntax", "rnc"],
      ["application/resource-lists+xml", "rl"],
      ["application/resource-lists-diff+xml", "rld"],
      ["application/ringing-tones", "rng"],
      ["application/rls-services+xml", "rs"],
      ["application/rsd+xml", "rsd"],
      ["application/rss+xml", "xml"],
      ["application/rtf", ["rtf", "rtx"]],
      ["application/sbml+xml", "sbml"],
      ["application/scvp-cv-request", "scq"],
      ["application/scvp-cv-response", "scs"],
      ["application/scvp-vp-request", "spq"],
      ["application/scvp-vp-response", "spp"],
      ["application/sdp", "sdp"],
      ["application/sea", "sea"],
      ["application/set", "set"],
      ["application/set-payment-initiation", "setpay"],
      ["application/set-registration-initiation", "setreg"],
      ["application/shf+xml", "shf"],
      ["application/sla", "stl"],
      ["application/smil", ["smi", "smil"]],
      ["application/smil+xml", "smi"],
      ["application/solids", "sol"],
      ["application/sounder", "sdr"],
      ["application/sparql-query", "rq"],
      ["application/sparql-results+xml", "srx"],
      ["application/srgs", "gram"],
      ["application/srgs+xml", "grxml"],
      ["application/sru+xml", "sru"],
      ["application/ssml+xml", "ssml"],
      ["application/step", ["step", "stp"]],
      ["application/streamingmedia", "ssm"],
      ["application/tei+xml", "tei"],
      ["application/thraud+xml", "tfi"],
      ["application/timestamped-data", "tsd"],
      ["application/toolbook", "tbk"],
      ["application/vda", "vda"],
      ["application/vnd.3gpp.pic-bw-large", "plb"],
      ["application/vnd.3gpp.pic-bw-small", "psb"],
      ["application/vnd.3gpp.pic-bw-var", "pvb"],
      ["application/vnd.3gpp2.tcap", "tcap"],
      ["application/vnd.3m.post-it-notes", "pwn"],
      ["application/vnd.accpac.simply.aso", "aso"],
      ["application/vnd.accpac.simply.imp", "imp"],
      ["application/vnd.acucobol", "acu"],
      ["application/vnd.acucorp", "atc"],
      ["application/vnd.adobe.air-application-installer-package+zip", "air"],
      ["application/vnd.adobe.fxp", "fxp"],
      ["application/vnd.adobe.xdp+xml", "xdp"],
      ["application/vnd.adobe.xfdf", "xfdf"],
      ["application/vnd.ahead.space", "ahead"],
      ["application/vnd.airzip.filesecure.azf", "azf"],
      ["application/vnd.airzip.filesecure.azs", "azs"],
      ["application/vnd.amazon.ebook", "azw"],
      ["application/vnd.americandynamics.acc", "acc"],
      ["application/vnd.amiga.ami", "ami"],
      ["application/vnd.android.package-archive", "apk"],
      ["application/vnd.anser-web-certificate-issue-initiation", "cii"],
      ["application/vnd.anser-web-funds-transfer-initiation", "fti"],
      ["application/vnd.antix.game-component", "atx"],
      ["application/vnd.apple.installer+xml", "mpkg"],
      ["application/vnd.apple.mpegurl", "m3u8"],
      ["application/vnd.aristanetworks.swi", "swi"],
      ["application/vnd.audiograph", "aep"],
      ["application/vnd.blueice.multipass", "mpm"],
      ["application/vnd.bmi", "bmi"],
      ["application/vnd.businessobjects", "rep"],
      ["application/vnd.chemdraw+xml", "cdxml"],
      ["application/vnd.chipnuts.karaoke-mmd", "mmd"],
      ["application/vnd.cinderella", "cdy"],
      ["application/vnd.claymore", "cla"],
      ["application/vnd.cloanto.rp9", "rp9"],
      ["application/vnd.clonk.c4group", "c4g"],
      ["application/vnd.cluetrust.cartomobile-config", "c11amc"],
      ["application/vnd.cluetrust.cartomobile-config-pkg", "c11amz"],
      ["application/vnd.commonspace", "csp"],
      ["application/vnd.contact.cmsg", "cdbcmsg"],
      ["application/vnd.cosmocaller", "cmc"],
      ["application/vnd.crick.clicker", "clkx"],
      ["application/vnd.crick.clicker.keyboard", "clkk"],
      ["application/vnd.crick.clicker.palette", "clkp"],
      ["application/vnd.crick.clicker.template", "clkt"],
      ["application/vnd.crick.clicker.wordbank", "clkw"],
      ["application/vnd.criticaltools.wbs+xml", "wbs"],
      ["application/vnd.ctc-posml", "pml"],
      ["application/vnd.cups-ppd", "ppd"],
      ["application/vnd.curl.car", "car"],
      ["application/vnd.curl.pcurl", "pcurl"],
      ["application/vnd.data-vision.rdz", "rdz"],
      ["application/vnd.denovo.fcselayout-link", "fe_launch"],
      ["application/vnd.dna", "dna"],
      ["application/vnd.dolby.mlp", "mlp"],
      ["application/vnd.dpgraph", "dpg"],
      ["application/vnd.dreamfactory", "dfac"],
      ["application/vnd.dvb.ait", "ait"],
      ["application/vnd.dvb.service", "svc"],
      ["application/vnd.dynageo", "geo"],
      ["application/vnd.ecowin.chart", "mag"],
      ["application/vnd.enliven", "nml"],
      ["application/vnd.epson.esf", "esf"],
      ["application/vnd.epson.msf", "msf"],
      ["application/vnd.epson.quickanime", "qam"],
      ["application/vnd.epson.salt", "slt"],
      ["application/vnd.epson.ssf", "ssf"],
      ["application/vnd.eszigno3+xml", "es3"],
      ["application/vnd.ezpix-album", "ez2"],
      ["application/vnd.ezpix-package", "ez3"],
      ["application/vnd.fdf", "fdf"],
      ["application/vnd.fdsn.seed", "seed"],
      ["application/vnd.flographit", "gph"],
      ["application/vnd.fluxtime.clip", "ftc"],
      ["application/vnd.framemaker", "fm"],
      ["application/vnd.frogans.fnc", "fnc"],
      ["application/vnd.frogans.ltf", "ltf"],
      ["application/vnd.fsc.weblaunch", "fsc"],
      ["application/vnd.fujitsu.oasys", "oas"],
      ["application/vnd.fujitsu.oasys2", "oa2"],
      ["application/vnd.fujitsu.oasys3", "oa3"],
      ["application/vnd.fujitsu.oasysgp", "fg5"],
      ["application/vnd.fujitsu.oasysprs", "bh2"],
      ["application/vnd.fujixerox.ddd", "ddd"],
      ["application/vnd.fujixerox.docuworks", "xdw"],
      ["application/vnd.fujixerox.docuworks.binder", "xbd"],
      ["application/vnd.fuzzysheet", "fzs"],
      ["application/vnd.genomatix.tuxedo", "txd"],
      ["application/vnd.geogebra.file", "ggb"],
      ["application/vnd.geogebra.tool", "ggt"],
      ["application/vnd.geometry-explorer", "gex"],
      ["application/vnd.geonext", "gxt"],
      ["application/vnd.geoplan", "g2w"],
      ["application/vnd.geospace", "g3w"],
      ["application/vnd.gmx", "gmx"],
      ["application/vnd.google-earth.kml+xml", "kml"],
      ["application/vnd.google-earth.kmz", "kmz"],
      ["application/vnd.grafeq", "gqf"],
      ["application/vnd.groove-account", "gac"],
      ["application/vnd.groove-help", "ghf"],
      ["application/vnd.groove-identity-message", "gim"],
      ["application/vnd.groove-injector", "grv"],
      ["application/vnd.groove-tool-message", "gtm"],
      ["application/vnd.groove-tool-template", "tpl"],
      ["application/vnd.groove-vcard", "vcg"],
      ["application/vnd.hal+xml", "hal"],
      ["application/vnd.handheld-entertainment+xml", "zmm"],
      ["application/vnd.hbci", "hbci"],
      ["application/vnd.hhe.lesson-player", "les"],
      ["application/vnd.hp-hpgl", ["hgl", "hpg", "hpgl"]],
      ["application/vnd.hp-hpid", "hpid"],
      ["application/vnd.hp-hps", "hps"],
      ["application/vnd.hp-jlyt", "jlt"],
      ["application/vnd.hp-pcl", "pcl"],
      ["application/vnd.hp-pclxl", "pclxl"],
      ["application/vnd.hydrostatix.sof-data", "sfd-hdstx"],
      ["application/vnd.hzn-3d-crossword", "x3d"],
      ["application/vnd.ibm.minipay", "mpy"],
      ["application/vnd.ibm.modcap", "afp"],
      ["application/vnd.ibm.rights-management", "irm"],
      ["application/vnd.ibm.secure-container", "sc"],
      ["application/vnd.iccprofile", "icc"],
      ["application/vnd.igloader", "igl"],
      ["application/vnd.immervision-ivp", "ivp"],
      ["application/vnd.immervision-ivu", "ivu"],
      ["application/vnd.insors.igm", "igm"],
      ["application/vnd.intercon.formnet", "xpw"],
      ["application/vnd.intergeo", "i2g"],
      ["application/vnd.intu.qbo", "qbo"],
      ["application/vnd.intu.qfx", "qfx"],
      ["application/vnd.ipunplugged.rcprofile", "rcprofile"],
      ["application/vnd.irepository.package+xml", "irp"],
      ["application/vnd.is-xpr", "xpr"],
      ["application/vnd.isac.fcs", "fcs"],
      ["application/vnd.jam", "jam"],
      ["application/vnd.jcp.javame.midlet-rms", "rms"],
      ["application/vnd.jisp", "jisp"],
      ["application/vnd.joost.joda-archive", "joda"],
      ["application/vnd.kahootz", "ktz"],
      ["application/vnd.kde.karbon", "karbon"],
      ["application/vnd.kde.kchart", "chrt"],
      ["application/vnd.kde.kformula", "kfo"],
      ["application/vnd.kde.kivio", "flw"],
      ["application/vnd.kde.kontour", "kon"],
      ["application/vnd.kde.kpresenter", "kpr"],
      ["application/vnd.kde.kspread", "ksp"],
      ["application/vnd.kde.kword", "kwd"],
      ["application/vnd.kenameaapp", "htke"],
      ["application/vnd.kidspiration", "kia"],
      ["application/vnd.kinar", "kne"],
      ["application/vnd.koan", "skp"],
      ["application/vnd.kodak-descriptor", "sse"],
      ["application/vnd.las.las+xml", "lasxml"],
      ["application/vnd.llamagraphics.life-balance.desktop", "lbd"],
      ["application/vnd.llamagraphics.life-balance.exchange+xml", "lbe"],
      ["application/vnd.lotus-1-2-3", "123"],
      ["application/vnd.lotus-approach", "apr"],
      ["application/vnd.lotus-freelance", "pre"],
      ["application/vnd.lotus-notes", "nsf"],
      ["application/vnd.lotus-organizer", "org"],
      ["application/vnd.lotus-screencam", "scm"],
      ["application/vnd.lotus-wordpro", "lwp"],
      ["application/vnd.macports.portpkg", "portpkg"],
      ["application/vnd.mcd", "mcd"],
      ["application/vnd.medcalcdata", "mc1"],
      ["application/vnd.mediastation.cdkey", "cdkey"],
      ["application/vnd.mfer", "mwf"],
      ["application/vnd.mfmp", "mfm"],
      ["application/vnd.micrografx.flo", "flo"],
      ["application/vnd.micrografx.igx", "igx"],
      ["application/vnd.mif", "mif"],
      ["application/vnd.mobius.daf", "daf"],
      ["application/vnd.mobius.dis", "dis"],
      ["application/vnd.mobius.mbk", "mbk"],
      ["application/vnd.mobius.mqy", "mqy"],
      ["application/vnd.mobius.msl", "msl"],
      ["application/vnd.mobius.plc", "plc"],
      ["application/vnd.mobius.txf", "txf"],
      ["application/vnd.mophun.application", "mpn"],
      ["application/vnd.mophun.certificate", "mpc"],
      ["application/vnd.mozilla.xul+xml", "xul"],
      ["application/vnd.ms-artgalry", "cil"],
      ["application/vnd.ms-cab-compressed", "cab"],
      ["application/vnd.ms-excel", ["xls", "xla", "xlc", "xlm", "xlt", "xlw", "xlb", "xll"]],
      ["application/vnd.ms-excel.addin.macroenabled.12", "xlam"],
      ["application/vnd.ms-excel.sheet.binary.macroenabled.12", "xlsb"],
      ["application/vnd.ms-excel.sheet.macroenabled.12", "xlsm"],
      ["application/vnd.ms-excel.template.macroenabled.12", "xltm"],
      ["application/vnd.ms-fontobject", "eot"],
      ["application/vnd.ms-htmlhelp", "chm"],
      ["application/vnd.ms-ims", "ims"],
      ["application/vnd.ms-lrm", "lrm"],
      ["application/vnd.ms-officetheme", "thmx"],
      ["application/vnd.ms-outlook", "msg"],
      ["application/vnd.ms-pki.certstore", "sst"],
      ["application/vnd.ms-pki.pko", "pko"],
      ["application/vnd.ms-pki.seccat", "cat"],
      ["application/vnd.ms-pki.stl", "stl"],
      ["application/vnd.ms-pkicertstore", "sst"],
      ["application/vnd.ms-pkiseccat", "cat"],
      ["application/vnd.ms-pkistl", "stl"],
      ["application/vnd.ms-powerpoint", ["ppt", "pot", "pps", "ppa", "pwz"]],
      ["application/vnd.ms-powerpoint.addin.macroenabled.12", "ppam"],
      ["application/vnd.ms-powerpoint.presentation.macroenabled.12", "pptm"],
      ["application/vnd.ms-powerpoint.slide.macroenabled.12", "sldm"],
      ["application/vnd.ms-powerpoint.slideshow.macroenabled.12", "ppsm"],
      ["application/vnd.ms-powerpoint.template.macroenabled.12", "potm"],
      ["application/vnd.ms-project", "mpp"],
      ["application/vnd.ms-word.document.macroenabled.12", "docm"],
      ["application/vnd.ms-word.template.macroenabled.12", "dotm"],
      ["application/vnd.ms-works", ["wks", "wcm", "wdb", "wps"]],
      ["application/vnd.ms-wpl", "wpl"],
      ["application/vnd.ms-xpsdocument", "xps"],
      ["application/vnd.mseq", "mseq"],
      ["application/vnd.musician", "mus"],
      ["application/vnd.muvee.style", "msty"],
      ["application/vnd.neurolanguage.nlu", "nlu"],
      ["application/vnd.noblenet-directory", "nnd"],
      ["application/vnd.noblenet-sealer", "nns"],
      ["application/vnd.noblenet-web", "nnw"],
      ["application/vnd.nokia.configuration-message", "ncm"],
      ["application/vnd.nokia.n-gage.data", "ngdat"],
      ["application/vnd.nokia.n-gage.symbian.install", "n-gage"],
      ["application/vnd.nokia.radio-preset", "rpst"],
      ["application/vnd.nokia.radio-presets", "rpss"],
      ["application/vnd.nokia.ringing-tone", "rng"],
      ["application/vnd.novadigm.edm", "edm"],
      ["application/vnd.novadigm.edx", "edx"],
      ["application/vnd.novadigm.ext", "ext"],
      ["application/vnd.oasis.opendocument.chart", "odc"],
      ["application/vnd.oasis.opendocument.chart-template", "otc"],
      ["application/vnd.oasis.opendocument.database", "odb"],
      ["application/vnd.oasis.opendocument.formula", "odf"],
      ["application/vnd.oasis.opendocument.formula-template", "odft"],
      ["application/vnd.oasis.opendocument.graphics", "odg"],
      ["application/vnd.oasis.opendocument.graphics-template", "otg"],
      ["application/vnd.oasis.opendocument.image", "odi"],
      ["application/vnd.oasis.opendocument.image-template", "oti"],
      ["application/vnd.oasis.opendocument.presentation", "odp"],
      ["application/vnd.oasis.opendocument.presentation-template", "otp"],
      ["application/vnd.oasis.opendocument.spreadsheet", "ods"],
      ["application/vnd.oasis.opendocument.spreadsheet-template", "ots"],
      ["application/vnd.oasis.opendocument.text", "odt"],
      ["application/vnd.oasis.opendocument.text-master", "odm"],
      ["application/vnd.oasis.opendocument.text-template", "ott"],
      ["application/vnd.oasis.opendocument.text-web", "oth"],
      ["application/vnd.olpc-sugar", "xo"],
      ["application/vnd.oma.dd2+xml", "dd2"],
      ["application/vnd.openofficeorg.extension", "oxt"],
      ["application/vnd.openxmlformats-officedocument.presentationml.presentation", "pptx"],
      ["application/vnd.openxmlformats-officedocument.presentationml.slide", "sldx"],
      ["application/vnd.openxmlformats-officedocument.presentationml.slideshow", "ppsx"],
      ["application/vnd.openxmlformats-officedocument.presentationml.template", "potx"],
      ["application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", "xlsx"],
      ["application/vnd.openxmlformats-officedocument.spreadsheetml.template", "xltx"],
      ["application/vnd.openxmlformats-officedocument.wordprocessingml.document", "docx"],
      ["application/vnd.openxmlformats-officedocument.wordprocessingml.template", "dotx"],
      ["application/vnd.osgeo.mapguide.package", "mgp"],
      ["application/vnd.osgi.dp", "dp"],
      ["application/vnd.palm", "pdb"],
      ["application/vnd.pawaafile", "paw"],
      ["application/vnd.pg.format", "str"],
      ["application/vnd.pg.osasli", "ei6"],
      ["application/vnd.picsel", "efif"],
      ["application/vnd.pmi.widget", "wg"],
      ["application/vnd.pocketlearn", "plf"],
      ["application/vnd.powerbuilder6", "pbd"],
      ["application/vnd.previewsystems.box", "box"],
      ["application/vnd.proteus.magazine", "mgz"],
      ["application/vnd.publishare-delta-tree", "qps"],
      ["application/vnd.pvi.ptid1", "ptid"],
      ["application/vnd.quark.quarkxpress", "qxd"],
      ["application/vnd.realvnc.bed", "bed"],
      ["application/vnd.recordare.musicxml", "mxl"],
      ["application/vnd.recordare.musicxml+xml", "musicxml"],
      ["application/vnd.rig.cryptonote", "cryptonote"],
      ["application/vnd.rim.cod", "cod"],
      ["application/vnd.rn-realmedia", "rm"],
      ["application/vnd.rn-realplayer", "rnx"],
      ["application/vnd.route66.link66+xml", "link66"],
      ["application/vnd.sailingtracker.track", "st"],
      ["application/vnd.seemail", "see"],
      ["application/vnd.sema", "sema"],
      ["application/vnd.semd", "semd"],
      ["application/vnd.semf", "semf"],
      ["application/vnd.shana.informed.formdata", "ifm"],
      ["application/vnd.shana.informed.formtemplate", "itp"],
      ["application/vnd.shana.informed.interchange", "iif"],
      ["application/vnd.shana.informed.package", "ipk"],
      ["application/vnd.simtech-mindmapper", "twd"],
      ["application/vnd.smaf", "mmf"],
      ["application/vnd.smart.teacher", "teacher"],
      ["application/vnd.solent.sdkm+xml", "sdkm"],
      ["application/vnd.spotfire.dxp", "dxp"],
      ["application/vnd.spotfire.sfs", "sfs"],
      ["application/vnd.stardivision.calc", "sdc"],
      ["application/vnd.stardivision.draw", "sda"],
      ["application/vnd.stardivision.impress", "sdd"],
      ["application/vnd.stardivision.math", "smf"],
      ["application/vnd.stardivision.writer", "sdw"],
      ["application/vnd.stardivision.writer-global", "sgl"],
      ["application/vnd.stepmania.stepchart", "sm"],
      ["application/vnd.sun.xml.calc", "sxc"],
      ["application/vnd.sun.xml.calc.template", "stc"],
      ["application/vnd.sun.xml.draw", "sxd"],
      ["application/vnd.sun.xml.draw.template", "std"],
      ["application/vnd.sun.xml.impress", "sxi"],
      ["application/vnd.sun.xml.impress.template", "sti"],
      ["application/vnd.sun.xml.math", "sxm"],
      ["application/vnd.sun.xml.writer", "sxw"],
      ["application/vnd.sun.xml.writer.global", "sxg"],
      ["application/vnd.sun.xml.writer.template", "stw"],
      ["application/vnd.sus-calendar", "sus"],
      ["application/vnd.svd", "svd"],
      ["application/vnd.symbian.install", "sis"],
      ["application/vnd.syncml+xml", "xsm"],
      ["application/vnd.syncml.dm+wbxml", "bdm"],
      ["application/vnd.syncml.dm+xml", "xdm"],
      ["application/vnd.tao.intent-module-archive", "tao"],
      ["application/vnd.tmobile-livetv", "tmo"],
      ["application/vnd.trid.tpt", "tpt"],
      ["application/vnd.triscape.mxs", "mxs"],
      ["application/vnd.trueapp", "tra"],
      ["application/vnd.ufdl", "ufd"],
      ["application/vnd.uiq.theme", "utz"],
      ["application/vnd.umajin", "umj"],
      ["application/vnd.unity", "unityweb"],
      ["application/vnd.uoml+xml", "uoml"],
      ["application/vnd.vcx", "vcx"],
      ["application/vnd.visio", "vsd"],
      ["application/vnd.visionary", "vis"],
      ["application/vnd.vsf", "vsf"],
      ["application/vnd.wap.wbxml", "wbxml"],
      ["application/vnd.wap.wmlc", "wmlc"],
      ["application/vnd.wap.wmlscriptc", "wmlsc"],
      ["application/vnd.webturbo", "wtb"],
      ["application/vnd.wolfram.player", "nbp"],
      ["application/vnd.wordperfect", "wpd"],
      ["application/vnd.wqd", "wqd"],
      ["application/vnd.wt.stf", "stf"],
      ["application/vnd.xara", ["web", "xar"]],
      ["application/vnd.xfdl", "xfdl"],
      ["application/vnd.yamaha.hv-dic", "hvd"],
      ["application/vnd.yamaha.hv-script", "hvs"],
      ["application/vnd.yamaha.hv-voice", "hvp"],
      ["application/vnd.yamaha.openscoreformat", "osf"],
      ["application/vnd.yamaha.openscoreformat.osfpvg+xml", "osfpvg"],
      ["application/vnd.yamaha.smaf-audio", "saf"],
      ["application/vnd.yamaha.smaf-phrase", "spf"],
      ["application/vnd.yellowriver-custom-menu", "cmp"],
      ["application/vnd.zul", "zir"],
      ["application/vnd.zzazz.deck+xml", "zaz"],
      ["application/vocaltec-media-desc", "vmd"],
      ["application/vocaltec-media-file", "vmf"],
      ["application/voicexml+xml", "vxml"],
      ["application/widget", "wgt"],
      ["application/winhlp", "hlp"],
      ["application/wordperfect", ["wp", "wp5", "wp6", "wpd"]],
      ["application/wordperfect6.0", ["w60", "wp5"]],
      ["application/wordperfect6.1", "w61"],
      ["application/wsdl+xml", "wsdl"],
      ["application/wspolicy+xml", "wspolicy"],
      ["application/x-123", "wk1"],
      ["application/x-7z-compressed", "7z"],
      ["application/x-abiword", "abw"],
      ["application/x-ace-compressed", "ace"],
      ["application/x-aim", "aim"],
      ["application/x-authorware-bin", "aab"],
      ["application/x-authorware-map", "aam"],
      ["application/x-authorware-seg", "aas"],
      ["application/x-bcpio", "bcpio"],
      ["application/x-binary", "bin"],
      ["application/x-binhex40", "hqx"],
      ["application/x-bittorrent", "torrent"],
      ["application/x-bsh", ["bsh", "sh", "shar"]],
      ["application/x-bytecode.elisp", "elc"],
      ["application/x-bytecode.python", "pyc"],
      ["application/x-bzip", "bz"],
      ["application/x-bzip2", ["boz", "bz2"]],
      ["application/x-cdf", "cdf"],
      ["application/x-cdlink", "vcd"],
      ["application/x-chat", ["cha", "chat"]],
      ["application/x-chess-pgn", "pgn"],
      ["application/x-cmu-raster", "ras"],
      ["application/x-cocoa", "cco"],
      ["application/x-compactpro", "cpt"],
      ["application/x-compress", "z"],
      ["application/x-compressed", ["tgz", "gz", "z", "zip"]],
      ["application/x-conference", "nsc"],
      ["application/x-cpio", "cpio"],
      ["application/x-cpt", "cpt"],
      ["application/x-csh", "csh"],
      ["application/x-debian-package", "deb"],
      ["application/x-deepv", "deepv"],
      ["application/x-director", ["dir", "dcr", "dxr"]],
      ["application/x-doom", "wad"],
      ["application/x-dtbncx+xml", "ncx"],
      ["application/x-dtbook+xml", "dtb"],
      ["application/x-dtbresource+xml", "res"],
      ["application/x-dvi", "dvi"],
      ["application/x-elc", "elc"],
      ["application/x-envoy", ["env", "evy"]],
      ["application/x-esrehber", "es"],
      ["application/x-excel", ["xls", "xla", "xlb", "xlc", "xld", "xlk", "xll", "xlm", "xlt", "xlv", "xlw"]],
      ["application/x-font-bdf", "bdf"],
      ["application/x-font-ghostscript", "gsf"],
      ["application/x-font-linux-psf", "psf"],
      ["application/x-font-otf", "otf"],
      ["application/x-font-pcf", "pcf"],
      ["application/x-font-snf", "snf"],
      ["application/x-font-ttf", "ttf"],
      ["application/x-font-type1", "pfa"],
      ["application/x-font-woff", "woff"],
      ["application/x-frame", "mif"],
      ["application/x-freelance", "pre"],
      ["application/x-futuresplash", "spl"],
      ["application/x-gnumeric", "gnumeric"],
      ["application/x-gsp", "gsp"],
      ["application/x-gss", "gss"],
      ["application/x-gtar", "gtar"],
      ["application/x-gzip", ["gz", "gzip"]],
      ["application/x-hdf", "hdf"],
      ["application/x-helpfile", ["help", "hlp"]],
      ["application/x-httpd-imap", "imap"],
      ["application/x-ima", "ima"],
      ["application/x-internet-signup", ["ins", "isp"]],
      ["application/x-internett-signup", "ins"],
      ["application/x-inventor", "iv"],
      ["application/x-ip2", "ip"],
      ["application/x-iphone", "iii"],
      ["application/x-java-class", "class"],
      ["application/x-java-commerce", "jcm"],
      ["application/x-java-jnlp-file", "jnlp"],
      ["application/x-javascript", "js"],
      ["application/x-koan", ["skd", "skm", "skp", "skt"]],
      ["application/x-ksh", "ksh"],
      ["application/x-latex", ["latex", "ltx"]],
      ["application/x-lha", "lha"],
      ["application/x-lisp", "lsp"],
      ["application/x-livescreen", "ivy"],
      ["application/x-lotus", "wq1"],
      ["application/x-lotusscreencam", "scm"],
      ["application/x-lzh", "lzh"],
      ["application/x-lzx", "lzx"],
      ["application/x-mac-binhex40", "hqx"],
      ["application/x-macbinary", "bin"],
      ["application/x-magic-cap-package-1.0", "mc$"],
      ["application/x-mathcad", "mcd"],
      ["application/x-meme", "mm"],
      ["application/x-midi", ["mid", "midi"]],
      ["application/x-mif", "mif"],
      ["application/x-mix-transfer", "nix"],
      ["application/x-mobipocket-ebook", "prc"],
      ["application/x-mplayer2", "asx"],
      ["application/x-ms-application", "application"],
      ["application/x-ms-wmd", "wmd"],
      ["application/x-ms-wmz", "wmz"],
      ["application/x-ms-xbap", "xbap"],
      ["application/x-msaccess", "mdb"],
      ["application/x-msbinder", "obd"],
      ["application/x-mscardfile", "crd"],
      ["application/x-msclip", "clp"],
      ["application/x-msdownload", ["exe", "dll"]],
      ["application/x-msexcel", ["xls", "xla", "xlw"]],
      ["application/x-msmediaview", ["mvb", "m13", "m14"]],
      ["application/x-msmetafile", "wmf"],
      ["application/x-msmoney", "mny"],
      ["application/x-mspowerpoint", "ppt"],
      ["application/x-mspublisher", "pub"],
      ["application/x-msschedule", "scd"],
      ["application/x-msterminal", "trm"],
      ["application/x-mswrite", "wri"],
      ["application/x-navi-animation", "ani"],
      ["application/x-navidoc", "nvd"],
      ["application/x-navimap", "map"],
      ["application/x-navistyle", "stl"],
      ["application/x-netcdf", ["cdf", "nc"]],
      ["application/x-newton-compatible-pkg", "pkg"],
      ["application/x-nokia-9000-communicator-add-on-software", "aos"],
      ["application/x-omc", "omc"],
      ["application/x-omcdatamaker", "omcd"],
      ["application/x-omcregerator", "omcr"],
      ["application/x-pagemaker", ["pm4", "pm5"]],
      ["application/x-pcl", "pcl"],
      ["application/x-perfmon", ["pma", "pmc", "pml", "pmr", "pmw"]],
      ["application/x-pixclscript", "plx"],
      ["application/x-pkcs10", "p10"],
      ["application/x-pkcs12", ["p12", "pfx"]],
      ["application/x-pkcs7-certificates", ["p7b", "spc"]],
      ["application/x-pkcs7-certreqresp", "p7r"],
      ["application/x-pkcs7-mime", ["p7m", "p7c"]],
      ["application/x-pkcs7-signature", ["p7s", "p7a"]],
      ["application/x-pointplus", "css"],
      ["application/x-portable-anymap", "pnm"],
      ["application/x-project", ["mpc", "mpt", "mpv", "mpx"]],
      ["application/x-qpro", "wb1"],
      ["application/x-rar-compressed", "rar"],
      ["application/x-rtf", "rtf"],
      ["application/x-sdp", "sdp"],
      ["application/x-sea", "sea"],
      ["application/x-seelogo", "sl"],
      ["application/x-sh", "sh"],
      ["application/x-shar", ["shar", "sh"]],
      ["application/x-shockwave-flash", "swf"],
      ["application/x-silverlight-app", "xap"],
      ["application/x-sit", "sit"],
      ["application/x-sprite", ["spr", "sprite"]],
      ["application/x-stuffit", "sit"],
      ["application/x-stuffitx", "sitx"],
      ["application/x-sv4cpio", "sv4cpio"],
      ["application/x-sv4crc", "sv4crc"],
      ["application/x-tar", "tar"],
      ["application/x-tbook", ["sbk", "tbk"]],
      ["application/x-tcl", "tcl"],
      ["application/x-tex", "tex"],
      ["application/x-tex-tfm", "tfm"],
      ["application/x-texinfo", ["texi", "texinfo"]],
      ["application/x-troff", ["roff", "t", "tr"]],
      ["application/x-troff-man", "man"],
      ["application/x-troff-me", "me"],
      ["application/x-troff-ms", "ms"],
      ["application/x-troff-msvideo", "avi"],
      ["application/x-ustar", "ustar"],
      ["application/x-visio", ["vsd", "vst", "vsw"]],
      ["application/x-vnd.audioexplosion.mzz", "mzz"],
      ["application/x-vnd.ls-xpix", "xpix"],
      ["application/x-vrml", "vrml"],
      ["application/x-wais-source", ["src", "wsrc"]],
      ["application/x-winhelp", "hlp"],
      ["application/x-wintalk", "wtk"],
      ["application/x-world", ["wrl", "svr"]],
      ["application/x-wpwin", "wpd"],
      ["application/x-wri", "wri"],
      ["application/x-x509-ca-cert", ["cer", "crt", "der"]],
      ["application/x-x509-user-cert", "crt"],
      ["application/x-xfig", "fig"],
      ["application/x-xpinstall", "xpi"],
      ["application/x-zip-compressed", "zip"],
      ["application/xcap-diff+xml", "xdf"],
      ["application/xenc+xml", "xenc"],
      ["application/xhtml+xml", "xhtml"],
      ["application/xml", "xml"],
      ["application/xml-dtd", "dtd"],
      ["application/xop+xml", "xop"],
      ["application/xslt+xml", "xslt"],
      ["application/xspf+xml", "xspf"],
      ["application/xv+xml", "mxml"],
      ["application/yang", "yang"],
      ["application/yin+xml", "yin"],
      ["application/ynd.ms-pkipko", "pko"],
      ["application/zip", "zip"],
      ["audio/adpcm", "adp"],
      ["audio/aiff", ["aiff", "aif", "aifc"]],
      ["audio/basic", ["snd", "au"]],
      ["audio/it", "it"],
      ["audio/make", ["funk", "my", "pfunk"]],
      ["audio/make.my.funk", "pfunk"],
      ["audio/mid", ["mid", "rmi"]],
      ["audio/midi", ["midi", "kar", "mid"]],
      ["audio/mod", "mod"],
      ["audio/mp4", "mp4a"],
      ["audio/mpeg", ["mpga", "mp3", "m2a", "mp2", "mpa", "mpg"]],
      ["audio/mpeg3", "mp3"],
      ["audio/nspaudio", ["la", "lma"]],
      ["audio/ogg", "oga"],
      ["audio/s3m", "s3m"],
      ["audio/tsp-audio", "tsi"],
      ["audio/tsplayer", "tsp"],
      ["audio/vnd.dece.audio", "uva"],
      ["audio/vnd.digital-winds", "eol"],
      ["audio/vnd.dra", "dra"],
      ["audio/vnd.dts", "dts"],
      ["audio/vnd.dts.hd", "dtshd"],
      ["audio/vnd.lucent.voice", "lvp"],
      ["audio/vnd.ms-playready.media.pya", "pya"],
      ["audio/vnd.nuera.ecelp4800", "ecelp4800"],
      ["audio/vnd.nuera.ecelp7470", "ecelp7470"],
      ["audio/vnd.nuera.ecelp9600", "ecelp9600"],
      ["audio/vnd.qcelp", "qcp"],
      ["audio/vnd.rip", "rip"],
      ["audio/voc", "voc"],
      ["audio/voxware", "vox"],
      ["audio/wav", "wav"],
      ["audio/webm", "weba"],
      ["audio/x-aac", "aac"],
      ["audio/x-adpcm", "snd"],
      ["audio/x-aiff", ["aiff", "aif", "aifc"]],
      ["audio/x-au", "au"],
      ["audio/x-gsm", ["gsd", "gsm"]],
      ["audio/x-jam", "jam"],
      ["audio/x-liveaudio", "lam"],
      ["audio/x-mid", ["mid", "midi"]],
      ["audio/x-midi", ["midi", "mid"]],
      ["audio/x-mod", "mod"],
      ["audio/x-mpeg", "mp2"],
      ["audio/x-mpeg-3", "mp3"],
      ["audio/x-mpegurl", "m3u"],
      ["audio/x-mpequrl", "m3u"],
      ["audio/x-ms-wax", "wax"],
      ["audio/x-ms-wma", "wma"],
      ["audio/x-nspaudio", ["la", "lma"]],
      ["audio/x-pn-realaudio", ["ra", "ram", "rm", "rmm", "rmp"]],
      ["audio/x-pn-realaudio-plugin", ["ra", "rmp", "rpm"]],
      ["audio/x-psid", "sid"],
      ["audio/x-realaudio", "ra"],
      ["audio/x-twinvq", "vqf"],
      ["audio/x-twinvq-plugin", ["vqe", "vql"]],
      ["audio/x-vnd.audioexplosion.mjuicemediafile", "mjf"],
      ["audio/x-voc", "voc"],
      ["audio/x-wav", "wav"],
      ["audio/xm", "xm"],
      ["chemical/x-cdx", "cdx"],
      ["chemical/x-cif", "cif"],
      ["chemical/x-cmdf", "cmdf"],
      ["chemical/x-cml", "cml"],
      ["chemical/x-csml", "csml"],
      ["chemical/x-pdb", ["pdb", "xyz"]],
      ["chemical/x-xyz", "xyz"],
      ["drawing/x-dwf", "dwf"],
      ["i-world/i-vrml", "ivr"],
      ["image/bmp", ["bmp", "bm"]],
      ["image/cgm", "cgm"],
      ["image/cis-cod", "cod"],
      ["image/cmu-raster", ["ras", "rast"]],
      ["image/fif", "fif"],
      ["image/florian", ["flo", "turbot"]],
      ["image/g3fax", "g3"],
      ["image/gif", "gif"],
      ["image/ief", ["ief", "iefs"]],
      ["image/jpeg", ["jpeg", "jpe", "jpg", "jfif", "jfif-tbnl"]],
      ["image/jutvision", "jut"],
      ["image/ktx", "ktx"],
      ["image/naplps", ["nap", "naplps"]],
      ["image/pict", ["pic", "pict"]],
      ["image/pipeg", "jfif"],
      ["image/pjpeg", ["jfif", "jpe", "jpeg", "jpg"]],
      ["image/png", ["png", "x-png"]],
      ["image/prs.btif", "btif"],
      ["image/svg+xml", "svg"],
      ["image/tiff", ["tif", "tiff"]],
      ["image/vasa", "mcf"],
      ["image/vnd.adobe.photoshop", "psd"],
      ["image/vnd.dece.graphic", "uvi"],
      ["image/vnd.djvu", "djvu"],
      ["image/vnd.dvb.subtitle", "sub"],
      ["image/vnd.dwg", ["dwg", "dxf", "svf"]],
      ["image/vnd.dxf", "dxf"],
      ["image/vnd.fastbidsheet", "fbs"],
      ["image/vnd.fpx", "fpx"],
      ["image/vnd.fst", "fst"],
      ["image/vnd.fujixerox.edmics-mmr", "mmr"],
      ["image/vnd.fujixerox.edmics-rlc", "rlc"],
      ["image/vnd.ms-modi", "mdi"],
      ["image/vnd.net-fpx", ["fpx", "npx"]],
      ["image/vnd.rn-realflash", "rf"],
      ["image/vnd.rn-realpix", "rp"],
      ["image/vnd.wap.wbmp", "wbmp"],
      ["image/vnd.xiff", "xif"],
      ["image/webp", "webp"],
      ["image/x-cmu-raster", "ras"],
      ["image/x-cmx", "cmx"],
      ["image/x-dwg", ["dwg", "dxf", "svf"]],
      ["image/x-freehand", "fh"],
      ["image/x-icon", "ico"],
      ["image/x-jg", "art"],
      ["image/x-jps", "jps"],
      ["image/x-niff", ["niff", "nif"]],
      ["image/x-pcx", "pcx"],
      ["image/x-pict", ["pct", "pic"]],
      ["image/x-portable-anymap", "pnm"],
      ["image/x-portable-bitmap", "pbm"],
      ["image/x-portable-graymap", "pgm"],
      ["image/x-portable-greymap", "pgm"],
      ["image/x-portable-pixmap", "ppm"],
      ["image/x-quicktime", ["qif", "qti", "qtif"]],
      ["image/x-rgb", "rgb"],
      ["image/x-tiff", ["tif", "tiff"]],
      ["image/x-windows-bmp", "bmp"],
      ["image/x-xbitmap", "xbm"],
      ["image/x-xbm", "xbm"],
      ["image/x-xpixmap", ["xpm", "pm"]],
      ["image/x-xwd", "xwd"],
      ["image/x-xwindowdump", "xwd"],
      ["image/xbm", "xbm"],
      ["image/xpm", "xpm"],
      ["message/rfc822", ["eml", "mht", "mhtml", "nws", "mime"]],
      ["model/iges", ["iges", "igs"]],
      ["model/mesh", "msh"],
      ["model/vnd.collada+xml", "dae"],
      ["model/vnd.dwf", "dwf"],
      ["model/vnd.gdl", "gdl"],
      ["model/vnd.gtw", "gtw"],
      ["model/vnd.mts", "mts"],
      ["model/vnd.vtu", "vtu"],
      ["model/vrml", ["vrml", "wrl", "wrz"]],
      ["model/x-pov", "pov"],
      ["multipart/x-gzip", "gzip"],
      ["multipart/x-ustar", "ustar"],
      ["multipart/x-zip", "zip"],
      ["music/crescendo", ["mid", "midi"]],
      ["music/x-karaoke", "kar"],
      ["paleovu/x-pv", "pvu"],
      ["text/asp", "asp"],
      ["text/calendar", "ics"],
      ["text/css", "css"],
      ["text/csv", "csv"],
      ["text/ecmascript", "js"],
      ["text/h323", "323"],
      ["text/html", ["html", "htm", "stm", "acgi", "htmls", "htx", "shtml"]],
      ["text/iuls", "uls"],
      ["text/javascript", "js"],
      ["text/mcf", "mcf"],
      ["text/n3", "n3"],
      ["text/pascal", "pas"],
      [
        "text/plain",
        [
          "txt",
          "bas",
          "c",
          "h",
          "c++",
          "cc",
          "com",
          "conf",
          "cxx",
          "def",
          "f",
          "f90",
          "for",
          "g",
          "hh",
          "idc",
          "jav",
          "java",
          "list",
          "log",
          "lst",
          "m",
          "mar",
          "pl",
          "sdml",
          "text"
        ]
      ],
      ["text/plain-bas", "par"],
      ["text/prs.lines.tag", "dsc"],
      ["text/richtext", ["rtx", "rt", "rtf"]],
      ["text/scriplet", "wsc"],
      ["text/scriptlet", "sct"],
      ["text/sgml", ["sgm", "sgml"]],
      ["text/tab-separated-values", "tsv"],
      ["text/troff", "t"],
      ["text/turtle", "ttl"],
      ["text/uri-list", ["uni", "unis", "uri", "uris"]],
      ["text/vnd.abc", "abc"],
      ["text/vnd.curl", "curl"],
      ["text/vnd.curl.dcurl", "dcurl"],
      ["text/vnd.curl.mcurl", "mcurl"],
      ["text/vnd.curl.scurl", "scurl"],
      ["text/vnd.fly", "fly"],
      ["text/vnd.fmi.flexstor", "flx"],
      ["text/vnd.graphviz", "gv"],
      ["text/vnd.in3d.3dml", "3dml"],
      ["text/vnd.in3d.spot", "spot"],
      ["text/vnd.rn-realtext", "rt"],
      ["text/vnd.sun.j2me.app-descriptor", "jad"],
      ["text/vnd.wap.wml", "wml"],
      ["text/vnd.wap.wmlscript", "wmls"],
      ["text/webviewhtml", "htt"],
      ["text/x-asm", ["asm", "s"]],
      ["text/x-audiosoft-intra", "aip"],
      ["text/x-c", ["c", "cc", "cpp"]],
      ["text/x-component", "htc"],
      ["text/x-fortran", ["for", "f", "f77", "f90"]],
      ["text/x-h", ["h", "hh"]],
      ["text/x-java-source", ["java", "jav"]],
      ["text/x-java-source,java", "java"],
      ["text/x-la-asf", "lsx"],
      ["text/x-m", "m"],
      ["text/x-pascal", "p"],
      ["text/x-script", "hlb"],
      ["text/x-script.csh", "csh"],
      ["text/x-script.elisp", "el"],
      ["text/x-script.guile", "scm"],
      ["text/x-script.ksh", "ksh"],
      ["text/x-script.lisp", "lsp"],
      ["text/x-script.perl", "pl"],
      ["text/x-script.perl-module", "pm"],
      ["text/x-script.phyton", "py"],
      ["text/x-script.rexx", "rexx"],
      ["text/x-script.scheme", "scm"],
      ["text/x-script.sh", "sh"],
      ["text/x-script.tcl", "tcl"],
      ["text/x-script.tcsh", "tcsh"],
      ["text/x-script.zsh", "zsh"],
      ["text/x-server-parsed-html", ["shtml", "ssi"]],
      ["text/x-setext", "etx"],
      ["text/x-sgml", ["sgm", "sgml"]],
      ["text/x-speech", ["spc", "talk"]],
      ["text/x-uil", "uil"],
      ["text/x-uuencode", ["uu", "uue"]],
      ["text/x-vcalendar", "vcs"],
      ["text/x-vcard", "vcf"],
      ["text/xml", "xml"],
      ["video/3gpp", "3gp"],
      ["video/3gpp2", "3g2"],
      ["video/animaflex", "afl"],
      ["video/avi", "avi"],
      ["video/avs-video", "avs"],
      ["video/dl", "dl"],
      ["video/fli", "fli"],
      ["video/gl", "gl"],
      ["video/h261", "h261"],
      ["video/h263", "h263"],
      ["video/h264", "h264"],
      ["video/jpeg", "jpgv"],
      ["video/jpm", "jpm"],
      ["video/mj2", "mj2"],
      ["video/mp4", "mp4"],
      ["video/mpeg", ["mpeg", "mp2", "mpa", "mpe", "mpg", "mpv2", "m1v", "m2v", "mp3"]],
      ["video/msvideo", "avi"],
      ["video/ogg", "ogv"],
      ["video/quicktime", ["mov", "qt", "moov"]],
      ["video/vdo", "vdo"],
      ["video/vivo", ["viv", "vivo"]],
      ["video/vnd.dece.hd", "uvh"],
      ["video/vnd.dece.mobile", "uvm"],
      ["video/vnd.dece.pd", "uvp"],
      ["video/vnd.dece.sd", "uvs"],
      ["video/vnd.dece.video", "uvv"],
      ["video/vnd.fvt", "fvt"],
      ["video/vnd.mpegurl", "mxu"],
      ["video/vnd.ms-playready.media.pyv", "pyv"],
      ["video/vnd.rn-realvideo", "rv"],
      ["video/vnd.uvvu.mp4", "uvu"],
      ["video/vnd.vivo", ["viv", "vivo"]],
      ["video/vosaic", "vos"],
      ["video/webm", "webm"],
      ["video/x-amt-demorun", "xdr"],
      ["video/x-amt-showrun", "xsr"],
      ["video/x-atomic3d-feature", "fmf"],
      ["video/x-dl", "dl"],
      ["video/x-dv", ["dif", "dv"]],
      ["video/x-f4v", "f4v"],
      ["video/x-fli", "fli"],
      ["video/x-flv", "flv"],
      ["video/x-gl", "gl"],
      ["video/x-isvideo", "isu"],
      ["video/x-la-asf", ["lsf", "lsx"]],
      ["video/x-m4v", "m4v"],
      ["video/x-motion-jpeg", "mjpg"],
      ["video/x-mpeg", ["mp3", "mp2"]],
      ["video/x-mpeq2a", "mp2"],
      ["video/x-ms-asf", ["asf", "asr", "asx"]],
      ["video/x-ms-asf-plugin", "asx"],
      ["video/x-ms-wm", "wm"],
      ["video/x-ms-wmv", "wmv"],
      ["video/x-ms-wmx", "wmx"],
      ["video/x-ms-wvx", "wvx"],
      ["video/x-msvideo", "avi"],
      ["video/x-qtc", "qtc"],
      ["video/x-scm", "scm"],
      ["video/x-sgi-movie", ["movie", "mv"]],
      ["windows/metafile", "wmf"],
      ["www/mime", "mime"],
      ["x-conference/x-cooltalk", "ice"],
      ["x-music/x-midi", ["mid", "midi"]],
      ["x-world/x-3dmf", ["3dm", "3dmf", "qd3", "qd3d"]],
      ["x-world/x-svr", "svr"],
      ["x-world/x-vrml", ["flr", "vrml", "wrl", "wrz", "xaf", "xof"]],
      ["x-world/x-vrt", "vrt"],
      ["xgl/drawing", "xgz"],
      ["xgl/movie", "xmz"]
    ]);
    var extensions = /* @__PURE__ */ new Map([
      ["123", "application/vnd.lotus-1-2-3"],
      ["323", "text/h323"],
      ["*", "application/octet-stream"],
      ["3dm", "x-world/x-3dmf"],
      ["3dmf", "x-world/x-3dmf"],
      ["3dml", "text/vnd.in3d.3dml"],
      ["3g2", "video/3gpp2"],
      ["3gp", "video/3gpp"],
      ["7z", "application/x-7z-compressed"],
      ["a", "application/octet-stream"],
      ["aab", "application/x-authorware-bin"],
      ["aac", "audio/x-aac"],
      ["aam", "application/x-authorware-map"],
      ["aas", "application/x-authorware-seg"],
      ["abc", "text/vnd.abc"],
      ["abw", "application/x-abiword"],
      ["ac", "application/pkix-attr-cert"],
      ["acc", "application/vnd.americandynamics.acc"],
      ["ace", "application/x-ace-compressed"],
      ["acgi", "text/html"],
      ["acu", "application/vnd.acucobol"],
      ["acx", "application/internet-property-stream"],
      ["adp", "audio/adpcm"],
      ["aep", "application/vnd.audiograph"],
      ["afl", "video/animaflex"],
      ["afp", "application/vnd.ibm.modcap"],
      ["ahead", "application/vnd.ahead.space"],
      ["ai", "application/postscript"],
      ["aif", ["audio/aiff", "audio/x-aiff"]],
      ["aifc", ["audio/aiff", "audio/x-aiff"]],
      ["aiff", ["audio/aiff", "audio/x-aiff"]],
      ["aim", "application/x-aim"],
      ["aip", "text/x-audiosoft-intra"],
      ["air", "application/vnd.adobe.air-application-installer-package+zip"],
      ["ait", "application/vnd.dvb.ait"],
      ["ami", "application/vnd.amiga.ami"],
      ["ani", "application/x-navi-animation"],
      ["aos", "application/x-nokia-9000-communicator-add-on-software"],
      ["apk", "application/vnd.android.package-archive"],
      ["application", "application/x-ms-application"],
      ["apr", "application/vnd.lotus-approach"],
      ["aps", "application/mime"],
      ["arc", "application/octet-stream"],
      ["arj", ["application/arj", "application/octet-stream"]],
      ["art", "image/x-jg"],
      ["asf", "video/x-ms-asf"],
      ["asm", "text/x-asm"],
      ["aso", "application/vnd.accpac.simply.aso"],
      ["asp", "text/asp"],
      ["asr", "video/x-ms-asf"],
      ["asx", ["video/x-ms-asf", "application/x-mplayer2", "video/x-ms-asf-plugin"]],
      ["atc", "application/vnd.acucorp"],
      ["atomcat", "application/atomcat+xml"],
      ["atomsvc", "application/atomsvc+xml"],
      ["atx", "application/vnd.antix.game-component"],
      ["au", ["audio/basic", "audio/x-au"]],
      ["avi", ["video/avi", "video/msvideo", "application/x-troff-msvideo", "video/x-msvideo"]],
      ["avs", "video/avs-video"],
      ["aw", "application/applixware"],
      ["axs", "application/olescript"],
      ["azf", "application/vnd.airzip.filesecure.azf"],
      ["azs", "application/vnd.airzip.filesecure.azs"],
      ["azw", "application/vnd.amazon.ebook"],
      ["bas", "text/plain"],
      ["bcpio", "application/x-bcpio"],
      ["bdf", "application/x-font-bdf"],
      ["bdm", "application/vnd.syncml.dm+wbxml"],
      ["bed", "application/vnd.realvnc.bed"],
      ["bh2", "application/vnd.fujitsu.oasysprs"],
      ["bin", ["application/octet-stream", "application/mac-binary", "application/macbinary", "application/x-macbinary", "application/x-binary"]],
      ["bm", "image/bmp"],
      ["bmi", "application/vnd.bmi"],
      ["bmp", ["image/bmp", "image/x-windows-bmp"]],
      ["boo", "application/book"],
      ["book", "application/book"],
      ["box", "application/vnd.previewsystems.box"],
      ["boz", "application/x-bzip2"],
      ["bsh", "application/x-bsh"],
      ["btif", "image/prs.btif"],
      ["bz", "application/x-bzip"],
      ["bz2", "application/x-bzip2"],
      ["c", ["text/plain", "text/x-c"]],
      ["c++", "text/plain"],
      ["c11amc", "application/vnd.cluetrust.cartomobile-config"],
      ["c11amz", "application/vnd.cluetrust.cartomobile-config-pkg"],
      ["c4g", "application/vnd.clonk.c4group"],
      ["cab", "application/vnd.ms-cab-compressed"],
      ["car", "application/vnd.curl.car"],
      ["cat", ["application/vnd.ms-pkiseccat", "application/vnd.ms-pki.seccat"]],
      ["cc", ["text/plain", "text/x-c"]],
      ["ccad", "application/clariscad"],
      ["cco", "application/x-cocoa"],
      ["ccxml", "application/ccxml+xml,"],
      ["cdbcmsg", "application/vnd.contact.cmsg"],
      ["cdf", ["application/cdf", "application/x-cdf", "application/x-netcdf"]],
      ["cdkey", "application/vnd.mediastation.cdkey"],
      ["cdmia", "application/cdmi-capability"],
      ["cdmic", "application/cdmi-container"],
      ["cdmid", "application/cdmi-domain"],
      ["cdmio", "application/cdmi-object"],
      ["cdmiq", "application/cdmi-queue"],
      ["cdx", "chemical/x-cdx"],
      ["cdxml", "application/vnd.chemdraw+xml"],
      ["cdy", "application/vnd.cinderella"],
      ["cer", ["application/pkix-cert", "application/x-x509-ca-cert"]],
      ["cgm", "image/cgm"],
      ["cha", "application/x-chat"],
      ["chat", "application/x-chat"],
      ["chm", "application/vnd.ms-htmlhelp"],
      ["chrt", "application/vnd.kde.kchart"],
      ["cif", "chemical/x-cif"],
      ["cii", "application/vnd.anser-web-certificate-issue-initiation"],
      ["cil", "application/vnd.ms-artgalry"],
      ["cla", "application/vnd.claymore"],
      ["class", ["application/octet-stream", "application/java", "application/java-byte-code", "application/java-vm", "application/x-java-class"]],
      ["clkk", "application/vnd.crick.clicker.keyboard"],
      ["clkp", "application/vnd.crick.clicker.palette"],
      ["clkt", "application/vnd.crick.clicker.template"],
      ["clkw", "application/vnd.crick.clicker.wordbank"],
      ["clkx", "application/vnd.crick.clicker"],
      ["clp", "application/x-msclip"],
      ["cmc", "application/vnd.cosmocaller"],
      ["cmdf", "chemical/x-cmdf"],
      ["cml", "chemical/x-cml"],
      ["cmp", "application/vnd.yellowriver-custom-menu"],
      ["cmx", "image/x-cmx"],
      ["cod", ["image/cis-cod", "application/vnd.rim.cod"]],
      ["com", ["application/octet-stream", "text/plain"]],
      ["conf", "text/plain"],
      ["cpio", "application/x-cpio"],
      ["cpp", "text/x-c"],
      ["cpt", ["application/mac-compactpro", "application/x-compactpro", "application/x-cpt"]],
      ["crd", "application/x-mscardfile"],
      ["crl", ["application/pkix-crl", "application/pkcs-crl"]],
      ["crt", ["application/pkix-cert", "application/x-x509-user-cert", "application/x-x509-ca-cert"]],
      ["cryptonote", "application/vnd.rig.cryptonote"],
      ["csh", ["text/x-script.csh", "application/x-csh"]],
      ["csml", "chemical/x-csml"],
      ["csp", "application/vnd.commonspace"],
      ["css", ["text/css", "application/x-pointplus"]],
      ["csv", "text/csv"],
      ["cu", "application/cu-seeme"],
      ["curl", "text/vnd.curl"],
      ["cww", "application/prs.cww"],
      ["cxx", "text/plain"],
      ["dae", "model/vnd.collada+xml"],
      ["daf", "application/vnd.mobius.daf"],
      ["davmount", "application/davmount+xml"],
      ["dcr", "application/x-director"],
      ["dcurl", "text/vnd.curl.dcurl"],
      ["dd2", "application/vnd.oma.dd2+xml"],
      ["ddd", "application/vnd.fujixerox.ddd"],
      ["deb", "application/x-debian-package"],
      ["deepv", "application/x-deepv"],
      ["def", "text/plain"],
      ["der", "application/x-x509-ca-cert"],
      ["dfac", "application/vnd.dreamfactory"],
      ["dif", "video/x-dv"],
      ["dir", "application/x-director"],
      ["dis", "application/vnd.mobius.dis"],
      ["djvu", "image/vnd.djvu"],
      ["dl", ["video/dl", "video/x-dl"]],
      ["dll", "application/x-msdownload"],
      ["dms", "application/octet-stream"],
      ["dna", "application/vnd.dna"],
      ["doc", "application/msword"],
      ["docm", "application/vnd.ms-word.document.macroenabled.12"],
      ["docx", "application/vnd.openxmlformats-officedocument.wordprocessingml.document"],
      ["dot", "application/msword"],
      ["dotm", "application/vnd.ms-word.template.macroenabled.12"],
      ["dotx", "application/vnd.openxmlformats-officedocument.wordprocessingml.template"],
      ["dp", ["application/commonground", "application/vnd.osgi.dp"]],
      ["dpg", "application/vnd.dpgraph"],
      ["dra", "audio/vnd.dra"],
      ["drw", "application/drafting"],
      ["dsc", "text/prs.lines.tag"],
      ["dssc", "application/dssc+der"],
      ["dtb", "application/x-dtbook+xml"],
      ["dtd", "application/xml-dtd"],
      ["dts", "audio/vnd.dts"],
      ["dtshd", "audio/vnd.dts.hd"],
      ["dump", "application/octet-stream"],
      ["dv", "video/x-dv"],
      ["dvi", "application/x-dvi"],
      ["dwf", ["model/vnd.dwf", "drawing/x-dwf"]],
      ["dwg", ["application/acad", "image/vnd.dwg", "image/x-dwg"]],
      ["dxf", ["application/dxf", "image/vnd.dwg", "image/vnd.dxf", "image/x-dwg"]],
      ["dxp", "application/vnd.spotfire.dxp"],
      ["dxr", "application/x-director"],
      ["ecelp4800", "audio/vnd.nuera.ecelp4800"],
      ["ecelp7470", "audio/vnd.nuera.ecelp7470"],
      ["ecelp9600", "audio/vnd.nuera.ecelp9600"],
      ["edm", "application/vnd.novadigm.edm"],
      ["edx", "application/vnd.novadigm.edx"],
      ["efif", "application/vnd.picsel"],
      ["ei6", "application/vnd.pg.osasli"],
      ["el", "text/x-script.elisp"],
      ["elc", ["application/x-elc", "application/x-bytecode.elisp"]],
      ["eml", "message/rfc822"],
      ["emma", "application/emma+xml"],
      ["env", "application/x-envoy"],
      ["eol", "audio/vnd.digital-winds"],
      ["eot", "application/vnd.ms-fontobject"],
      ["eps", "application/postscript"],
      ["epub", "application/epub+zip"],
      ["es", ["application/ecmascript", "application/x-esrehber"]],
      ["es3", "application/vnd.eszigno3+xml"],
      ["esf", "application/vnd.epson.esf"],
      ["etx", "text/x-setext"],
      ["evy", ["application/envoy", "application/x-envoy"]],
      ["exe", ["application/octet-stream", "application/x-msdownload"]],
      ["exi", "application/exi"],
      ["ext", "application/vnd.novadigm.ext"],
      ["ez2", "application/vnd.ezpix-album"],
      ["ez3", "application/vnd.ezpix-package"],
      ["f", ["text/plain", "text/x-fortran"]],
      ["f4v", "video/x-f4v"],
      ["f77", "text/x-fortran"],
      ["f90", ["text/plain", "text/x-fortran"]],
      ["fbs", "image/vnd.fastbidsheet"],
      ["fcs", "application/vnd.isac.fcs"],
      ["fdf", "application/vnd.fdf"],
      ["fe_launch", "application/vnd.denovo.fcselayout-link"],
      ["fg5", "application/vnd.fujitsu.oasysgp"],
      ["fh", "image/x-freehand"],
      ["fif", ["application/fractals", "image/fif"]],
      ["fig", "application/x-xfig"],
      ["fli", ["video/fli", "video/x-fli"]],
      ["flo", ["image/florian", "application/vnd.micrografx.flo"]],
      ["flr", "x-world/x-vrml"],
      ["flv", "video/x-flv"],
      ["flw", "application/vnd.kde.kivio"],
      ["flx", "text/vnd.fmi.flexstor"],
      ["fly", "text/vnd.fly"],
      ["fm", "application/vnd.framemaker"],
      ["fmf", "video/x-atomic3d-feature"],
      ["fnc", "application/vnd.frogans.fnc"],
      ["for", ["text/plain", "text/x-fortran"]],
      ["fpx", ["image/vnd.fpx", "image/vnd.net-fpx"]],
      ["frl", "application/freeloader"],
      ["fsc", "application/vnd.fsc.weblaunch"],
      ["fst", "image/vnd.fst"],
      ["ftc", "application/vnd.fluxtime.clip"],
      ["fti", "application/vnd.anser-web-funds-transfer-initiation"],
      ["funk", "audio/make"],
      ["fvt", "video/vnd.fvt"],
      ["fxp", "application/vnd.adobe.fxp"],
      ["fzs", "application/vnd.fuzzysheet"],
      ["g", "text/plain"],
      ["g2w", "application/vnd.geoplan"],
      ["g3", "image/g3fax"],
      ["g3w", "application/vnd.geospace"],
      ["gac", "application/vnd.groove-account"],
      ["gdl", "model/vnd.gdl"],
      ["geo", "application/vnd.dynageo"],
      ["geojson", "application/geo+json"],
      ["gex", "application/vnd.geometry-explorer"],
      ["ggb", "application/vnd.geogebra.file"],
      ["ggt", "application/vnd.geogebra.tool"],
      ["ghf", "application/vnd.groove-help"],
      ["gif", "image/gif"],
      ["gim", "application/vnd.groove-identity-message"],
      ["gl", ["video/gl", "video/x-gl"]],
      ["gmx", "application/vnd.gmx"],
      ["gnumeric", "application/x-gnumeric"],
      ["gph", "application/vnd.flographit"],
      ["gqf", "application/vnd.grafeq"],
      ["gram", "application/srgs"],
      ["grv", "application/vnd.groove-injector"],
      ["grxml", "application/srgs+xml"],
      ["gsd", "audio/x-gsm"],
      ["gsf", "application/x-font-ghostscript"],
      ["gsm", "audio/x-gsm"],
      ["gsp", "application/x-gsp"],
      ["gss", "application/x-gss"],
      ["gtar", "application/x-gtar"],
      ["gtm", "application/vnd.groove-tool-message"],
      ["gtw", "model/vnd.gtw"],
      ["gv", "text/vnd.graphviz"],
      ["gxt", "application/vnd.geonext"],
      ["gz", ["application/x-gzip", "application/x-compressed"]],
      ["gzip", ["multipart/x-gzip", "application/x-gzip"]],
      ["h", ["text/plain", "text/x-h"]],
      ["h261", "video/h261"],
      ["h263", "video/h263"],
      ["h264", "video/h264"],
      ["hal", "application/vnd.hal+xml"],
      ["hbci", "application/vnd.hbci"],
      ["hdf", "application/x-hdf"],
      ["help", "application/x-helpfile"],
      ["hgl", "application/vnd.hp-hpgl"],
      ["hh", ["text/plain", "text/x-h"]],
      ["hlb", "text/x-script"],
      ["hlp", ["application/winhlp", "application/hlp", "application/x-helpfile", "application/x-winhelp"]],
      ["hpg", "application/vnd.hp-hpgl"],
      ["hpgl", "application/vnd.hp-hpgl"],
      ["hpid", "application/vnd.hp-hpid"],
      ["hps", "application/vnd.hp-hps"],
      [
        "hqx",
        [
          "application/mac-binhex40",
          "application/binhex",
          "application/binhex4",
          "application/mac-binhex",
          "application/x-binhex40",
          "application/x-mac-binhex40"
        ]
      ],
      ["hta", "application/hta"],
      ["htc", "text/x-component"],
      ["htke", "application/vnd.kenameaapp"],
      ["htm", "text/html"],
      ["html", "text/html"],
      ["htmls", "text/html"],
      ["htt", "text/webviewhtml"],
      ["htx", "text/html"],
      ["hvd", "application/vnd.yamaha.hv-dic"],
      ["hvp", "application/vnd.yamaha.hv-voice"],
      ["hvs", "application/vnd.yamaha.hv-script"],
      ["i2g", "application/vnd.intergeo"],
      ["icc", "application/vnd.iccprofile"],
      ["ice", "x-conference/x-cooltalk"],
      ["ico", "image/x-icon"],
      ["ics", "text/calendar"],
      ["idc", "text/plain"],
      ["ief", "image/ief"],
      ["iefs", "image/ief"],
      ["ifm", "application/vnd.shana.informed.formdata"],
      ["iges", ["application/iges", "model/iges"]],
      ["igl", "application/vnd.igloader"],
      ["igm", "application/vnd.insors.igm"],
      ["igs", ["application/iges", "model/iges"]],
      ["igx", "application/vnd.micrografx.igx"],
      ["iif", "application/vnd.shana.informed.interchange"],
      ["iii", "application/x-iphone"],
      ["ima", "application/x-ima"],
      ["imap", "application/x-httpd-imap"],
      ["imp", "application/vnd.accpac.simply.imp"],
      ["ims", "application/vnd.ms-ims"],
      ["inf", "application/inf"],
      ["ins", ["application/x-internet-signup", "application/x-internett-signup"]],
      ["ip", "application/x-ip2"],
      ["ipfix", "application/ipfix"],
      ["ipk", "application/vnd.shana.informed.package"],
      ["irm", "application/vnd.ibm.rights-management"],
      ["irp", "application/vnd.irepository.package+xml"],
      ["isp", "application/x-internet-signup"],
      ["isu", "video/x-isvideo"],
      ["it", "audio/it"],
      ["itp", "application/vnd.shana.informed.formtemplate"],
      ["iv", "application/x-inventor"],
      ["ivp", "application/vnd.immervision-ivp"],
      ["ivr", "i-world/i-vrml"],
      ["ivu", "application/vnd.immervision-ivu"],
      ["ivy", "application/x-livescreen"],
      ["jad", "text/vnd.sun.j2me.app-descriptor"],
      ["jam", ["application/vnd.jam", "audio/x-jam"]],
      ["jar", "application/java-archive"],
      ["jav", ["text/plain", "text/x-java-source"]],
      ["java", ["text/plain", "text/x-java-source,java", "text/x-java-source"]],
      ["jcm", "application/x-java-commerce"],
      ["jfif", ["image/pipeg", "image/jpeg", "image/pjpeg"]],
      ["jfif-tbnl", "image/jpeg"],
      ["jisp", "application/vnd.jisp"],
      ["jlt", "application/vnd.hp-jlyt"],
      ["jnlp", "application/x-java-jnlp-file"],
      ["joda", "application/vnd.joost.joda-archive"],
      ["jpe", ["image/jpeg", "image/pjpeg"]],
      ["jpeg", ["image/jpeg", "image/pjpeg"]],
      ["jpg", ["image/jpeg", "image/pjpeg"]],
      ["jpgv", "video/jpeg"],
      ["jpm", "video/jpm"],
      ["jps", "image/x-jps"],
      ["js", ["application/javascript", "application/ecmascript", "text/javascript", "text/ecmascript", "application/x-javascript"]],
      ["json", "application/json"],
      ["jut", "image/jutvision"],
      ["kar", ["audio/midi", "music/x-karaoke"]],
      ["karbon", "application/vnd.kde.karbon"],
      ["kfo", "application/vnd.kde.kformula"],
      ["kia", "application/vnd.kidspiration"],
      ["kml", "application/vnd.google-earth.kml+xml"],
      ["kmz", "application/vnd.google-earth.kmz"],
      ["kne", "application/vnd.kinar"],
      ["kon", "application/vnd.kde.kontour"],
      ["kpr", "application/vnd.kde.kpresenter"],
      ["ksh", ["application/x-ksh", "text/x-script.ksh"]],
      ["ksp", "application/vnd.kde.kspread"],
      ["ktx", "image/ktx"],
      ["ktz", "application/vnd.kahootz"],
      ["kwd", "application/vnd.kde.kword"],
      ["la", ["audio/nspaudio", "audio/x-nspaudio"]],
      ["lam", "audio/x-liveaudio"],
      ["lasxml", "application/vnd.las.las+xml"],
      ["latex", "application/x-latex"],
      ["lbd", "application/vnd.llamagraphics.life-balance.desktop"],
      ["lbe", "application/vnd.llamagraphics.life-balance.exchange+xml"],
      ["les", "application/vnd.hhe.lesson-player"],
      ["lha", ["application/octet-stream", "application/lha", "application/x-lha"]],
      ["lhx", "application/octet-stream"],
      ["link66", "application/vnd.route66.link66+xml"],
      ["list", "text/plain"],
      ["lma", ["audio/nspaudio", "audio/x-nspaudio"]],
      ["log", "text/plain"],
      ["lrm", "application/vnd.ms-lrm"],
      ["lsf", "video/x-la-asf"],
      ["lsp", ["application/x-lisp", "text/x-script.lisp"]],
      ["lst", "text/plain"],
      ["lsx", ["video/x-la-asf", "text/x-la-asf"]],
      ["ltf", "application/vnd.frogans.ltf"],
      ["ltx", "application/x-latex"],
      ["lvp", "audio/vnd.lucent.voice"],
      ["lwp", "application/vnd.lotus-wordpro"],
      ["lzh", ["application/octet-stream", "application/x-lzh"]],
      ["lzx", ["application/lzx", "application/octet-stream", "application/x-lzx"]],
      ["m", ["text/plain", "text/x-m"]],
      ["m13", "application/x-msmediaview"],
      ["m14", "application/x-msmediaview"],
      ["m1v", "video/mpeg"],
      ["m21", "application/mp21"],
      ["m2a", "audio/mpeg"],
      ["m2v", "video/mpeg"],
      ["m3u", ["audio/x-mpegurl", "audio/x-mpequrl"]],
      ["m3u8", "application/vnd.apple.mpegurl"],
      ["m4v", "video/x-m4v"],
      ["ma", "application/mathematica"],
      ["mads", "application/mads+xml"],
      ["mag", "application/vnd.ecowin.chart"],
      ["man", "application/x-troff-man"],
      ["map", "application/x-navimap"],
      ["mar", "text/plain"],
      ["mathml", "application/mathml+xml"],
      ["mbd", "application/mbedlet"],
      ["mbk", "application/vnd.mobius.mbk"],
      ["mbox", "application/mbox"],
      ["mc$", "application/x-magic-cap-package-1.0"],
      ["mc1", "application/vnd.medcalcdata"],
      ["mcd", ["application/mcad", "application/vnd.mcd", "application/x-mathcad"]],
      ["mcf", ["image/vasa", "text/mcf"]],
      ["mcp", "application/netmc"],
      ["mcurl", "text/vnd.curl.mcurl"],
      ["mdb", "application/x-msaccess"],
      ["mdi", "image/vnd.ms-modi"],
      ["me", "application/x-troff-me"],
      ["meta4", "application/metalink4+xml"],
      ["mets", "application/mets+xml"],
      ["mfm", "application/vnd.mfmp"],
      ["mgp", "application/vnd.osgeo.mapguide.package"],
      ["mgz", "application/vnd.proteus.magazine"],
      ["mht", "message/rfc822"],
      ["mhtml", "message/rfc822"],
      ["mid", ["audio/mid", "audio/midi", "music/crescendo", "x-music/x-midi", "audio/x-midi", "application/x-midi", "audio/x-mid"]],
      ["midi", ["audio/midi", "music/crescendo", "x-music/x-midi", "audio/x-midi", "application/x-midi", "audio/x-mid"]],
      ["mif", ["application/vnd.mif", "application/x-mif", "application/x-frame"]],
      ["mime", ["message/rfc822", "www/mime"]],
      ["mj2", "video/mj2"],
      ["mjf", "audio/x-vnd.audioexplosion.mjuicemediafile"],
      ["mjpg", "video/x-motion-jpeg"],
      ["mlp", "application/vnd.dolby.mlp"],
      ["mm", ["application/base64", "application/x-meme"]],
      ["mmd", "application/vnd.chipnuts.karaoke-mmd"],
      ["mme", "application/base64"],
      ["mmf", "application/vnd.smaf"],
      ["mmr", "image/vnd.fujixerox.edmics-mmr"],
      ["mny", "application/x-msmoney"],
      ["mod", ["audio/mod", "audio/x-mod"]],
      ["mods", "application/mods+xml"],
      ["moov", "video/quicktime"],
      ["mov", "video/quicktime"],
      ["movie", "video/x-sgi-movie"],
      ["mp2", ["video/mpeg", "audio/mpeg", "video/x-mpeg", "audio/x-mpeg", "video/x-mpeq2a"]],
      ["mp3", ["audio/mpeg", "audio/mpeg3", "video/mpeg", "audio/x-mpeg-3", "video/x-mpeg"]],
      ["mp4", ["video/mp4", "application/mp4"]],
      ["mp4a", "audio/mp4"],
      ["mpa", ["video/mpeg", "audio/mpeg"]],
      ["mpc", ["application/vnd.mophun.certificate", "application/x-project"]],
      ["mpe", "video/mpeg"],
      ["mpeg", "video/mpeg"],
      ["mpg", ["video/mpeg", "audio/mpeg"]],
      ["mpga", "audio/mpeg"],
      ["mpkg", "application/vnd.apple.installer+xml"],
      ["mpm", "application/vnd.blueice.multipass"],
      ["mpn", "application/vnd.mophun.application"],
      ["mpp", "application/vnd.ms-project"],
      ["mpt", "application/x-project"],
      ["mpv", "application/x-project"],
      ["mpv2", "video/mpeg"],
      ["mpx", "application/x-project"],
      ["mpy", "application/vnd.ibm.minipay"],
      ["mqy", "application/vnd.mobius.mqy"],
      ["mrc", "application/marc"],
      ["mrcx", "application/marcxml+xml"],
      ["ms", "application/x-troff-ms"],
      ["mscml", "application/mediaservercontrol+xml"],
      ["mseq", "application/vnd.mseq"],
      ["msf", "application/vnd.epson.msf"],
      ["msg", "application/vnd.ms-outlook"],
      ["msh", "model/mesh"],
      ["msl", "application/vnd.mobius.msl"],
      ["msty", "application/vnd.muvee.style"],
      ["mts", "model/vnd.mts"],
      ["mus", "application/vnd.musician"],
      ["musicxml", "application/vnd.recordare.musicxml+xml"],
      ["mv", "video/x-sgi-movie"],
      ["mvb", "application/x-msmediaview"],
      ["mwf", "application/vnd.mfer"],
      ["mxf", "application/mxf"],
      ["mxl", "application/vnd.recordare.musicxml"],
      ["mxml", "application/xv+xml"],
      ["mxs", "application/vnd.triscape.mxs"],
      ["mxu", "video/vnd.mpegurl"],
      ["my", "audio/make"],
      ["mzz", "application/x-vnd.audioexplosion.mzz"],
      ["n-gage", "application/vnd.nokia.n-gage.symbian.install"],
      ["n3", "text/n3"],
      ["nap", "image/naplps"],
      ["naplps", "image/naplps"],
      ["nbp", "application/vnd.wolfram.player"],
      ["nc", "application/x-netcdf"],
      ["ncm", "application/vnd.nokia.configuration-message"],
      ["ncx", "application/x-dtbncx+xml"],
      ["ngdat", "application/vnd.nokia.n-gage.data"],
      ["nif", "image/x-niff"],
      ["niff", "image/x-niff"],
      ["nix", "application/x-mix-transfer"],
      ["nlu", "application/vnd.neurolanguage.nlu"],
      ["nml", "application/vnd.enliven"],
      ["nnd", "application/vnd.noblenet-directory"],
      ["nns", "application/vnd.noblenet-sealer"],
      ["nnw", "application/vnd.noblenet-web"],
      ["npx", "image/vnd.net-fpx"],
      ["nsc", "application/x-conference"],
      ["nsf", "application/vnd.lotus-notes"],
      ["nvd", "application/x-navidoc"],
      ["nws", "message/rfc822"],
      ["o", "application/octet-stream"],
      ["oa2", "application/vnd.fujitsu.oasys2"],
      ["oa3", "application/vnd.fujitsu.oasys3"],
      ["oas", "application/vnd.fujitsu.oasys"],
      ["obd", "application/x-msbinder"],
      ["oda", "application/oda"],
      ["odb", "application/vnd.oasis.opendocument.database"],
      ["odc", "application/vnd.oasis.opendocument.chart"],
      ["odf", "application/vnd.oasis.opendocument.formula"],
      ["odft", "application/vnd.oasis.opendocument.formula-template"],
      ["odg", "application/vnd.oasis.opendocument.graphics"],
      ["odi", "application/vnd.oasis.opendocument.image"],
      ["odm", "application/vnd.oasis.opendocument.text-master"],
      ["odp", "application/vnd.oasis.opendocument.presentation"],
      ["ods", "application/vnd.oasis.opendocument.spreadsheet"],
      ["odt", "application/vnd.oasis.opendocument.text"],
      ["oga", "audio/ogg"],
      ["ogv", "video/ogg"],
      ["ogx", "application/ogg"],
      ["omc", "application/x-omc"],
      ["omcd", "application/x-omcdatamaker"],
      ["omcr", "application/x-omcregerator"],
      ["onetoc", "application/onenote"],
      ["opf", "application/oebps-package+xml"],
      ["org", "application/vnd.lotus-organizer"],
      ["osf", "application/vnd.yamaha.openscoreformat"],
      ["osfpvg", "application/vnd.yamaha.openscoreformat.osfpvg+xml"],
      ["otc", "application/vnd.oasis.opendocument.chart-template"],
      ["otf", "application/x-font-otf"],
      ["otg", "application/vnd.oasis.opendocument.graphics-template"],
      ["oth", "application/vnd.oasis.opendocument.text-web"],
      ["oti", "application/vnd.oasis.opendocument.image-template"],
      ["otp", "application/vnd.oasis.opendocument.presentation-template"],
      ["ots", "application/vnd.oasis.opendocument.spreadsheet-template"],
      ["ott", "application/vnd.oasis.opendocument.text-template"],
      ["oxt", "application/vnd.openofficeorg.extension"],
      ["p", "text/x-pascal"],
      ["p10", ["application/pkcs10", "application/x-pkcs10"]],
      ["p12", ["application/pkcs-12", "application/x-pkcs12"]],
      ["p7a", "application/x-pkcs7-signature"],
      ["p7b", "application/x-pkcs7-certificates"],
      ["p7c", ["application/pkcs7-mime", "application/x-pkcs7-mime"]],
      ["p7m", ["application/pkcs7-mime", "application/x-pkcs7-mime"]],
      ["p7r", "application/x-pkcs7-certreqresp"],
      ["p7s", ["application/pkcs7-signature", "application/x-pkcs7-signature"]],
      ["p8", "application/pkcs8"],
      ["par", "text/plain-bas"],
      ["part", "application/pro_eng"],
      ["pas", "text/pascal"],
      ["paw", "application/vnd.pawaafile"],
      ["pbd", "application/vnd.powerbuilder6"],
      ["pbm", "image/x-portable-bitmap"],
      ["pcf", "application/x-font-pcf"],
      ["pcl", ["application/vnd.hp-pcl", "application/x-pcl"]],
      ["pclxl", "application/vnd.hp-pclxl"],
      ["pct", "image/x-pict"],
      ["pcurl", "application/vnd.curl.pcurl"],
      ["pcx", "image/x-pcx"],
      ["pdb", ["application/vnd.palm", "chemical/x-pdb"]],
      ["pdf", "application/pdf"],
      ["pfa", "application/x-font-type1"],
      ["pfr", "application/font-tdpfr"],
      ["pfunk", ["audio/make", "audio/make.my.funk"]],
      ["pfx", "application/x-pkcs12"],
      ["pgm", ["image/x-portable-graymap", "image/x-portable-greymap"]],
      ["pgn", "application/x-chess-pgn"],
      ["pgp", "application/pgp-signature"],
      ["pic", ["image/pict", "image/x-pict"]],
      ["pict", "image/pict"],
      ["pkg", "application/x-newton-compatible-pkg"],
      ["pki", "application/pkixcmp"],
      ["pkipath", "application/pkix-pkipath"],
      ["pko", ["application/ynd.ms-pkipko", "application/vnd.ms-pki.pko"]],
      ["pl", ["text/plain", "text/x-script.perl"]],
      ["plb", "application/vnd.3gpp.pic-bw-large"],
      ["plc", "application/vnd.mobius.plc"],
      ["plf", "application/vnd.pocketlearn"],
      ["pls", "application/pls+xml"],
      ["plx", "application/x-pixclscript"],
      ["pm", ["text/x-script.perl-module", "image/x-xpixmap"]],
      ["pm4", "application/x-pagemaker"],
      ["pm5", "application/x-pagemaker"],
      ["pma", "application/x-perfmon"],
      ["pmc", "application/x-perfmon"],
      ["pml", ["application/vnd.ctc-posml", "application/x-perfmon"]],
      ["pmr", "application/x-perfmon"],
      ["pmw", "application/x-perfmon"],
      ["png", "image/png"],
      ["pnm", ["application/x-portable-anymap", "image/x-portable-anymap"]],
      ["portpkg", "application/vnd.macports.portpkg"],
      ["pot", ["application/vnd.ms-powerpoint", "application/mspowerpoint"]],
      ["potm", "application/vnd.ms-powerpoint.template.macroenabled.12"],
      ["potx", "application/vnd.openxmlformats-officedocument.presentationml.template"],
      ["pov", "model/x-pov"],
      ["ppa", "application/vnd.ms-powerpoint"],
      ["ppam", "application/vnd.ms-powerpoint.addin.macroenabled.12"],
      ["ppd", "application/vnd.cups-ppd"],
      ["ppm", "image/x-portable-pixmap"],
      ["pps", ["application/vnd.ms-powerpoint", "application/mspowerpoint"]],
      ["ppsm", "application/vnd.ms-powerpoint.slideshow.macroenabled.12"],
      ["ppsx", "application/vnd.openxmlformats-officedocument.presentationml.slideshow"],
      ["ppt", ["application/vnd.ms-powerpoint", "application/mspowerpoint", "application/powerpoint", "application/x-mspowerpoint"]],
      ["pptm", "application/vnd.ms-powerpoint.presentation.macroenabled.12"],
      ["pptx", "application/vnd.openxmlformats-officedocument.presentationml.presentation"],
      ["ppz", "application/mspowerpoint"],
      ["prc", "application/x-mobipocket-ebook"],
      ["pre", ["application/vnd.lotus-freelance", "application/x-freelance"]],
      ["prf", "application/pics-rules"],
      ["prt", "application/pro_eng"],
      ["ps", "application/postscript"],
      ["psb", "application/vnd.3gpp.pic-bw-small"],
      ["psd", ["application/octet-stream", "image/vnd.adobe.photoshop"]],
      ["psf", "application/x-font-linux-psf"],
      ["pskcxml", "application/pskc+xml"],
      ["ptid", "application/vnd.pvi.ptid1"],
      ["pub", "application/x-mspublisher"],
      ["pvb", "application/vnd.3gpp.pic-bw-var"],
      ["pvu", "paleovu/x-pv"],
      ["pwn", "application/vnd.3m.post-it-notes"],
      ["pwz", "application/vnd.ms-powerpoint"],
      ["py", "text/x-script.phyton"],
      ["pya", "audio/vnd.ms-playready.media.pya"],
      ["pyc", "application/x-bytecode.python"],
      ["pyv", "video/vnd.ms-playready.media.pyv"],
      ["qam", "application/vnd.epson.quickanime"],
      ["qbo", "application/vnd.intu.qbo"],
      ["qcp", "audio/vnd.qcelp"],
      ["qd3", "x-world/x-3dmf"],
      ["qd3d", "x-world/x-3dmf"],
      ["qfx", "application/vnd.intu.qfx"],
      ["qif", "image/x-quicktime"],
      ["qps", "application/vnd.publishare-delta-tree"],
      ["qt", "video/quicktime"],
      ["qtc", "video/x-qtc"],
      ["qti", "image/x-quicktime"],
      ["qtif", "image/x-quicktime"],
      ["qxd", "application/vnd.quark.quarkxpress"],
      ["ra", ["audio/x-realaudio", "audio/x-pn-realaudio", "audio/x-pn-realaudio-plugin"]],
      ["ram", "audio/x-pn-realaudio"],
      ["rar", "application/x-rar-compressed"],
      ["ras", ["image/cmu-raster", "application/x-cmu-raster", "image/x-cmu-raster"]],
      ["rast", "image/cmu-raster"],
      ["rcprofile", "application/vnd.ipunplugged.rcprofile"],
      ["rdf", "application/rdf+xml"],
      ["rdz", "application/vnd.data-vision.rdz"],
      ["rep", "application/vnd.businessobjects"],
      ["res", "application/x-dtbresource+xml"],
      ["rexx", "text/x-script.rexx"],
      ["rf", "image/vnd.rn-realflash"],
      ["rgb", "image/x-rgb"],
      ["rif", "application/reginfo+xml"],
      ["rip", "audio/vnd.rip"],
      ["rl", "application/resource-lists+xml"],
      ["rlc", "image/vnd.fujixerox.edmics-rlc"],
      ["rld", "application/resource-lists-diff+xml"],
      ["rm", ["application/vnd.rn-realmedia", "audio/x-pn-realaudio"]],
      ["rmi", "audio/mid"],
      ["rmm", "audio/x-pn-realaudio"],
      ["rmp", ["audio/x-pn-realaudio-plugin", "audio/x-pn-realaudio"]],
      ["rms", "application/vnd.jcp.javame.midlet-rms"],
      ["rnc", "application/relax-ng-compact-syntax"],
      ["rng", ["application/ringing-tones", "application/vnd.nokia.ringing-tone"]],
      ["rnx", "application/vnd.rn-realplayer"],
      ["roff", "application/x-troff"],
      ["rp", "image/vnd.rn-realpix"],
      ["rp9", "application/vnd.cloanto.rp9"],
      ["rpm", "audio/x-pn-realaudio-plugin"],
      ["rpss", "application/vnd.nokia.radio-presets"],
      ["rpst", "application/vnd.nokia.radio-preset"],
      ["rq", "application/sparql-query"],
      ["rs", "application/rls-services+xml"],
      ["rsd", "application/rsd+xml"],
      ["rt", ["text/richtext", "text/vnd.rn-realtext"]],
      ["rtf", ["application/rtf", "text/richtext", "application/x-rtf"]],
      ["rtx", ["text/richtext", "application/rtf"]],
      ["rv", "video/vnd.rn-realvideo"],
      ["s", "text/x-asm"],
      ["s3m", "audio/s3m"],
      ["saf", "application/vnd.yamaha.smaf-audio"],
      ["saveme", "application/octet-stream"],
      ["sbk", "application/x-tbook"],
      ["sbml", "application/sbml+xml"],
      ["sc", "application/vnd.ibm.secure-container"],
      ["scd", "application/x-msschedule"],
      ["scm", ["application/vnd.lotus-screencam", "video/x-scm", "text/x-script.guile", "application/x-lotusscreencam", "text/x-script.scheme"]],
      ["scq", "application/scvp-cv-request"],
      ["scs", "application/scvp-cv-response"],
      ["sct", "text/scriptlet"],
      ["scurl", "text/vnd.curl.scurl"],
      ["sda", "application/vnd.stardivision.draw"],
      ["sdc", "application/vnd.stardivision.calc"],
      ["sdd", "application/vnd.stardivision.impress"],
      ["sdkm", "application/vnd.solent.sdkm+xml"],
      ["sdml", "text/plain"],
      ["sdp", ["application/sdp", "application/x-sdp"]],
      ["sdr", "application/sounder"],
      ["sdw", "application/vnd.stardivision.writer"],
      ["sea", ["application/sea", "application/x-sea"]],
      ["see", "application/vnd.seemail"],
      ["seed", "application/vnd.fdsn.seed"],
      ["sema", "application/vnd.sema"],
      ["semd", "application/vnd.semd"],
      ["semf", "application/vnd.semf"],
      ["ser", "application/java-serialized-object"],
      ["set", "application/set"],
      ["setpay", "application/set-payment-initiation"],
      ["setreg", "application/set-registration-initiation"],
      ["sfd-hdstx", "application/vnd.hydrostatix.sof-data"],
      ["sfs", "application/vnd.spotfire.sfs"],
      ["sgl", "application/vnd.stardivision.writer-global"],
      ["sgm", ["text/sgml", "text/x-sgml"]],
      ["sgml", ["text/sgml", "text/x-sgml"]],
      ["sh", ["application/x-shar", "application/x-bsh", "application/x-sh", "text/x-script.sh"]],
      ["shar", ["application/x-bsh", "application/x-shar"]],
      ["shf", "application/shf+xml"],
      ["shtml", ["text/html", "text/x-server-parsed-html"]],
      ["sid", "audio/x-psid"],
      ["sis", "application/vnd.symbian.install"],
      ["sit", ["application/x-stuffit", "application/x-sit"]],
      ["sitx", "application/x-stuffitx"],
      ["skd", "application/x-koan"],
      ["skm", "application/x-koan"],
      ["skp", ["application/vnd.koan", "application/x-koan"]],
      ["skt", "application/x-koan"],
      ["sl", "application/x-seelogo"],
      ["sldm", "application/vnd.ms-powerpoint.slide.macroenabled.12"],
      ["sldx", "application/vnd.openxmlformats-officedocument.presentationml.slide"],
      ["slt", "application/vnd.epson.salt"],
      ["sm", "application/vnd.stepmania.stepchart"],
      ["smf", "application/vnd.stardivision.math"],
      ["smi", ["application/smil", "application/smil+xml"]],
      ["smil", "application/smil"],
      ["snd", ["audio/basic", "audio/x-adpcm"]],
      ["snf", "application/x-font-snf"],
      ["sol", "application/solids"],
      ["spc", ["text/x-speech", "application/x-pkcs7-certificates"]],
      ["spf", "application/vnd.yamaha.smaf-phrase"],
      ["spl", ["application/futuresplash", "application/x-futuresplash"]],
      ["spot", "text/vnd.in3d.spot"],
      ["spp", "application/scvp-vp-response"],
      ["spq", "application/scvp-vp-request"],
      ["spr", "application/x-sprite"],
      ["sprite", "application/x-sprite"],
      ["src", "application/x-wais-source"],
      ["sru", "application/sru+xml"],
      ["srx", "application/sparql-results+xml"],
      ["sse", "application/vnd.kodak-descriptor"],
      ["ssf", "application/vnd.epson.ssf"],
      ["ssi", "text/x-server-parsed-html"],
      ["ssm", "application/streamingmedia"],
      ["ssml", "application/ssml+xml"],
      ["sst", ["application/vnd.ms-pkicertstore", "application/vnd.ms-pki.certstore"]],
      ["st", "application/vnd.sailingtracker.track"],
      ["stc", "application/vnd.sun.xml.calc.template"],
      ["std", "application/vnd.sun.xml.draw.template"],
      ["step", "application/step"],
      ["stf", "application/vnd.wt.stf"],
      ["sti", "application/vnd.sun.xml.impress.template"],
      ["stk", "application/hyperstudio"],
      ["stl", ["application/vnd.ms-pkistl", "application/sla", "application/vnd.ms-pki.stl", "application/x-navistyle"]],
      ["stm", "text/html"],
      ["stp", "application/step"],
      ["str", "application/vnd.pg.format"],
      ["stw", "application/vnd.sun.xml.writer.template"],
      ["sub", "image/vnd.dvb.subtitle"],
      ["sus", "application/vnd.sus-calendar"],
      ["sv4cpio", "application/x-sv4cpio"],
      ["sv4crc", "application/x-sv4crc"],
      ["svc", "application/vnd.dvb.service"],
      ["svd", "application/vnd.svd"],
      ["svf", ["image/vnd.dwg", "image/x-dwg"]],
      ["svg", "image/svg+xml"],
      ["svr", ["x-world/x-svr", "application/x-world"]],
      ["swf", "application/x-shockwave-flash"],
      ["swi", "application/vnd.aristanetworks.swi"],
      ["sxc", "application/vnd.sun.xml.calc"],
      ["sxd", "application/vnd.sun.xml.draw"],
      ["sxg", "application/vnd.sun.xml.writer.global"],
      ["sxi", "application/vnd.sun.xml.impress"],
      ["sxm", "application/vnd.sun.xml.math"],
      ["sxw", "application/vnd.sun.xml.writer"],
      ["t", ["text/troff", "application/x-troff"]],
      ["talk", "text/x-speech"],
      ["tao", "application/vnd.tao.intent-module-archive"],
      ["tar", "application/x-tar"],
      ["tbk", ["application/toolbook", "application/x-tbook"]],
      ["tcap", "application/vnd.3gpp2.tcap"],
      ["tcl", ["text/x-script.tcl", "application/x-tcl"]],
      ["tcsh", "text/x-script.tcsh"],
      ["teacher", "application/vnd.smart.teacher"],
      ["tei", "application/tei+xml"],
      ["tex", "application/x-tex"],
      ["texi", "application/x-texinfo"],
      ["texinfo", "application/x-texinfo"],
      ["text", ["application/plain", "text/plain"]],
      ["tfi", "application/thraud+xml"],
      ["tfm", "application/x-tex-tfm"],
      ["tgz", ["application/gnutar", "application/x-compressed"]],
      ["thmx", "application/vnd.ms-officetheme"],
      ["tif", ["image/tiff", "image/x-tiff"]],
      ["tiff", ["image/tiff", "image/x-tiff"]],
      ["tmo", "application/vnd.tmobile-livetv"],
      ["torrent", "application/x-bittorrent"],
      ["tpl", "application/vnd.groove-tool-template"],
      ["tpt", "application/vnd.trid.tpt"],
      ["tr", "application/x-troff"],
      ["tra", "application/vnd.trueapp"],
      ["trm", "application/x-msterminal"],
      ["tsd", "application/timestamped-data"],
      ["tsi", "audio/tsp-audio"],
      ["tsp", ["application/dsptype", "audio/tsplayer"]],
      ["tsv", "text/tab-separated-values"],
      ["ttf", "application/x-font-ttf"],
      ["ttl", "text/turtle"],
      ["turbot", "image/florian"],
      ["twd", "application/vnd.simtech-mindmapper"],
      ["txd", "application/vnd.genomatix.tuxedo"],
      ["txf", "application/vnd.mobius.txf"],
      ["txt", "text/plain"],
      ["ufd", "application/vnd.ufdl"],
      ["uil", "text/x-uil"],
      ["uls", "text/iuls"],
      ["umj", "application/vnd.umajin"],
      ["uni", "text/uri-list"],
      ["unis", "text/uri-list"],
      ["unityweb", "application/vnd.unity"],
      ["unv", "application/i-deas"],
      ["uoml", "application/vnd.uoml+xml"],
      ["uri", "text/uri-list"],
      ["uris", "text/uri-list"],
      ["ustar", ["application/x-ustar", "multipart/x-ustar"]],
      ["utz", "application/vnd.uiq.theme"],
      ["uu", ["application/octet-stream", "text/x-uuencode"]],
      ["uue", "text/x-uuencode"],
      ["uva", "audio/vnd.dece.audio"],
      ["uvh", "video/vnd.dece.hd"],
      ["uvi", "image/vnd.dece.graphic"],
      ["uvm", "video/vnd.dece.mobile"],
      ["uvp", "video/vnd.dece.pd"],
      ["uvs", "video/vnd.dece.sd"],
      ["uvu", "video/vnd.uvvu.mp4"],
      ["uvv", "video/vnd.dece.video"],
      ["vcd", "application/x-cdlink"],
      ["vcf", "text/x-vcard"],
      ["vcg", "application/vnd.groove-vcard"],
      ["vcs", "text/x-vcalendar"],
      ["vcx", "application/vnd.vcx"],
      ["vda", "application/vda"],
      ["vdo", "video/vdo"],
      ["vew", "application/groupwise"],
      ["vis", "application/vnd.visionary"],
      ["viv", ["video/vivo", "video/vnd.vivo"]],
      ["vivo", ["video/vivo", "video/vnd.vivo"]],
      ["vmd", "application/vocaltec-media-desc"],
      ["vmf", "application/vocaltec-media-file"],
      ["voc", ["audio/voc", "audio/x-voc"]],
      ["vos", "video/vosaic"],
      ["vox", "audio/voxware"],
      ["vqe", "audio/x-twinvq-plugin"],
      ["vqf", "audio/x-twinvq"],
      ["vql", "audio/x-twinvq-plugin"],
      ["vrml", ["model/vrml", "x-world/x-vrml", "application/x-vrml"]],
      ["vrt", "x-world/x-vrt"],
      ["vsd", ["application/vnd.visio", "application/x-visio"]],
      ["vsf", "application/vnd.vsf"],
      ["vst", "application/x-visio"],
      ["vsw", "application/x-visio"],
      ["vtu", "model/vnd.vtu"],
      ["vxml", "application/voicexml+xml"],
      ["w60", "application/wordperfect6.0"],
      ["w61", "application/wordperfect6.1"],
      ["w6w", "application/msword"],
      ["wad", "application/x-doom"],
      ["wav", ["audio/wav", "audio/x-wav"]],
      ["wax", "audio/x-ms-wax"],
      ["wb1", "application/x-qpro"],
      ["wbmp", "image/vnd.wap.wbmp"],
      ["wbs", "application/vnd.criticaltools.wbs+xml"],
      ["wbxml", "application/vnd.wap.wbxml"],
      ["wcm", "application/vnd.ms-works"],
      ["wdb", "application/vnd.ms-works"],
      ["web", "application/vnd.xara"],
      ["weba", "audio/webm"],
      ["webm", "video/webm"],
      ["webp", "image/webp"],
      ["wg", "application/vnd.pmi.widget"],
      ["wgt", "application/widget"],
      ["wiz", "application/msword"],
      ["wk1", "application/x-123"],
      ["wks", "application/vnd.ms-works"],
      ["wm", "video/x-ms-wm"],
      ["wma", "audio/x-ms-wma"],
      ["wmd", "application/x-ms-wmd"],
      ["wmf", ["windows/metafile", "application/x-msmetafile"]],
      ["wml", "text/vnd.wap.wml"],
      ["wmlc", "application/vnd.wap.wmlc"],
      ["wmls", "text/vnd.wap.wmlscript"],
      ["wmlsc", "application/vnd.wap.wmlscriptc"],
      ["wmv", "video/x-ms-wmv"],
      ["wmx", "video/x-ms-wmx"],
      ["wmz", "application/x-ms-wmz"],
      ["woff", "application/x-font-woff"],
      ["word", "application/msword"],
      ["wp", "application/wordperfect"],
      ["wp5", ["application/wordperfect", "application/wordperfect6.0"]],
      ["wp6", "application/wordperfect"],
      ["wpd", ["application/wordperfect", "application/vnd.wordperfect", "application/x-wpwin"]],
      ["wpl", "application/vnd.ms-wpl"],
      ["wps", "application/vnd.ms-works"],
      ["wq1", "application/x-lotus"],
      ["wqd", "application/vnd.wqd"],
      ["wri", ["application/mswrite", "application/x-wri", "application/x-mswrite"]],
      ["wrl", ["model/vrml", "x-world/x-vrml", "application/x-world"]],
      ["wrz", ["model/vrml", "x-world/x-vrml"]],
      ["wsc", "text/scriplet"],
      ["wsdl", "application/wsdl+xml"],
      ["wspolicy", "application/wspolicy+xml"],
      ["wsrc", "application/x-wais-source"],
      ["wtb", "application/vnd.webturbo"],
      ["wtk", "application/x-wintalk"],
      ["wvx", "video/x-ms-wvx"],
      ["x-png", "image/png"],
      ["x3d", "application/vnd.hzn-3d-crossword"],
      ["xaf", "x-world/x-vrml"],
      ["xap", "application/x-silverlight-app"],
      ["xar", "application/vnd.xara"],
      ["xbap", "application/x-ms-xbap"],
      ["xbd", "application/vnd.fujixerox.docuworks.binder"],
      ["xbm", ["image/xbm", "image/x-xbm", "image/x-xbitmap"]],
      ["xdf", "application/xcap-diff+xml"],
      ["xdm", "application/vnd.syncml.dm+xml"],
      ["xdp", "application/vnd.adobe.xdp+xml"],
      ["xdr", "video/x-amt-demorun"],
      ["xdssc", "application/dssc+xml"],
      ["xdw", "application/vnd.fujixerox.docuworks"],
      ["xenc", "application/xenc+xml"],
      ["xer", "application/patch-ops-error+xml"],
      ["xfdf", "application/vnd.adobe.xfdf"],
      ["xfdl", "application/vnd.xfdl"],
      ["xgz", "xgl/drawing"],
      ["xhtml", "application/xhtml+xml"],
      ["xif", "image/vnd.xiff"],
      ["xl", "application/excel"],
      ["xla", ["application/vnd.ms-excel", "application/excel", "application/x-msexcel", "application/x-excel"]],
      ["xlam", "application/vnd.ms-excel.addin.macroenabled.12"],
      ["xlb", ["application/excel", "application/vnd.ms-excel", "application/x-excel"]],
      ["xlc", ["application/vnd.ms-excel", "application/excel", "application/x-excel"]],
      ["xld", ["application/excel", "application/x-excel"]],
      ["xlk", ["application/excel", "application/x-excel"]],
      ["xll", ["application/excel", "application/vnd.ms-excel", "application/x-excel"]],
      ["xlm", ["application/vnd.ms-excel", "application/excel", "application/x-excel"]],
      ["xls", ["application/vnd.ms-excel", "application/excel", "application/x-msexcel", "application/x-excel"]],
      ["xlsb", "application/vnd.ms-excel.sheet.binary.macroenabled.12"],
      ["xlsm", "application/vnd.ms-excel.sheet.macroenabled.12"],
      ["xlsx", "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"],
      ["xlt", ["application/vnd.ms-excel", "application/excel", "application/x-excel"]],
      ["xltm", "application/vnd.ms-excel.template.macroenabled.12"],
      ["xltx", "application/vnd.openxmlformats-officedocument.spreadsheetml.template"],
      ["xlv", ["application/excel", "application/x-excel"]],
      ["xlw", ["application/vnd.ms-excel", "application/excel", "application/x-msexcel", "application/x-excel"]],
      ["xm", "audio/xm"],
      ["xml", ["application/xml", "text/xml", "application/atom+xml", "application/rss+xml"]],
      ["xmz", "xgl/movie"],
      ["xo", "application/vnd.olpc-sugar"],
      ["xof", "x-world/x-vrml"],
      ["xop", "application/xop+xml"],
      ["xpi", "application/x-xpinstall"],
      ["xpix", "application/x-vnd.ls-xpix"],
      ["xpm", ["image/xpm", "image/x-xpixmap"]],
      ["xpr", "application/vnd.is-xpr"],
      ["xps", "application/vnd.ms-xpsdocument"],
      ["xpw", "application/vnd.intercon.formnet"],
      ["xslt", "application/xslt+xml"],
      ["xsm", "application/vnd.syncml+xml"],
      ["xspf", "application/xspf+xml"],
      ["xsr", "video/x-amt-showrun"],
      ["xul", "application/vnd.mozilla.xul+xml"],
      ["xwd", ["image/x-xwd", "image/x-xwindowdump"]],
      ["xyz", ["chemical/x-xyz", "chemical/x-pdb"]],
      ["yang", "application/yang"],
      ["yin", "application/yin+xml"],
      ["z", ["application/x-compressed", "application/x-compress"]],
      ["zaz", "application/vnd.zzazz.deck+xml"],
      ["zip", ["application/zip", "multipart/x-zip", "application/x-zip-compressed", "application/x-compressed"]],
      ["zir", "application/vnd.zul"],
      ["zmm", "application/vnd.handheld-entertainment+xml"],
      ["zoo", "application/octet-stream"],
      ["zsh", "text/x-script.zsh"]
    ]);
    module.exports = {
      detectMimeType(filename) {
        if (!filename) {
          return defaultMimeType;
        }
        let parsed = path.parse(filename);
        let extension = (parsed.ext.substr(1) || parsed.name || "").split("?").shift().trim().toLowerCase();
        let value = defaultMimeType;
        if (extensions.has(extension)) {
          value = extensions.get(extension);
        }
        if (Array.isArray(value)) {
          return value[0];
        }
        return value;
      },
      detectExtension(mimeType) {
        if (!mimeType) {
          return defaultExtension;
        }
        let parts = (mimeType || "").toLowerCase().trim().split("/");
        let rootType = parts.shift().trim();
        let subType = parts.join("/").trim();
        if (mimeTypes.has(rootType + "/" + subType)) {
          let value = mimeTypes.get(rootType + "/" + subType);
          if (Array.isArray(value)) {
            return value[0];
          }
          return value;
        }
        switch (rootType) {
          case "text":
            return "txt";
          default:
            return "bin";
        }
      }
    };
  }
});

// node_modules/nodemailer/lib/punycode/index.js
var require_punycode = __commonJS({
  "node_modules/nodemailer/lib/punycode/index.js"(exports, module) {
    "use strict";
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    var maxInt = 2147483647;
    var base = 36;
    var tMin = 1;
    var tMax = 26;
    var skew = 38;
    var damp = 700;
    var initialBias = 72;
    var initialN = 128;
    var delimiter = "-";
    var regexPunycode = /^xn--/;
    var regexNonASCII = /[^\0-\x7F]/;
    var regexSeparators = /[\x2E\u3002\uFF0E\uFF61]/g;
    var errors = {
      overflow: "Overflow: input needs wider integers to process",
      "not-basic": "Illegal input >= 0x80 (not a basic code point)",
      "invalid-input": "Invalid input"
    };
    var baseMinusTMin = base - tMin;
    var floor = Math.floor;
    var stringFromCharCode = String.fromCharCode;
    function error3(type) {
      throw new RangeError(errors[type]);
    }
    __name(error3, "error");
    function map(array, callback) {
      const result = [];
      let length = array.length;
      while (length--) {
        result[length] = callback(array[length]);
      }
      return result;
    }
    __name(map, "map");
    function mapDomain(domain2, callback) {
      const parts = domain2.split("@");
      let result = "";
      if (parts.length > 1) {
        result = parts[0] + "@";
        domain2 = parts[1];
      }
      domain2 = domain2.replace(regexSeparators, ".");
      const labels = domain2.split(".");
      const encoded = map(labels, callback).join(".");
      return result + encoded;
    }
    __name(mapDomain, "mapDomain");
    function ucs2decode(string) {
      const output = [];
      let counter = 0;
      const length = string.length;
      while (counter < length) {
        const value = string.charCodeAt(counter++);
        if (value >= 55296 && value <= 56319 && counter < length) {
          const extra = string.charCodeAt(counter++);
          if ((extra & 64512) == 56320) {
            output.push(((value & 1023) << 10) + (extra & 1023) + 65536);
          } else {
            output.push(value);
            counter--;
          }
        } else {
          output.push(value);
        }
      }
      return output;
    }
    __name(ucs2decode, "ucs2decode");
    var ucs2encode = /* @__PURE__ */ __name((codePoints) => String.fromCodePoint(...codePoints), "ucs2encode");
    var basicToDigit = /* @__PURE__ */ __name(function(codePoint) {
      if (codePoint >= 48 && codePoint < 58) {
        return 26 + (codePoint - 48);
      }
      if (codePoint >= 65 && codePoint < 91) {
        return codePoint - 65;
      }
      if (codePoint >= 97 && codePoint < 123) {
        return codePoint - 97;
      }
      return base;
    }, "basicToDigit");
    var digitToBasic = /* @__PURE__ */ __name(function(digit, flag) {
      return digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);
    }, "digitToBasic");
    var adapt = /* @__PURE__ */ __name(function(delta, numPoints, firstTime) {
      let k = 0;
      delta = firstTime ? floor(delta / damp) : delta >> 1;
      delta += floor(delta / numPoints);
      for (
        ;
        /* no initialization */
        delta > baseMinusTMin * tMax >> 1;
        k += base
      ) {
        delta = floor(delta / baseMinusTMin);
      }
      return floor(k + (baseMinusTMin + 1) * delta / (delta + skew));
    }, "adapt");
    var decode3 = /* @__PURE__ */ __name(function(input) {
      const output = [];
      const inputLength = input.length;
      let i = 0;
      let n = initialN;
      let bias = initialBias;
      let basic = input.lastIndexOf(delimiter);
      if (basic < 0) {
        basic = 0;
      }
      for (let j = 0; j < basic; ++j) {
        if (input.charCodeAt(j) >= 128) {
          error3("not-basic");
        }
        output.push(input.charCodeAt(j));
      }
      for (let index = basic > 0 ? basic + 1 : 0; index < inputLength; ) {
        const oldi = i;
        for (let w = 1, k = base; ; k += base) {
          if (index >= inputLength) {
            error3("invalid-input");
          }
          const digit = basicToDigit(input.charCodeAt(index++));
          if (digit >= base) {
            error3("invalid-input");
          }
          if (digit > floor((maxInt - i) / w)) {
            error3("overflow");
          }
          i += digit * w;
          const t = k <= bias ? tMin : k >= bias + tMax ? tMax : k - bias;
          if (digit < t) {
            break;
          }
          const baseMinusT = base - t;
          if (w > floor(maxInt / baseMinusT)) {
            error3("overflow");
          }
          w *= baseMinusT;
        }
        const out = output.length + 1;
        bias = adapt(i - oldi, out, oldi == 0);
        if (floor(i / out) > maxInt - n) {
          error3("overflow");
        }
        n += floor(i / out);
        i %= out;
        output.splice(i++, 0, n);
      }
      return String.fromCodePoint(...output);
    }, "decode");
    var encode = /* @__PURE__ */ __name(function(input) {
      const output = [];
      input = ucs2decode(input);
      const inputLength = input.length;
      let n = initialN;
      let delta = 0;
      let bias = initialBias;
      for (const currentValue of input) {
        if (currentValue < 128) {
          output.push(stringFromCharCode(currentValue));
        }
      }
      const basicLength = output.length;
      let handledCPCount = basicLength;
      if (basicLength) {
        output.push(delimiter);
      }
      while (handledCPCount < inputLength) {
        let m = maxInt;
        for (const currentValue of input) {
          if (currentValue >= n && currentValue < m) {
            m = currentValue;
          }
        }
        const handledCPCountPlusOne = handledCPCount + 1;
        if (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {
          error3("overflow");
        }
        delta += (m - n) * handledCPCountPlusOne;
        n = m;
        for (const currentValue of input) {
          if (currentValue < n && ++delta > maxInt) {
            error3("overflow");
          }
          if (currentValue === n) {
            let q = delta;
            for (let k = base; ; k += base) {
              const t = k <= bias ? tMin : k >= bias + tMax ? tMax : k - bias;
              if (q < t) {
                break;
              }
              const qMinusT = q - t;
              const baseMinusT = base - t;
              output.push(stringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0)));
              q = floor(qMinusT / baseMinusT);
            }
            output.push(stringFromCharCode(digitToBasic(q, 0)));
            bias = adapt(delta, handledCPCountPlusOne, handledCPCount === basicLength);
            delta = 0;
            ++handledCPCount;
          }
        }
        ++delta;
        ++n;
      }
      return output.join("");
    }, "encode");
    var toUnicode = /* @__PURE__ */ __name(function(input) {
      return mapDomain(input, function(string) {
        return regexPunycode.test(string) ? decode3(string.slice(4).toLowerCase()) : string;
      });
    }, "toUnicode");
    var toASCII = /* @__PURE__ */ __name(function(input) {
      return mapDomain(input, function(string) {
        return regexNonASCII.test(string) ? "xn--" + encode(string) : string;
      });
    }, "toASCII");
    var punycode = {
      /**
       * A string representing the current Punycode.js version number.
       * @memberOf punycode
       * @type String
       */
      version: "2.3.1",
      /**
       * An object of methods to convert from JavaScript's internal character
       * representation (UCS-2) to Unicode code points, and back.
       * @see <https://mathiasbynens.be/notes/javascript-encoding>
       * @memberOf punycode
       * @type Object
       */
      ucs2: {
        decode: ucs2decode,
        encode: ucs2encode
      },
      decode: decode3,
      encode,
      toASCII,
      toUnicode
    };
    module.exports = punycode;
  }
});

// node_modules/nodemailer/lib/base64/index.js
var require_base64 = __commonJS({
  "node_modules/nodemailer/lib/base64/index.js"(exports, module) {
    "use strict";
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    var Transform = require_stream().Transform;
    function encode(buffer) {
      if (typeof buffer === "string") {
        buffer = Buffer.from(buffer, "utf-8");
      }
      return buffer.toString("base64");
    }
    __name(encode, "encode");
    function wrap(str, lineLength) {
      str = (str || "").toString();
      lineLength = lineLength || 76;
      if (str.length <= lineLength) {
        return str;
      }
      let result = [];
      let pos = 0;
      let chunkLength = lineLength * 1024;
      while (pos < str.length) {
        let wrappedLines = str.substr(pos, chunkLength).replace(new RegExp(".{" + lineLength + "}", "g"), "$&\r\n");
        result.push(wrappedLines);
        pos += chunkLength;
      }
      return result.join("");
    }
    __name(wrap, "wrap");
    var Encoder = class extends Transform {
      static {
        __name(this, "Encoder");
      }
      constructor(options) {
        super();
        this.options = options || {};
        if (this.options.lineLength !== false) {
          this.options.lineLength = this.options.lineLength || 76;
        }
        this._curLine = "";
        this._remainingBytes = false;
        this.inputBytes = 0;
        this.outputBytes = 0;
      }
      _transform(chunk, encoding, done) {
        if (encoding !== "buffer") {
          chunk = Buffer.from(chunk, encoding);
        }
        if (!chunk || !chunk.length) {
          return setImmediate(done);
        }
        this.inputBytes += chunk.length;
        if (this._remainingBytes && this._remainingBytes.length) {
          chunk = Buffer.concat([this._remainingBytes, chunk], this._remainingBytes.length + chunk.length);
          this._remainingBytes = false;
        }
        if (chunk.length % 3) {
          this._remainingBytes = chunk.slice(chunk.length - chunk.length % 3);
          chunk = chunk.slice(0, chunk.length - chunk.length % 3);
        } else {
          this._remainingBytes = false;
        }
        let b64 = this._curLine + encode(chunk);
        if (this.options.lineLength) {
          b64 = wrap(b64, this.options.lineLength);
          let lastLF = b64.lastIndexOf("\n");
          if (lastLF < 0) {
            this._curLine = b64;
            b64 = "";
          } else {
            this._curLine = b64.substring(lastLF + 1);
            b64 = b64.substring(0, lastLF + 1);
            if (b64 && !b64.endsWith("\r\n")) {
              b64 += "\r\n";
            }
          }
        } else {
          this._curLine = "";
        }
        if (b64) {
          this.outputBytes += b64.length;
          this.push(Buffer.from(b64, "ascii"));
        }
        setImmediate(done);
      }
      _flush(done) {
        if (this._remainingBytes && this._remainingBytes.length) {
          this._curLine += encode(this._remainingBytes);
        }
        if (this._curLine) {
          this.outputBytes += this._curLine.length;
          this.push(Buffer.from(this._curLine, "ascii"));
          this._curLine = "";
        }
        done();
      }
    };
    module.exports = {
      encode,
      wrap,
      Encoder
    };
  }
});

// node_modules/nodemailer/lib/qp/index.js
var require_qp = __commonJS({
  "node_modules/nodemailer/lib/qp/index.js"(exports, module) {
    "use strict";
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    var Transform = require_stream().Transform;
    function encode(buffer) {
      if (typeof buffer === "string") {
        buffer = Buffer.from(buffer, "utf-8");
      }
      let ranges = [
        // https://tools.ietf.org/html/rfc2045#section-6.7
        [9],
        // <TAB>
        [10],
        // <LF>
        [13],
        // <CR>
        [32, 60],
        // <SP>!"#$%&'()*+,-./0123456789:;
        [62, 126]
        // >?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}
      ];
      let result = "";
      let ord;
      for (let i = 0, len = buffer.length; i < len; i++) {
        ord = buffer[i];
        if (checkRanges(ord, ranges) && !((ord === 32 || ord === 9) && (i === len - 1 || buffer[i + 1] === 10 || buffer[i + 1] === 13))) {
          result += String.fromCharCode(ord);
          continue;
        }
        result += "=" + (ord < 16 ? "0" : "") + ord.toString(16).toUpperCase();
      }
      return result;
    }
    __name(encode, "encode");
    function wrap(str, lineLength) {
      str = (str || "").toString();
      lineLength = lineLength || 76;
      if (str.length <= lineLength) {
        return str;
      }
      let pos = 0;
      let len = str.length;
      let match, code, line;
      let lineMargin = Math.floor(lineLength / 3);
      let result = "";
      while (pos < len) {
        line = str.substr(pos, lineLength);
        if (match = line.match(/\r\n/)) {
          line = line.substr(0, match.index + match[0].length);
          result += line;
          pos += line.length;
          continue;
        }
        if (line.substr(-1) === "\n") {
          result += line;
          pos += line.length;
          continue;
        } else if (match = line.substr(-lineMargin).match(/\n.*?$/)) {
          line = line.substr(0, line.length - (match[0].length - 1));
          result += line;
          pos += line.length;
          continue;
        } else if (line.length > lineLength - lineMargin && (match = line.substr(-lineMargin).match(/[ \t.,!?][^ \t.,!?]*$/))) {
          line = line.substr(0, line.length - (match[0].length - 1));
        } else if (line.match(/[=][\da-f]{0,2}$/i)) {
          if (match = line.match(/[=][\da-f]{0,1}$/i)) {
            line = line.substr(0, line.length - match[0].length);
          }
          while (line.length > 3 && line.length < len - pos && !line.match(/^(?:=[\da-f]{2}){1,4}$/i) && (match = line.match(/[=][\da-f]{2}$/gi))) {
            code = parseInt(match[0].substr(1, 2), 16);
            if (code < 128) {
              break;
            }
            line = line.substr(0, line.length - 3);
            if (code >= 192) {
              break;
            }
          }
        }
        if (pos + line.length < len && line.substr(-1) !== "\n") {
          if (line.length === lineLength && line.match(/[=][\da-f]{2}$/i)) {
            line = line.substr(0, line.length - 3);
          } else if (line.length === lineLength) {
            line = line.substr(0, line.length - 1);
          }
          pos += line.length;
          line += "=\r\n";
        } else {
          pos += line.length;
        }
        result += line;
      }
      return result;
    }
    __name(wrap, "wrap");
    function checkRanges(nr, ranges) {
      for (let i = ranges.length - 1; i >= 0; i--) {
        if (!ranges[i].length) {
          continue;
        }
        if (ranges[i].length === 1 && nr === ranges[i][0]) {
          return true;
        }
        if (ranges[i].length === 2 && nr >= ranges[i][0] && nr <= ranges[i][1]) {
          return true;
        }
      }
      return false;
    }
    __name(checkRanges, "checkRanges");
    var Encoder = class extends Transform {
      static {
        __name(this, "Encoder");
      }
      constructor(options) {
        super();
        this.options = options || {};
        if (this.options.lineLength !== false) {
          this.options.lineLength = this.options.lineLength || 76;
        }
        this._curLine = "";
        this.inputBytes = 0;
        this.outputBytes = 0;
      }
      _transform(chunk, encoding, done) {
        let qp;
        if (encoding !== "buffer") {
          chunk = Buffer.from(chunk, encoding);
        }
        if (!chunk || !chunk.length) {
          return done();
        }
        this.inputBytes += chunk.length;
        if (this.options.lineLength) {
          qp = this._curLine + encode(chunk);
          qp = wrap(qp, this.options.lineLength);
          qp = qp.replace(/(^|\n)([^\n]*)$/, (match, lineBreak, lastLine) => {
            this._curLine = lastLine;
            return lineBreak;
          });
          if (qp) {
            this.outputBytes += qp.length;
            this.push(qp);
          }
        } else {
          qp = encode(chunk);
          this.outputBytes += qp.length;
          this.push(qp, "ascii");
        }
        done();
      }
      _flush(done) {
        if (this._curLine) {
          this.outputBytes += this._curLine.length;
          this.push(this._curLine, "ascii");
        }
        done();
      }
    };
    module.exports = {
      encode,
      wrap,
      Encoder
    };
  }
});

// node_modules/nodemailer/lib/mime-funcs/index.js
var require_mime_funcs = __commonJS({
  "node_modules/nodemailer/lib/mime-funcs/index.js"(exports, module) {
    "use strict";
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    var base64 = require_base64();
    var qp = require_qp();
    var mimeTypes = require_mime_types();
    module.exports = {
      /**
       * Checks if a value is plaintext string (uses only printable 7bit chars)
       *
       * @param {String} value String to be tested
       * @returns {Boolean} true if it is a plaintext string
       */
      isPlainText(value, isParam) {
        const re = isParam ? /[\x00-\x08\x0b\x0c\x0e-\x1f"\u0080-\uFFFF]/ : /[\x00-\x08\x0b\x0c\x0e-\x1f\u0080-\uFFFF]/;
        if (typeof value !== "string" || re.test(value)) {
          return false;
        } else {
          return true;
        }
      },
      /**
       * Checks if a multi line string containes lines longer than the selected value.
       *
       * Useful when detecting if a mail message needs any processing at all –
       * if only plaintext characters are used and lines are short, then there is
       * no need to encode the values in any way. If the value is plaintext but has
       * longer lines then allowed, then use format=flowed
       *
       * @param {Number} lineLength Max line length to check for
       * @returns {Boolean} Returns true if there is at least one line longer than lineLength chars
       */
      hasLongerLines(str, lineLength) {
        if (str.length > 128 * 1024) {
          return true;
        }
        return new RegExp("^.{" + (lineLength + 1) + ",}", "m").test(str);
      },
      /**
       * Encodes a string or an Buffer to an UTF-8 MIME Word (rfc2047)
       *
       * @param {String|Buffer} data String to be encoded
       * @param {String} mimeWordEncoding='Q' Encoding for the mime word, either Q or B
       * @param {Number} [maxLength=0] If set, split mime words into several chunks if needed
       * @return {String} Single or several mime words joined together
       */
      encodeWord(data, mimeWordEncoding, maxLength) {
        mimeWordEncoding = (mimeWordEncoding || "Q").toString().toUpperCase().trim().charAt(0);
        maxLength = maxLength || 0;
        let encodedStr;
        let toCharset = "UTF-8";
        if (maxLength && maxLength > 7 + toCharset.length) {
          maxLength -= 7 + toCharset.length;
        }
        if (mimeWordEncoding === "Q") {
          encodedStr = qp.encode(data).replace(/[^a-z0-9!*+\-/=]/gi, (chr) => {
            let ord = chr.charCodeAt(0).toString(16).toUpperCase();
            if (chr === " ") {
              return "_";
            } else {
              return "=" + (ord.length === 1 ? "0" + ord : ord);
            }
          });
        } else if (mimeWordEncoding === "B") {
          encodedStr = typeof data === "string" ? data : base64.encode(data);
          maxLength = maxLength ? Math.max(3, (maxLength - maxLength % 4) / 4 * 3) : 0;
        }
        if (maxLength && (mimeWordEncoding !== "B" ? encodedStr : base64.encode(data)).length > maxLength) {
          if (mimeWordEncoding === "Q") {
            encodedStr = this.splitMimeEncodedString(encodedStr, maxLength).join("?= =?" + toCharset + "?" + mimeWordEncoding + "?");
          } else {
            let parts = [];
            let lpart = "";
            for (let i = 0, len = encodedStr.length; i < len; i++) {
              let chr = encodedStr.charAt(i);
              if (/[\ud83c\ud83d\ud83e]/.test(chr) && i < len - 1) {
                chr += encodedStr.charAt(++i);
              }
              if (Buffer.byteLength(lpart + chr) <= maxLength || i === 0) {
                lpart += chr;
              } else {
                parts.push(base64.encode(lpart));
                lpart = chr;
              }
            }
            if (lpart) {
              parts.push(base64.encode(lpart));
            }
            if (parts.length > 1) {
              encodedStr = parts.join("?= =?" + toCharset + "?" + mimeWordEncoding + "?");
            } else {
              encodedStr = parts.join("");
            }
          }
        } else if (mimeWordEncoding === "B") {
          encodedStr = base64.encode(data);
        }
        return "=?" + toCharset + "?" + mimeWordEncoding + "?" + encodedStr + (encodedStr.substr(-2) === "?=" ? "" : "?=");
      },
      /**
       * Finds word sequences with non ascii text and converts these to mime words
       *
       * @param {String} value String to be encoded
       * @param {String} mimeWordEncoding='Q' Encoding for the mime word, either Q or B
       * @param {Number} [maxLength=0] If set, split mime words into several chunks if needed
       * @param {Boolean} [encodeAll=false] If true and the value needs encoding then encodes entire string, not just the smallest match
       * @return {String} String with possible mime words
       */
      encodeWords(value, mimeWordEncoding, maxLength, encodeAll) {
        maxLength = maxLength || 0;
        let encodedValue;
        let firstMatch = value.match(/(?:^|\s)([^\s]*["\u0080-\uFFFF])/);
        if (!firstMatch) {
          return value;
        }
        if (encodeAll) {
          return this.encodeWord(value, mimeWordEncoding, maxLength);
        }
        let lastMatch = value.match(/(["\u0080-\uFFFF][^\s]*)[^"\u0080-\uFFFF]*$/);
        if (!lastMatch) {
          return value;
        }
        let startIndex = firstMatch.index + (firstMatch[0].match(/[^\s]/) || {
          index: 0
        }).index;
        let endIndex = lastMatch.index + (lastMatch[1] || "").length;
        encodedValue = (startIndex ? value.substr(0, startIndex) : "") + this.encodeWord(value.substring(startIndex, endIndex), mimeWordEncoding || "Q", maxLength) + (endIndex < value.length ? value.substr(endIndex) : "");
        return encodedValue;
      },
      /**
       * Joins parsed header value together as 'value; param1=value1; param2=value2'
       * PS: We are following RFC 822 for the list of special characters that we need to keep in quotes.
       *      Refer: https://www.w3.org/Protocols/rfc1341/4_Content-Type.html
       * @param {Object} structured Parsed header value
       * @return {String} joined header value
       */
      buildHeaderValue(structured) {
        let paramsArray = [];
        Object.keys(structured.params || {}).forEach((param) => {
          let value = structured.params[param];
          if (!this.isPlainText(value, true) || value.length >= 75) {
            this.buildHeaderParam(param, value, 50).forEach((encodedParam) => {
              if (!/[\s"\\;:/=(),<>@[\]?]|^[-']|'$/.test(encodedParam.value) || encodedParam.key.substr(-1) === "*") {
                paramsArray.push(encodedParam.key + "=" + encodedParam.value);
              } else {
                paramsArray.push(encodedParam.key + "=" + JSON.stringify(encodedParam.value));
              }
            });
          } else if (/[\s'"\\;:/=(),<>@[\]?]|^-/.test(value)) {
            paramsArray.push(param + "=" + JSON.stringify(value));
          } else {
            paramsArray.push(param + "=" + value);
          }
        });
        return structured.value + (paramsArray.length ? "; " + paramsArray.join("; ") : "");
      },
      /**
       * Encodes a string or an Buffer to an UTF-8 Parameter Value Continuation encoding (rfc2231)
       * Useful for splitting long parameter values.
       *
       * For example
       *      title="unicode string"
       * becomes
       *     title*0*=utf-8''unicode
       *     title*1*=%20string
       *
       * @param {String|Buffer} data String to be encoded
       * @param {Number} [maxLength=50] Max length for generated chunks
       * @param {String} [fromCharset='UTF-8'] Source sharacter set
       * @return {Array} A list of encoded keys and headers
       */
      buildHeaderParam(key, data, maxLength) {
        let list = [];
        let encodedStr = typeof data === "string" ? data : (data || "").toString();
        let encodedStrArr;
        let chr, ord;
        let line;
        let startPos = 0;
        let i, len;
        maxLength = maxLength || 50;
        if (this.isPlainText(data, true)) {
          if (encodedStr.length <= maxLength) {
            return [
              {
                key,
                value: encodedStr
              }
            ];
          }
          encodedStr = encodedStr.replace(new RegExp(".{" + maxLength + "}", "g"), (str) => {
            list.push({
              line: str
            });
            return "";
          });
          if (encodedStr) {
            list.push({
              line: encodedStr
            });
          }
        } else {
          if (/[\uD800-\uDBFF]/.test(encodedStr)) {
            encodedStrArr = [];
            for (i = 0, len = encodedStr.length; i < len; i++) {
              chr = encodedStr.charAt(i);
              ord = chr.charCodeAt(0);
              if (ord >= 55296 && ord <= 56319 && i < len - 1) {
                chr += encodedStr.charAt(i + 1);
                encodedStrArr.push(chr);
                i++;
              } else {
                encodedStrArr.push(chr);
              }
            }
            encodedStr = encodedStrArr;
          }
          line = "utf-8''";
          let encoded = true;
          startPos = 0;
          for (i = 0, len = encodedStr.length; i < len; i++) {
            chr = encodedStr[i];
            if (encoded) {
              chr = this.safeEncodeURIComponent(chr);
            } else {
              chr = chr === " " ? chr : this.safeEncodeURIComponent(chr);
              if (chr !== encodedStr[i]) {
                if ((this.safeEncodeURIComponent(line) + chr).length >= maxLength) {
                  list.push({
                    line,
                    encoded
                  });
                  line = "";
                  startPos = i - 1;
                } else {
                  encoded = true;
                  i = startPos;
                  line = "";
                  continue;
                }
              }
            }
            if ((line + chr).length >= maxLength) {
              list.push({
                line,
                encoded
              });
              line = chr = encodedStr[i] === " " ? " " : this.safeEncodeURIComponent(encodedStr[i]);
              if (chr === encodedStr[i]) {
                encoded = false;
                startPos = i - 1;
              } else {
                encoded = true;
              }
            } else {
              line += chr;
            }
          }
          if (line) {
            list.push({
              line,
              encoded
            });
          }
        }
        return list.map((item, i2) => ({
          // encoded lines: {name}*{part}*
          // unencoded lines: {name}*{part}
          // if any line needs to be encoded then the first line (part==0) is always encoded
          key: key + "*" + i2 + (item.encoded ? "*" : ""),
          value: item.line
        }));
      },
      /**
       * Parses a header value with key=value arguments into a structured
       * object.
       *
       *   parseHeaderValue('content-type: text/plain; CHARSET='UTF-8'') ->
       *   {
       *     'value': 'text/plain',
       *     'params': {
       *       'charset': 'UTF-8'
       *     }
       *   }
       *
       * @param {String} str Header value
       * @return {Object} Header value as a parsed structure
       */
      parseHeaderValue(str) {
        let response = {
          value: false,
          params: {}
        };
        let key = false;
        let value = "";
        let type = "value";
        let quote = false;
        let escaped = false;
        let chr;
        for (let i = 0, len = str.length; i < len; i++) {
          chr = str.charAt(i);
          if (type === "key") {
            if (chr === "=") {
              key = value.trim().toLowerCase();
              type = "value";
              value = "";
              continue;
            }
            value += chr;
          } else {
            if (escaped) {
              value += chr;
            } else if (chr === "\\") {
              escaped = true;
              continue;
            } else if (quote && chr === quote) {
              quote = false;
            } else if (!quote && chr === '"') {
              quote = chr;
            } else if (!quote && chr === ";") {
              if (key === false) {
                response.value = value.trim();
              } else {
                response.params[key] = value.trim();
              }
              type = "key";
              value = "";
            } else {
              value += chr;
            }
            escaped = false;
          }
        }
        if (type === "value") {
          if (key === false) {
            response.value = value.trim();
          } else {
            response.params[key] = value.trim();
          }
        } else if (value.trim()) {
          response.params[value.trim().toLowerCase()] = "";
        }
        Object.keys(response.params).forEach((key2) => {
          let actualKey, nr, match, value2;
          if (match = key2.match(/(\*(\d+)|\*(\d+)\*|\*)$/)) {
            actualKey = key2.substr(0, match.index);
            nr = Number(match[2] || match[3]) || 0;
            if (!response.params[actualKey] || typeof response.params[actualKey] !== "object") {
              response.params[actualKey] = {
                charset: false,
                values: []
              };
            }
            value2 = response.params[key2];
            if (nr === 0 && match[0].substr(-1) === "*" && (match = value2.match(/^([^']*)'[^']*'(.*)$/))) {
              response.params[actualKey].charset = match[1] || "iso-8859-1";
              value2 = match[2];
            }
            response.params[actualKey].values[nr] = value2;
            delete response.params[key2];
          }
        });
        Object.keys(response.params).forEach((key2) => {
          let value2;
          if (response.params[key2] && Array.isArray(response.params[key2].values)) {
            value2 = response.params[key2].values.map((val) => val || "").join("");
            if (response.params[key2].charset) {
              response.params[key2] = "=?" + response.params[key2].charset + "?Q?" + value2.replace(/[=?_\s]/g, (s) => {
                let c = s.charCodeAt(0).toString(16);
                if (s === " ") {
                  return "_";
                } else {
                  return "%" + (c.length < 2 ? "0" : "") + c;
                }
              }).replace(/%/g, "=") + "?=";
            } else {
              response.params[key2] = value2;
            }
          }
        });
        return response;
      },
      /**
       * Returns file extension for a content type string. If no suitable extensions
       * are found, 'bin' is used as the default extension
       *
       * @param {String} mimeType Content type to be checked for
       * @return {String} File extension
       */
      detectExtension: /* @__PURE__ */ __name((mimeType) => mimeTypes.detectExtension(mimeType), "detectExtension"),
      /**
       * Returns content type for a file extension. If no suitable content types
       * are found, 'application/octet-stream' is used as the default content type
       *
       * @param {String} extension Extension to be checked for
       * @return {String} File extension
       */
      detectMimeType: /* @__PURE__ */ __name((extension) => mimeTypes.detectMimeType(extension), "detectMimeType"),
      /**
       * Folds long lines, useful for folding header lines (afterSpace=false) and
       * flowed text (afterSpace=true)
       *
       * @param {String} str String to be folded
       * @param {Number} [lineLength=76] Maximum length of a line
       * @param {Boolean} afterSpace If true, leave a space in th end of a line
       * @return {String} String with folded lines
       */
      foldLines(str, lineLength, afterSpace) {
        str = (str || "").toString();
        lineLength = lineLength || 76;
        let pos = 0, len = str.length, result = "", line, match;
        while (pos < len) {
          line = str.substr(pos, lineLength);
          if (line.length < lineLength) {
            result += line;
            break;
          }
          if (match = line.match(/^[^\n\r]*(\r?\n|\r)/)) {
            line = match[0];
            result += line;
            pos += line.length;
            continue;
          } else if ((match = line.match(/(\s+)[^\s]*$/)) && match[0].length - (afterSpace ? (match[1] || "").length : 0) < line.length) {
            line = line.substr(0, line.length - (match[0].length - (afterSpace ? (match[1] || "").length : 0)));
          } else if (match = str.substr(pos + line.length).match(/^[^\s]+(\s*)/)) {
            line = line + match[0].substr(0, match[0].length - (!afterSpace ? (match[1] || "").length : 0));
          }
          result += line;
          pos += line.length;
          if (pos < len) {
            result += "\r\n";
          }
        }
        return result;
      },
      /**
       * Splits a mime encoded string. Needed for dividing mime words into smaller chunks
       *
       * @param {String} str Mime encoded string to be split up
       * @param {Number} maxlen Maximum length of characters for one part (minimum 12)
       * @return {Array} Split string
       */
      splitMimeEncodedString: /* @__PURE__ */ __name((str, maxlen) => {
        let curLine, match, chr, done, lines = [];
        maxlen = Math.max(maxlen || 0, 12);
        while (str.length) {
          curLine = str.substr(0, maxlen);
          if (match = curLine.match(/[=][0-9A-F]?$/i)) {
            curLine = curLine.substr(0, match.index);
          }
          done = false;
          while (!done) {
            done = true;
            if (match = str.substr(curLine.length).match(/^[=]([0-9A-F]{2})/i)) {
              chr = parseInt(match[1], 16);
              if (chr < 194 && chr > 127) {
                curLine = curLine.substr(0, curLine.length - 3);
                done = false;
              }
            }
          }
          if (curLine.length) {
            lines.push(curLine);
          }
          str = str.substr(curLine.length);
        }
        return lines;
      }, "splitMimeEncodedString"),
      encodeURICharComponent: /* @__PURE__ */ __name((chr) => {
        let res = "";
        let ord = chr.charCodeAt(0).toString(16).toUpperCase();
        if (ord.length % 2) {
          ord = "0" + ord;
        }
        if (ord.length > 2) {
          for (let i = 0, len = ord.length / 2; i < len; i++) {
            res += "%" + ord.substr(i, 2);
          }
        } else {
          res += "%" + ord;
        }
        return res;
      }, "encodeURICharComponent"),
      safeEncodeURIComponent(str) {
        str = (str || "").toString();
        try {
          str = encodeURIComponent(str);
        } catch (E) {
          return str.replace(/[^\x00-\x1F *'()<>@,;:\\"[\]?=\u007F-\uFFFF]+/g, "");
        }
        return str.replace(/[\x00-\x1F *'()<>@,;:\\"[\]?=\u007F-\uFFFF]/g, (chr) => this.encodeURICharComponent(chr));
      }
    };
  }
});

// node_modules/nodemailer/lib/addressparser/index.js
var require_addressparser = __commonJS({
  "node_modules/nodemailer/lib/addressparser/index.js"(exports, module) {
    "use strict";
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    function _handleAddress(tokens) {
      let isGroup = false;
      let state = "text";
      let address;
      let addresses = [];
      let data = {
        address: [],
        comment: [],
        group: [],
        text: []
      };
      let i;
      let len;
      for (i = 0, len = tokens.length; i < len; i++) {
        let token = tokens[i];
        let prevToken = i ? tokens[i - 1] : null;
        if (token.type === "operator") {
          switch (token.value) {
            case "<":
              state = "address";
              break;
            case "(":
              state = "comment";
              break;
            case ":":
              state = "group";
              isGroup = true;
              break;
            default:
              state = "text";
              break;
          }
        } else if (token.value) {
          if (state === "address") {
            token.value = token.value.replace(/^[^<]*<\s*/, "");
          }
          if (prevToken && prevToken.noBreak && data[state].length) {
            data[state][data[state].length - 1] += token.value;
          } else {
            data[state].push(token.value);
          }
        }
      }
      if (!data.text.length && data.comment.length) {
        data.text = data.comment;
        data.comment = [];
      }
      if (isGroup) {
        data.text = data.text.join(" ");
        addresses.push({
          name: data.text || address && address.name,
          group: data.group.length ? addressparser(data.group.join(",")) : []
        });
      } else {
        if (!data.address.length && data.text.length) {
          for (i = data.text.length - 1; i >= 0; i--) {
            if (data.text[i].match(/^[^@\s]+@[^@\s]+$/)) {
              data.address = data.text.splice(i, 1);
              break;
            }
          }
          let _regexHandler = /* @__PURE__ */ __name(function(address2) {
            if (!data.address.length) {
              data.address = [address2.trim()];
              return " ";
            } else {
              return address2;
            }
          }, "_regexHandler");
          if (!data.address.length) {
            for (i = data.text.length - 1; i >= 0; i--) {
              data.text[i] = data.text[i].replace(/\s*\b[^@\s]+@[^\s]+\b\s*/, _regexHandler).trim();
              if (data.address.length) {
                break;
              }
            }
          }
        }
        if (!data.text.length && data.comment.length) {
          data.text = data.comment;
          data.comment = [];
        }
        if (data.address.length > 1) {
          data.text = data.text.concat(data.address.splice(1));
        }
        data.text = data.text.join(" ");
        data.address = data.address.join(" ");
        if (!data.address && isGroup) {
          return [];
        } else {
          address = {
            address: data.address || data.text || "",
            name: data.text || data.address || ""
          };
          if (address.address === address.name) {
            if ((address.address || "").match(/@/)) {
              address.name = "";
            } else {
              address.address = "";
            }
          }
          addresses.push(address);
        }
      }
      return addresses;
    }
    __name(_handleAddress, "_handleAddress");
    var Tokenizer = class {
      static {
        __name(this, "Tokenizer");
      }
      constructor(str) {
        this.str = (str || "").toString();
        this.operatorCurrent = "";
        this.operatorExpecting = "";
        this.node = null;
        this.escaped = false;
        this.list = [];
        this.operators = {
          '"': '"',
          "(": ")",
          "<": ">",
          ",": "",
          ":": ";",
          // Semicolons are not a legal delimiter per the RFC2822 grammar other
          // than for terminating a group, but they are also not valid for any
          // other use in this context.  Given that some mail clients have
          // historically allowed the semicolon as a delimiter equivalent to the
          // comma in their UI, it makes sense to treat them the same as a comma
          // when used outside of a group.
          ";": ""
        };
      }
      /**
       * Tokenizes the original input string
       *
       * @return {Array} An array of operator|text tokens
       */
      tokenize() {
        let list = [];
        for (let i = 0, len = this.str.length; i < len; i++) {
          let chr = this.str.charAt(i);
          let nextChr = i < len - 1 ? this.str.charAt(i + 1) : null;
          this.checkChar(chr, nextChr);
        }
        this.list.forEach((node) => {
          node.value = (node.value || "").toString().trim();
          if (node.value) {
            list.push(node);
          }
        });
        return list;
      }
      /**
       * Checks if a character is an operator or text and acts accordingly
       *
       * @param {String} chr Character from the address field
       */
      checkChar(chr, nextChr) {
        if (this.escaped) {
        } else if (chr === this.operatorExpecting) {
          this.node = {
            type: "operator",
            value: chr
          };
          if (nextChr && ![" ", "	", "\r", "\n", ",", ";"].includes(nextChr)) {
            this.node.noBreak = true;
          }
          this.list.push(this.node);
          this.node = null;
          this.operatorExpecting = "";
          this.escaped = false;
          return;
        } else if (!this.operatorExpecting && chr in this.operators) {
          this.node = {
            type: "operator",
            value: chr
          };
          this.list.push(this.node);
          this.node = null;
          this.operatorExpecting = this.operators[chr];
          this.escaped = false;
          return;
        } else if (['"', "'"].includes(this.operatorExpecting) && chr === "\\") {
          this.escaped = true;
          return;
        }
        if (!this.node) {
          this.node = {
            type: "text",
            value: ""
          };
          this.list.push(this.node);
        }
        if (chr === "\n") {
          chr = " ";
        }
        if (chr.charCodeAt(0) >= 33 || [" ", "	"].includes(chr)) {
          this.node.value += chr;
        }
        this.escaped = false;
      }
    };
    function addressparser(str, options) {
      options = options || {};
      let tokenizer = new Tokenizer(str);
      let tokens = tokenizer.tokenize();
      let addresses = [];
      let address = [];
      let parsedAddresses = [];
      tokens.forEach((token) => {
        if (token.type === "operator" && (token.value === "," || token.value === ";")) {
          if (address.length) {
            addresses.push(address);
          }
          address = [];
        } else {
          address.push(token);
        }
      });
      if (address.length) {
        addresses.push(address);
      }
      addresses.forEach((address2) => {
        address2 = _handleAddress(address2);
        if (address2.length) {
          parsedAddresses = parsedAddresses.concat(address2);
        }
      });
      if (options.flatten) {
        let addresses2 = [];
        let walkAddressList = /* @__PURE__ */ __name((list) => {
          list.forEach((address2) => {
            if (address2.group) {
              return walkAddressList(address2.group);
            } else {
              addresses2.push(address2);
            }
          });
        }, "walkAddressList");
        walkAddressList(parsedAddresses);
        return addresses2;
      }
      return parsedAddresses;
    }
    __name(addressparser, "addressparser");
    module.exports = addressparser;
  }
});

// node_modules/nodemailer/lib/mime-node/last-newline.js
var require_last_newline = __commonJS({
  "node_modules/nodemailer/lib/mime-node/last-newline.js"(exports, module) {
    "use strict";
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    var Transform = require_stream().Transform;
    var LastNewline = class extends Transform {
      static {
        __name(this, "LastNewline");
      }
      constructor() {
        super();
        this.lastByte = false;
      }
      _transform(chunk, encoding, done) {
        if (chunk.length) {
          this.lastByte = chunk[chunk.length - 1];
        }
        this.push(chunk);
        done();
      }
      _flush(done) {
        if (this.lastByte === 10) {
          return done();
        }
        if (this.lastByte === 13) {
          this.push(Buffer.from("\n"));
          return done();
        }
        this.push(Buffer.from("\r\n"));
        return done();
      }
    };
    module.exports = LastNewline;
  }
});

// node_modules/nodemailer/lib/mime-node/le-windows.js
var require_le_windows = __commonJS({
  "node_modules/nodemailer/lib/mime-node/le-windows.js"(exports, module) {
    "use strict";
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    var stream = require_stream();
    var Transform = stream.Transform;
    var LeWindows = class extends Transform {
      static {
        __name(this, "LeWindows");
      }
      constructor(options) {
        super(options);
        this.options = options || {};
        this.lastByte = false;
      }
      /**
       * Escapes dots
       */
      _transform(chunk, encoding, done) {
        let buf;
        let lastPos = 0;
        for (let i = 0, len = chunk.length; i < len; i++) {
          if (chunk[i] === 10) {
            if (i && chunk[i - 1] !== 13 || !i && this.lastByte !== 13) {
              if (i > lastPos) {
                buf = chunk.slice(lastPos, i);
                this.push(buf);
              }
              this.push(Buffer.from("\r\n"));
              lastPos = i + 1;
            }
          }
        }
        if (lastPos && lastPos < chunk.length) {
          buf = chunk.slice(lastPos);
          this.push(buf);
        } else if (!lastPos) {
          this.push(chunk);
        }
        this.lastByte = chunk[chunk.length - 1];
        done();
      }
    };
    module.exports = LeWindows;
  }
});

// node_modules/nodemailer/lib/mime-node/le-unix.js
var require_le_unix = __commonJS({
  "node_modules/nodemailer/lib/mime-node/le-unix.js"(exports, module) {
    "use strict";
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    var stream = require_stream();
    var Transform = stream.Transform;
    var LeWindows = class extends Transform {
      static {
        __name(this, "LeWindows");
      }
      constructor(options) {
        super(options);
        this.options = options || {};
      }
      /**
       * Escapes dots
       */
      _transform(chunk, encoding, done) {
        let buf;
        let lastPos = 0;
        for (let i = 0, len = chunk.length; i < len; i++) {
          if (chunk[i] === 13) {
            buf = chunk.slice(lastPos, i);
            lastPos = i + 1;
            this.push(buf);
          }
        }
        if (lastPos && lastPos < chunk.length) {
          buf = chunk.slice(lastPos);
          this.push(buf);
        } else if (!lastPos) {
          this.push(chunk);
        }
        done();
      }
    };
    module.exports = LeWindows;
  }
});

// node_modules/nodemailer/lib/mime-node/index.js
var require_mime_node = __commonJS({
  "node_modules/nodemailer/lib/mime-node/index.js"(exports, module) {
    "use strict";
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    var crypto2 = require_crypto();
    var fs = require_fs();
    var punycode = require_punycode();
    var PassThrough = require_stream().PassThrough;
    var shared = require_shared();
    var mimeFuncs = require_mime_funcs();
    var qp = require_qp();
    var base64 = require_base64();
    var addressparser = require_addressparser();
    var nmfetch = require_fetch();
    var LastNewline = require_last_newline();
    var LeWindows = require_le_windows();
    var LeUnix = require_le_unix();
    var MimeNode = class _MimeNode {
      static {
        __name(this, "MimeNode");
      }
      constructor(contentType, options) {
        this.nodeCounter = 0;
        options = options || {};
        this.baseBoundary = options.baseBoundary || crypto2.randomBytes(8).toString("hex");
        this.boundaryPrefix = options.boundaryPrefix || "--_NmP";
        this.disableFileAccess = !!options.disableFileAccess;
        this.disableUrlAccess = !!options.disableUrlAccess;
        this.normalizeHeaderKey = options.normalizeHeaderKey;
        this.date = /* @__PURE__ */ new Date();
        this.rootNode = options.rootNode || this;
        this.keepBcc = !!options.keepBcc;
        if (options.filename) {
          this.filename = options.filename;
          if (!contentType) {
            contentType = mimeFuncs.detectMimeType(this.filename.split(".").pop());
          }
        }
        this.textEncoding = (options.textEncoding || "").toString().trim().charAt(0).toUpperCase();
        this.parentNode = options.parentNode;
        this.hostname = options.hostname;
        this.newline = options.newline;
        this.childNodes = [];
        this._nodeId = ++this.rootNode.nodeCounter;
        this._headers = [];
        this._isPlainText = false;
        this._hasLongLines = false;
        this._envelope = false;
        this._raw = false;
        this._transforms = [];
        this._processFuncs = [];
        if (contentType) {
          this.setHeader("Content-Type", contentType);
        }
      }
      /////// PUBLIC METHODS
      /**
       * Creates and appends a child node.Arguments provided are passed to MimeNode constructor
       *
       * @param {String} [contentType] Optional content type
       * @param {Object} [options] Optional options object
       * @return {Object} Created node object
       */
      createChild(contentType, options) {
        if (!options && typeof contentType === "object") {
          options = contentType;
          contentType = void 0;
        }
        let node = new _MimeNode(contentType, options);
        this.appendChild(node);
        return node;
      }
      /**
       * Appends an existing node to the mime tree. Removes the node from an existing
       * tree if needed
       *
       * @param {Object} childNode node to be appended
       * @return {Object} Appended node object
       */
      appendChild(childNode) {
        if (childNode.rootNode !== this.rootNode) {
          childNode.rootNode = this.rootNode;
          childNode._nodeId = ++this.rootNode.nodeCounter;
        }
        childNode.parentNode = this;
        this.childNodes.push(childNode);
        return childNode;
      }
      /**
       * Replaces current node with another node
       *
       * @param {Object} node Replacement node
       * @return {Object} Replacement node
       */
      replace(node) {
        if (node === this) {
          return this;
        }
        this.parentNode.childNodes.forEach((childNode, i) => {
          if (childNode === this) {
            node.rootNode = this.rootNode;
            node.parentNode = this.parentNode;
            node._nodeId = this._nodeId;
            this.rootNode = this;
            this.parentNode = void 0;
            node.parentNode.childNodes[i] = node;
          }
        });
        return node;
      }
      /**
       * Removes current node from the mime tree
       *
       * @return {Object} removed node
       */
      remove() {
        if (!this.parentNode) {
          return this;
        }
        for (let i = this.parentNode.childNodes.length - 1; i >= 0; i--) {
          if (this.parentNode.childNodes[i] === this) {
            this.parentNode.childNodes.splice(i, 1);
            this.parentNode = void 0;
            this.rootNode = this;
            return this;
          }
        }
      }
      /**
       * Sets a header value. If the value for selected key exists, it is overwritten.
       * You can set multiple values as well by using [{key:'', value:''}] or
       * {key: 'value'} as the first argument.
       *
       * @param {String|Array|Object} key Header key or a list of key value pairs
       * @param {String} value Header value
       * @return {Object} current node
       */
      setHeader(key, value) {
        let added = false, headerValue;
        if (!value && key && typeof key === "object") {
          if (key.key && "value" in key) {
            this.setHeader(key.key, key.value);
          } else if (Array.isArray(key)) {
            key.forEach((i) => {
              this.setHeader(i.key, i.value);
            });
          } else {
            Object.keys(key).forEach((i) => {
              this.setHeader(i, key[i]);
            });
          }
          return this;
        }
        key = this._normalizeHeaderKey(key);
        headerValue = {
          key,
          value
        };
        for (let i = 0, len = this._headers.length; i < len; i++) {
          if (this._headers[i].key === key) {
            if (!added) {
              this._headers[i] = headerValue;
              added = true;
            } else {
              this._headers.splice(i, 1);
              i--;
              len--;
            }
          }
        }
        if (!added) {
          this._headers.push(headerValue);
        }
        return this;
      }
      /**
       * Adds a header value. If the value for selected key exists, the value is appended
       * as a new field and old one is not touched.
       * You can set multiple values as well by using [{key:'', value:''}] or
       * {key: 'value'} as the first argument.
       *
       * @param {String|Array|Object} key Header key or a list of key value pairs
       * @param {String} value Header value
       * @return {Object} current node
       */
      addHeader(key, value) {
        if (!value && key && typeof key === "object") {
          if (key.key && key.value) {
            this.addHeader(key.key, key.value);
          } else if (Array.isArray(key)) {
            key.forEach((i) => {
              this.addHeader(i.key, i.value);
            });
          } else {
            Object.keys(key).forEach((i) => {
              this.addHeader(i, key[i]);
            });
          }
          return this;
        } else if (Array.isArray(value)) {
          value.forEach((val) => {
            this.addHeader(key, val);
          });
          return this;
        }
        this._headers.push({
          key: this._normalizeHeaderKey(key),
          value
        });
        return this;
      }
      /**
       * Retrieves the first mathcing value of a selected key
       *
       * @param {String} key Key to search for
       * @retun {String} Value for the key
       */
      getHeader(key) {
        key = this._normalizeHeaderKey(key);
        for (let i = 0, len = this._headers.length; i < len; i++) {
          if (this._headers[i].key === key) {
            return this._headers[i].value;
          }
        }
      }
      /**
       * Sets body content for current node. If the value is a string, charset is added automatically
       * to Content-Type (if it is text/*). If the value is a Buffer, you need to specify
       * the charset yourself
       *
       * @param (String|Buffer) content Body content
       * @return {Object} current node
       */
      setContent(content) {
        this.content = content;
        if (typeof this.content.pipe === "function") {
          this._contentErrorHandler = (err) => {
            this.content.removeListener("error", this._contentErrorHandler);
            this.content = err;
          };
          this.content.once("error", this._contentErrorHandler);
        } else if (typeof this.content === "string") {
          this._isPlainText = mimeFuncs.isPlainText(this.content);
          if (this._isPlainText && mimeFuncs.hasLongerLines(this.content, 76)) {
            this._hasLongLines = true;
          }
        }
        return this;
      }
      build(callback) {
        let promise;
        if (!callback) {
          promise = new Promise((resolve, reject) => {
            callback = shared.callbackPromise(resolve, reject);
          });
        }
        let stream = this.createReadStream();
        let buf = [];
        let buflen = 0;
        let returned = false;
        stream.on("readable", () => {
          let chunk;
          while ((chunk = stream.read()) !== null) {
            buf.push(chunk);
            buflen += chunk.length;
          }
        });
        stream.once("error", (err) => {
          if (returned) {
            return;
          }
          returned = true;
          return callback(err);
        });
        stream.once("end", (chunk) => {
          if (returned) {
            return;
          }
          returned = true;
          if (chunk && chunk.length) {
            buf.push(chunk);
            buflen += chunk.length;
          }
          return callback(null, Buffer.concat(buf, buflen));
        });
        return promise;
      }
      getTransferEncoding() {
        let transferEncoding = false;
        let contentType = (this.getHeader("Content-Type") || "").toString().toLowerCase().trim();
        if (this.content) {
          transferEncoding = (this.getHeader("Content-Transfer-Encoding") || "").toString().toLowerCase().trim();
          if (!transferEncoding || !["base64", "quoted-printable"].includes(transferEncoding)) {
            if (/^text\//i.test(contentType)) {
              if (this._isPlainText && !this._hasLongLines) {
                transferEncoding = "7bit";
              } else if (typeof this.content === "string" || this.content instanceof Buffer) {
                transferEncoding = this._getTextEncoding(this.content) === "Q" ? "quoted-printable" : "base64";
              } else {
                transferEncoding = this.textEncoding === "B" ? "base64" : "quoted-printable";
              }
            } else if (!/^(multipart|message)\//i.test(contentType)) {
              transferEncoding = transferEncoding || "base64";
            }
          }
        }
        return transferEncoding;
      }
      /**
       * Builds the header block for the mime node. Append \r\n\r\n before writing the content
       *
       * @returns {String} Headers
       */
      buildHeaders() {
        let transferEncoding = this.getTransferEncoding();
        let headers = [];
        if (transferEncoding) {
          this.setHeader("Content-Transfer-Encoding", transferEncoding);
        }
        if (this.filename && !this.getHeader("Content-Disposition")) {
          this.setHeader("Content-Disposition", "attachment");
        }
        if (this.rootNode === this) {
          if (!this.getHeader("Date")) {
            this.setHeader("Date", this.date.toUTCString().replace(/GMT/, "+0000"));
          }
          this.messageId();
          if (!this.getHeader("MIME-Version")) {
            this.setHeader("MIME-Version", "1.0");
          }
          for (let i = this._headers.length - 2; i >= 0; i--) {
            let header = this._headers[i];
            if (header.key === "Content-Type") {
              this._headers.splice(i, 1);
              this._headers.push(header);
            }
          }
        }
        this._headers.forEach((header) => {
          let key = header.key;
          let value = header.value;
          let structured;
          let param;
          let options = {};
          let formattedHeaders = ["From", "Sender", "To", "Cc", "Bcc", "Reply-To", "Date", "References"];
          if (value && typeof value === "object" && !formattedHeaders.includes(key)) {
            Object.keys(value).forEach((key2) => {
              if (key2 !== "value") {
                options[key2] = value[key2];
              }
            });
            value = (value.value || "").toString();
            if (!value.trim()) {
              return;
            }
          }
          if (options.prepared) {
            if (options.foldLines) {
              headers.push(mimeFuncs.foldLines(key + ": " + value));
            } else {
              headers.push(key + ": " + value);
            }
            return;
          }
          switch (header.key) {
            case "Content-Disposition":
              structured = mimeFuncs.parseHeaderValue(value);
              if (this.filename) {
                structured.params.filename = this.filename;
              }
              value = mimeFuncs.buildHeaderValue(structured);
              break;
            case "Content-Type":
              structured = mimeFuncs.parseHeaderValue(value);
              this._handleContentType(structured);
              if (structured.value.match(/^text\/plain\b/) && typeof this.content === "string" && /[\u0080-\uFFFF]/.test(this.content)) {
                structured.params.charset = "utf-8";
              }
              value = mimeFuncs.buildHeaderValue(structured);
              if (this.filename) {
                param = this._encodeWords(this.filename);
                if (param !== this.filename || /[\s'"\\;:/=(),<>@[\]?]|^-/.test(param)) {
                  param = '"' + param + '"';
                }
                value += "; name=" + param;
              }
              break;
            case "Bcc":
              if (!this.keepBcc) {
                return;
              }
              break;
          }
          value = this._encodeHeaderValue(key, value);
          if (!(value || "").toString().trim()) {
            return;
          }
          if (typeof this.normalizeHeaderKey === "function") {
            let normalized = this.normalizeHeaderKey(key, value);
            if (normalized && typeof normalized === "string" && normalized.length) {
              key = normalized;
            }
          }
          headers.push(mimeFuncs.foldLines(key + ": " + value, 76));
        });
        return headers.join("\r\n");
      }
      /**
       * Streams the rfc2822 message from the current node. If this is a root node,
       * mandatory header fields are set if missing (Date, Message-Id, MIME-Version)
       *
       * @return {String} Compiled message
       */
      createReadStream(options) {
        options = options || {};
        let stream = new PassThrough(options);
        let outputStream = stream;
        let transform;
        this.stream(stream, options, (err) => {
          if (err) {
            outputStream.emit("error", err);
            return;
          }
          stream.end();
        });
        for (let i = 0, len = this._transforms.length; i < len; i++) {
          transform = typeof this._transforms[i] === "function" ? this._transforms[i]() : this._transforms[i];
          outputStream.once("error", (err) => {
            transform.emit("error", err);
          });
          outputStream = outputStream.pipe(transform);
        }
        transform = new LastNewline();
        outputStream.once("error", (err) => {
          transform.emit("error", err);
        });
        outputStream = outputStream.pipe(transform);
        for (let i = 0, len = this._processFuncs.length; i < len; i++) {
          transform = this._processFuncs[i];
          outputStream = transform(outputStream);
        }
        if (this.newline) {
          const winbreak = ["win", "windows", "dos", "\r\n"].includes(this.newline.toString().toLowerCase());
          const newlineTransform = winbreak ? new LeWindows() : new LeUnix();
          const stream2 = outputStream.pipe(newlineTransform);
          outputStream.on("error", (err) => stream2.emit("error", err));
          return stream2;
        }
        return outputStream;
      }
      /**
       * Appends a transform stream object to the transforms list. Final output
       * is passed through this stream before exposing
       *
       * @param {Object} transform Read-Write stream
       */
      transform(transform) {
        this._transforms.push(transform);
      }
      /**
       * Appends a post process function. The functon is run after transforms and
       * uses the following syntax
       *
       *   processFunc(input) -> outputStream
       *
       * @param {Object} processFunc Read-Write stream
       */
      processFunc(processFunc) {
        this._processFuncs.push(processFunc);
      }
      stream(outputStream, options, done) {
        let transferEncoding = this.getTransferEncoding();
        let contentStream;
        let localStream;
        let returned = false;
        let callback = /* @__PURE__ */ __name((err) => {
          if (returned) {
            return;
          }
          returned = true;
          done(err);
        }, "callback");
        let finalize = /* @__PURE__ */ __name(() => {
          let childId = 0;
          let processChildNode = /* @__PURE__ */ __name(() => {
            if (childId >= this.childNodes.length) {
              outputStream.write("\r\n--" + this.boundary + "--\r\n");
              return callback();
            }
            let child = this.childNodes[childId++];
            outputStream.write((childId > 1 ? "\r\n" : "") + "--" + this.boundary + "\r\n");
            child.stream(outputStream, options, (err) => {
              if (err) {
                return callback(err);
              }
              setImmediate(processChildNode);
            });
          }, "processChildNode");
          if (this.multipart) {
            setImmediate(processChildNode);
          } else {
            return callback();
          }
        }, "finalize");
        let sendContent = /* @__PURE__ */ __name(() => {
          if (this.content) {
            if (Object.prototype.toString.call(this.content) === "[object Error]") {
              return callback(this.content);
            }
            if (typeof this.content.pipe === "function") {
              this.content.removeListener("error", this._contentErrorHandler);
              this._contentErrorHandler = (err) => callback(err);
              this.content.once("error", this._contentErrorHandler);
            }
            let createStream = /* @__PURE__ */ __name(() => {
              if (["quoted-printable", "base64"].includes(transferEncoding)) {
                contentStream = new (transferEncoding === "base64" ? base64 : qp).Encoder(options);
                contentStream.pipe(outputStream, {
                  end: false
                });
                contentStream.once("end", finalize);
                contentStream.once("error", (err) => callback(err));
                localStream = this._getStream(this.content);
                localStream.pipe(contentStream);
              } else {
                localStream = this._getStream(this.content);
                localStream.pipe(outputStream, {
                  end: false
                });
                localStream.once("end", finalize);
              }
              localStream.once("error", (err) => callback(err));
            }, "createStream");
            if (this.content._resolve) {
              let chunks = [];
              let chunklen = 0;
              let returned2 = false;
              let sourceStream = this._getStream(this.content);
              sourceStream.on("error", (err) => {
                if (returned2) {
                  return;
                }
                returned2 = true;
                callback(err);
              });
              sourceStream.on("readable", () => {
                let chunk;
                while ((chunk = sourceStream.read()) !== null) {
                  chunks.push(chunk);
                  chunklen += chunk.length;
                }
              });
              sourceStream.on("end", () => {
                if (returned2) {
                  return;
                }
                returned2 = true;
                this.content._resolve = false;
                this.content._resolvedValue = Buffer.concat(chunks, chunklen);
                setImmediate(createStream);
              });
            } else {
              setImmediate(createStream);
            }
            return;
          } else {
            return setImmediate(finalize);
          }
        }, "sendContent");
        if (this._raw) {
          setImmediate(() => {
            if (Object.prototype.toString.call(this._raw) === "[object Error]") {
              return callback(this._raw);
            }
            if (typeof this._raw.pipe === "function") {
              this._raw.removeListener("error", this._contentErrorHandler);
            }
            let raw2 = this._getStream(this._raw);
            raw2.pipe(outputStream, {
              end: false
            });
            raw2.on("error", (err) => outputStream.emit("error", err));
            raw2.on("end", finalize);
          });
        } else {
          outputStream.write(this.buildHeaders() + "\r\n\r\n");
          setImmediate(sendContent);
        }
      }
      /**
       * Sets envelope to be used instead of the generated one
       *
       * @return {Object} SMTP envelope in the form of {from: 'from@example.com', to: ['to@example.com']}
       */
      setEnvelope(envelope) {
        let list;
        this._envelope = {
          from: false,
          to: []
        };
        if (envelope.from) {
          list = [];
          this._convertAddresses(this._parseAddresses(envelope.from), list);
          list = list.filter((address) => address && address.address);
          if (list.length && list[0]) {
            this._envelope.from = list[0].address;
          }
        }
        ["to", "cc", "bcc"].forEach((key) => {
          if (envelope[key]) {
            this._convertAddresses(this._parseAddresses(envelope[key]), this._envelope.to);
          }
        });
        this._envelope.to = this._envelope.to.map((to) => to.address).filter((address) => address);
        let standardFields = ["to", "cc", "bcc", "from"];
        Object.keys(envelope).forEach((key) => {
          if (!standardFields.includes(key)) {
            this._envelope[key] = envelope[key];
          }
        });
        return this;
      }
      /**
       * Generates and returns an object with parsed address fields
       *
       * @return {Object} Address object
       */
      getAddresses() {
        let addresses = {};
        this._headers.forEach((header) => {
          let key = header.key.toLowerCase();
          if (["from", "sender", "reply-to", "to", "cc", "bcc"].includes(key)) {
            if (!Array.isArray(addresses[key])) {
              addresses[key] = [];
            }
            this._convertAddresses(this._parseAddresses(header.value), addresses[key]);
          }
        });
        return addresses;
      }
      /**
       * Generates and returns SMTP envelope with the sender address and a list of recipients addresses
       *
       * @return {Object} SMTP envelope in the form of {from: 'from@example.com', to: ['to@example.com']}
       */
      getEnvelope() {
        if (this._envelope) {
          return this._envelope;
        }
        let envelope = {
          from: false,
          to: []
        };
        this._headers.forEach((header) => {
          let list = [];
          if (header.key === "From" || !envelope.from && ["Reply-To", "Sender"].includes(header.key)) {
            this._convertAddresses(this._parseAddresses(header.value), list);
            if (list.length && list[0]) {
              envelope.from = list[0].address;
            }
          } else if (["To", "Cc", "Bcc"].includes(header.key)) {
            this._convertAddresses(this._parseAddresses(header.value), envelope.to);
          }
        });
        envelope.to = envelope.to.map((to) => to.address);
        return envelope;
      }
      /**
       * Returns Message-Id value. If it does not exist, then creates one
       *
       * @return {String} Message-Id value
       */
      messageId() {
        let messageId = this.getHeader("Message-ID");
        if (!messageId) {
          messageId = this._generateMessageId();
          this.setHeader("Message-ID", messageId);
        }
        return messageId;
      }
      /**
       * Sets pregenerated content that will be used as the output of this node
       *
       * @param {String|Buffer|Stream} Raw MIME contents
       */
      setRaw(raw2) {
        this._raw = raw2;
        if (this._raw && typeof this._raw.pipe === "function") {
          this._contentErrorHandler = (err) => {
            this._raw.removeListener("error", this._contentErrorHandler);
            this._raw = err;
          };
          this._raw.once("error", this._contentErrorHandler);
        }
        return this;
      }
      /////// PRIVATE METHODS
      /**
       * Detects and returns handle to a stream related with the content.
       *
       * @param {Mixed} content Node content
       * @returns {Object} Stream object
       */
      _getStream(content) {
        let contentStream;
        if (content._resolvedValue) {
          contentStream = new PassThrough();
          setImmediate(() => {
            try {
              contentStream.end(content._resolvedValue);
            } catch (err) {
              contentStream.emit("error", err);
            }
          });
          return contentStream;
        } else if (typeof content.pipe === "function") {
          return content;
        } else if (content && typeof content.path === "string" && !content.href) {
          if (this.disableFileAccess) {
            contentStream = new PassThrough();
            setImmediate(() => contentStream.emit("error", new Error("File access rejected for " + content.path)));
            return contentStream;
          }
          return fs.createReadStream(content.path);
        } else if (content && typeof content.href === "string") {
          if (this.disableUrlAccess) {
            contentStream = new PassThrough();
            setImmediate(() => contentStream.emit("error", new Error("Url access rejected for " + content.href)));
            return contentStream;
          }
          return nmfetch(content.href, { headers: content.httpHeaders });
        } else {
          contentStream = new PassThrough();
          setImmediate(() => {
            try {
              contentStream.end(content || "");
            } catch (err) {
              contentStream.emit("error", err);
            }
          });
          return contentStream;
        }
      }
      /**
       * Parses addresses. Takes in a single address or an array or an
       * array of address arrays (eg. To: [[first group], [second group],...])
       *
       * @param {Mixed} addresses Addresses to be parsed
       * @return {Array} An array of address objects
       */
      _parseAddresses(addresses) {
        return [].concat.apply(
          [],
          [].concat(addresses).map((address) => {
            if (address && address.address) {
              address.address = this._normalizeAddress(address.address);
              address.name = address.name || "";
              return [address];
            }
            return addressparser(address);
          })
        );
      }
      /**
       * Normalizes a header key, uses Camel-Case form, except for uppercase MIME-
       *
       * @param {String} key Key to be normalized
       * @return {String} key in Camel-Case form
       */
      _normalizeHeaderKey(key) {
        key = (key || "").toString().replace(/\r?\n|\r/g, " ").trim().toLowerCase().replace(/^X-SMTPAPI$|^(MIME|DKIM|ARC|BIMI)\b|^[a-z]|-(SPF|FBL|ID|MD5)$|-[a-z]/gi, (c) => c.toUpperCase()).replace(/^Content-Features$/i, "Content-features");
        return key;
      }
      /**
       * Checks if the content type is multipart and defines boundary if needed.
       * Doesn't return anything, modifies object argument instead.
       *
       * @param {Object} structured Parsed header value for 'Content-Type' key
       */
      _handleContentType(structured) {
        this.contentType = structured.value.trim().toLowerCase();
        this.multipart = /^multipart\//i.test(this.contentType) ? this.contentType.substr(this.contentType.indexOf("/") + 1) : false;
        if (this.multipart) {
          this.boundary = structured.params.boundary = structured.params.boundary || this.boundary || this._generateBoundary();
        } else {
          this.boundary = false;
        }
      }
      /**
       * Generates a multipart boundary value
       *
       * @return {String} boundary value
       */
      _generateBoundary() {
        return this.rootNode.boundaryPrefix + "-" + this.rootNode.baseBoundary + "-Part_" + this._nodeId;
      }
      /**
       * Encodes a header value for use in the generated rfc2822 email.
       *
       * @param {String} key Header key
       * @param {String} value Header value
       */
      _encodeHeaderValue(key, value) {
        key = this._normalizeHeaderKey(key);
        switch (key) {
          // Structured headers
          case "From":
          case "Sender":
          case "To":
          case "Cc":
          case "Bcc":
          case "Reply-To":
            return this._convertAddresses(this._parseAddresses(value));
          // values enclosed in <>
          case "Message-ID":
          case "In-Reply-To":
          case "Content-Id":
            value = (value || "").toString().replace(/\r?\n|\r/g, " ");
            if (value.charAt(0) !== "<") {
              value = "<" + value;
            }
            if (value.charAt(value.length - 1) !== ">") {
              value = value + ">";
            }
            return value;
          // space separated list of values enclosed in <>
          case "References":
            value = [].concat.apply(
              [],
              [].concat(value || "").map((elm) => {
                elm = (elm || "").toString().replace(/\r?\n|\r/g, " ").trim();
                return elm.replace(/<[^>]*>/g, (str) => str.replace(/\s/g, "")).split(/\s+/);
              })
            ).map((elm) => {
              if (elm.charAt(0) !== "<") {
                elm = "<" + elm;
              }
              if (elm.charAt(elm.length - 1) !== ">") {
                elm = elm + ">";
              }
              return elm;
            });
            return value.join(" ").trim();
          case "Date":
            if (Object.prototype.toString.call(value) === "[object Date]") {
              return value.toUTCString().replace(/GMT/, "+0000");
            }
            value = (value || "").toString().replace(/\r?\n|\r/g, " ");
            return this._encodeWords(value);
          case "Content-Type":
          case "Content-Disposition":
            return (value || "").toString().replace(/\r?\n|\r/g, " ");
          default:
            value = (value || "").toString().replace(/\r?\n|\r/g, " ");
            return this._encodeWords(value);
        }
      }
      /**
       * Rebuilds address object using punycode and other adjustments
       *
       * @param {Array} addresses An array of address objects
       * @param {Array} [uniqueList] An array to be populated with addresses
       * @return {String} address string
       */
      _convertAddresses(addresses, uniqueList) {
        let values = [];
        uniqueList = uniqueList || [];
        [].concat(addresses || []).forEach((address) => {
          if (address.address) {
            address.address = this._normalizeAddress(address.address);
            if (!address.name) {
              values.push(address.address.indexOf(" ") >= 0 ? `<${address.address}>` : `${address.address}`);
            } else if (address.name) {
              values.push(`${this._encodeAddressName(address.name)} <${address.address}>`);
            }
            if (address.address) {
              if (!uniqueList.filter((a) => a.address === address.address).length) {
                uniqueList.push(address);
              }
            }
          } else if (address.group) {
            let groupListAddresses = (address.group.length ? this._convertAddresses(address.group, uniqueList) : "").trim();
            values.push(`${this._encodeAddressName(address.name)}:${groupListAddresses};`);
          }
        });
        return values.join(", ");
      }
      /**
       * Normalizes an email address
       *
       * @param {Array} address An array of address objects
       * @return {String} address string
       */
      _normalizeAddress(address) {
        address = (address || "").toString().replace(/[\x00-\x1F<>]+/g, " ").trim();
        let lastAt = address.lastIndexOf("@");
        if (lastAt < 0) {
          return address;
        }
        let user2 = address.substr(0, lastAt);
        let domain2 = address.substr(lastAt + 1);
        let encodedDomain;
        try {
          encodedDomain = punycode.toASCII(domain2.toLowerCase());
        } catch (err) {
        }
        if (user2.indexOf(" ") >= 0) {
          if (user2.charAt(0) !== '"') {
            user2 = '"' + user2;
          }
          if (user2.substr(-1) !== '"') {
            user2 = user2 + '"';
          }
        }
        return `${user2}@${encodedDomain}`;
      }
      /**
       * If needed, mime encodes the name part
       *
       * @param {String} name Name part of an address
       * @returns {String} Mime word encoded string if needed
       */
      _encodeAddressName(name) {
        if (!/^[\w ]*$/.test(name)) {
          if (/^[\x20-\x7e]*$/.test(name)) {
            return '"' + name.replace(/([\\"])/g, "\\$1") + '"';
          } else {
            return mimeFuncs.encodeWord(name, this._getTextEncoding(name), 52);
          }
        }
        return name;
      }
      /**
       * If needed, mime encodes the name part
       *
       * @param {String} name Name part of an address
       * @returns {String} Mime word encoded string if needed
       */
      _encodeWords(value) {
        return mimeFuncs.encodeWords(value, this._getTextEncoding(value), 52, true);
      }
      /**
       * Detects best mime encoding for a text value
       *
       * @param {String} value Value to check for
       * @return {String} either 'Q' or 'B'
       */
      _getTextEncoding(value) {
        value = (value || "").toString();
        let encoding = this.textEncoding;
        let latinLen;
        let nonLatinLen;
        if (!encoding) {
          nonLatinLen = (value.match(/[\x00-\x08\x0B\x0C\x0E-\x1F\u0080-\uFFFF]/g) || []).length;
          latinLen = (value.match(/[a-z]/gi) || []).length;
          encoding = nonLatinLen < latinLen ? "Q" : "B";
        }
        return encoding;
      }
      /**
       * Generates a message id
       *
       * @return {String} Random Message-ID value
       */
      _generateMessageId() {
        return "<" + [2, 2, 2, 6].reduce(
          // crux to generate UUID-like random strings
          (prev, len) => prev + "-" + crypto2.randomBytes(len).toString("hex"),
          crypto2.randomBytes(4).toString("hex")
        ) + "@" + // try to use the domain of the FROM address or fallback to server hostname
        (this.getEnvelope().from || this.hostname || "localhost").split("@").pop() + ">";
      }
    };
    module.exports = MimeNode;
  }
});

// node_modules/nodemailer/lib/mail-composer/index.js
var require_mail_composer = __commonJS({
  "node_modules/nodemailer/lib/mail-composer/index.js"(exports, module) {
    "use strict";
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    var MimeNode = require_mime_node();
    var mimeFuncs = require_mime_funcs();
    var parseDataURI = require_shared().parseDataURI;
    var MailComposer = class {
      static {
        __name(this, "MailComposer");
      }
      constructor(mail) {
        this.mail = mail || {};
        this.message = false;
      }
      /**
       * Builds MimeNode instance
       */
      compile() {
        this._alternatives = this.getAlternatives();
        this._htmlNode = this._alternatives.filter((alternative) => /^text\/html\b/i.test(alternative.contentType)).pop();
        this._attachments = this.getAttachments(!!this._htmlNode);
        this._useRelated = !!(this._htmlNode && this._attachments.related.length);
        this._useAlternative = this._alternatives.length > 1;
        this._useMixed = this._attachments.attached.length > 1 || this._alternatives.length && this._attachments.attached.length === 1;
        if (this.mail.raw) {
          this.message = new MimeNode("message/rfc822", { newline: this.mail.newline }).setRaw(this.mail.raw);
        } else if (this._useMixed) {
          this.message = this._createMixed();
        } else if (this._useAlternative) {
          this.message = this._createAlternative();
        } else if (this._useRelated) {
          this.message = this._createRelated();
        } else {
          this.message = this._createContentNode(
            false,
            [].concat(this._alternatives || []).concat(this._attachments.attached || []).shift() || {
              contentType: "text/plain",
              content: ""
            }
          );
        }
        if (this.mail.headers) {
          this.message.addHeader(this.mail.headers);
        }
        ["from", "sender", "to", "cc", "bcc", "reply-to", "in-reply-to", "references", "subject", "message-id", "date"].forEach((header) => {
          let key = header.replace(/-(\w)/g, (o, c) => c.toUpperCase());
          if (this.mail[key]) {
            this.message.setHeader(header, this.mail[key]);
          }
        });
        if (this.mail.envelope) {
          this.message.setEnvelope(this.mail.envelope);
        }
        this.message.messageId();
        return this.message;
      }
      /**
       * List all attachments. Resulting attachment objects can be used as input for MimeNode nodes
       *
       * @param {Boolean} findRelated If true separate related attachments from attached ones
       * @returns {Object} An object of arrays (`related` and `attached`)
       */
      getAttachments(findRelated) {
        let icalEvent, eventObject;
        let attachments = [].concat(this.mail.attachments || []).map((attachment, i) => {
          let data;
          if (/^data:/i.test(attachment.path || attachment.href)) {
            attachment = this._processDataUrl(attachment);
          }
          let contentType = attachment.contentType || mimeFuncs.detectMimeType(attachment.filename || attachment.path || attachment.href || "bin");
          let isImage = /^image\//i.test(contentType);
          let isMessageNode = /^message\//i.test(contentType);
          let contentDisposition = attachment.contentDisposition || (isMessageNode || isImage && attachment.cid ? "inline" : "attachment");
          let contentTransferEncoding;
          if ("contentTransferEncoding" in attachment) {
            contentTransferEncoding = attachment.contentTransferEncoding;
          } else if (isMessageNode) {
            contentTransferEncoding = "7bit";
          } else {
            contentTransferEncoding = "base64";
          }
          data = {
            contentType,
            contentDisposition,
            contentTransferEncoding
          };
          if (attachment.filename) {
            data.filename = attachment.filename;
          } else if (!isMessageNode && attachment.filename !== false) {
            data.filename = (attachment.path || attachment.href || "").split("/").pop().split("?").shift() || "attachment-" + (i + 1);
            if (data.filename.indexOf(".") < 0) {
              data.filename += "." + mimeFuncs.detectExtension(data.contentType);
            }
          }
          if (/^https?:\/\//i.test(attachment.path)) {
            attachment.href = attachment.path;
            attachment.path = void 0;
          }
          if (attachment.cid) {
            data.cid = attachment.cid;
          }
          if (attachment.raw) {
            data.raw = attachment.raw;
          } else if (attachment.path) {
            data.content = {
              path: attachment.path
            };
          } else if (attachment.href) {
            data.content = {
              href: attachment.href,
              httpHeaders: attachment.httpHeaders
            };
          } else {
            data.content = attachment.content || "";
          }
          if (attachment.encoding) {
            data.encoding = attachment.encoding;
          }
          if (attachment.headers) {
            data.headers = attachment.headers;
          }
          return data;
        });
        if (this.mail.icalEvent) {
          if (typeof this.mail.icalEvent === "object" && (this.mail.icalEvent.content || this.mail.icalEvent.path || this.mail.icalEvent.href || this.mail.icalEvent.raw)) {
            icalEvent = this.mail.icalEvent;
          } else {
            icalEvent = {
              content: this.mail.icalEvent
            };
          }
          eventObject = {};
          Object.keys(icalEvent).forEach((key) => {
            eventObject[key] = icalEvent[key];
          });
          eventObject.contentType = "application/ics";
          if (!eventObject.headers) {
            eventObject.headers = {};
          }
          eventObject.filename = eventObject.filename || "invite.ics";
          eventObject.headers["Content-Disposition"] = "attachment";
          eventObject.headers["Content-Transfer-Encoding"] = "base64";
        }
        if (!findRelated) {
          return {
            attached: attachments.concat(eventObject || []),
            related: []
          };
        } else {
          return {
            attached: attachments.filter((attachment) => !attachment.cid).concat(eventObject || []),
            related: attachments.filter((attachment) => !!attachment.cid)
          };
        }
      }
      /**
       * List alternatives. Resulting objects can be used as input for MimeNode nodes
       *
       * @returns {Array} An array of alternative elements. Includes the `text` and `html` values as well
       */
      getAlternatives() {
        let alternatives = [], text, html, watchHtml, amp, icalEvent, eventObject;
        if (this.mail.text) {
          if (typeof this.mail.text === "object" && (this.mail.text.content || this.mail.text.path || this.mail.text.href || this.mail.text.raw)) {
            text = this.mail.text;
          } else {
            text = {
              content: this.mail.text
            };
          }
          text.contentType = "text/plain; charset=utf-8";
        }
        if (this.mail.watchHtml) {
          if (typeof this.mail.watchHtml === "object" && (this.mail.watchHtml.content || this.mail.watchHtml.path || this.mail.watchHtml.href || this.mail.watchHtml.raw)) {
            watchHtml = this.mail.watchHtml;
          } else {
            watchHtml = {
              content: this.mail.watchHtml
            };
          }
          watchHtml.contentType = "text/watch-html; charset=utf-8";
        }
        if (this.mail.amp) {
          if (typeof this.mail.amp === "object" && (this.mail.amp.content || this.mail.amp.path || this.mail.amp.href || this.mail.amp.raw)) {
            amp = this.mail.amp;
          } else {
            amp = {
              content: this.mail.amp
            };
          }
          amp.contentType = "text/x-amp-html; charset=utf-8";
        }
        if (this.mail.icalEvent) {
          if (typeof this.mail.icalEvent === "object" && (this.mail.icalEvent.content || this.mail.icalEvent.path || this.mail.icalEvent.href || this.mail.icalEvent.raw)) {
            icalEvent = this.mail.icalEvent;
          } else {
            icalEvent = {
              content: this.mail.icalEvent
            };
          }
          eventObject = {};
          Object.keys(icalEvent).forEach((key) => {
            eventObject[key] = icalEvent[key];
          });
          if (eventObject.content && typeof eventObject.content === "object") {
            eventObject.content._resolve = true;
          }
          eventObject.filename = false;
          eventObject.contentType = "text/calendar; charset=utf-8; method=" + (eventObject.method || "PUBLISH").toString().trim().toUpperCase();
          if (!eventObject.headers) {
            eventObject.headers = {};
          }
        }
        if (this.mail.html) {
          if (typeof this.mail.html === "object" && (this.mail.html.content || this.mail.html.path || this.mail.html.href || this.mail.html.raw)) {
            html = this.mail.html;
          } else {
            html = {
              content: this.mail.html
            };
          }
          html.contentType = "text/html; charset=utf-8";
        }
        [].concat(text || []).concat(watchHtml || []).concat(amp || []).concat(html || []).concat(eventObject || []).concat(this.mail.alternatives || []).forEach((alternative) => {
          let data;
          if (/^data:/i.test(alternative.path || alternative.href)) {
            alternative = this._processDataUrl(alternative);
          }
          data = {
            contentType: alternative.contentType || mimeFuncs.detectMimeType(alternative.filename || alternative.path || alternative.href || "txt"),
            contentTransferEncoding: alternative.contentTransferEncoding
          };
          if (alternative.filename) {
            data.filename = alternative.filename;
          }
          if (/^https?:\/\//i.test(alternative.path)) {
            alternative.href = alternative.path;
            alternative.path = void 0;
          }
          if (alternative.raw) {
            data.raw = alternative.raw;
          } else if (alternative.path) {
            data.content = {
              path: alternative.path
            };
          } else if (alternative.href) {
            data.content = {
              href: alternative.href
            };
          } else {
            data.content = alternative.content || "";
          }
          if (alternative.encoding) {
            data.encoding = alternative.encoding;
          }
          if (alternative.headers) {
            data.headers = alternative.headers;
          }
          alternatives.push(data);
        });
        return alternatives;
      }
      /**
       * Builds multipart/mixed node. It should always contain different type of elements on the same level
       * eg. text + attachments
       *
       * @param {Object} parentNode Parent for this note. If it does not exist, a root node is created
       * @returns {Object} MimeNode node element
       */
      _createMixed(parentNode) {
        let node;
        if (!parentNode) {
          node = new MimeNode("multipart/mixed", {
            baseBoundary: this.mail.baseBoundary,
            textEncoding: this.mail.textEncoding,
            boundaryPrefix: this.mail.boundaryPrefix,
            disableUrlAccess: this.mail.disableUrlAccess,
            disableFileAccess: this.mail.disableFileAccess,
            normalizeHeaderKey: this.mail.normalizeHeaderKey,
            newline: this.mail.newline
          });
        } else {
          node = parentNode.createChild("multipart/mixed", {
            disableUrlAccess: this.mail.disableUrlAccess,
            disableFileAccess: this.mail.disableFileAccess,
            normalizeHeaderKey: this.mail.normalizeHeaderKey,
            newline: this.mail.newline
          });
        }
        if (this._useAlternative) {
          this._createAlternative(node);
        } else if (this._useRelated) {
          this._createRelated(node);
        }
        [].concat(!this._useAlternative && this._alternatives || []).concat(this._attachments.attached || []).forEach((element) => {
          if (!this._useRelated || element !== this._htmlNode) {
            this._createContentNode(node, element);
          }
        });
        return node;
      }
      /**
       * Builds multipart/alternative node. It should always contain same type of elements on the same level
       * eg. text + html view of the same data
       *
       * @param {Object} parentNode Parent for this note. If it does not exist, a root node is created
       * @returns {Object} MimeNode node element
       */
      _createAlternative(parentNode) {
        let node;
        if (!parentNode) {
          node = new MimeNode("multipart/alternative", {
            baseBoundary: this.mail.baseBoundary,
            textEncoding: this.mail.textEncoding,
            boundaryPrefix: this.mail.boundaryPrefix,
            disableUrlAccess: this.mail.disableUrlAccess,
            disableFileAccess: this.mail.disableFileAccess,
            normalizeHeaderKey: this.mail.normalizeHeaderKey,
            newline: this.mail.newline
          });
        } else {
          node = parentNode.createChild("multipart/alternative", {
            disableUrlAccess: this.mail.disableUrlAccess,
            disableFileAccess: this.mail.disableFileAccess,
            normalizeHeaderKey: this.mail.normalizeHeaderKey,
            newline: this.mail.newline
          });
        }
        this._alternatives.forEach((alternative) => {
          if (this._useRelated && this._htmlNode === alternative) {
            this._createRelated(node);
          } else {
            this._createContentNode(node, alternative);
          }
        });
        return node;
      }
      /**
       * Builds multipart/related node. It should always contain html node with related attachments
       *
       * @param {Object} parentNode Parent for this note. If it does not exist, a root node is created
       * @returns {Object} MimeNode node element
       */
      _createRelated(parentNode) {
        let node;
        if (!parentNode) {
          node = new MimeNode('multipart/related; type="text/html"', {
            baseBoundary: this.mail.baseBoundary,
            textEncoding: this.mail.textEncoding,
            boundaryPrefix: this.mail.boundaryPrefix,
            disableUrlAccess: this.mail.disableUrlAccess,
            disableFileAccess: this.mail.disableFileAccess,
            normalizeHeaderKey: this.mail.normalizeHeaderKey,
            newline: this.mail.newline
          });
        } else {
          node = parentNode.createChild('multipart/related; type="text/html"', {
            disableUrlAccess: this.mail.disableUrlAccess,
            disableFileAccess: this.mail.disableFileAccess,
            normalizeHeaderKey: this.mail.normalizeHeaderKey,
            newline: this.mail.newline
          });
        }
        this._createContentNode(node, this._htmlNode);
        this._attachments.related.forEach((alternative) => this._createContentNode(node, alternative));
        return node;
      }
      /**
       * Creates a regular node with contents
       *
       * @param {Object} parentNode Parent for this note. If it does not exist, a root node is created
       * @param {Object} element Node data
       * @returns {Object} MimeNode node element
       */
      _createContentNode(parentNode, element) {
        element = element || {};
        element.content = element.content || "";
        let node;
        let encoding = (element.encoding || "utf8").toString().toLowerCase().replace(/[-_\s]/g, "");
        if (!parentNode) {
          node = new MimeNode(element.contentType, {
            filename: element.filename,
            baseBoundary: this.mail.baseBoundary,
            textEncoding: this.mail.textEncoding,
            boundaryPrefix: this.mail.boundaryPrefix,
            disableUrlAccess: this.mail.disableUrlAccess,
            disableFileAccess: this.mail.disableFileAccess,
            normalizeHeaderKey: this.mail.normalizeHeaderKey,
            newline: this.mail.newline
          });
        } else {
          node = parentNode.createChild(element.contentType, {
            filename: element.filename,
            textEncoding: this.mail.textEncoding,
            disableUrlAccess: this.mail.disableUrlAccess,
            disableFileAccess: this.mail.disableFileAccess,
            normalizeHeaderKey: this.mail.normalizeHeaderKey,
            newline: this.mail.newline
          });
        }
        if (element.headers) {
          node.addHeader(element.headers);
        }
        if (element.cid) {
          node.setHeader("Content-Id", "<" + element.cid.replace(/[<>]/g, "") + ">");
        }
        if (element.contentTransferEncoding) {
          node.setHeader("Content-Transfer-Encoding", element.contentTransferEncoding);
        } else if (this.mail.encoding && /^text\//i.test(element.contentType)) {
          node.setHeader("Content-Transfer-Encoding", this.mail.encoding);
        }
        if (!/^text\//i.test(element.contentType) || element.contentDisposition) {
          node.setHeader(
            "Content-Disposition",
            element.contentDisposition || (element.cid && /^image\//i.test(element.contentType) ? "inline" : "attachment")
          );
        }
        if (typeof element.content === "string" && !["utf8", "usascii", "ascii"].includes(encoding)) {
          element.content = Buffer.from(element.content, encoding);
        }
        if (element.raw) {
          node.setRaw(element.raw);
        } else {
          node.setContent(element.content);
        }
        return node;
      }
      /**
       * Parses data uri and converts it to a Buffer
       *
       * @param {Object} element Content element
       * @return {Object} Parsed element
       */
      _processDataUrl(element) {
        const dataUrl = element.path || element.href;
        if (!dataUrl || typeof dataUrl !== "string") {
          return element;
        }
        if (!dataUrl.startsWith("data:")) {
          return element;
        }
        if (dataUrl.length > 1e5) {
          return Object.assign({}, element, {
            path: false,
            href: false,
            content: Buffer.alloc(0),
            contentType: element.contentType || "application/octet-stream"
          });
        }
        let parsedDataUri;
        try {
          parsedDataUri = parseDataURI(dataUrl);
        } catch (err) {
          return element;
        }
        if (!parsedDataUri) {
          return element;
        }
        element.content = parsedDataUri.data;
        element.contentType = element.contentType || parsedDataUri.contentType;
        if ("path" in element) {
          element.path = false;
        }
        if ("href" in element) {
          element.href = false;
        }
        return element;
      }
    };
    module.exports = MailComposer;
  }
});

// node_modules/nodemailer/lib/dkim/message-parser.js
var require_message_parser = __commonJS({
  "node_modules/nodemailer/lib/dkim/message-parser.js"(exports, module) {
    "use strict";
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    var Transform = require_stream().Transform;
    var MessageParser = class extends Transform {
      static {
        __name(this, "MessageParser");
      }
      constructor(options) {
        super(options);
        this.lastBytes = Buffer.alloc(4);
        this.headersParsed = false;
        this.headerBytes = 0;
        this.headerChunks = [];
        this.rawHeaders = false;
        this.bodySize = 0;
      }
      /**
       * Keeps count of the last 4 bytes in order to detect line breaks on chunk boundaries
       *
       * @param {Buffer} data Next data chunk from the stream
       */
      updateLastBytes(data) {
        let lblen = this.lastBytes.length;
        let nblen = Math.min(data.length, lblen);
        for (let i = 0, len = lblen - nblen; i < len; i++) {
          this.lastBytes[i] = this.lastBytes[i + nblen];
        }
        for (let i = 1; i <= nblen; i++) {
          this.lastBytes[lblen - i] = data[data.length - i];
        }
      }
      /**
       * Finds and removes message headers from the remaining body. We want to keep
       * headers separated until final delivery to be able to modify these
       *
       * @param {Buffer} data Next chunk of data
       * @return {Boolean} Returns true if headers are already found or false otherwise
       */
      checkHeaders(data) {
        if (this.headersParsed) {
          return true;
        }
        let lblen = this.lastBytes.length;
        let headerPos = 0;
        this.curLinePos = 0;
        for (let i = 0, len = this.lastBytes.length + data.length; i < len; i++) {
          let chr;
          if (i < lblen) {
            chr = this.lastBytes[i];
          } else {
            chr = data[i - lblen];
          }
          if (chr === 10 && i) {
            let pr1 = i - 1 < lblen ? this.lastBytes[i - 1] : data[i - 1 - lblen];
            let pr2 = i > 1 ? i - 2 < lblen ? this.lastBytes[i - 2] : data[i - 2 - lblen] : false;
            if (pr1 === 10) {
              this.headersParsed = true;
              headerPos = i - lblen + 1;
              this.headerBytes += headerPos;
              break;
            } else if (pr1 === 13 && pr2 === 10) {
              this.headersParsed = true;
              headerPos = i - lblen + 1;
              this.headerBytes += headerPos;
              break;
            }
          }
        }
        if (this.headersParsed) {
          this.headerChunks.push(data.slice(0, headerPos));
          this.rawHeaders = Buffer.concat(this.headerChunks, this.headerBytes);
          this.headerChunks = null;
          this.emit("headers", this.parseHeaders());
          if (data.length - 1 > headerPos) {
            let chunk = data.slice(headerPos);
            this.bodySize += chunk.length;
            setImmediate(() => this.push(chunk));
          }
          return false;
        } else {
          this.headerBytes += data.length;
          this.headerChunks.push(data);
        }
        this.updateLastBytes(data);
        return false;
      }
      _transform(chunk, encoding, callback) {
        if (!chunk || !chunk.length) {
          return callback();
        }
        if (typeof chunk === "string") {
          chunk = Buffer.from(chunk, encoding);
        }
        let headersFound;
        try {
          headersFound = this.checkHeaders(chunk);
        } catch (E) {
          return callback(E);
        }
        if (headersFound) {
          this.bodySize += chunk.length;
          this.push(chunk);
        }
        setImmediate(callback);
      }
      _flush(callback) {
        if (this.headerChunks) {
          let chunk = Buffer.concat(this.headerChunks, this.headerBytes);
          this.bodySize += chunk.length;
          this.push(chunk);
          this.headerChunks = null;
        }
        callback();
      }
      parseHeaders() {
        let lines = (this.rawHeaders || "").toString().split(/\r?\n/);
        for (let i = lines.length - 1; i > 0; i--) {
          if (/^\s/.test(lines[i])) {
            lines[i - 1] += "\n" + lines[i];
            lines.splice(i, 1);
          }
        }
        return lines.filter((line) => line.trim()).map((line) => ({
          key: line.substr(0, line.indexOf(":")).trim().toLowerCase(),
          line
        }));
      }
    };
    module.exports = MessageParser;
  }
});

// node_modules/nodemailer/lib/dkim/relaxed-body.js
var require_relaxed_body = __commonJS({
  "node_modules/nodemailer/lib/dkim/relaxed-body.js"(exports, module) {
    "use strict";
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    var Transform = require_stream().Transform;
    var crypto2 = require_crypto();
    var RelaxedBody = class extends Transform {
      static {
        __name(this, "RelaxedBody");
      }
      constructor(options) {
        super();
        options = options || {};
        this.chunkBuffer = [];
        this.chunkBufferLen = 0;
        this.bodyHash = crypto2.createHash(options.hashAlgo || "sha1");
        this.remainder = "";
        this.byteLength = 0;
        this.debug = options.debug;
        this._debugBody = options.debug ? [] : false;
      }
      updateHash(chunk) {
        let bodyStr;
        let nextRemainder = "";
        let state = "file";
        for (let i = chunk.length - 1; i >= 0; i--) {
          let c = chunk[i];
          if (state === "file" && (c === 10 || c === 13)) {
          } else if (state === "file" && (c === 9 || c === 32)) {
            state = "line";
          } else if (state === "line" && (c === 9 || c === 32)) {
          } else if (state === "file" || state === "line") {
            state = "body";
            if (i === chunk.length - 1) {
              break;
            }
          }
          if (i === 0) {
            if (state === "file" && (!this.remainder || /[\r\n]$/.test(this.remainder)) || state === "line" && (!this.remainder || /[ \t]$/.test(this.remainder))) {
              this.remainder += chunk.toString("binary");
              return;
            } else if (state === "line" || state === "file") {
              nextRemainder = chunk.toString("binary");
              chunk = false;
              break;
            }
          }
          if (state !== "body") {
            continue;
          }
          nextRemainder = chunk.slice(i + 1).toString("binary");
          chunk = chunk.slice(0, i + 1);
          break;
        }
        let needsFixing = !!this.remainder;
        if (chunk && !needsFixing) {
          for (let i = 0, len = chunk.length; i < len; i++) {
            if (i && chunk[i] === 10 && chunk[i - 1] !== 13) {
              needsFixing = true;
              break;
            } else if (i && chunk[i] === 13 && chunk[i - 1] === 32) {
              needsFixing = true;
              break;
            } else if (i && chunk[i] === 32 && chunk[i - 1] === 32) {
              needsFixing = true;
              break;
            } else if (chunk[i] === 9) {
              needsFixing = true;
              break;
            }
          }
        }
        if (needsFixing) {
          bodyStr = this.remainder + (chunk ? chunk.toString("binary") : "");
          this.remainder = nextRemainder;
          bodyStr = bodyStr.replace(/\r?\n/g, "\n").replace(/[ \t]*$/gm, "").replace(/[ \t]+/gm, " ").replace(/\n/g, "\r\n");
          chunk = Buffer.from(bodyStr, "binary");
        } else if (nextRemainder) {
          this.remainder = nextRemainder;
        }
        if (this.debug) {
          this._debugBody.push(chunk);
        }
        this.bodyHash.update(chunk);
      }
      _transform(chunk, encoding, callback) {
        if (!chunk || !chunk.length) {
          return callback();
        }
        if (typeof chunk === "string") {
          chunk = Buffer.from(chunk, encoding);
        }
        this.updateHash(chunk);
        this.byteLength += chunk.length;
        this.push(chunk);
        callback();
      }
      _flush(callback) {
        if (/[\r\n]$/.test(this.remainder) && this.byteLength > 2) {
          this.bodyHash.update(Buffer.from("\r\n"));
        }
        if (!this.byteLength) {
          this.push(Buffer.from("\r\n"));
        }
        this.emit("hash", this.bodyHash.digest("base64"), this.debug ? Buffer.concat(this._debugBody) : false);
        callback();
      }
    };
    module.exports = RelaxedBody;
  }
});

// node_modules/nodemailer/lib/dkim/sign.js
var require_sign2 = __commonJS({
  "node_modules/nodemailer/lib/dkim/sign.js"(exports, module) {
    "use strict";
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    var punycode = require_punycode();
    var mimeFuncs = require_mime_funcs();
    var crypto2 = require_crypto();
    module.exports = (headers, hashAlgo, bodyHash, options) => {
      options = options || {};
      let defaultFieldNames = "From:Sender:Reply-To:Subject:Date:Message-ID:To:Cc:MIME-Version:Content-Type:Content-Transfer-Encoding:Content-ID:Content-Description:Resent-Date:Resent-From:Resent-Sender:Resent-To:Resent-Cc:Resent-Message-ID:In-Reply-To:References:List-Id:List-Help:List-Unsubscribe:List-Subscribe:List-Post:List-Owner:List-Archive";
      let fieldNames = options.headerFieldNames || defaultFieldNames;
      let canonicalizedHeaderData = relaxedHeaders(headers, fieldNames, options.skipFields);
      let dkimHeader = generateDKIMHeader(options.domainName, options.keySelector, canonicalizedHeaderData.fieldNames, hashAlgo, bodyHash);
      let signer, signature;
      canonicalizedHeaderData.headers += "dkim-signature:" + relaxedHeaderLine(dkimHeader);
      signer = crypto2.createSign(("rsa-" + hashAlgo).toUpperCase());
      signer.update(canonicalizedHeaderData.headers);
      try {
        signature = signer.sign(options.privateKey, "base64");
      } catch (E) {
        return false;
      }
      return dkimHeader + signature.replace(/(^.{73}|.{75}(?!\r?\n|\r))/g, "$&\r\n ").trim();
    };
    module.exports.relaxedHeaders = relaxedHeaders;
    function generateDKIMHeader(domainName, keySelector, fieldNames, hashAlgo, bodyHash) {
      let dkim = [
        "v=1",
        "a=rsa-" + hashAlgo,
        "c=relaxed/relaxed",
        "d=" + punycode.toASCII(domainName),
        "q=dns/txt",
        "s=" + keySelector,
        "bh=" + bodyHash,
        "h=" + fieldNames
      ].join("; ");
      return mimeFuncs.foldLines("DKIM-Signature: " + dkim, 76) + ";\r\n b=";
    }
    __name(generateDKIMHeader, "generateDKIMHeader");
    function relaxedHeaders(headers, fieldNames, skipFields) {
      let includedFields = /* @__PURE__ */ new Set();
      let skip = /* @__PURE__ */ new Set();
      let headerFields = /* @__PURE__ */ new Map();
      (skipFields || "").toLowerCase().split(":").forEach((field) => {
        skip.add(field.trim());
      });
      (fieldNames || "").toLowerCase().split(":").filter((field) => !skip.has(field.trim())).forEach((field) => {
        includedFields.add(field.trim());
      });
      for (let i = headers.length - 1; i >= 0; i--) {
        let line = headers[i];
        if (includedFields.has(line.key) && !headerFields.has(line.key)) {
          headerFields.set(line.key, relaxedHeaderLine(line.line));
        }
      }
      let headersList = [];
      let fields = [];
      includedFields.forEach((field) => {
        if (headerFields.has(field)) {
          fields.push(field);
          headersList.push(field + ":" + headerFields.get(field));
        }
      });
      return {
        headers: headersList.join("\r\n") + "\r\n",
        fieldNames: fields.join(":")
      };
    }
    __name(relaxedHeaders, "relaxedHeaders");
    function relaxedHeaderLine(line) {
      return line.substr(line.indexOf(":") + 1).replace(/\r?\n/g, "").replace(/\s+/g, " ").trim();
    }
    __name(relaxedHeaderLine, "relaxedHeaderLine");
  }
});

// node_modules/nodemailer/lib/dkim/index.js
var require_dkim = __commonJS({
  "node_modules/nodemailer/lib/dkim/index.js"(exports, module) {
    "use strict";
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    var MessageParser = require_message_parser();
    var RelaxedBody = require_relaxed_body();
    var sign4 = require_sign2();
    var PassThrough = require_stream().PassThrough;
    var fs = require_fs();
    var path = require_path();
    var crypto2 = require_crypto();
    var DKIM_ALGO = "sha256";
    var MAX_MESSAGE_SIZE = 2 * 1024 * 1024;
    var DKIMSigner = class {
      static {
        __name(this, "DKIMSigner");
      }
      constructor(options, keys, input, output) {
        this.options = options || {};
        this.keys = keys;
        this.cacheTreshold = Number(this.options.cacheTreshold) || MAX_MESSAGE_SIZE;
        this.hashAlgo = this.options.hashAlgo || DKIM_ALGO;
        this.cacheDir = this.options.cacheDir || false;
        this.chunks = [];
        this.chunklen = 0;
        this.readPos = 0;
        this.cachePath = this.cacheDir ? path.join(this.cacheDir, "message." + Date.now() + "-" + crypto2.randomBytes(14).toString("hex")) : false;
        this.cache = false;
        this.headers = false;
        this.bodyHash = false;
        this.parser = false;
        this.relaxedBody = false;
        this.input = input;
        this.output = output;
        this.output.usingCache = false;
        this.hasErrored = false;
        this.input.on("error", (err) => {
          this.hasErrored = true;
          this.cleanup();
          output.emit("error", err);
        });
      }
      cleanup() {
        if (!this.cache || !this.cachePath) {
          return;
        }
        fs.unlink(this.cachePath, () => false);
      }
      createReadCache() {
        this.cache = fs.createReadStream(this.cachePath);
        this.cache.once("error", (err) => {
          this.cleanup();
          this.output.emit("error", err);
        });
        this.cache.once("close", () => {
          this.cleanup();
        });
        this.cache.pipe(this.output);
      }
      sendNextChunk() {
        if (this.hasErrored) {
          return;
        }
        if (this.readPos >= this.chunks.length) {
          if (!this.cache) {
            return this.output.end();
          }
          return this.createReadCache();
        }
        let chunk = this.chunks[this.readPos++];
        if (this.output.write(chunk) === false) {
          return this.output.once("drain", () => {
            this.sendNextChunk();
          });
        }
        setImmediate(() => this.sendNextChunk());
      }
      sendSignedOutput() {
        let keyPos = 0;
        let signNextKey = /* @__PURE__ */ __name(() => {
          if (keyPos >= this.keys.length) {
            this.output.write(this.parser.rawHeaders);
            return setImmediate(() => this.sendNextChunk());
          }
          let key = this.keys[keyPos++];
          let dkimField = sign4(this.headers, this.hashAlgo, this.bodyHash, {
            domainName: key.domainName,
            keySelector: key.keySelector,
            privateKey: key.privateKey,
            headerFieldNames: this.options.headerFieldNames,
            skipFields: this.options.skipFields
          });
          if (dkimField) {
            this.output.write(Buffer.from(dkimField + "\r\n"));
          }
          return setImmediate(signNextKey);
        }, "signNextKey");
        if (this.bodyHash && this.headers) {
          return signNextKey();
        }
        this.output.write(this.parser.rawHeaders);
        this.sendNextChunk();
      }
      createWriteCache() {
        this.output.usingCache = true;
        this.cache = fs.createWriteStream(this.cachePath);
        this.cache.once("error", (err) => {
          this.cleanup();
          this.relaxedBody.unpipe(this.cache);
          this.relaxedBody.on("readable", () => {
            while (this.relaxedBody.read() !== null) {
            }
          });
          this.hasErrored = true;
          this.output.emit("error", err);
        });
        this.cache.once("close", () => {
          this.sendSignedOutput();
        });
        this.relaxedBody.removeAllListeners("readable");
        this.relaxedBody.pipe(this.cache);
      }
      signStream() {
        this.parser = new MessageParser();
        this.relaxedBody = new RelaxedBody({
          hashAlgo: this.hashAlgo
        });
        this.parser.on("headers", (value) => {
          this.headers = value;
        });
        this.relaxedBody.on("hash", (value) => {
          this.bodyHash = value;
        });
        this.relaxedBody.on("readable", () => {
          let chunk;
          if (this.cache) {
            return;
          }
          while ((chunk = this.relaxedBody.read()) !== null) {
            this.chunks.push(chunk);
            this.chunklen += chunk.length;
            if (this.chunklen >= this.cacheTreshold && this.cachePath) {
              return this.createWriteCache();
            }
          }
        });
        this.relaxedBody.on("end", () => {
          if (this.cache) {
            return;
          }
          this.sendSignedOutput();
        });
        this.parser.pipe(this.relaxedBody);
        setImmediate(() => this.input.pipe(this.parser));
      }
    };
    var DKIM = class {
      static {
        __name(this, "DKIM");
      }
      constructor(options) {
        this.options = options || {};
        this.keys = [].concat(
          this.options.keys || {
            domainName: options.domainName,
            keySelector: options.keySelector,
            privateKey: options.privateKey
          }
        );
      }
      sign(input, extraOptions) {
        let output = new PassThrough();
        let inputStream = input;
        let writeValue = false;
        if (Buffer.isBuffer(input)) {
          writeValue = input;
          inputStream = new PassThrough();
        } else if (typeof input === "string") {
          writeValue = Buffer.from(input);
          inputStream = new PassThrough();
        }
        let options = this.options;
        if (extraOptions && Object.keys(extraOptions).length) {
          options = {};
          Object.keys(this.options || {}).forEach((key) => {
            options[key] = this.options[key];
          });
          Object.keys(extraOptions || {}).forEach((key) => {
            if (!(key in options)) {
              options[key] = extraOptions[key];
            }
          });
        }
        let signer = new DKIMSigner(options, this.keys, inputStream, output);
        setImmediate(() => {
          signer.signStream();
          if (writeValue) {
            setImmediate(() => {
              inputStream.end(writeValue);
            });
          }
        });
        return output;
      }
    };
    module.exports = DKIM;
  }
});

// node-built-in-modules:tls
import libDefault15 from "tls";
var require_tls = __commonJS({
  "node-built-in-modules:tls"(exports, module) {
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    module.exports = libDefault15;
  }
});

// node_modules/nodemailer/lib/smtp-connection/http-proxy-client.js
var require_http_proxy_client = __commonJS({
  "node_modules/nodemailer/lib/smtp-connection/http-proxy-client.js"(exports, module) {
    "use strict";
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    var net = require_net();
    var tls = require_tls();
    var urllib = require_url();
    function httpProxyClient(proxyUrl, destinationPort, destinationHost, callback) {
      let proxy = urllib.parse(proxyUrl);
      let options;
      let connect;
      let socket;
      options = {
        host: proxy.hostname,
        port: Number(proxy.port) ? Number(proxy.port) : proxy.protocol === "https:" ? 443 : 80
      };
      if (proxy.protocol === "https:") {
        options.rejectUnauthorized = false;
        connect = tls.connect.bind(tls);
      } else {
        connect = net.connect.bind(net);
      }
      let finished = false;
      let tempSocketErr = /* @__PURE__ */ __name((err) => {
        if (finished) {
          return;
        }
        finished = true;
        try {
          socket.destroy();
        } catch (E) {
        }
        callback(err);
      }, "tempSocketErr");
      let timeoutErr = /* @__PURE__ */ __name(() => {
        let err = new Error("Proxy socket timed out");
        err.code = "ETIMEDOUT";
        tempSocketErr(err);
      }, "timeoutErr");
      socket = connect(options, () => {
        if (finished) {
          return;
        }
        let reqHeaders = {
          Host: destinationHost + ":" + destinationPort,
          Connection: "close"
        };
        if (proxy.auth) {
          reqHeaders["Proxy-Authorization"] = "Basic " + Buffer.from(proxy.auth).toString("base64");
        }
        socket.write(
          // HTTP method
          "CONNECT " + destinationHost + ":" + destinationPort + " HTTP/1.1\r\n" + // HTTP request headers
          Object.keys(reqHeaders).map((key) => key + ": " + reqHeaders[key]).join("\r\n") + // End request
          "\r\n\r\n"
        );
        let headers = "";
        let onSocketData = /* @__PURE__ */ __name((chunk) => {
          let match;
          let remainder;
          if (finished) {
            return;
          }
          headers += chunk.toString("binary");
          if (match = headers.match(/\r\n\r\n/)) {
            socket.removeListener("data", onSocketData);
            remainder = headers.substr(match.index + match[0].length);
            headers = headers.substr(0, match.index);
            if (remainder) {
              socket.unshift(Buffer.from(remainder, "binary"));
            }
            finished = true;
            match = headers.match(/^HTTP\/\d+\.\d+ (\d+)/i);
            if (!match || (match[1] || "").charAt(0) !== "2") {
              try {
                socket.destroy();
              } catch (E) {
              }
              return callback(new Error("Invalid response from proxy" + (match && ": " + match[1] || "")));
            }
            socket.removeListener("error", tempSocketErr);
            socket.removeListener("timeout", timeoutErr);
            socket.setTimeout(0);
            return callback(null, socket);
          }
        }, "onSocketData");
        socket.on("data", onSocketData);
      });
      socket.setTimeout(httpProxyClient.timeout || 30 * 1e3);
      socket.on("timeout", timeoutErr);
      socket.once("error", tempSocketErr);
    }
    __name(httpProxyClient, "httpProxyClient");
    module.exports = httpProxyClient;
  }
});

// node_modules/nodemailer/lib/mailer/mail-message.js
var require_mail_message = __commonJS({
  "node_modules/nodemailer/lib/mailer/mail-message.js"(exports, module) {
    "use strict";
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    var shared = require_shared();
    var MimeNode = require_mime_node();
    var mimeFuncs = require_mime_funcs();
    var MailMessage = class {
      static {
        __name(this, "MailMessage");
      }
      constructor(mailer, data) {
        this.mailer = mailer;
        this.data = {};
        this.message = null;
        data = data || {};
        let options = mailer.options || {};
        let defaults = mailer._defaults || {};
        Object.keys(data).forEach((key) => {
          this.data[key] = data[key];
        });
        this.data.headers = this.data.headers || {};
        Object.keys(defaults).forEach((key) => {
          if (!(key in this.data)) {
            this.data[key] = defaults[key];
          } else if (key === "headers") {
            Object.keys(defaults.headers).forEach((key2) => {
              if (!(key2 in this.data.headers)) {
                this.data.headers[key2] = defaults.headers[key2];
              }
            });
          }
        });
        ["disableFileAccess", "disableUrlAccess", "normalizeHeaderKey"].forEach((key) => {
          if (key in options) {
            this.data[key] = options[key];
          }
        });
      }
      resolveContent(...args) {
        return shared.resolveContent(...args);
      }
      resolveAll(callback) {
        let keys = [
          [this.data, "html"],
          [this.data, "text"],
          [this.data, "watchHtml"],
          [this.data, "amp"],
          [this.data, "icalEvent"]
        ];
        if (this.data.alternatives && this.data.alternatives.length) {
          this.data.alternatives.forEach((alternative, i) => {
            keys.push([this.data.alternatives, i]);
          });
        }
        if (this.data.attachments && this.data.attachments.length) {
          this.data.attachments.forEach((attachment, i) => {
            if (!attachment.filename) {
              attachment.filename = (attachment.path || attachment.href || "").split("/").pop().split("?").shift() || "attachment-" + (i + 1);
              if (attachment.filename.indexOf(".") < 0) {
                attachment.filename += "." + mimeFuncs.detectExtension(attachment.contentType);
              }
            }
            if (!attachment.contentType) {
              attachment.contentType = mimeFuncs.detectMimeType(attachment.filename || attachment.path || attachment.href || "bin");
            }
            keys.push([this.data.attachments, i]);
          });
        }
        let mimeNode = new MimeNode();
        let addressKeys = ["from", "to", "cc", "bcc", "sender", "replyTo"];
        addressKeys.forEach((address) => {
          let value;
          if (this.message) {
            value = [].concat(mimeNode._parseAddresses(this.message.getHeader(address === "replyTo" ? "reply-to" : address)) || []);
          } else if (this.data[address]) {
            value = [].concat(mimeNode._parseAddresses(this.data[address]) || []);
          }
          if (value && value.length) {
            this.data[address] = value;
          } else if (address in this.data) {
            this.data[address] = null;
          }
        });
        let singleKeys = ["from", "sender"];
        singleKeys.forEach((address) => {
          if (this.data[address]) {
            this.data[address] = this.data[address].shift();
          }
        });
        let pos = 0;
        let resolveNext = /* @__PURE__ */ __name(() => {
          if (pos >= keys.length) {
            return callback(null, this.data);
          }
          let args = keys[pos++];
          if (!args[0] || !args[0][args[1]]) {
            return resolveNext();
          }
          shared.resolveContent(...args, (err, value) => {
            if (err) {
              return callback(err);
            }
            let node = {
              content: value
            };
            if (args[0][args[1]] && typeof args[0][args[1]] === "object" && !Buffer.isBuffer(args[0][args[1]])) {
              Object.keys(args[0][args[1]]).forEach((key) => {
                if (!(key in node) && !["content", "path", "href", "raw"].includes(key)) {
                  node[key] = args[0][args[1]][key];
                }
              });
            }
            args[0][args[1]] = node;
            resolveNext();
          });
        }, "resolveNext");
        setImmediate(() => resolveNext());
      }
      normalize(callback) {
        let envelope = this.data.envelope || this.message.getEnvelope();
        let messageId = this.message.messageId();
        this.resolveAll((err, data) => {
          if (err) {
            return callback(err);
          }
          data.envelope = envelope;
          data.messageId = messageId;
          ["html", "text", "watchHtml", "amp"].forEach((key) => {
            if (data[key] && data[key].content) {
              if (typeof data[key].content === "string") {
                data[key] = data[key].content;
              } else if (Buffer.isBuffer(data[key].content)) {
                data[key] = data[key].content.toString();
              }
            }
          });
          if (data.icalEvent && Buffer.isBuffer(data.icalEvent.content)) {
            data.icalEvent.content = data.icalEvent.content.toString("base64");
            data.icalEvent.encoding = "base64";
          }
          if (data.alternatives && data.alternatives.length) {
            data.alternatives.forEach((alternative) => {
              if (alternative && alternative.content && Buffer.isBuffer(alternative.content)) {
                alternative.content = alternative.content.toString("base64");
                alternative.encoding = "base64";
              }
            });
          }
          if (data.attachments && data.attachments.length) {
            data.attachments.forEach((attachment) => {
              if (attachment && attachment.content && Buffer.isBuffer(attachment.content)) {
                attachment.content = attachment.content.toString("base64");
                attachment.encoding = "base64";
              }
            });
          }
          data.normalizedHeaders = {};
          Object.keys(data.headers || {}).forEach((key) => {
            let value = [].concat(data.headers[key] || []).shift();
            value = value && value.value || value;
            if (value) {
              if (["references", "in-reply-to", "message-id", "content-id"].includes(key)) {
                value = this.message._encodeHeaderValue(key, value);
              }
              data.normalizedHeaders[key] = value;
            }
          });
          if (data.list && typeof data.list === "object") {
            let listHeaders = this._getListHeaders(data.list);
            listHeaders.forEach((entry) => {
              data.normalizedHeaders[entry.key] = entry.value.map((val) => val && val.value || val).join(", ");
            });
          }
          if (data.references) {
            data.normalizedHeaders.references = this.message._encodeHeaderValue("references", data.references);
          }
          if (data.inReplyTo) {
            data.normalizedHeaders["in-reply-to"] = this.message._encodeHeaderValue("in-reply-to", data.inReplyTo);
          }
          return callback(null, data);
        });
      }
      setMailerHeader() {
        if (!this.message || !this.data.xMailer) {
          return;
        }
        this.message.setHeader("X-Mailer", this.data.xMailer);
      }
      setPriorityHeaders() {
        if (!this.message || !this.data.priority) {
          return;
        }
        switch ((this.data.priority || "").toString().toLowerCase()) {
          case "high":
            this.message.setHeader("X-Priority", "1 (Highest)");
            this.message.setHeader("X-MSMail-Priority", "High");
            this.message.setHeader("Importance", "High");
            break;
          case "low":
            this.message.setHeader("X-Priority", "5 (Lowest)");
            this.message.setHeader("X-MSMail-Priority", "Low");
            this.message.setHeader("Importance", "Low");
            break;
          default:
        }
      }
      setListHeaders() {
        if (!this.message || !this.data.list || typeof this.data.list !== "object") {
          return;
        }
        if (this.data.list && typeof this.data.list === "object") {
          this._getListHeaders(this.data.list).forEach((listHeader) => {
            listHeader.value.forEach((value) => {
              this.message.addHeader(listHeader.key, value);
            });
          });
        }
      }
      _getListHeaders(listData) {
        return Object.keys(listData).map((key) => ({
          key: "list-" + key.toLowerCase().trim(),
          value: [].concat(listData[key] || []).map((value) => ({
            prepared: true,
            foldLines: true,
            value: [].concat(value || []).map((value2) => {
              if (typeof value2 === "string") {
                value2 = {
                  url: value2
                };
              }
              if (value2 && value2.url) {
                if (key.toLowerCase().trim() === "id") {
                  let comment2 = value2.comment || "";
                  if (mimeFuncs.isPlainText(comment2)) {
                    comment2 = '"' + comment2 + '"';
                  } else {
                    comment2 = mimeFuncs.encodeWord(comment2);
                  }
                  return (value2.comment ? comment2 + " " : "") + this._formatListUrl(value2.url).replace(/^<[^:]+\/{,2}/, "");
                }
                let comment = value2.comment || "";
                if (!mimeFuncs.isPlainText(comment)) {
                  comment = mimeFuncs.encodeWord(comment);
                }
                return this._formatListUrl(value2.url) + (value2.comment ? " (" + comment + ")" : "");
              }
              return "";
            }).filter((value2) => value2).join(", ")
          }))
        }));
      }
      _formatListUrl(url) {
        url = url.replace(/[\s<]+|[\s>]+/g, "");
        if (/^(https?|mailto|ftp):/.test(url)) {
          return "<" + url + ">";
        }
        if (/^[^@]+@[^@]+$/.test(url)) {
          return "<mailto:" + url + ">";
        }
        return "<http://" + url + ">";
      }
    };
    module.exports = MailMessage;
  }
});

// node_modules/nodemailer/lib/mailer/index.js
var require_mailer = __commonJS({
  "node_modules/nodemailer/lib/mailer/index.js"(exports, module) {
    "use strict";
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    var EventEmitter2 = require_events();
    var shared = require_shared();
    var mimeTypes = require_mime_types();
    var MailComposer = require_mail_composer();
    var DKIM = require_dkim();
    var httpProxyClient = require_http_proxy_client();
    var util = require_util();
    var urllib = require_url();
    var packageData = require_package2();
    var MailMessage = require_mail_message();
    var net = require_net();
    var dns = require_dns();
    var crypto2 = require_crypto();
    var Mail = class extends EventEmitter2 {
      static {
        __name(this, "Mail");
      }
      constructor(transporter, options, defaults) {
        super();
        this.options = options || {};
        this._defaults = defaults || {};
        this._defaultPlugins = {
          compile: [(...args) => this._convertDataImages(...args)],
          stream: []
        };
        this._userPlugins = {
          compile: [],
          stream: []
        };
        this.meta = /* @__PURE__ */ new Map();
        this.dkim = this.options.dkim ? new DKIM(this.options.dkim) : false;
        this.transporter = transporter;
        this.transporter.mailer = this;
        this.logger = shared.getLogger(this.options, {
          component: this.options.component || "mail"
        });
        this.logger.debug(
          {
            tnx: "create"
          },
          "Creating transport: %s",
          this.getVersionString()
        );
        if (typeof this.transporter.on === "function") {
          this.transporter.on("log", (log4) => {
            this.logger.debug(
              {
                tnx: "transport"
              },
              "%s: %s",
              log4.type,
              log4.message
            );
          });
          this.transporter.on("error", (err) => {
            this.logger.error(
              {
                err,
                tnx: "transport"
              },
              "Transport Error: %s",
              err.message
            );
            this.emit("error", err);
          });
          this.transporter.on("idle", (...args) => {
            this.emit("idle", ...args);
          });
          this.transporter.on("clear", (...args) => {
            this.emit("clear", ...args);
          });
        }
        ["close", "isIdle", "verify"].forEach((method) => {
          this[method] = (...args) => {
            if (typeof this.transporter[method] === "function") {
              if (method === "verify" && typeof this.getSocket === "function") {
                this.transporter.getSocket = this.getSocket;
                this.getSocket = false;
              }
              return this.transporter[method](...args);
            } else {
              this.logger.warn(
                {
                  tnx: "transport",
                  methodName: method
                },
                "Non existing method %s called for transport",
                method
              );
              return false;
            }
          };
        });
        if (this.options.proxy && typeof this.options.proxy === "string") {
          this.setupProxy(this.options.proxy);
        }
      }
      use(step, plugin) {
        step = (step || "").toString();
        if (!this._userPlugins.hasOwnProperty(step)) {
          this._userPlugins[step] = [plugin];
        } else {
          this._userPlugins[step].push(plugin);
        }
        return this;
      }
      /**
       * Sends an email using the preselected transport object
       *
       * @param {Object} data E-data description
       * @param {Function?} callback Callback to run once the sending succeeded or failed
       */
      sendMail(data, callback = null) {
        let promise;
        if (!callback) {
          promise = new Promise((resolve, reject) => {
            callback = shared.callbackPromise(resolve, reject);
          });
        }
        if (typeof this.getSocket === "function") {
          this.transporter.getSocket = this.getSocket;
          this.getSocket = false;
        }
        let mail = new MailMessage(this, data);
        this.logger.debug(
          {
            tnx: "transport",
            name: this.transporter.name,
            version: this.transporter.version,
            action: "send"
          },
          "Sending mail using %s/%s",
          this.transporter.name,
          this.transporter.version
        );
        this._processPlugins("compile", mail, (err) => {
          if (err) {
            this.logger.error(
              {
                err,
                tnx: "plugin",
                action: "compile"
              },
              "PluginCompile Error: %s",
              err.message
            );
            return callback(err);
          }
          mail.message = new MailComposer(mail.data).compile();
          mail.setMailerHeader();
          mail.setPriorityHeaders();
          mail.setListHeaders();
          this._processPlugins("stream", mail, (err2) => {
            if (err2) {
              this.logger.error(
                {
                  err: err2,
                  tnx: "plugin",
                  action: "stream"
                },
                "PluginStream Error: %s",
                err2.message
              );
              return callback(err2);
            }
            if (mail.data.dkim || this.dkim) {
              mail.message.processFunc((input) => {
                let dkim = mail.data.dkim ? new DKIM(mail.data.dkim) : this.dkim;
                this.logger.debug(
                  {
                    tnx: "DKIM",
                    messageId: mail.message.messageId(),
                    dkimDomains: dkim.keys.map((key) => key.keySelector + "." + key.domainName).join(", ")
                  },
                  "Signing outgoing message with %s keys",
                  dkim.keys.length
                );
                return dkim.sign(input, mail.data._dkim);
              });
            }
            this.transporter.send(mail, (...args) => {
              if (args[0]) {
                this.logger.error(
                  {
                    err: args[0],
                    tnx: "transport",
                    action: "send"
                  },
                  "Send Error: %s",
                  args[0].message
                );
              }
              callback(...args);
            });
          });
        });
        return promise;
      }
      getVersionString() {
        return util.format("%s (%s; +%s; %s/%s)", packageData.name, packageData.version, packageData.homepage, this.transporter.name, this.transporter.version);
      }
      _processPlugins(step, mail, callback) {
        step = (step || "").toString();
        if (!this._userPlugins.hasOwnProperty(step)) {
          return callback();
        }
        let userPlugins = this._userPlugins[step] || [];
        let defaultPlugins = this._defaultPlugins[step] || [];
        if (userPlugins.length) {
          this.logger.debug(
            {
              tnx: "transaction",
              pluginCount: userPlugins.length,
              step
            },
            "Using %s plugins for %s",
            userPlugins.length,
            step
          );
        }
        if (userPlugins.length + defaultPlugins.length === 0) {
          return callback();
        }
        let pos = 0;
        let block = "default";
        let processPlugins = /* @__PURE__ */ __name(() => {
          let curplugins = block === "default" ? defaultPlugins : userPlugins;
          if (pos >= curplugins.length) {
            if (block === "default" && userPlugins.length) {
              block = "user";
              pos = 0;
              curplugins = userPlugins;
            } else {
              return callback();
            }
          }
          let plugin = curplugins[pos++];
          plugin(mail, (err) => {
            if (err) {
              return callback(err);
            }
            processPlugins();
          });
        }, "processPlugins");
        processPlugins();
      }
      /**
       * Sets up proxy handler for a Nodemailer object
       *
       * @param {String} proxyUrl Proxy configuration url
       */
      setupProxy(proxyUrl) {
        let proxy = urllib.parse(proxyUrl);
        this.getSocket = (options, callback) => {
          let protocol = proxy.protocol.replace(/:$/, "").toLowerCase();
          if (this.meta.has("proxy_handler_" + protocol)) {
            return this.meta.get("proxy_handler_" + protocol)(proxy, options, callback);
          }
          switch (protocol) {
            // Connect using a HTTP CONNECT method
            case "http":
            case "https":
              httpProxyClient(proxy.href, options.port, options.host, (err, socket) => {
                if (err) {
                  return callback(err);
                }
                return callback(null, {
                  connection: socket
                });
              });
              return;
            case "socks":
            case "socks5":
            case "socks4":
            case "socks4a": {
              if (!this.meta.has("proxy_socks_module")) {
                return callback(new Error("Socks module not loaded"));
              }
              let connect = /* @__PURE__ */ __name((ipaddress) => {
                let proxyV2 = !!this.meta.get("proxy_socks_module").SocksClient;
                let socksClient = proxyV2 ? this.meta.get("proxy_socks_module").SocksClient : this.meta.get("proxy_socks_module");
                let proxyType = Number(proxy.protocol.replace(/\D/g, "")) || 5;
                let connectionOpts = {
                  proxy: {
                    ipaddress,
                    port: Number(proxy.port),
                    type: proxyType
                  },
                  [proxyV2 ? "destination" : "target"]: {
                    host: options.host,
                    port: options.port
                  },
                  command: "connect"
                };
                if (proxy.auth) {
                  let username = decodeURIComponent(proxy.auth.split(":").shift());
                  let password = decodeURIComponent(proxy.auth.split(":").pop());
                  if (proxyV2) {
                    connectionOpts.proxy.userId = username;
                    connectionOpts.proxy.password = password;
                  } else if (proxyType === 4) {
                    connectionOpts.userid = username;
                  } else {
                    connectionOpts.authentication = {
                      username,
                      password
                    };
                  }
                }
                socksClient.createConnection(connectionOpts, (err, info3) => {
                  if (err) {
                    return callback(err);
                  }
                  return callback(null, {
                    connection: info3.socket || info3
                  });
                });
              }, "connect");
              if (net.isIP(proxy.hostname)) {
                return connect(proxy.hostname);
              }
              return dns.resolve(proxy.hostname, (err, address) => {
                if (err) {
                  return callback(err);
                }
                connect(Array.isArray(address) ? address[0] : address);
              });
            }
          }
          callback(new Error("Unknown proxy configuration"));
        };
      }
      _convertDataImages(mail, callback) {
        if (!this.options.attachDataUrls && !mail.data.attachDataUrls || !mail.data.html) {
          return callback();
        }
        mail.resolveContent(mail.data, "html", (err, html) => {
          if (err) {
            return callback(err);
          }
          let cidCounter = 0;
          html = (html || "").toString().replace(/(<img\b[^<>]{0,1024} src\s{0,20}=[\s"']{0,20})(data:([^;]+);[^"'>\s]+)/gi, (match, prefix, dataUri, mimeType) => {
            let cid = crypto2.randomBytes(10).toString("hex") + "@localhost";
            if (!mail.data.attachments) {
              mail.data.attachments = [];
            }
            if (!Array.isArray(mail.data.attachments)) {
              mail.data.attachments = [].concat(mail.data.attachments || []);
            }
            mail.data.attachments.push({
              path: dataUri,
              cid,
              filename: "image-" + ++cidCounter + "." + mimeTypes.detectExtension(mimeType)
            });
            return prefix + "cid:" + cid;
          });
          mail.data.html = html;
          callback();
        });
      }
      set(key, value) {
        return this.meta.set(key, value);
      }
      get(key) {
        return this.meta.get(key);
      }
    };
    module.exports = Mail;
  }
});

// node_modules/nodemailer/lib/smtp-connection/data-stream.js
var require_data_stream2 = __commonJS({
  "node_modules/nodemailer/lib/smtp-connection/data-stream.js"(exports, module) {
    "use strict";
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    var stream = require_stream();
    var Transform = stream.Transform;
    var DataStream = class extends Transform {
      static {
        __name(this, "DataStream");
      }
      constructor(options) {
        super(options);
        this.options = options || {};
        this._curLine = "";
        this.inByteCount = 0;
        this.outByteCount = 0;
        this.lastByte = false;
      }
      /**
       * Escapes dots
       */
      _transform(chunk, encoding, done) {
        let chunks = [];
        let chunklen = 0;
        let i, len, lastPos = 0;
        let buf;
        if (!chunk || !chunk.length) {
          return done();
        }
        if (typeof chunk === "string") {
          chunk = Buffer.from(chunk);
        }
        this.inByteCount += chunk.length;
        for (i = 0, len = chunk.length; i < len; i++) {
          if (chunk[i] === 46) {
            if (i && chunk[i - 1] === 10 || !i && (!this.lastByte || this.lastByte === 10)) {
              buf = chunk.slice(lastPos, i + 1);
              chunks.push(buf);
              chunks.push(Buffer.from("."));
              chunklen += buf.length + 1;
              lastPos = i + 1;
            }
          } else if (chunk[i] === 10) {
            if (i && chunk[i - 1] !== 13 || !i && this.lastByte !== 13) {
              if (i > lastPos) {
                buf = chunk.slice(lastPos, i);
                chunks.push(buf);
                chunklen += buf.length + 2;
              } else {
                chunklen += 2;
              }
              chunks.push(Buffer.from("\r\n"));
              lastPos = i + 1;
            }
          }
        }
        if (chunklen) {
          if (lastPos < chunk.length) {
            buf = chunk.slice(lastPos);
            chunks.push(buf);
            chunklen += buf.length;
          }
          this.outByteCount += chunklen;
          this.push(Buffer.concat(chunks, chunklen));
        } else {
          this.outByteCount += chunk.length;
          this.push(chunk);
        }
        this.lastByte = chunk[chunk.length - 1];
        done();
      }
      /**
       * Finalizes the stream with a dot on a single line
       */
      _flush(done) {
        let buf;
        if (this.lastByte === 10) {
          buf = Buffer.from(".\r\n");
        } else if (this.lastByte === 13) {
          buf = Buffer.from("\n.\r\n");
        } else {
          buf = Buffer.from("\r\n.\r\n");
        }
        this.outByteCount += buf.length;
        this.push(buf);
        done();
      }
    };
    module.exports = DataStream;
  }
});

// node_modules/nodemailer/lib/smtp-connection/index.js
var require_smtp_connection = __commonJS({
  "node_modules/nodemailer/lib/smtp-connection/index.js"(exports, module) {
    "use strict";
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    var packageInfo = require_package2();
    var EventEmitter2 = require_events().EventEmitter;
    var net = require_net();
    var tls = require_tls();
    var os = require_os();
    var crypto2 = require_crypto();
    var DataStream = require_data_stream2();
    var PassThrough = require_stream().PassThrough;
    var shared = require_shared();
    var CONNECTION_TIMEOUT = 2 * 60 * 1e3;
    var SOCKET_TIMEOUT = 10 * 60 * 1e3;
    var GREETING_TIMEOUT = 30 * 1e3;
    var DNS_TIMEOUT = 30 * 1e3;
    var SMTPConnection = class extends EventEmitter2 {
      static {
        __name(this, "SMTPConnection");
      }
      constructor(options) {
        super(options);
        this.id = crypto2.randomBytes(8).toString("base64").replace(/\W/g, "");
        this.stage = "init";
        this.options = options || {};
        this.secureConnection = !!this.options.secure;
        this.alreadySecured = !!this.options.secured;
        this.port = Number(this.options.port) || (this.secureConnection ? 465 : 587);
        this.host = this.options.host || "localhost";
        this.servername = this.options.servername ? this.options.servername : !net.isIP(this.host) ? this.host : false;
        this.allowInternalNetworkInterfaces = this.options.allowInternalNetworkInterfaces || false;
        if (typeof this.options.secure === "undefined" && this.port === 465) {
          this.secureConnection = true;
        }
        this.name = this.options.name || this._getHostname();
        this.logger = shared.getLogger(this.options, {
          component: this.options.component || "smtp-connection",
          sid: this.id
        });
        this.customAuth = /* @__PURE__ */ new Map();
        Object.keys(this.options.customAuth || {}).forEach((key) => {
          let mapKey = (key || "").toString().trim().toUpperCase();
          if (!mapKey) {
            return;
          }
          this.customAuth.set(mapKey, this.options.customAuth[key]);
        });
        this.version = packageInfo.version;
        this.authenticated = false;
        this.destroyed = false;
        this.secure = !!this.secureConnection;
        this._remainder = "";
        this._responseQueue = [];
        this.lastServerResponse = false;
        this._socket = false;
        this._supportedAuth = [];
        this.allowsAuth = false;
        this._envelope = false;
        this._supportedExtensions = [];
        this._maxAllowedSize = 0;
        this._responseActions = [];
        this._recipientQueue = [];
        this._greetingTimeout = false;
        this._connectionTimeout = false;
        this._destroyed = false;
        this._closing = false;
        this._onSocketData = (chunk) => this._onData(chunk);
        this._onSocketError = (error3) => this._onError(error3, "ESOCKET", false, "CONN");
        this._onSocketClose = () => this._onClose();
        this._onSocketEnd = () => this._onEnd();
        this._onSocketTimeout = () => this._onTimeout();
      }
      /**
       * Creates a connection to a SMTP server and sets up connection
       * listener
       */
      connect(connectCallback) {
        if (typeof connectCallback === "function") {
          this.once("connect", () => {
            this.logger.debug(
              {
                tnx: "smtp"
              },
              "SMTP handshake finished"
            );
            connectCallback();
          });
          const isDestroyedMessage = this._isDestroyedMessage("connect");
          if (isDestroyedMessage) {
            return connectCallback(this._formatError(isDestroyedMessage, "ECONNECTION", false, "CONN"));
          }
        }
        let opts = {
          port: this.port,
          host: this.host,
          allowInternalNetworkInterfaces: this.allowInternalNetworkInterfaces,
          timeout: this.options.dnsTimeout || DNS_TIMEOUT
        };
        if (this.options.localAddress) {
          opts.localAddress = this.options.localAddress;
        }
        let setupConnectionHandlers = /* @__PURE__ */ __name(() => {
          this._connectionTimeout = setTimeout(() => {
            this._onError("Connection timeout", "ETIMEDOUT", false, "CONN");
          }, this.options.connectionTimeout || CONNECTION_TIMEOUT);
          this._socket.on("error", this._onSocketError);
        }, "setupConnectionHandlers");
        if (this.options.connection) {
          this._socket = this.options.connection;
          setupConnectionHandlers();
          if (this.secureConnection && !this.alreadySecured) {
            setImmediate(
              () => this._upgradeConnection((err) => {
                if (err) {
                  this._onError(new Error("Error initiating TLS - " + (err.message || err)), "ETLS", false, "CONN");
                  return;
                }
                this._onConnect();
              })
            );
          } else {
            setImmediate(() => this._onConnect());
          }
          return;
        } else if (this.options.socket) {
          this._socket = this.options.socket;
          return shared.resolveHostname(opts, (err, resolved) => {
            if (err) {
              return setImmediate(() => this._onError(err, "EDNS", false, "CONN"));
            }
            this.logger.debug(
              {
                tnx: "dns",
                source: opts.host,
                resolved: resolved.host,
                cached: !!resolved.cached
              },
              "Resolved %s as %s [cache %s]",
              opts.host,
              resolved.host,
              resolved.cached ? "hit" : "miss"
            );
            Object.keys(resolved).forEach((key) => {
              if (key.charAt(0) !== "_" && resolved[key]) {
                opts[key] = resolved[key];
              }
            });
            try {
              this._socket.connect(this.port, this.host, () => {
                this._socket.setKeepAlive(true);
                this._onConnect();
              });
              setupConnectionHandlers();
            } catch (E) {
              return setImmediate(() => this._onError(E, "ECONNECTION", false, "CONN"));
            }
          });
        } else if (this.secureConnection) {
          if (this.options.tls) {
            Object.keys(this.options.tls).forEach((key) => {
              opts[key] = this.options.tls[key];
            });
          }
          if (this.servername && !opts.servername) {
            opts.servername = this.servername;
          }
          return shared.resolveHostname(opts, (err, resolved) => {
            if (err) {
              return setImmediate(() => this._onError(err, "EDNS", false, "CONN"));
            }
            this.logger.debug(
              {
                tnx: "dns",
                source: opts.host,
                resolved: resolved.host,
                cached: !!resolved.cached
              },
              "Resolved %s as %s [cache %s]",
              opts.host,
              resolved.host,
              resolved.cached ? "hit" : "miss"
            );
            Object.keys(resolved).forEach((key) => {
              if (key.charAt(0) !== "_" && resolved[key]) {
                opts[key] = resolved[key];
              }
            });
            try {
              this._socket = tls.connect(opts, () => {
                this._socket.setKeepAlive(true);
                this._onConnect();
              });
              setupConnectionHandlers();
            } catch (E) {
              return setImmediate(() => this._onError(E, "ECONNECTION", false, "CONN"));
            }
          });
        } else {
          return shared.resolveHostname(opts, (err, resolved) => {
            if (err) {
              return setImmediate(() => this._onError(err, "EDNS", false, "CONN"));
            }
            this.logger.debug(
              {
                tnx: "dns",
                source: opts.host,
                resolved: resolved.host,
                cached: !!resolved.cached
              },
              "Resolved %s as %s [cache %s]",
              opts.host,
              resolved.host,
              resolved.cached ? "hit" : "miss"
            );
            Object.keys(resolved).forEach((key) => {
              if (key.charAt(0) !== "_" && resolved[key]) {
                opts[key] = resolved[key];
              }
            });
            try {
              this._socket = net.connect(opts, () => {
                this._socket.setKeepAlive(true);
                this._onConnect();
              });
              setupConnectionHandlers();
            } catch (E) {
              return setImmediate(() => this._onError(E, "ECONNECTION", false, "CONN"));
            }
          });
        }
      }
      /**
       * Sends QUIT
       */
      quit() {
        this._sendCommand("QUIT");
        this._responseActions.push(this.close);
      }
      /**
       * Closes the connection to the server
       */
      close() {
        clearTimeout(this._connectionTimeout);
        clearTimeout(this._greetingTimeout);
        this._responseActions = [];
        if (this._closing) {
          return;
        }
        this._closing = true;
        let closeMethod = "end";
        if (this.stage === "init") {
          closeMethod = "destroy";
        }
        this.logger.debug(
          {
            tnx: "smtp"
          },
          'Closing connection to the server using "%s"',
          closeMethod
        );
        let socket = this._socket && this._socket.socket || this._socket;
        if (socket && !socket.destroyed) {
          try {
            socket[closeMethod]();
          } catch (E) {
          }
        }
        this._destroy();
      }
      /**
       * Authenticate user
       */
      login(authData, callback) {
        const isDestroyedMessage = this._isDestroyedMessage("login");
        if (isDestroyedMessage) {
          return callback(this._formatError(isDestroyedMessage, "ECONNECTION", false, "API"));
        }
        this._auth = authData || {};
        this._authMethod = (this._auth.method || "").toString().trim().toUpperCase() || false;
        if (!this._authMethod && this._auth.oauth2 && !this._auth.credentials) {
          this._authMethod = "XOAUTH2";
        } else if (!this._authMethod || this._authMethod === "XOAUTH2" && !this._auth.oauth2) {
          this._authMethod = (this._supportedAuth[0] || "PLAIN").toUpperCase().trim();
        }
        if (this._authMethod !== "XOAUTH2" && (!this._auth.credentials || !this._auth.credentials.user || !this._auth.credentials.pass)) {
          if (this._auth.user && this._auth.pass || this.customAuth.has(this._authMethod)) {
            this._auth.credentials = {
              user: this._auth.user,
              pass: this._auth.pass,
              options: this._auth.options
            };
          } else {
            return callback(this._formatError('Missing credentials for "' + this._authMethod + '"', "EAUTH", false, "API"));
          }
        }
        if (this.customAuth.has(this._authMethod)) {
          let handler = this.customAuth.get(this._authMethod);
          let lastResponse;
          let returned = false;
          let resolve = /* @__PURE__ */ __name(() => {
            if (returned) {
              return;
            }
            returned = true;
            this.logger.info(
              {
                tnx: "smtp",
                username: this._auth.user,
                action: "authenticated",
                method: this._authMethod
              },
              "User %s authenticated",
              JSON.stringify(this._auth.user)
            );
            this.authenticated = true;
            callback(null, true);
          }, "resolve");
          let reject = /* @__PURE__ */ __name((err) => {
            if (returned) {
              return;
            }
            returned = true;
            callback(this._formatError(err, "EAUTH", lastResponse, "AUTH " + this._authMethod));
          }, "reject");
          let handlerResponse = handler({
            auth: this._auth,
            method: this._authMethod,
            extensions: [].concat(this._supportedExtensions),
            authMethods: [].concat(this._supportedAuth),
            maxAllowedSize: this._maxAllowedSize || false,
            sendCommand: /* @__PURE__ */ __name((cmd, done) => {
              let promise;
              if (!done) {
                promise = new Promise((resolve2, reject2) => {
                  done = shared.callbackPromise(resolve2, reject2);
                });
              }
              this._responseActions.push((str) => {
                lastResponse = str;
                let codes = str.match(/^(\d+)(?:\s(\d+\.\d+\.\d+))?\s/);
                let data = {
                  command: cmd,
                  response: str
                };
                if (codes) {
                  data.status = Number(codes[1]) || 0;
                  if (codes[2]) {
                    data.code = codes[2];
                  }
                  data.text = str.substr(codes[0].length);
                } else {
                  data.text = str;
                  data.status = 0;
                }
                done(null, data);
              });
              setImmediate(() => this._sendCommand(cmd));
              return promise;
            }, "sendCommand"),
            resolve,
            reject
          });
          if (handlerResponse && typeof handlerResponse.catch === "function") {
            handlerResponse.then(resolve).catch(reject);
          }
          return;
        }
        switch (this._authMethod) {
          case "XOAUTH2":
            this._handleXOauth2Token(false, callback);
            return;
          case "LOGIN":
            this._responseActions.push((str) => {
              this._actionAUTH_LOGIN_USER(str, callback);
            });
            this._sendCommand("AUTH LOGIN");
            return;
          case "PLAIN":
            this._responseActions.push((str) => {
              this._actionAUTHComplete(str, callback);
            });
            this._sendCommand(
              "AUTH PLAIN " + Buffer.from(
                //this._auth.user+'\u0000'+
                "\0" + // skip authorization identity as it causes problems with some servers
                this._auth.credentials.user + "\0" + this._auth.credentials.pass,
                "utf-8"
              ).toString("base64"),
              // log entry without passwords
              "AUTH PLAIN " + Buffer.from(
                //this._auth.user+'\u0000'+
                "\0" + // skip authorization identity as it causes problems with some servers
                this._auth.credentials.user + "\0/* secret */",
                "utf-8"
              ).toString("base64")
            );
            return;
          case "CRAM-MD5":
            this._responseActions.push((str) => {
              this._actionAUTH_CRAM_MD5(str, callback);
            });
            this._sendCommand("AUTH CRAM-MD5");
            return;
        }
        return callback(this._formatError('Unknown authentication method "' + this._authMethod + '"', "EAUTH", false, "API"));
      }
      /**
       * Sends a message
       *
       * @param {Object} envelope Envelope object, {from: addr, to: [addr]}
       * @param {Object} message String, Buffer or a Stream
       * @param {Function} callback Callback to return once sending is completed
       */
      send(envelope, message, done) {
        if (!message) {
          return done(this._formatError("Empty message", "EMESSAGE", false, "API"));
        }
        const isDestroyedMessage = this._isDestroyedMessage("send message");
        if (isDestroyedMessage) {
          return done(this._formatError(isDestroyedMessage, "ECONNECTION", false, "API"));
        }
        if (this._maxAllowedSize && envelope.size > this._maxAllowedSize) {
          return setImmediate(() => {
            done(this._formatError("Message size larger than allowed " + this._maxAllowedSize, "EMESSAGE", false, "MAIL FROM"));
          });
        }
        let returned = false;
        let callback = /* @__PURE__ */ __name(function() {
          if (returned) {
            return;
          }
          returned = true;
          done(...arguments);
        }, "callback");
        if (typeof message.on === "function") {
          message.on("error", (err) => callback(this._formatError(err, "ESTREAM", false, "API")));
        }
        let startTime = Date.now();
        this._setEnvelope(envelope, (err, info3) => {
          if (err) {
            let stream2 = new PassThrough();
            if (typeof message.pipe === "function") {
              message.pipe(stream2);
            } else {
              stream2.write(message);
              stream2.end();
            }
            return callback(err);
          }
          let envelopeTime = Date.now();
          let stream = this._createSendStream((err2, str) => {
            if (err2) {
              return callback(err2);
            }
            info3.envelopeTime = envelopeTime - startTime;
            info3.messageTime = Date.now() - envelopeTime;
            info3.messageSize = stream.outByteCount;
            info3.response = str;
            return callback(null, info3);
          });
          if (typeof message.pipe === "function") {
            message.pipe(stream);
          } else {
            stream.write(message);
            stream.end();
          }
        });
      }
      /**
       * Resets connection state
       *
       * @param {Function} callback Callback to return once connection is reset
       */
      reset(callback) {
        this._sendCommand("RSET");
        this._responseActions.push((str) => {
          if (str.charAt(0) !== "2") {
            return callback(this._formatError("Could not reset session state. response=" + str, "EPROTOCOL", str, "RSET"));
          }
          this._envelope = false;
          return callback(null, true);
        });
      }
      /**
       * Connection listener that is run when the connection to
       * the server is opened
       *
       * @event
       */
      _onConnect() {
        clearTimeout(this._connectionTimeout);
        this.logger.info(
          {
            tnx: "network",
            localAddress: this._socket.localAddress,
            localPort: this._socket.localPort,
            remoteAddress: this._socket.remoteAddress,
            remotePort: this._socket.remotePort
          },
          "%s established to %s:%s",
          this.secure ? "Secure connection" : "Connection",
          this._socket.remoteAddress,
          this._socket.remotePort
        );
        if (this._destroyed) {
          this.close();
          return;
        }
        this.stage = "connected";
        this._socket.removeListener("data", this._onSocketData);
        this._socket.removeListener("timeout", this._onSocketTimeout);
        this._socket.removeListener("close", this._onSocketClose);
        this._socket.removeListener("end", this._onSocketEnd);
        this._socket.on("data", this._onSocketData);
        this._socket.once("close", this._onSocketClose);
        this._socket.once("end", this._onSocketEnd);
        this._socket.setTimeout(this.options.socketTimeout || SOCKET_TIMEOUT);
        this._socket.on("timeout", this._onSocketTimeout);
        this._greetingTimeout = setTimeout(() => {
          if (this._socket && !this._destroyed && this._responseActions[0] === this._actionGreeting) {
            this._onError("Greeting never received", "ETIMEDOUT", false, "CONN");
          }
        }, this.options.greetingTimeout || GREETING_TIMEOUT);
        this._responseActions.push(this._actionGreeting);
        this._socket.resume();
      }
      /**
       * 'data' listener for data coming from the server
       *
       * @event
       * @param {Buffer} chunk Data chunk coming from the server
       */
      _onData(chunk) {
        if (this._destroyed || !chunk || !chunk.length) {
          return;
        }
        let data = (chunk || "").toString("binary");
        let lines = (this._remainder + data).split(/\r?\n/);
        let lastline;
        this._remainder = lines.pop();
        for (let i = 0, len = lines.length; i < len; i++) {
          if (this._responseQueue.length) {
            lastline = this._responseQueue[this._responseQueue.length - 1];
            if (/^\d+-/.test(lastline.split("\n").pop())) {
              this._responseQueue[this._responseQueue.length - 1] += "\n" + lines[i];
              continue;
            }
          }
          this._responseQueue.push(lines[i]);
        }
        if (this._responseQueue.length) {
          lastline = this._responseQueue[this._responseQueue.length - 1];
          if (/^\d+-/.test(lastline.split("\n").pop())) {
            return;
          }
        }
        this._processResponse();
      }
      /**
       * 'error' listener for the socket
       *
       * @event
       * @param {Error} err Error object
       * @param {String} type Error name
       */
      _onError(err, type, data, command) {
        clearTimeout(this._connectionTimeout);
        clearTimeout(this._greetingTimeout);
        if (this._destroyed) {
          return;
        }
        err = this._formatError(err, type, data, command);
        this.logger.error(data, err.message);
        this.emit("error", err);
        this.close();
      }
      _formatError(message, type, response, command) {
        let err;
        if (/Error\]$/i.test(Object.prototype.toString.call(message))) {
          err = message;
        } else {
          err = new Error(message);
        }
        if (type && type !== "Error") {
          err.code = type;
        }
        if (response) {
          err.response = response;
          err.message += ": " + response;
        }
        let responseCode = typeof response === "string" && Number((response.match(/^\d+/) || [])[0]) || false;
        if (responseCode) {
          err.responseCode = responseCode;
        }
        if (command) {
          err.command = command;
        }
        return err;
      }
      /**
       * 'close' listener for the socket
       *
       * @event
       */
      _onClose() {
        let serverResponse = false;
        if (this._remainder && this._remainder.trim()) {
          if (this.options.debug || this.options.transactionLog) {
            this.logger.debug(
              {
                tnx: "server"
              },
              this._remainder.replace(/\r?\n$/, "")
            );
          }
          this.lastServerResponse = serverResponse = this._remainder.trim();
        }
        this.logger.info(
          {
            tnx: "network"
          },
          "Connection closed"
        );
        if (this.upgrading && !this._destroyed) {
          return this._onError(new Error("Connection closed unexpectedly"), "ETLS", serverResponse, "CONN");
        } else if (![this._actionGreeting, this.close].includes(this._responseActions[0]) && !this._destroyed) {
          return this._onError(new Error("Connection closed unexpectedly"), "ECONNECTION", serverResponse, "CONN");
        } else if (/^[45]\d{2}\b/.test(serverResponse)) {
          return this._onError(new Error("Connection closed unexpectedly"), "ECONNECTION", serverResponse, "CONN");
        }
        this._destroy();
      }
      /**
       * 'end' listener for the socket
       *
       * @event
       */
      _onEnd() {
        if (this._socket && !this._socket.destroyed) {
          this._socket.destroy();
        }
      }
      /**
       * 'timeout' listener for the socket
       *
       * @event
       */
      _onTimeout() {
        return this._onError(new Error("Timeout"), "ETIMEDOUT", false, "CONN");
      }
      /**
       * Destroys the client, emits 'end'
       */
      _destroy() {
        if (this._destroyed) {
          return;
        }
        this._destroyed = true;
        this.emit("end");
      }
      /**
       * Upgrades the connection to TLS
       *
       * @param {Function} callback Callback function to run when the connection
       *        has been secured
       */
      _upgradeConnection(callback) {
        this._socket.removeListener("data", this._onSocketData);
        this._socket.removeListener("timeout", this._onSocketTimeout);
        let socketPlain = this._socket;
        let opts = {
          socket: this._socket,
          host: this.host
        };
        Object.keys(this.options.tls || {}).forEach((key) => {
          opts[key] = this.options.tls[key];
        });
        if (this.servername && !opts.servername) {
          opts.servername = this.servername;
        }
        this.upgrading = true;
        try {
          this._socket = tls.connect(opts, () => {
            this.secure = true;
            this.upgrading = false;
            this._socket.on("data", this._onSocketData);
            socketPlain.removeListener("close", this._onSocketClose);
            socketPlain.removeListener("end", this._onSocketEnd);
            return callback(null, true);
          });
        } catch (err) {
          return callback(err);
        }
        this._socket.on("error", this._onSocketError);
        this._socket.once("close", this._onSocketClose);
        this._socket.once("end", this._onSocketEnd);
        this._socket.setTimeout(this.options.socketTimeout || SOCKET_TIMEOUT);
        this._socket.on("timeout", this._onSocketTimeout);
        socketPlain.resume();
      }
      /**
       * Processes queued responses from the server
       *
       * @param {Boolean} force If true, ignores _processing flag
       */
      _processResponse() {
        if (!this._responseQueue.length) {
          return false;
        }
        let str = this.lastServerResponse = (this._responseQueue.shift() || "").toString();
        if (/^\d+-/.test(str.split("\n").pop())) {
          return;
        }
        if (this.options.debug || this.options.transactionLog) {
          this.logger.debug(
            {
              tnx: "server"
            },
            str.replace(/\r?\n$/, "")
          );
        }
        if (!str.trim()) {
          setImmediate(() => this._processResponse());
        }
        let action = this._responseActions.shift();
        if (typeof action === "function") {
          action.call(this, str);
          setImmediate(() => this._processResponse());
        } else {
          return this._onError(new Error("Unexpected Response"), "EPROTOCOL", str, "CONN");
        }
      }
      /**
       * Send a command to the server, append \r\n
       *
       * @param {String} str String to be sent to the server
       * @param {String} logStr Optional string to be used for logging instead of the actual string
       */
      _sendCommand(str, logStr) {
        if (this._destroyed) {
          return;
        }
        if (this._socket.destroyed) {
          return this.close();
        }
        if (this.options.debug || this.options.transactionLog) {
          this.logger.debug(
            {
              tnx: "client"
            },
            (logStr || str || "").toString().replace(/\r?\n$/, "")
          );
        }
        this._socket.write(Buffer.from(str + "\r\n", "utf-8"));
      }
      /**
       * Initiates a new message by submitting envelope data, starting with
       * MAIL FROM: command
       *
       * @param {Object} envelope Envelope object in the form of
       *        {from:'...', to:['...']}
       *        or
       *        {from:{address:'...',name:'...'}, to:[address:'...',name:'...']}
       */
      _setEnvelope(envelope, callback) {
        let args = [];
        let useSmtpUtf8 = false;
        this._envelope = envelope || {};
        this._envelope.from = (this._envelope.from && this._envelope.from.address || this._envelope.from || "").toString().trim();
        this._envelope.to = [].concat(this._envelope.to || []).map((to) => (to && to.address || to || "").toString().trim());
        if (!this._envelope.to.length) {
          return callback(this._formatError("No recipients defined", "EENVELOPE", false, "API"));
        }
        if (this._envelope.from && /[\r\n<>]/.test(this._envelope.from)) {
          return callback(this._formatError("Invalid sender " + JSON.stringify(this._envelope.from), "EENVELOPE", false, "API"));
        }
        if (/[\x80-\uFFFF]/.test(this._envelope.from)) {
          useSmtpUtf8 = true;
        }
        for (let i = 0, len = this._envelope.to.length; i < len; i++) {
          if (!this._envelope.to[i] || /[\r\n<>]/.test(this._envelope.to[i])) {
            return callback(this._formatError("Invalid recipient " + JSON.stringify(this._envelope.to[i]), "EENVELOPE", false, "API"));
          }
          if (/[\x80-\uFFFF]/.test(this._envelope.to[i])) {
            useSmtpUtf8 = true;
          }
        }
        this._envelope.rcptQueue = JSON.parse(JSON.stringify(this._envelope.to || []));
        this._envelope.rejected = [];
        this._envelope.rejectedErrors = [];
        this._envelope.accepted = [];
        if (this._envelope.dsn) {
          try {
            this._envelope.dsn = this._setDsnEnvelope(this._envelope.dsn);
          } catch (err) {
            return callback(this._formatError("Invalid DSN " + err.message, "EENVELOPE", false, "API"));
          }
        }
        this._responseActions.push((str) => {
          this._actionMAIL(str, callback);
        });
        if (useSmtpUtf8 && this._supportedExtensions.includes("SMTPUTF8")) {
          args.push("SMTPUTF8");
          this._usingSmtpUtf8 = true;
        }
        if (this._envelope.use8BitMime && this._supportedExtensions.includes("8BITMIME")) {
          args.push("BODY=8BITMIME");
          this._using8BitMime = true;
        }
        if (this._envelope.size && this._supportedExtensions.includes("SIZE")) {
          args.push("SIZE=" + this._envelope.size);
        }
        if (this._envelope.dsn && this._supportedExtensions.includes("DSN")) {
          if (this._envelope.dsn.ret) {
            args.push("RET=" + shared.encodeXText(this._envelope.dsn.ret));
          }
          if (this._envelope.dsn.envid) {
            args.push("ENVID=" + shared.encodeXText(this._envelope.dsn.envid));
          }
        }
        this._sendCommand("MAIL FROM:<" + this._envelope.from + ">" + (args.length ? " " + args.join(" ") : ""));
      }
      _setDsnEnvelope(params) {
        let ret = (params.ret || params.return || "").toString().toUpperCase() || null;
        if (ret) {
          switch (ret) {
            case "HDRS":
            case "HEADERS":
              ret = "HDRS";
              break;
            case "FULL":
            case "BODY":
              ret = "FULL";
              break;
          }
        }
        if (ret && !["FULL", "HDRS"].includes(ret)) {
          throw new Error("ret: " + JSON.stringify(ret));
        }
        let envid = (params.envid || params.id || "").toString() || null;
        let notify = params.notify || null;
        if (notify) {
          if (typeof notify === "string") {
            notify = notify.split(",");
          }
          notify = notify.map((n) => n.trim().toUpperCase());
          let validNotify = ["NEVER", "SUCCESS", "FAILURE", "DELAY"];
          let invaliNotify = notify.filter((n) => !validNotify.includes(n));
          if (invaliNotify.length || notify.length > 1 && notify.includes("NEVER")) {
            throw new Error("notify: " + JSON.stringify(notify.join(",")));
          }
          notify = notify.join(",");
        }
        let orcpt = (params.recipient || params.orcpt || "").toString() || null;
        if (orcpt && orcpt.indexOf(";") < 0) {
          orcpt = "rfc822;" + orcpt;
        }
        return {
          ret,
          envid,
          notify,
          orcpt
        };
      }
      _getDsnRcptToArgs() {
        let args = [];
        if (this._envelope.dsn && this._supportedExtensions.includes("DSN")) {
          if (this._envelope.dsn.notify) {
            args.push("NOTIFY=" + shared.encodeXText(this._envelope.dsn.notify));
          }
          if (this._envelope.dsn.orcpt) {
            args.push("ORCPT=" + shared.encodeXText(this._envelope.dsn.orcpt));
          }
        }
        return args.length ? " " + args.join(" ") : "";
      }
      _createSendStream(callback) {
        let dataStream = new DataStream();
        let logStream;
        if (this.options.lmtp) {
          this._envelope.accepted.forEach((recipient, i) => {
            let final = i === this._envelope.accepted.length - 1;
            this._responseActions.push((str) => {
              this._actionLMTPStream(recipient, final, str, callback);
            });
          });
        } else {
          this._responseActions.push((str) => {
            this._actionSMTPStream(str, callback);
          });
        }
        dataStream.pipe(this._socket, {
          end: false
        });
        if (this.options.debug) {
          logStream = new PassThrough();
          logStream.on("readable", () => {
            let chunk;
            while (chunk = logStream.read()) {
              this.logger.debug(
                {
                  tnx: "message"
                },
                chunk.toString("binary").replace(/\r?\n$/, "")
              );
            }
          });
          dataStream.pipe(logStream);
        }
        dataStream.once("end", () => {
          this.logger.info(
            {
              tnx: "message",
              inByteCount: dataStream.inByteCount,
              outByteCount: dataStream.outByteCount
            },
            "<%s bytes encoded mime message (source size %s bytes)>",
            dataStream.outByteCount,
            dataStream.inByteCount
          );
        });
        return dataStream;
      }
      /** ACTIONS **/
      /**
       * Will be run after the connection is created and the server sends
       * a greeting. If the incoming message starts with 220 initiate
       * SMTP session by sending EHLO command
       *
       * @param {String} str Message from the server
       */
      _actionGreeting(str) {
        clearTimeout(this._greetingTimeout);
        if (str.substr(0, 3) !== "220") {
          this._onError(new Error("Invalid greeting. response=" + str), "EPROTOCOL", str, "CONN");
          return;
        }
        if (this.options.lmtp) {
          this._responseActions.push(this._actionLHLO);
          this._sendCommand("LHLO " + this.name);
        } else {
          this._responseActions.push(this._actionEHLO);
          this._sendCommand("EHLO " + this.name);
        }
      }
      /**
       * Handles server response for LHLO command. If it yielded in
       * error, emit 'error', otherwise treat this as an EHLO response
       *
       * @param {String} str Message from the server
       */
      _actionLHLO(str) {
        if (str.charAt(0) !== "2") {
          this._onError(new Error("Invalid LHLO. response=" + str), "EPROTOCOL", str, "LHLO");
          return;
        }
        this._actionEHLO(str);
      }
      /**
       * Handles server response for EHLO command. If it yielded in
       * error, try HELO instead, otherwise initiate TLS negotiation
       * if STARTTLS is supported by the server or move into the
       * authentication phase.
       *
       * @param {String} str Message from the server
       */
      _actionEHLO(str) {
        let match;
        if (str.substr(0, 3) === "421") {
          this._onError(new Error("Server terminates connection. response=" + str), "ECONNECTION", str, "EHLO");
          return;
        }
        if (str.charAt(0) !== "2") {
          if (this.options.requireTLS) {
            this._onError(new Error("EHLO failed but HELO does not support required STARTTLS. response=" + str), "ECONNECTION", str, "EHLO");
            return;
          }
          this._responseActions.push(this._actionHELO);
          this._sendCommand("HELO " + this.name);
          return;
        }
        this._ehloLines = str.split(/\r?\n/).map((line) => line.replace(/^\d+[ -]/, "").trim()).filter((line) => line).slice(1);
        if (!this.secure && !this.options.ignoreTLS && (/[ -]STARTTLS\b/im.test(str) || this.options.requireTLS)) {
          this._sendCommand("STARTTLS");
          this._responseActions.push(this._actionSTARTTLS);
          return;
        }
        if (/[ -]SMTPUTF8\b/im.test(str)) {
          this._supportedExtensions.push("SMTPUTF8");
        }
        if (/[ -]DSN\b/im.test(str)) {
          this._supportedExtensions.push("DSN");
        }
        if (/[ -]8BITMIME\b/im.test(str)) {
          this._supportedExtensions.push("8BITMIME");
        }
        if (/[ -]PIPELINING\b/im.test(str)) {
          this._supportedExtensions.push("PIPELINING");
        }
        if (/[ -]AUTH\b/i.test(str)) {
          this.allowsAuth = true;
        }
        if (/[ -]AUTH(?:(\s+|=)[^\n]*\s+|\s+|=)PLAIN/i.test(str)) {
          this._supportedAuth.push("PLAIN");
        }
        if (/[ -]AUTH(?:(\s+|=)[^\n]*\s+|\s+|=)LOGIN/i.test(str)) {
          this._supportedAuth.push("LOGIN");
        }
        if (/[ -]AUTH(?:(\s+|=)[^\n]*\s+|\s+|=)CRAM-MD5/i.test(str)) {
          this._supportedAuth.push("CRAM-MD5");
        }
        if (/[ -]AUTH(?:(\s+|=)[^\n]*\s+|\s+|=)XOAUTH2/i.test(str)) {
          this._supportedAuth.push("XOAUTH2");
        }
        if (match = str.match(/[ -]SIZE(?:[ \t]+(\d+))?/im)) {
          this._supportedExtensions.push("SIZE");
          this._maxAllowedSize = Number(match[1]) || 0;
        }
        this.emit("connect");
      }
      /**
       * Handles server response for HELO command. If it yielded in
       * error, emit 'error', otherwise move into the authentication phase.
       *
       * @param {String} str Message from the server
       */
      _actionHELO(str) {
        if (str.charAt(0) !== "2") {
          this._onError(new Error("Invalid HELO. response=" + str), "EPROTOCOL", str, "HELO");
          return;
        }
        this.allowsAuth = true;
        this.emit("connect");
      }
      /**
       * Handles server response for STARTTLS command. If there's an error
       * try HELO instead, otherwise initiate TLS upgrade. If the upgrade
       * succeedes restart the EHLO
       *
       * @param {String} str Message from the server
       */
      _actionSTARTTLS(str) {
        if (str.charAt(0) !== "2") {
          if (this.options.opportunisticTLS) {
            this.logger.info(
              {
                tnx: "smtp"
              },
              "Failed STARTTLS upgrade, continuing unencrypted"
            );
            return this.emit("connect");
          }
          this._onError(new Error("Error upgrading connection with STARTTLS"), "ETLS", str, "STARTTLS");
          return;
        }
        this._upgradeConnection((err, secured) => {
          if (err) {
            this._onError(new Error("Error initiating TLS - " + (err.message || err)), "ETLS", false, "STARTTLS");
            return;
          }
          this.logger.info(
            {
              tnx: "smtp"
            },
            "Connection upgraded with STARTTLS"
          );
          if (secured) {
            if (this.options.lmtp) {
              this._responseActions.push(this._actionLHLO);
              this._sendCommand("LHLO " + this.name);
            } else {
              this._responseActions.push(this._actionEHLO);
              this._sendCommand("EHLO " + this.name);
            }
          } else {
            this.emit("connect");
          }
        });
      }
      /**
       * Handle the response for AUTH LOGIN command. We are expecting
       * '334 VXNlcm5hbWU6' (base64 for 'Username:'). Data to be sent as
       * response needs to be base64 encoded username. We do not need
       * exact match but settle with 334 response in general as some
       * hosts invalidly use a longer message than VXNlcm5hbWU6
       *
       * @param {String} str Message from the server
       */
      _actionAUTH_LOGIN_USER(str, callback) {
        if (!/^334[ -]/.test(str)) {
          callback(this._formatError('Invalid login sequence while waiting for "334 VXNlcm5hbWU6"', "EAUTH", str, "AUTH LOGIN"));
          return;
        }
        this._responseActions.push((str2) => {
          this._actionAUTH_LOGIN_PASS(str2, callback);
        });
        this._sendCommand(Buffer.from(this._auth.credentials.user + "", "utf-8").toString("base64"));
      }
      /**
       * Handle the response for AUTH CRAM-MD5 command. We are expecting
       * '334 <challenge string>'. Data to be sent as response needs to be
       * base64 decoded challenge string, MD5 hashed using the password as
       * a HMAC key, prefixed by the username and a space, and finally all
       * base64 encoded again.
       *
       * @param {String} str Message from the server
       */
      _actionAUTH_CRAM_MD5(str, callback) {
        let challengeMatch = str.match(/^334\s+(.+)$/);
        let challengeString = "";
        if (!challengeMatch) {
          return callback(this._formatError("Invalid login sequence while waiting for server challenge string", "EAUTH", str, "AUTH CRAM-MD5"));
        } else {
          challengeString = challengeMatch[1];
        }
        let base64decoded = Buffer.from(challengeString, "base64").toString("ascii"), hmacMD5 = crypto2.createHmac("md5", this._auth.credentials.pass);
        hmacMD5.update(base64decoded);
        let prepended = this._auth.credentials.user + " " + hmacMD5.digest("hex");
        this._responseActions.push((str2) => {
          this._actionAUTH_CRAM_MD5_PASS(str2, callback);
        });
        this._sendCommand(
          Buffer.from(prepended).toString("base64"),
          // hidden hash for logs
          Buffer.from(this._auth.credentials.user + " /* secret */").toString("base64")
        );
      }
      /**
       * Handles the response to CRAM-MD5 authentication, if there's no error,
       * the user can be considered logged in. Start waiting for a message to send
       *
       * @param {String} str Message from the server
       */
      _actionAUTH_CRAM_MD5_PASS(str, callback) {
        if (!str.match(/^235\s+/)) {
          return callback(this._formatError('Invalid login sequence while waiting for "235"', "EAUTH", str, "AUTH CRAM-MD5"));
        }
        this.logger.info(
          {
            tnx: "smtp",
            username: this._auth.user,
            action: "authenticated",
            method: this._authMethod
          },
          "User %s authenticated",
          JSON.stringify(this._auth.user)
        );
        this.authenticated = true;
        callback(null, true);
      }
      /**
       * Handle the response for AUTH LOGIN command. We are expecting
       * '334 UGFzc3dvcmQ6' (base64 for 'Password:'). Data to be sent as
       * response needs to be base64 encoded password.
       *
       * @param {String} str Message from the server
       */
      _actionAUTH_LOGIN_PASS(str, callback) {
        if (!/^334[ -]/.test(str)) {
          return callback(this._formatError('Invalid login sequence while waiting for "334 UGFzc3dvcmQ6"', "EAUTH", str, "AUTH LOGIN"));
        }
        this._responseActions.push((str2) => {
          this._actionAUTHComplete(str2, callback);
        });
        this._sendCommand(
          Buffer.from((this._auth.credentials.pass || "").toString(), "utf-8").toString("base64"),
          // Hidden pass for logs
          Buffer.from("/* secret */", "utf-8").toString("base64")
        );
      }
      /**
       * Handles the response for authentication, if there's no error,
       * the user can be considered logged in. Start waiting for a message to send
       *
       * @param {String} str Message from the server
       */
      _actionAUTHComplete(str, isRetry, callback) {
        if (!callback && typeof isRetry === "function") {
          callback = isRetry;
          isRetry = false;
        }
        if (str.substr(0, 3) === "334") {
          this._responseActions.push((str2) => {
            if (isRetry || this._authMethod !== "XOAUTH2") {
              this._actionAUTHComplete(str2, true, callback);
            } else {
              setImmediate(() => this._handleXOauth2Token(true, callback));
            }
          });
          this._sendCommand("");
          return;
        }
        if (str.charAt(0) !== "2") {
          this.logger.info(
            {
              tnx: "smtp",
              username: this._auth.user,
              action: "authfail",
              method: this._authMethod
            },
            "User %s failed to authenticate",
            JSON.stringify(this._auth.user)
          );
          return callback(this._formatError("Invalid login", "EAUTH", str, "AUTH " + this._authMethod));
        }
        this.logger.info(
          {
            tnx: "smtp",
            username: this._auth.user,
            action: "authenticated",
            method: this._authMethod
          },
          "User %s authenticated",
          JSON.stringify(this._auth.user)
        );
        this.authenticated = true;
        callback(null, true);
      }
      /**
       * Handle response for a MAIL FROM: command
       *
       * @param {String} str Message from the server
       */
      _actionMAIL(str, callback) {
        let message, curRecipient;
        if (Number(str.charAt(0)) !== 2) {
          if (this._usingSmtpUtf8 && /^550 /.test(str) && /[\x80-\uFFFF]/.test(this._envelope.from)) {
            message = "Internationalized mailbox name not allowed";
          } else {
            message = "Mail command failed";
          }
          return callback(this._formatError(message, "EENVELOPE", str, "MAIL FROM"));
        }
        if (!this._envelope.rcptQueue.length) {
          return callback(this._formatError("Can't send mail - no recipients defined", "EENVELOPE", false, "API"));
        } else {
          this._recipientQueue = [];
          if (this._supportedExtensions.includes("PIPELINING")) {
            while (this._envelope.rcptQueue.length) {
              curRecipient = this._envelope.rcptQueue.shift();
              this._recipientQueue.push(curRecipient);
              this._responseActions.push((str2) => {
                this._actionRCPT(str2, callback);
              });
              this._sendCommand("RCPT TO:<" + curRecipient + ">" + this._getDsnRcptToArgs());
            }
          } else {
            curRecipient = this._envelope.rcptQueue.shift();
            this._recipientQueue.push(curRecipient);
            this._responseActions.push((str2) => {
              this._actionRCPT(str2, callback);
            });
            this._sendCommand("RCPT TO:<" + curRecipient + ">" + this._getDsnRcptToArgs());
          }
        }
      }
      /**
       * Handle response for a RCPT TO: command
       *
       * @param {String} str Message from the server
       */
      _actionRCPT(str, callback) {
        let message, err, curRecipient = this._recipientQueue.shift();
        if (Number(str.charAt(0)) !== 2) {
          if (this._usingSmtpUtf8 && /^553 /.test(str) && /[\x80-\uFFFF]/.test(curRecipient)) {
            message = "Internationalized mailbox name not allowed";
          } else {
            message = "Recipient command failed";
          }
          this._envelope.rejected.push(curRecipient);
          err = this._formatError(message, "EENVELOPE", str, "RCPT TO");
          err.recipient = curRecipient;
          this._envelope.rejectedErrors.push(err);
        } else {
          this._envelope.accepted.push(curRecipient);
        }
        if (!this._envelope.rcptQueue.length && !this._recipientQueue.length) {
          if (this._envelope.rejected.length < this._envelope.to.length) {
            this._responseActions.push((str2) => {
              this._actionDATA(str2, callback);
            });
            this._sendCommand("DATA");
          } else {
            err = this._formatError("Can't send mail - all recipients were rejected", "EENVELOPE", str, "RCPT TO");
            err.rejected = this._envelope.rejected;
            err.rejectedErrors = this._envelope.rejectedErrors;
            return callback(err);
          }
        } else if (this._envelope.rcptQueue.length) {
          curRecipient = this._envelope.rcptQueue.shift();
          this._recipientQueue.push(curRecipient);
          this._responseActions.push((str2) => {
            this._actionRCPT(str2, callback);
          });
          this._sendCommand("RCPT TO:<" + curRecipient + ">" + this._getDsnRcptToArgs());
        }
      }
      /**
       * Handle response for a DATA command
       *
       * @param {String} str Message from the server
       */
      _actionDATA(str, callback) {
        if (!/^[23]/.test(str)) {
          return callback(this._formatError("Data command failed", "EENVELOPE", str, "DATA"));
        }
        let response = {
          accepted: this._envelope.accepted,
          rejected: this._envelope.rejected
        };
        if (this._ehloLines && this._ehloLines.length) {
          response.ehlo = this._ehloLines;
        }
        if (this._envelope.rejectedErrors.length) {
          response.rejectedErrors = this._envelope.rejectedErrors;
        }
        callback(null, response);
      }
      /**
       * Handle response for a DATA stream when using SMTP
       * We expect a single response that defines if the sending succeeded or failed
       *
       * @param {String} str Message from the server
       */
      _actionSMTPStream(str, callback) {
        if (Number(str.charAt(0)) !== 2) {
          return callback(this._formatError("Message failed", "EMESSAGE", str, "DATA"));
        } else {
          return callback(null, str);
        }
      }
      /**
       * Handle response for a DATA stream
       * We expect a separate response for every recipient. All recipients can either
       * succeed or fail separately
       *
       * @param {String} recipient The recipient this response applies to
       * @param {Boolean} final Is this the final recipient?
       * @param {String} str Message from the server
       */
      _actionLMTPStream(recipient, final, str, callback) {
        let err;
        if (Number(str.charAt(0)) !== 2) {
          err = this._formatError("Message failed for recipient " + recipient, "EMESSAGE", str, "DATA");
          err.recipient = recipient;
          this._envelope.rejected.push(recipient);
          this._envelope.rejectedErrors.push(err);
          for (let i = 0, len = this._envelope.accepted.length; i < len; i++) {
            if (this._envelope.accepted[i] === recipient) {
              this._envelope.accepted.splice(i, 1);
            }
          }
        }
        if (final) {
          return callback(null, str);
        }
      }
      _handleXOauth2Token(isRetry, callback) {
        this._auth.oauth2.getToken(isRetry, (err, accessToken) => {
          if (err) {
            this.logger.info(
              {
                tnx: "smtp",
                username: this._auth.user,
                action: "authfail",
                method: this._authMethod
              },
              "User %s failed to authenticate",
              JSON.stringify(this._auth.user)
            );
            return callback(this._formatError(err, "EAUTH", false, "AUTH XOAUTH2"));
          }
          this._responseActions.push((str) => {
            this._actionAUTHComplete(str, isRetry, callback);
          });
          this._sendCommand(
            "AUTH XOAUTH2 " + this._auth.oauth2.buildXOAuth2Token(accessToken),
            //  Hidden for logs
            "AUTH XOAUTH2 " + this._auth.oauth2.buildXOAuth2Token("/* secret */")
          );
        });
      }
      /**
       *
       * @param {string} command
       * @private
       */
      _isDestroyedMessage(command) {
        if (this._destroyed) {
          return "Cannot " + command + " - smtp connection is already destroyed.";
        }
        if (this._socket) {
          if (this._socket.destroyed) {
            return "Cannot " + command + " - smtp connection socket is already destroyed.";
          }
          if (!this._socket.writable) {
            return "Cannot " + command + " - smtp connection socket is already half-closed.";
          }
        }
      }
      _getHostname() {
        let defaultHostname;
        try {
          defaultHostname = os.hostname() || "";
        } catch (err) {
          defaultHostname = "localhost";
        }
        if (!defaultHostname || defaultHostname.indexOf(".") < 0) {
          defaultHostname = "[127.0.0.1]";
        }
        if (defaultHostname.match(/^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}$/)) {
          defaultHostname = "[" + defaultHostname + "]";
        }
        return defaultHostname;
      }
    };
    module.exports = SMTPConnection;
  }
});

// node_modules/nodemailer/lib/xoauth2/index.js
var require_xoauth2 = __commonJS({
  "node_modules/nodemailer/lib/xoauth2/index.js"(exports, module) {
    "use strict";
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    var Stream = require_stream().Stream;
    var nmfetch = require_fetch();
    var crypto2 = require_crypto();
    var shared = require_shared();
    var XOAuth2 = class extends Stream {
      static {
        __name(this, "XOAuth2");
      }
      constructor(options, logger2) {
        super();
        this.options = options || {};
        if (options && options.serviceClient) {
          if (!options.privateKey || !options.user) {
            setImmediate(() => this.emit("error", new Error('Options "privateKey" and "user" are required for service account!')));
            return;
          }
          let serviceRequestTimeout = Math.min(Math.max(Number(this.options.serviceRequestTimeout) || 0, 0), 3600);
          this.options.serviceRequestTimeout = serviceRequestTimeout || 5 * 60;
        }
        this.logger = shared.getLogger(
          {
            logger: logger2
          },
          {
            component: this.options.component || "OAuth2"
          }
        );
        this.provisionCallback = typeof this.options.provisionCallback === "function" ? this.options.provisionCallback : false;
        this.options.accessUrl = this.options.accessUrl || "https://accounts.google.com/o/oauth2/token";
        this.options.customHeaders = this.options.customHeaders || {};
        this.options.customParams = this.options.customParams || {};
        this.accessToken = this.options.accessToken || false;
        if (this.options.expires && Number(this.options.expires)) {
          this.expires = this.options.expires;
        } else {
          let timeout = Math.max(Number(this.options.timeout) || 0, 0);
          this.expires = timeout && Date.now() + timeout * 1e3 || 0;
        }
        this.renewing = false;
        this.renewalQueue = [];
      }
      /**
       * Returns or generates (if previous has expired) a XOAuth2 token
       *
       * @param {Boolean} renew If false then use cached access token (if available)
       * @param {Function} callback Callback function with error object and token string
       */
      getToken(renew, callback) {
        if (!renew && this.accessToken && (!this.expires || this.expires > Date.now())) {
          this.logger.debug(
            {
              tnx: "OAUTH2",
              user: this.options.user,
              action: "reuse"
            },
            "Reusing existing access token for %s",
            this.options.user
          );
          return callback(null, this.accessToken);
        }
        if (!this.provisionCallback && !this.options.refreshToken && !this.options.serviceClient) {
          if (this.accessToken) {
            this.logger.debug(
              {
                tnx: "OAUTH2",
                user: this.options.user,
                action: "reuse"
              },
              "Reusing existing access token (no refresh capability) for %s",
              this.options.user
            );
            return callback(null, this.accessToken);
          }
          this.logger.error(
            {
              tnx: "OAUTH2",
              user: this.options.user,
              action: "renew"
            },
            "Cannot renew access token for %s: No refresh mechanism available",
            this.options.user
          );
          return callback(new Error("Can't create new access token for user"));
        }
        if (this.renewing) {
          return this.renewalQueue.push({ renew, callback });
        }
        this.renewing = true;
        const generateCallback = /* @__PURE__ */ __name((err, accessToken) => {
          this.renewalQueue.forEach((item) => item.callback(err, accessToken));
          this.renewalQueue = [];
          this.renewing = false;
          if (err) {
            this.logger.error(
              {
                err,
                tnx: "OAUTH2",
                user: this.options.user,
                action: "renew"
              },
              "Failed generating new Access Token for %s",
              this.options.user
            );
          } else {
            this.logger.info(
              {
                tnx: "OAUTH2",
                user: this.options.user,
                action: "renew"
              },
              "Generated new Access Token for %s",
              this.options.user
            );
          }
          callback(err, accessToken);
        }, "generateCallback");
        if (this.provisionCallback) {
          this.provisionCallback(this.options.user, !!renew, (err, accessToken, expires) => {
            if (!err && accessToken) {
              this.accessToken = accessToken;
              this.expires = expires || 0;
            }
            generateCallback(err, accessToken);
          });
        } else {
          this.generateToken(generateCallback);
        }
      }
      /**
       * Updates token values
       *
       * @param {String} accessToken New access token
       * @param {Number} timeout Access token lifetime in seconds
       *
       * Emits 'token': { user: User email-address, accessToken: the new accessToken, timeout: TTL in seconds}
       */
      updateToken(accessToken, timeout) {
        this.accessToken = accessToken;
        timeout = Math.max(Number(timeout) || 0, 0);
        this.expires = timeout && Date.now() + timeout * 1e3 || 0;
        this.emit("token", {
          user: this.options.user,
          accessToken: accessToken || "",
          expires: this.expires
        });
      }
      /**
       * Generates a new XOAuth2 token with the credentials provided at initialization
       *
       * @param {Function} callback Callback function with error object and token string
       */
      generateToken(callback) {
        let urlOptions;
        let loggedUrlOptions;
        if (this.options.serviceClient) {
          let iat = Math.floor(Date.now() / 1e3);
          let tokenData = {
            iss: this.options.serviceClient,
            scope: this.options.scope || "https://mail.google.com/",
            sub: this.options.user,
            aud: this.options.accessUrl,
            iat,
            exp: iat + this.options.serviceRequestTimeout
          };
          let token;
          try {
            token = this.jwtSignRS256(tokenData);
          } catch (err) {
            return callback(new Error("Can't generate token. Check your auth options"));
          }
          urlOptions = {
            grant_type: "urn:ietf:params:oauth:grant-type:jwt-bearer",
            assertion: token
          };
          loggedUrlOptions = {
            grant_type: "urn:ietf:params:oauth:grant-type:jwt-bearer",
            assertion: tokenData
          };
        } else {
          if (!this.options.refreshToken) {
            return callback(new Error("Can't create new access token for user"));
          }
          urlOptions = {
            client_id: this.options.clientId || "",
            client_secret: this.options.clientSecret || "",
            refresh_token: this.options.refreshToken,
            grant_type: "refresh_token"
          };
          loggedUrlOptions = {
            client_id: this.options.clientId || "",
            client_secret: (this.options.clientSecret || "").substr(0, 6) + "...",
            refresh_token: (this.options.refreshToken || "").substr(0, 6) + "...",
            grant_type: "refresh_token"
          };
        }
        Object.keys(this.options.customParams).forEach((key) => {
          urlOptions[key] = this.options.customParams[key];
          loggedUrlOptions[key] = this.options.customParams[key];
        });
        this.logger.debug(
          {
            tnx: "OAUTH2",
            user: this.options.user,
            action: "generate"
          },
          "Requesting token using: %s",
          JSON.stringify(loggedUrlOptions)
        );
        this.postRequest(this.options.accessUrl, urlOptions, this.options, (error3, body) => {
          let data;
          if (error3) {
            return callback(error3);
          }
          try {
            data = JSON.parse(body.toString());
          } catch (E) {
            return callback(E);
          }
          if (!data || typeof data !== "object") {
            this.logger.debug(
              {
                tnx: "OAUTH2",
                user: this.options.user,
                action: "post"
              },
              "Response: %s",
              (body || "").toString()
            );
            return callback(new Error("Invalid authentication response"));
          }
          let logData = {};
          Object.keys(data).forEach((key) => {
            if (key !== "access_token") {
              logData[key] = data[key];
            } else {
              logData[key] = (data[key] || "").toString().substr(0, 6) + "...";
            }
          });
          this.logger.debug(
            {
              tnx: "OAUTH2",
              user: this.options.user,
              action: "post"
            },
            "Response: %s",
            JSON.stringify(logData)
          );
          if (data.error) {
            let errorMessage = data.error;
            if (data.error_description) {
              errorMessage += ": " + data.error_description;
            }
            if (data.error_uri) {
              errorMessage += " (" + data.error_uri + ")";
            }
            return callback(new Error(errorMessage));
          }
          if (data.access_token) {
            this.updateToken(data.access_token, data.expires_in);
            return callback(null, this.accessToken);
          }
          return callback(new Error("No access token"));
        });
      }
      /**
       * Converts an access_token and user id into a base64 encoded XOAuth2 token
       *
       * @param {String} [accessToken] Access token string
       * @return {String} Base64 encoded token for IMAP or SMTP login
       */
      buildXOAuth2Token(accessToken) {
        let authData = ["user=" + (this.options.user || ""), "auth=Bearer " + (accessToken || this.accessToken), "", ""];
        return Buffer.from(authData.join(""), "utf-8").toString("base64");
      }
      /**
       * Custom POST request handler.
       * This is only needed to keep paths short in Windows – usually this module
       * is a dependency of a dependency and if it tries to require something
       * like the request module the paths get way too long to handle for Windows.
       * As we do only a simple POST request we do not actually require complicated
       * logic support (no redirects, no nothing) anyway.
       *
       * @param {String} url Url to POST to
       * @param {String|Buffer} payload Payload to POST
       * @param {Function} callback Callback function with (err, buff)
       */
      postRequest(url, payload, params, callback) {
        let returned = false;
        let chunks = [];
        let chunklen = 0;
        let req = nmfetch(url, {
          method: "post",
          headers: params.customHeaders,
          body: payload,
          allowErrorResponse: true
        });
        req.on("readable", () => {
          let chunk;
          while ((chunk = req.read()) !== null) {
            chunks.push(chunk);
            chunklen += chunk.length;
          }
        });
        req.once("error", (err) => {
          if (returned) {
            return;
          }
          returned = true;
          return callback(err);
        });
        req.once("end", () => {
          if (returned) {
            return;
          }
          returned = true;
          return callback(null, Buffer.concat(chunks, chunklen));
        });
      }
      /**
       * Encodes a buffer or a string into Base64url format
       *
       * @param {Buffer|String} data The data to convert
       * @return {String} The encoded string
       */
      toBase64URL(data) {
        if (typeof data === "string") {
          data = Buffer.from(data);
        }
        return data.toString("base64").replace(/[=]+/g, "").replace(/\+/g, "-").replace(/\//g, "_");
      }
      /**
       * Creates a JSON Web Token signed with RS256 (SHA256 + RSA)
       *
       * @param {Object} payload The payload to include in the generated token
       * @return {String} The generated and signed token
       */
      jwtSignRS256(payload) {
        payload = ['{"alg":"RS256","typ":"JWT"}', JSON.stringify(payload)].map((val) => this.toBase64URL(val)).join(".");
        let signature = crypto2.createSign("RSA-SHA256").update(payload).sign(this.options.privateKey);
        return payload + "." + this.toBase64URL(signature);
      }
    };
    module.exports = XOAuth2;
  }
});

// node_modules/nodemailer/lib/smtp-pool/pool-resource.js
var require_pool_resource = __commonJS({
  "node_modules/nodemailer/lib/smtp-pool/pool-resource.js"(exports, module) {
    "use strict";
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    var SMTPConnection = require_smtp_connection();
    var assign = require_shared().assign;
    var XOAuth2 = require_xoauth2();
    var EventEmitter2 = require_events();
    var PoolResource = class extends EventEmitter2 {
      static {
        __name(this, "PoolResource");
      }
      constructor(pool) {
        super();
        this.pool = pool;
        this.options = pool.options;
        this.logger = this.pool.logger;
        if (this.options.auth) {
          switch ((this.options.auth.type || "").toString().toUpperCase()) {
            case "OAUTH2": {
              let oauth2 = new XOAuth2(this.options.auth, this.logger);
              oauth2.provisionCallback = this.pool.mailer && this.pool.mailer.get("oauth2_provision_cb") || oauth2.provisionCallback;
              this.auth = {
                type: "OAUTH2",
                user: this.options.auth.user,
                oauth2,
                method: "XOAUTH2"
              };
              oauth2.on("token", (token) => this.pool.mailer.emit("token", token));
              oauth2.on("error", (err) => this.emit("error", err));
              break;
            }
            default:
              if (!this.options.auth.user && !this.options.auth.pass) {
                break;
              }
              this.auth = {
                type: (this.options.auth.type || "").toString().toUpperCase() || "LOGIN",
                user: this.options.auth.user,
                credentials: {
                  user: this.options.auth.user || "",
                  pass: this.options.auth.pass,
                  options: this.options.auth.options
                },
                method: (this.options.auth.method || "").trim().toUpperCase() || this.options.authMethod || false
              };
          }
        }
        this._connection = false;
        this._connected = false;
        this.messages = 0;
        this.available = true;
      }
      /**
       * Initiates a connection to the SMTP server
       *
       * @param {Function} callback Callback function to run once the connection is established or failed
       */
      connect(callback) {
        this.pool.getSocket(this.options, (err, socketOptions) => {
          if (err) {
            return callback(err);
          }
          let returned = false;
          let options = this.options;
          if (socketOptions && socketOptions.connection) {
            this.logger.info(
              {
                tnx: "proxy",
                remoteAddress: socketOptions.connection.remoteAddress,
                remotePort: socketOptions.connection.remotePort,
                destHost: options.host || "",
                destPort: options.port || "",
                action: "connected"
              },
              "Using proxied socket from %s:%s to %s:%s",
              socketOptions.connection.remoteAddress,
              socketOptions.connection.remotePort,
              options.host || "",
              options.port || ""
            );
            options = assign(false, options);
            Object.keys(socketOptions).forEach((key) => {
              options[key] = socketOptions[key];
            });
          }
          this.connection = new SMTPConnection(options);
          this.connection.once("error", (err2) => {
            this.emit("error", err2);
            if (returned) {
              return;
            }
            returned = true;
            return callback(err2);
          });
          this.connection.once("end", () => {
            this.close();
            if (returned) {
              return;
            }
            returned = true;
            let timer = setTimeout(() => {
              if (returned) {
                return;
              }
              let err2 = new Error("Unexpected socket close");
              if (this.connection && this.connection._socket && this.connection._socket.upgrading) {
                err2.code = "ETLS";
              }
              callback(err2);
            }, 1e3);
            try {
              timer.unref();
            } catch (E) {
            }
          });
          this.connection.connect(() => {
            if (returned) {
              return;
            }
            if (this.auth && (this.connection.allowsAuth || options.forceAuth)) {
              this.connection.login(this.auth, (err2) => {
                if (returned) {
                  return;
                }
                returned = true;
                if (err2) {
                  this.connection.close();
                  this.emit("error", err2);
                  return callback(err2);
                }
                this._connected = true;
                callback(null, true);
              });
            } else {
              returned = true;
              this._connected = true;
              return callback(null, true);
            }
          });
        });
      }
      /**
       * Sends an e-mail to be sent using the selected settings
       *
       * @param {Object} mail Mail object
       * @param {Function} callback Callback function
       */
      send(mail, callback) {
        if (!this._connected) {
          return this.connect((err) => {
            if (err) {
              return callback(err);
            }
            return this.send(mail, callback);
          });
        }
        let envelope = mail.message.getEnvelope();
        let messageId = mail.message.messageId();
        let recipients = [].concat(envelope.to || []);
        if (recipients.length > 3) {
          recipients.push("...and " + recipients.splice(2).length + " more");
        }
        this.logger.info(
          {
            tnx: "send",
            messageId,
            cid: this.id
          },
          "Sending message %s using #%s to <%s>",
          messageId,
          this.id,
          recipients.join(", ")
        );
        if (mail.data.dsn) {
          envelope.dsn = mail.data.dsn;
        }
        this.connection.send(envelope, mail.message.createReadStream(), (err, info3) => {
          this.messages++;
          if (err) {
            this.connection.close();
            this.emit("error", err);
            return callback(err);
          }
          info3.envelope = {
            from: envelope.from,
            to: envelope.to
          };
          info3.messageId = messageId;
          setImmediate(() => {
            let err2;
            if (this.messages >= this.options.maxMessages) {
              err2 = new Error("Resource exhausted");
              err2.code = "EMAXLIMIT";
              this.connection.close();
              this.emit("error", err2);
            } else {
              this.pool._checkRateLimit(() => {
                this.available = true;
                this.emit("available");
              });
            }
          });
          callback(null, info3);
        });
      }
      /**
       * Closes the connection
       */
      close() {
        this._connected = false;
        if (this.auth && this.auth.oauth2) {
          this.auth.oauth2.removeAllListeners();
        }
        if (this.connection) {
          this.connection.close();
        }
        this.emit("close");
      }
    };
    module.exports = PoolResource;
  }
});

// node_modules/nodemailer/lib/well-known/services.json
var require_services = __commonJS({
  "node_modules/nodemailer/lib/well-known/services.json"(exports, module) {
    module.exports = {
      "1und1": {
        description: "1&1 Mail (German hosting provider)",
        host: "smtp.1und1.de",
        port: 465,
        secure: true,
        authMethod: "LOGIN"
      },
      "126": {
        description: "126 Mail (NetEase)",
        host: "smtp.126.com",
        port: 465,
        secure: true
      },
      "163": {
        description: "163 Mail (NetEase)",
        host: "smtp.163.com",
        port: 465,
        secure: true
      },
      Aliyun: {
        description: "Alibaba Cloud Mail",
        domains: ["aliyun.com"],
        host: "smtp.aliyun.com",
        port: 465,
        secure: true
      },
      AliyunQiye: {
        description: "Alibaba Cloud Enterprise Mail",
        host: "smtp.qiye.aliyun.com",
        port: 465,
        secure: true
      },
      AOL: {
        description: "AOL Mail",
        domains: ["aol.com"],
        host: "smtp.aol.com",
        port: 587
      },
      Aruba: {
        description: "Aruba PEC (Italian email provider)",
        domains: ["aruba.it", "pec.aruba.it"],
        aliases: ["Aruba PEC"],
        host: "smtps.aruba.it",
        port: 465,
        secure: true,
        authMethod: "LOGIN"
      },
      Bluewin: {
        description: "Bluewin (Swiss email provider)",
        host: "smtpauths.bluewin.ch",
        domains: ["bluewin.ch"],
        port: 465
      },
      BOL: {
        description: "BOL Mail (Brazilian provider)",
        domains: ["bol.com.br"],
        host: "smtp.bol.com.br",
        port: 587,
        requireTLS: true
      },
      DebugMail: {
        description: "DebugMail (email testing service)",
        host: "debugmail.io",
        port: 25
      },
      Disroot: {
        description: "Disroot (privacy-focused provider)",
        domains: ["disroot.org"],
        host: "disroot.org",
        port: 587,
        secure: false,
        authMethod: "LOGIN"
      },
      DynectEmail: {
        description: "Dyn Email Delivery",
        aliases: ["Dynect"],
        host: "smtp.dynect.net",
        port: 25
      },
      ElasticEmail: {
        description: "Elastic Email",
        aliases: ["Elastic Email"],
        host: "smtp.elasticemail.com",
        port: 465,
        secure: true
      },
      Ethereal: {
        description: "Ethereal Email (email testing service)",
        aliases: ["ethereal.email"],
        host: "smtp.ethereal.email",
        port: 587
      },
      FastMail: {
        description: "FastMail",
        domains: ["fastmail.fm"],
        host: "smtp.fastmail.com",
        port: 465,
        secure: true
      },
      "Feishu Mail": {
        description: "Feishu Mail (Lark)",
        aliases: ["Feishu", "FeishuMail"],
        domains: ["www.feishu.cn"],
        host: "smtp.feishu.cn",
        port: 465,
        secure: true
      },
      "Forward Email": {
        description: "Forward Email (email forwarding service)",
        aliases: ["FE", "ForwardEmail"],
        domains: ["forwardemail.net"],
        host: "smtp.forwardemail.net",
        port: 465,
        secure: true
      },
      GandiMail: {
        description: "Gandi Mail",
        aliases: ["Gandi", "Gandi Mail"],
        host: "mail.gandi.net",
        port: 587
      },
      Gmail: {
        description: "Gmail",
        aliases: ["Google Mail"],
        domains: ["gmail.com", "googlemail.com"],
        host: "smtp.gmail.com",
        port: 465,
        secure: true
      },
      GMX: {
        description: "GMX Mail",
        domains: ["gmx.com", "gmx.net", "gmx.de"],
        host: "mail.gmx.com",
        port: 587
      },
      Godaddy: {
        description: "GoDaddy Email (US)",
        host: "smtpout.secureserver.net",
        port: 25
      },
      GodaddyAsia: {
        description: "GoDaddy Email (Asia)",
        host: "smtp.asia.secureserver.net",
        port: 25
      },
      GodaddyEurope: {
        description: "GoDaddy Email (Europe)",
        host: "smtp.europe.secureserver.net",
        port: 25
      },
      "hot.ee": {
        description: "Hot.ee (Estonian email provider)",
        host: "mail.hot.ee"
      },
      Hotmail: {
        description: "Outlook.com / Hotmail",
        aliases: ["Outlook", "Outlook.com", "Hotmail.com"],
        domains: ["hotmail.com", "outlook.com"],
        host: "smtp-mail.outlook.com",
        port: 587
      },
      iCloud: {
        description: "iCloud Mail",
        aliases: ["Me", "Mac"],
        domains: ["me.com", "mac.com"],
        host: "smtp.mail.me.com",
        port: 587
      },
      Infomaniak: {
        description: "Infomaniak Mail (Swiss hosting provider)",
        host: "mail.infomaniak.com",
        domains: ["ik.me", "ikmail.com", "etik.com"],
        port: 587
      },
      KolabNow: {
        description: "KolabNow (secure email service)",
        domains: ["kolabnow.com"],
        aliases: ["Kolab"],
        host: "smtp.kolabnow.com",
        port: 465,
        secure: true,
        authMethod: "LOGIN"
      },
      Loopia: {
        description: "Loopia (Swedish hosting provider)",
        host: "mailcluster.loopia.se",
        port: 465
      },
      Loops: {
        description: "Loops",
        host: "smtp.loops.so",
        port: 587
      },
      "mail.ee": {
        description: "Mail.ee (Estonian email provider)",
        host: "smtp.mail.ee"
      },
      "Mail.ru": {
        description: "Mail.ru",
        host: "smtp.mail.ru",
        port: 465,
        secure: true
      },
      "Mailcatch.app": {
        description: "Mailcatch (email testing service)",
        host: "sandbox-smtp.mailcatch.app",
        port: 2525
      },
      Maildev: {
        description: "MailDev (local email testing)",
        port: 1025,
        ignoreTLS: true
      },
      MailerSend: {
        description: "MailerSend",
        host: "smtp.mailersend.net",
        port: 587
      },
      Mailgun: {
        description: "Mailgun",
        host: "smtp.mailgun.org",
        port: 465,
        secure: true
      },
      Mailjet: {
        description: "Mailjet",
        host: "in.mailjet.com",
        port: 587
      },
      Mailosaur: {
        description: "Mailosaur (email testing service)",
        host: "mailosaur.io",
        port: 25
      },
      Mailtrap: {
        description: "Mailtrap",
        host: "live.smtp.mailtrap.io",
        port: 587
      },
      Mandrill: {
        description: "Mandrill (by Mailchimp)",
        host: "smtp.mandrillapp.com",
        port: 587
      },
      Naver: {
        description: "Naver Mail (Korean email provider)",
        host: "smtp.naver.com",
        port: 587
      },
      OhMySMTP: {
        description: "OhMySMTP (email delivery service)",
        host: "smtp.ohmysmtp.com",
        port: 587,
        secure: false
      },
      One: {
        description: "One.com Email",
        host: "send.one.com",
        port: 465,
        secure: true
      },
      OpenMailBox: {
        description: "OpenMailBox",
        aliases: ["OMB", "openmailbox.org"],
        host: "smtp.openmailbox.org",
        port: 465,
        secure: true
      },
      Outlook365: {
        description: "Microsoft 365 / Office 365",
        host: "smtp.office365.com",
        port: 587,
        secure: false
      },
      Postmark: {
        description: "Postmark",
        aliases: ["PostmarkApp"],
        host: "smtp.postmarkapp.com",
        port: 2525
      },
      Proton: {
        description: "Proton Mail",
        aliases: ["ProtonMail", "Proton.me", "Protonmail.com", "Protonmail.ch"],
        domains: ["proton.me", "protonmail.com", "pm.me", "protonmail.ch"],
        host: "smtp.protonmail.ch",
        port: 587,
        requireTLS: true
      },
      "qiye.aliyun": {
        description: "Alibaba Mail Enterprise Edition",
        host: "smtp.mxhichina.com",
        port: "465",
        secure: true
      },
      QQ: {
        description: "QQ Mail",
        domains: ["qq.com"],
        host: "smtp.qq.com",
        port: 465,
        secure: true
      },
      QQex: {
        description: "QQ Enterprise Mail",
        aliases: ["QQ Enterprise"],
        domains: ["exmail.qq.com"],
        host: "smtp.exmail.qq.com",
        port: 465,
        secure: true
      },
      Resend: {
        description: "Resend",
        host: "smtp.resend.com",
        port: 465,
        secure: true
      },
      Runbox: {
        description: "Runbox (Norwegian email provider)",
        domains: ["runbox.com"],
        host: "smtp.runbox.com",
        port: 465,
        secure: true
      },
      SendCloud: {
        description: "SendCloud (Chinese email delivery)",
        host: "smtp.sendcloud.net",
        port: 2525
      },
      SendGrid: {
        description: "SendGrid",
        host: "smtp.sendgrid.net",
        port: 587
      },
      SendinBlue: {
        description: "Brevo (formerly Sendinblue)",
        aliases: ["Brevo"],
        host: "smtp-relay.brevo.com",
        port: 587
      },
      SendPulse: {
        description: "SendPulse",
        host: "smtp-pulse.com",
        port: 465,
        secure: true
      },
      SES: {
        description: "AWS SES US East (N. Virginia)",
        host: "email-smtp.us-east-1.amazonaws.com",
        port: 465,
        secure: true
      },
      "SES-AP-NORTHEAST-1": {
        description: "AWS SES Asia Pacific (Tokyo)",
        host: "email-smtp.ap-northeast-1.amazonaws.com",
        port: 465,
        secure: true
      },
      "SES-AP-NORTHEAST-2": {
        description: "AWS SES Asia Pacific (Seoul)",
        host: "email-smtp.ap-northeast-2.amazonaws.com",
        port: 465,
        secure: true
      },
      "SES-AP-NORTHEAST-3": {
        description: "AWS SES Asia Pacific (Osaka)",
        host: "email-smtp.ap-northeast-3.amazonaws.com",
        port: 465,
        secure: true
      },
      "SES-AP-SOUTH-1": {
        description: "AWS SES Asia Pacific (Mumbai)",
        host: "email-smtp.ap-south-1.amazonaws.com",
        port: 465,
        secure: true
      },
      "SES-AP-SOUTHEAST-1": {
        description: "AWS SES Asia Pacific (Singapore)",
        host: "email-smtp.ap-southeast-1.amazonaws.com",
        port: 465,
        secure: true
      },
      "SES-AP-SOUTHEAST-2": {
        description: "AWS SES Asia Pacific (Sydney)",
        host: "email-smtp.ap-southeast-2.amazonaws.com",
        port: 465,
        secure: true
      },
      "SES-CA-CENTRAL-1": {
        description: "AWS SES Canada (Central)",
        host: "email-smtp.ca-central-1.amazonaws.com",
        port: 465,
        secure: true
      },
      "SES-EU-CENTRAL-1": {
        description: "AWS SES Europe (Frankfurt)",
        host: "email-smtp.eu-central-1.amazonaws.com",
        port: 465,
        secure: true
      },
      "SES-EU-NORTH-1": {
        description: "AWS SES Europe (Stockholm)",
        host: "email-smtp.eu-north-1.amazonaws.com",
        port: 465,
        secure: true
      },
      "SES-EU-WEST-1": {
        description: "AWS SES Europe (Ireland)",
        host: "email-smtp.eu-west-1.amazonaws.com",
        port: 465,
        secure: true
      },
      "SES-EU-WEST-2": {
        description: "AWS SES Europe (London)",
        host: "email-smtp.eu-west-2.amazonaws.com",
        port: 465,
        secure: true
      },
      "SES-EU-WEST-3": {
        description: "AWS SES Europe (Paris)",
        host: "email-smtp.eu-west-3.amazonaws.com",
        port: 465,
        secure: true
      },
      "SES-SA-EAST-1": {
        description: "AWS SES South America (S\xE3o Paulo)",
        host: "email-smtp.sa-east-1.amazonaws.com",
        port: 465,
        secure: true
      },
      "SES-US-EAST-1": {
        description: "AWS SES US East (N. Virginia)",
        host: "email-smtp.us-east-1.amazonaws.com",
        port: 465,
        secure: true
      },
      "SES-US-EAST-2": {
        description: "AWS SES US East (Ohio)",
        host: "email-smtp.us-east-2.amazonaws.com",
        port: 465,
        secure: true
      },
      "SES-US-GOV-EAST-1": {
        description: "AWS SES GovCloud (US-East)",
        host: "email-smtp.us-gov-east-1.amazonaws.com",
        port: 465,
        secure: true
      },
      "SES-US-GOV-WEST-1": {
        description: "AWS SES GovCloud (US-West)",
        host: "email-smtp.us-gov-west-1.amazonaws.com",
        port: 465,
        secure: true
      },
      "SES-US-WEST-1": {
        description: "AWS SES US West (N. California)",
        host: "email-smtp.us-west-1.amazonaws.com",
        port: 465,
        secure: true
      },
      "SES-US-WEST-2": {
        description: "AWS SES US West (Oregon)",
        host: "email-smtp.us-west-2.amazonaws.com",
        port: 465,
        secure: true
      },
      Seznam: {
        description: "Seznam Email (Czech email provider)",
        aliases: ["Seznam Email"],
        domains: ["seznam.cz", "email.cz", "post.cz", "spoluzaci.cz"],
        host: "smtp.seznam.cz",
        port: 465,
        secure: true
      },
      SMTP2GO: {
        description: "SMTP2GO",
        host: "mail.smtp2go.com",
        port: 2525
      },
      Sparkpost: {
        description: "SparkPost",
        aliases: ["SparkPost", "SparkPost Mail"],
        domains: ["sparkpost.com"],
        host: "smtp.sparkpostmail.com",
        port: 587,
        secure: false
      },
      Tipimail: {
        description: "Tipimail (email delivery service)",
        host: "smtp.tipimail.com",
        port: 587
      },
      Tutanota: {
        description: "Tutanota (Tuta Mail)",
        domains: ["tutanota.com", "tuta.com", "tutanota.de", "tuta.io"],
        host: "smtp.tutanota.com",
        port: 465,
        secure: true
      },
      Yahoo: {
        description: "Yahoo Mail",
        domains: ["yahoo.com"],
        host: "smtp.mail.yahoo.com",
        port: 465,
        secure: true
      },
      Yandex: {
        description: "Yandex Mail",
        domains: ["yandex.ru"],
        host: "smtp.yandex.ru",
        port: 465,
        secure: true
      },
      Zimbra: {
        description: "Zimbra Mail Server",
        aliases: ["Zimbra Collaboration"],
        host: "smtp.zimbra.com",
        port: 587,
        requireTLS: true
      },
      Zoho: {
        description: "Zoho Mail",
        host: "smtp.zoho.com",
        port: 465,
        secure: true,
        authMethod: "LOGIN"
      }
    };
  }
});

// node_modules/nodemailer/lib/well-known/index.js
var require_well_known = __commonJS({
  "node_modules/nodemailer/lib/well-known/index.js"(exports, module) {
    "use strict";
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    var services = require_services();
    var normalized = {};
    Object.keys(services).forEach((key) => {
      let service = services[key];
      normalized[normalizeKey(key)] = normalizeService(service);
      [].concat(service.aliases || []).forEach((alias) => {
        normalized[normalizeKey(alias)] = normalizeService(service);
      });
      [].concat(service.domains || []).forEach((domain2) => {
        normalized[normalizeKey(domain2)] = normalizeService(service);
      });
    });
    function normalizeKey(key) {
      return key.replace(/[^a-zA-Z0-9.-]/g, "").toLowerCase();
    }
    __name(normalizeKey, "normalizeKey");
    function normalizeService(service) {
      let filter = ["domains", "aliases"];
      let response = {};
      Object.keys(service).forEach((key) => {
        if (filter.indexOf(key) < 0) {
          response[key] = service[key];
        }
      });
      return response;
    }
    __name(normalizeService, "normalizeService");
    module.exports = function(key) {
      key = normalizeKey(key.split("@").pop());
      return normalized[key] || false;
    };
  }
});

// node_modules/nodemailer/lib/smtp-pool/index.js
var require_smtp_pool = __commonJS({
  "node_modules/nodemailer/lib/smtp-pool/index.js"(exports, module) {
    "use strict";
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    var EventEmitter2 = require_events();
    var PoolResource = require_pool_resource();
    var SMTPConnection = require_smtp_connection();
    var wellKnown = require_well_known();
    var shared = require_shared();
    var packageData = require_package2();
    var SMTPPool = class extends EventEmitter2 {
      static {
        __name(this, "SMTPPool");
      }
      constructor(options) {
        super();
        options = options || {};
        if (typeof options === "string") {
          options = {
            url: options
          };
        }
        let urlData;
        let service = options.service;
        if (typeof options.getSocket === "function") {
          this.getSocket = options.getSocket;
        }
        if (options.url) {
          urlData = shared.parseConnectionUrl(options.url);
          service = service || urlData.service;
        }
        this.options = shared.assign(
          false,
          // create new object
          options,
          // regular options
          urlData,
          // url options
          service && wellKnown(service)
          // wellknown options
        );
        this.options.maxConnections = this.options.maxConnections || 5;
        this.options.maxMessages = this.options.maxMessages || 100;
        this.logger = shared.getLogger(this.options, {
          component: this.options.component || "smtp-pool"
        });
        let connection = new SMTPConnection(this.options);
        this.name = "SMTP (pool)";
        this.version = packageData.version + "[client:" + connection.version + "]";
        this._rateLimit = {
          counter: 0,
          timeout: null,
          waiting: [],
          checkpoint: false,
          delta: Number(this.options.rateDelta) || 1e3,
          limit: Number(this.options.rateLimit) || 0
        };
        this._closed = false;
        this._queue = [];
        this._connections = [];
        this._connectionCounter = 0;
        this.idling = true;
        setImmediate(() => {
          if (this.idling) {
            this.emit("idle");
          }
        });
      }
      /**
       * Placeholder function for creating proxy sockets. This method immediatelly returns
       * without a socket
       *
       * @param {Object} options Connection options
       * @param {Function} callback Callback function to run with the socket keys
       */
      getSocket(options, callback) {
        return setImmediate(() => callback(null, false));
      }
      /**
       * Queues an e-mail to be sent using the selected settings
       *
       * @param {Object} mail Mail object
       * @param {Function} callback Callback function
       */
      send(mail, callback) {
        if (this._closed) {
          return false;
        }
        this._queue.push({
          mail,
          requeueAttempts: 0,
          callback
        });
        if (this.idling && this._queue.length >= this.options.maxConnections) {
          this.idling = false;
        }
        setImmediate(() => this._processMessages());
        return true;
      }
      /**
       * Closes all connections in the pool. If there is a message being sent, the connection
       * is closed later
       */
      close() {
        let connection;
        let len = this._connections.length;
        this._closed = true;
        clearTimeout(this._rateLimit.timeout);
        if (!len && !this._queue.length) {
          return;
        }
        for (let i = len - 1; i >= 0; i--) {
          if (this._connections[i] && this._connections[i].available) {
            connection = this._connections[i];
            connection.close();
            this.logger.info(
              {
                tnx: "connection",
                cid: connection.id,
                action: "removed"
              },
              "Connection #%s removed",
              connection.id
            );
          }
        }
        if (len && !this._connections.length) {
          this.logger.debug(
            {
              tnx: "connection"
            },
            "All connections removed"
          );
        }
        if (!this._queue.length) {
          return;
        }
        let invokeCallbacks = /* @__PURE__ */ __name(() => {
          if (!this._queue.length) {
            this.logger.debug(
              {
                tnx: "connection"
              },
              "Pending queue entries cleared"
            );
            return;
          }
          let entry = this._queue.shift();
          if (entry && typeof entry.callback === "function") {
            try {
              entry.callback(new Error("Connection pool was closed"));
            } catch (E) {
              this.logger.error(
                {
                  err: E,
                  tnx: "callback",
                  cid: connection.id
                },
                "Callback error for #%s: %s",
                connection.id,
                E.message
              );
            }
          }
          setImmediate(invokeCallbacks);
        }, "invokeCallbacks");
        setImmediate(invokeCallbacks);
      }
      /**
       * Check the queue and available connections. If there is a message to be sent and there is
       * an available connection, then use this connection to send the mail
       */
      _processMessages() {
        let connection;
        let i, len;
        if (this._closed) {
          return;
        }
        if (!this._queue.length) {
          if (!this.idling) {
            this.idling = true;
            this.emit("idle");
          }
          return;
        }
        for (i = 0, len = this._connections.length; i < len; i++) {
          if (this._connections[i].available) {
            connection = this._connections[i];
            break;
          }
        }
        if (!connection && this._connections.length < this.options.maxConnections) {
          connection = this._createConnection();
        }
        if (!connection) {
          this.idling = false;
          return;
        }
        if (!this.idling && this._queue.length < this.options.maxConnections) {
          this.idling = true;
          this.emit("idle");
        }
        let entry = connection.queueEntry = this._queue.shift();
        entry.messageId = (connection.queueEntry.mail.message.getHeader("message-id") || "").replace(/[<>\s]/g, "");
        connection.available = false;
        this.logger.debug(
          {
            tnx: "pool",
            cid: connection.id,
            messageId: entry.messageId,
            action: "assign"
          },
          "Assigned message <%s> to #%s (%s)",
          entry.messageId,
          connection.id,
          connection.messages + 1
        );
        if (this._rateLimit.limit) {
          this._rateLimit.counter++;
          if (!this._rateLimit.checkpoint) {
            this._rateLimit.checkpoint = Date.now();
          }
        }
        connection.send(entry.mail, (err, info3) => {
          if (entry === connection.queueEntry) {
            try {
              entry.callback(err, info3);
            } catch (E) {
              this.logger.error(
                {
                  err: E,
                  tnx: "callback",
                  cid: connection.id
                },
                "Callback error for #%s: %s",
                connection.id,
                E.message
              );
            }
            connection.queueEntry = false;
          }
        });
      }
      /**
       * Creates a new pool resource
       */
      _createConnection() {
        let connection = new PoolResource(this);
        connection.id = ++this._connectionCounter;
        this.logger.info(
          {
            tnx: "pool",
            cid: connection.id,
            action: "conection"
          },
          "Created new pool resource #%s",
          connection.id
        );
        connection.on("available", () => {
          this.logger.debug(
            {
              tnx: "connection",
              cid: connection.id,
              action: "available"
            },
            "Connection #%s became available",
            connection.id
          );
          if (this._closed) {
            this.close();
          } else {
            this._processMessages();
          }
        });
        connection.once("error", (err) => {
          if (err.code !== "EMAXLIMIT") {
            this.logger.error(
              {
                err,
                tnx: "pool",
                cid: connection.id
              },
              "Pool Error for #%s: %s",
              connection.id,
              err.message
            );
          } else {
            this.logger.debug(
              {
                tnx: "pool",
                cid: connection.id,
                action: "maxlimit"
              },
              "Max messages limit exchausted for #%s",
              connection.id
            );
          }
          if (connection.queueEntry) {
            try {
              connection.queueEntry.callback(err);
            } catch (E) {
              this.logger.error(
                {
                  err: E,
                  tnx: "callback",
                  cid: connection.id
                },
                "Callback error for #%s: %s",
                connection.id,
                E.message
              );
            }
            connection.queueEntry = false;
          }
          this._removeConnection(connection);
          this._continueProcessing();
        });
        connection.once("close", () => {
          this.logger.info(
            {
              tnx: "connection",
              cid: connection.id,
              action: "closed"
            },
            "Connection #%s was closed",
            connection.id
          );
          this._removeConnection(connection);
          if (connection.queueEntry) {
            setTimeout(() => {
              if (connection.queueEntry) {
                if (this._shouldRequeuOnConnectionClose(connection.queueEntry)) {
                  this._requeueEntryOnConnectionClose(connection);
                } else {
                  this._failDeliveryOnConnectionClose(connection);
                }
              }
              this._continueProcessing();
            }, 50);
          } else {
            if (!this._closed && this.idling && !this._connections.length) {
              this.emit("clear");
            }
            this._continueProcessing();
          }
        });
        this._connections.push(connection);
        return connection;
      }
      _shouldRequeuOnConnectionClose(queueEntry) {
        if (this.options.maxRequeues === void 0 || this.options.maxRequeues < 0) {
          return true;
        }
        return queueEntry.requeueAttempts < this.options.maxRequeues;
      }
      _failDeliveryOnConnectionClose(connection) {
        if (connection.queueEntry && connection.queueEntry.callback) {
          try {
            connection.queueEntry.callback(new Error("Reached maximum number of retries after connection was closed"));
          } catch (E) {
            this.logger.error(
              {
                err: E,
                tnx: "callback",
                messageId: connection.queueEntry.messageId,
                cid: connection.id
              },
              "Callback error for #%s: %s",
              connection.id,
              E.message
            );
          }
          connection.queueEntry = false;
        }
      }
      _requeueEntryOnConnectionClose(connection) {
        connection.queueEntry.requeueAttempts = connection.queueEntry.requeueAttempts + 1;
        this.logger.debug(
          {
            tnx: "pool",
            cid: connection.id,
            messageId: connection.queueEntry.messageId,
            action: "requeue"
          },
          "Re-queued message <%s> for #%s. Attempt: #%s",
          connection.queueEntry.messageId,
          connection.id,
          connection.queueEntry.requeueAttempts
        );
        this._queue.unshift(connection.queueEntry);
        connection.queueEntry = false;
      }
      /**
       * Continue to process message if the pool hasn't closed
       */
      _continueProcessing() {
        if (this._closed) {
          this.close();
        } else {
          setTimeout(() => this._processMessages(), 100);
        }
      }
      /**
       * Remove resource from pool
       *
       * @param {Object} connection The PoolResource to remove
       */
      _removeConnection(connection) {
        let index = this._connections.indexOf(connection);
        if (index !== -1) {
          this._connections.splice(index, 1);
        }
      }
      /**
       * Checks if connections have hit current rate limit and if so, queues the availability callback
       *
       * @param {Function} callback Callback function to run once rate limiter has been cleared
       */
      _checkRateLimit(callback) {
        if (!this._rateLimit.limit) {
          return callback();
        }
        let now = Date.now();
        if (this._rateLimit.counter < this._rateLimit.limit) {
          return callback();
        }
        this._rateLimit.waiting.push(callback);
        if (this._rateLimit.checkpoint <= now - this._rateLimit.delta) {
          return this._clearRateLimit();
        } else if (!this._rateLimit.timeout) {
          this._rateLimit.timeout = setTimeout(() => this._clearRateLimit(), this._rateLimit.delta - (now - this._rateLimit.checkpoint));
          this._rateLimit.checkpoint = now;
        }
      }
      /**
       * Clears current rate limit limitation and runs paused callback
       */
      _clearRateLimit() {
        clearTimeout(this._rateLimit.timeout);
        this._rateLimit.timeout = null;
        this._rateLimit.counter = 0;
        this._rateLimit.checkpoint = false;
        while (this._rateLimit.waiting.length) {
          let cb = this._rateLimit.waiting.shift();
          setImmediate(cb);
        }
      }
      /**
       * Returns true if there are free slots in the queue
       */
      isIdle() {
        return this.idling;
      }
      /**
       * Verifies SMTP configuration
       *
       * @param {Function} callback Callback function
       */
      verify(callback) {
        let promise;
        if (!callback) {
          promise = new Promise((resolve, reject) => {
            callback = shared.callbackPromise(resolve, reject);
          });
        }
        let auth2 = new PoolResource(this).auth;
        this.getSocket(this.options, (err, socketOptions) => {
          if (err) {
            return callback(err);
          }
          let options = this.options;
          if (socketOptions && socketOptions.connection) {
            this.logger.info(
              {
                tnx: "proxy",
                remoteAddress: socketOptions.connection.remoteAddress,
                remotePort: socketOptions.connection.remotePort,
                destHost: options.host || "",
                destPort: options.port || "",
                action: "connected"
              },
              "Using proxied socket from %s:%s to %s:%s",
              socketOptions.connection.remoteAddress,
              socketOptions.connection.remotePort,
              options.host || "",
              options.port || ""
            );
            options = shared.assign(false, options);
            Object.keys(socketOptions).forEach((key) => {
              options[key] = socketOptions[key];
            });
          }
          let connection = new SMTPConnection(options);
          let returned = false;
          connection.once("error", (err2) => {
            if (returned) {
              return;
            }
            returned = true;
            connection.close();
            return callback(err2);
          });
          connection.once("end", () => {
            if (returned) {
              return;
            }
            returned = true;
            return callback(new Error("Connection closed"));
          });
          let finalize = /* @__PURE__ */ __name(() => {
            if (returned) {
              return;
            }
            returned = true;
            connection.quit();
            return callback(null, true);
          }, "finalize");
          connection.connect(() => {
            if (returned) {
              return;
            }
            if (auth2 && (connection.allowsAuth || options.forceAuth)) {
              connection.login(auth2, (err2) => {
                if (returned) {
                  return;
                }
                if (err2) {
                  returned = true;
                  connection.close();
                  return callback(err2);
                }
                finalize();
              });
            } else if (!auth2 && connection.allowsAuth && options.forceAuth) {
              let err2 = new Error("Authentication info was not provided");
              err2.code = "NoAuth";
              returned = true;
              connection.close();
              return callback(err2);
            } else {
              finalize();
            }
          });
        });
        return promise;
      }
    };
    module.exports = SMTPPool;
  }
});

// node_modules/nodemailer/lib/smtp-transport/index.js
var require_smtp_transport = __commonJS({
  "node_modules/nodemailer/lib/smtp-transport/index.js"(exports, module) {
    "use strict";
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    var EventEmitter2 = require_events();
    var SMTPConnection = require_smtp_connection();
    var wellKnown = require_well_known();
    var shared = require_shared();
    var XOAuth2 = require_xoauth2();
    var packageData = require_package2();
    var SMTPTransport = class extends EventEmitter2 {
      static {
        __name(this, "SMTPTransport");
      }
      constructor(options) {
        super();
        options = options || {};
        if (typeof options === "string") {
          options = {
            url: options
          };
        }
        let urlData;
        let service = options.service;
        if (typeof options.getSocket === "function") {
          this.getSocket = options.getSocket;
        }
        if (options.url) {
          urlData = shared.parseConnectionUrl(options.url);
          service = service || urlData.service;
        }
        this.options = shared.assign(
          false,
          // create new object
          options,
          // regular options
          urlData,
          // url options
          service && wellKnown(service)
          // wellknown options
        );
        this.logger = shared.getLogger(this.options, {
          component: this.options.component || "smtp-transport"
        });
        let connection = new SMTPConnection(this.options);
        this.name = "SMTP";
        this.version = packageData.version + "[client:" + connection.version + "]";
        if (this.options.auth) {
          this.auth = this.getAuth({});
        }
      }
      /**
       * Placeholder function for creating proxy sockets. This method immediatelly returns
       * without a socket
       *
       * @param {Object} options Connection options
       * @param {Function} callback Callback function to run with the socket keys
       */
      getSocket(options, callback) {
        return setImmediate(() => callback(null, false));
      }
      getAuth(authOpts) {
        if (!authOpts) {
          return this.auth;
        }
        let hasAuth = false;
        let authData = {};
        if (this.options.auth && typeof this.options.auth === "object") {
          Object.keys(this.options.auth).forEach((key) => {
            hasAuth = true;
            authData[key] = this.options.auth[key];
          });
        }
        if (authOpts && typeof authOpts === "object") {
          Object.keys(authOpts).forEach((key) => {
            hasAuth = true;
            authData[key] = authOpts[key];
          });
        }
        if (!hasAuth) {
          return false;
        }
        switch ((authData.type || "").toString().toUpperCase()) {
          case "OAUTH2": {
            if (!authData.service && !authData.user) {
              return false;
            }
            let oauth2 = new XOAuth2(authData, this.logger);
            oauth2.provisionCallback = this.mailer && this.mailer.get("oauth2_provision_cb") || oauth2.provisionCallback;
            oauth2.on("token", (token) => this.mailer.emit("token", token));
            oauth2.on("error", (err) => this.emit("error", err));
            return {
              type: "OAUTH2",
              user: authData.user,
              oauth2,
              method: "XOAUTH2"
            };
          }
          default:
            return {
              type: (authData.type || "").toString().toUpperCase() || "LOGIN",
              user: authData.user,
              credentials: {
                user: authData.user || "",
                pass: authData.pass,
                options: authData.options
              },
              method: (authData.method || "").trim().toUpperCase() || this.options.authMethod || false
            };
        }
      }
      /**
       * Sends an e-mail using the selected settings
       *
       * @param {Object} mail Mail object
       * @param {Function} callback Callback function
       */
      send(mail, callback) {
        this.getSocket(this.options, (err, socketOptions) => {
          if (err) {
            return callback(err);
          }
          let returned = false;
          let options = this.options;
          if (socketOptions && socketOptions.connection) {
            this.logger.info(
              {
                tnx: "proxy",
                remoteAddress: socketOptions.connection.remoteAddress,
                remotePort: socketOptions.connection.remotePort,
                destHost: options.host || "",
                destPort: options.port || "",
                action: "connected"
              },
              "Using proxied socket from %s:%s to %s:%s",
              socketOptions.connection.remoteAddress,
              socketOptions.connection.remotePort,
              options.host || "",
              options.port || ""
            );
            options = shared.assign(false, options);
            Object.keys(socketOptions).forEach((key) => {
              options[key] = socketOptions[key];
            });
          }
          let connection = new SMTPConnection(options);
          connection.once("error", (err2) => {
            if (returned) {
              return;
            }
            returned = true;
            connection.close();
            return callback(err2);
          });
          connection.once("end", () => {
            if (returned) {
              return;
            }
            let timer = setTimeout(() => {
              if (returned) {
                return;
              }
              returned = true;
              let err2 = new Error("Unexpected socket close");
              if (connection && connection._socket && connection._socket.upgrading) {
                err2.code = "ETLS";
              }
              callback(err2);
            }, 1e3);
            try {
              timer.unref();
            } catch (E) {
            }
          });
          let sendMessage = /* @__PURE__ */ __name(() => {
            let envelope = mail.message.getEnvelope();
            let messageId = mail.message.messageId();
            let recipients = [].concat(envelope.to || []);
            if (recipients.length > 3) {
              recipients.push("...and " + recipients.splice(2).length + " more");
            }
            if (mail.data.dsn) {
              envelope.dsn = mail.data.dsn;
            }
            this.logger.info(
              {
                tnx: "send",
                messageId
              },
              "Sending message %s to <%s>",
              messageId,
              recipients.join(", ")
            );
            connection.send(envelope, mail.message.createReadStream(), (err2, info3) => {
              returned = true;
              connection.close();
              if (err2) {
                this.logger.error(
                  {
                    err: err2,
                    tnx: "send"
                  },
                  "Send error for %s: %s",
                  messageId,
                  err2.message
                );
                return callback(err2);
              }
              info3.envelope = {
                from: envelope.from,
                to: envelope.to
              };
              info3.messageId = messageId;
              try {
                return callback(null, info3);
              } catch (E) {
                this.logger.error(
                  {
                    err: E,
                    tnx: "callback"
                  },
                  "Callback error for %s: %s",
                  messageId,
                  E.message
                );
              }
            });
          }, "sendMessage");
          connection.connect(() => {
            if (returned) {
              return;
            }
            let auth2 = this.getAuth(mail.data.auth);
            if (auth2 && (connection.allowsAuth || options.forceAuth)) {
              connection.login(auth2, (err2) => {
                if (auth2 && auth2 !== this.auth && auth2.oauth2) {
                  auth2.oauth2.removeAllListeners();
                }
                if (returned) {
                  return;
                }
                if (err2) {
                  returned = true;
                  connection.close();
                  return callback(err2);
                }
                sendMessage();
              });
            } else {
              sendMessage();
            }
          });
        });
      }
      /**
       * Verifies SMTP configuration
       *
       * @param {Function} callback Callback function
       */
      verify(callback) {
        let promise;
        if (!callback) {
          promise = new Promise((resolve, reject) => {
            callback = shared.callbackPromise(resolve, reject);
          });
        }
        this.getSocket(this.options, (err, socketOptions) => {
          if (err) {
            return callback(err);
          }
          let options = this.options;
          if (socketOptions && socketOptions.connection) {
            this.logger.info(
              {
                tnx: "proxy",
                remoteAddress: socketOptions.connection.remoteAddress,
                remotePort: socketOptions.connection.remotePort,
                destHost: options.host || "",
                destPort: options.port || "",
                action: "connected"
              },
              "Using proxied socket from %s:%s to %s:%s",
              socketOptions.connection.remoteAddress,
              socketOptions.connection.remotePort,
              options.host || "",
              options.port || ""
            );
            options = shared.assign(false, options);
            Object.keys(socketOptions).forEach((key) => {
              options[key] = socketOptions[key];
            });
          }
          let connection = new SMTPConnection(options);
          let returned = false;
          connection.once("error", (err2) => {
            if (returned) {
              return;
            }
            returned = true;
            connection.close();
            return callback(err2);
          });
          connection.once("end", () => {
            if (returned) {
              return;
            }
            returned = true;
            return callback(new Error("Connection closed"));
          });
          let finalize = /* @__PURE__ */ __name(() => {
            if (returned) {
              return;
            }
            returned = true;
            connection.quit();
            return callback(null, true);
          }, "finalize");
          connection.connect(() => {
            if (returned) {
              return;
            }
            let authData = this.getAuth({});
            if (authData && (connection.allowsAuth || options.forceAuth)) {
              connection.login(authData, (err2) => {
                if (returned) {
                  return;
                }
                if (err2) {
                  returned = true;
                  connection.close();
                  return callback(err2);
                }
                finalize();
              });
            } else if (!authData && connection.allowsAuth && options.forceAuth) {
              let err2 = new Error("Authentication info was not provided");
              err2.code = "NoAuth";
              returned = true;
              connection.close();
              return callback(err2);
            } else {
              finalize();
            }
          });
        });
        return promise;
      }
      /**
       * Releases resources
       */
      close() {
        if (this.auth && this.auth.oauth2) {
          this.auth.oauth2.removeAllListeners();
        }
        this.emit("close");
      }
    };
    module.exports = SMTPTransport;
  }
});

// ../../../../../../../../home/mohayyad/.bun/install/global/node_modules/unenv/dist/runtime/node/child_process.mjs
var ChildProcess, _forkChild, exec, execFile, execFileSync, execSync, fork, spawn, spawnSync, child_process_default;
var init_child_process = __esm({
  "../../../../../../../../home/mohayyad/.bun/install/global/node_modules/unenv/dist/runtime/node/child_process.mjs"() {
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    init_utils();
    ChildProcess = /* @__PURE__ */ notImplementedClass("child_process.ChildProcess");
    _forkChild = /* @__PURE__ */ notImplemented("child_process.ChildProcess");
    exec = /* @__PURE__ */ notImplemented("child_process.exec");
    execFile = /* @__PURE__ */ notImplemented("child_process.execFile");
    execFileSync = /* @__PURE__ */ notImplemented("child_process.execFileSync");
    execSync = /* @__PURE__ */ notImplemented("child_process.execSyn");
    fork = /* @__PURE__ */ notImplemented("child_process.fork");
    spawn = /* @__PURE__ */ notImplemented("child_process.spawn");
    spawnSync = /* @__PURE__ */ notImplemented("child_process.spawnSync");
    child_process_default = {
      ChildProcess,
      _forkChild,
      exec,
      execFile,
      execFileSync,
      execSync,
      fork,
      spawn,
      spawnSync
    };
  }
});

// node-built-in-modules:child_process
var require_child_process = __commonJS({
  "node-built-in-modules:child_process"(exports, module) {
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    init_child_process();
    module.exports = child_process_default;
  }
});

// node_modules/nodemailer/lib/sendmail-transport/index.js
var require_sendmail_transport = __commonJS({
  "node_modules/nodemailer/lib/sendmail-transport/index.js"(exports, module) {
    "use strict";
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    var spawn2 = require_child_process().spawn;
    var packageData = require_package2();
    var shared = require_shared();
    var SendmailTransport = class {
      static {
        __name(this, "SendmailTransport");
      }
      constructor(options) {
        options = options || {};
        this._spawn = spawn2;
        this.options = options || {};
        this.name = "Sendmail";
        this.version = packageData.version;
        this.path = "sendmail";
        this.args = false;
        this.winbreak = false;
        this.logger = shared.getLogger(this.options, {
          component: this.options.component || "sendmail"
        });
        if (options) {
          if (typeof options === "string") {
            this.path = options;
          } else if (typeof options === "object") {
            if (options.path) {
              this.path = options.path;
            }
            if (Array.isArray(options.args)) {
              this.args = options.args;
            }
            this.winbreak = ["win", "windows", "dos", "\r\n"].includes((options.newline || "").toString().toLowerCase());
          }
        }
      }
      /**
       * <p>Compiles a mailcomposer message and forwards it to handler that sends it.</p>
       *
       * @param {Object} emailMessage MailComposer object
       * @param {Function} callback Callback function to run when the sending is completed
       */
      send(mail, done) {
        mail.message.keepBcc = true;
        let envelope = mail.data.envelope || mail.message.getEnvelope();
        let messageId = mail.message.messageId();
        let args;
        let sendmail;
        let returned;
        const hasInvalidAddresses = [].concat(envelope.from || []).concat(envelope.to || []).some((addr) => /^-/.test(addr));
        if (hasInvalidAddresses) {
          return done(new Error("Can not send mail. Invalid envelope addresses."));
        }
        if (this.args) {
          args = ["-i"].concat(this.args).concat(envelope.to);
        } else {
          args = ["-i"].concat(envelope.from ? ["-f", envelope.from] : []).concat(envelope.to);
        }
        let callback = /* @__PURE__ */ __name((err) => {
          if (returned) {
            return;
          }
          returned = true;
          if (typeof done === "function") {
            if (err) {
              return done(err);
            } else {
              return done(null, {
                envelope: mail.data.envelope || mail.message.getEnvelope(),
                messageId,
                response: "Messages queued for delivery"
              });
            }
          }
        }, "callback");
        try {
          sendmail = this._spawn(this.path, args);
        } catch (E) {
          this.logger.error(
            {
              err: E,
              tnx: "spawn",
              messageId
            },
            "Error occurred while spawning sendmail. %s",
            E.message
          );
          return callback(E);
        }
        if (sendmail) {
          sendmail.on("error", (err) => {
            this.logger.error(
              {
                err,
                tnx: "spawn",
                messageId
              },
              "Error occurred when sending message %s. %s",
              messageId,
              err.message
            );
            callback(err);
          });
          sendmail.once("exit", (code) => {
            if (!code) {
              return callback();
            }
            let err;
            if (code === 127) {
              err = new Error("Sendmail command not found, process exited with code " + code);
            } else {
              err = new Error("Sendmail exited with code " + code);
            }
            this.logger.error(
              {
                err,
                tnx: "stdin",
                messageId
              },
              "Error sending message %s to sendmail. %s",
              messageId,
              err.message
            );
            callback(err);
          });
          sendmail.once("close", callback);
          sendmail.stdin.on("error", (err) => {
            this.logger.error(
              {
                err,
                tnx: "stdin",
                messageId
              },
              "Error occurred when piping message %s to sendmail. %s",
              messageId,
              err.message
            );
            callback(err);
          });
          let recipients = [].concat(envelope.to || []);
          if (recipients.length > 3) {
            recipients.push("...and " + recipients.splice(2).length + " more");
          }
          this.logger.info(
            {
              tnx: "send",
              messageId
            },
            "Sending message %s to <%s>",
            messageId,
            recipients.join(", ")
          );
          let sourceStream = mail.message.createReadStream();
          sourceStream.once("error", (err) => {
            this.logger.error(
              {
                err,
                tnx: "stdin",
                messageId
              },
              "Error occurred when generating message %s. %s",
              messageId,
              err.message
            );
            sendmail.kill("SIGINT");
            callback(err);
          });
          sourceStream.pipe(sendmail.stdin);
        } else {
          return callback(new Error("sendmail was not found"));
        }
      }
    };
    module.exports = SendmailTransport;
  }
});

// node_modules/nodemailer/lib/stream-transport/index.js
var require_stream_transport = __commonJS({
  "node_modules/nodemailer/lib/stream-transport/index.js"(exports, module) {
    "use strict";
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    var packageData = require_package2();
    var shared = require_shared();
    var StreamTransport = class {
      static {
        __name(this, "StreamTransport");
      }
      constructor(options) {
        options = options || {};
        this.options = options || {};
        this.name = "StreamTransport";
        this.version = packageData.version;
        this.logger = shared.getLogger(this.options, {
          component: this.options.component || "stream-transport"
        });
        this.winbreak = ["win", "windows", "dos", "\r\n"].includes((options.newline || "").toString().toLowerCase());
      }
      /**
       * Compiles a mailcomposer message and forwards it to handler that sends it
       *
       * @param {Object} emailMessage MailComposer object
       * @param {Function} callback Callback function to run when the sending is completed
       */
      send(mail, done) {
        mail.message.keepBcc = true;
        let envelope = mail.data.envelope || mail.message.getEnvelope();
        let messageId = mail.message.messageId();
        let recipients = [].concat(envelope.to || []);
        if (recipients.length > 3) {
          recipients.push("...and " + recipients.splice(2).length + " more");
        }
        this.logger.info(
          {
            tnx: "send",
            messageId
          },
          "Sending message %s to <%s> using %s line breaks",
          messageId,
          recipients.join(", "),
          this.winbreak ? "<CR><LF>" : "<LF>"
        );
        setImmediate(() => {
          let stream;
          try {
            stream = mail.message.createReadStream();
          } catch (E) {
            this.logger.error(
              {
                err: E,
                tnx: "send",
                messageId
              },
              "Creating send stream failed for %s. %s",
              messageId,
              E.message
            );
            return done(E);
          }
          if (!this.options.buffer) {
            stream.once("error", (err) => {
              this.logger.error(
                {
                  err,
                  tnx: "send",
                  messageId
                },
                "Failed creating message for %s. %s",
                messageId,
                err.message
              );
            });
            return done(null, {
              envelope: mail.data.envelope || mail.message.getEnvelope(),
              messageId,
              message: stream
            });
          }
          let chunks = [];
          let chunklen = 0;
          stream.on("readable", () => {
            let chunk;
            while ((chunk = stream.read()) !== null) {
              chunks.push(chunk);
              chunklen += chunk.length;
            }
          });
          stream.once("error", (err) => {
            this.logger.error(
              {
                err,
                tnx: "send",
                messageId
              },
              "Failed creating message for %s. %s",
              messageId,
              err.message
            );
            return done(err);
          });
          stream.on(
            "end",
            () => done(null, {
              envelope: mail.data.envelope || mail.message.getEnvelope(),
              messageId,
              message: Buffer.concat(chunks, chunklen)
            })
          );
        });
      }
    };
    module.exports = StreamTransport;
  }
});

// node_modules/nodemailer/lib/json-transport/index.js
var require_json_transport = __commonJS({
  "node_modules/nodemailer/lib/json-transport/index.js"(exports, module) {
    "use strict";
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    var packageData = require_package2();
    var shared = require_shared();
    var JSONTransport = class {
      static {
        __name(this, "JSONTransport");
      }
      constructor(options) {
        options = options || {};
        this.options = options || {};
        this.name = "JSONTransport";
        this.version = packageData.version;
        this.logger = shared.getLogger(this.options, {
          component: this.options.component || "json-transport"
        });
      }
      /**
       * <p>Compiles a mailcomposer message and forwards it to handler that sends it.</p>
       *
       * @param {Object} emailMessage MailComposer object
       * @param {Function} callback Callback function to run when the sending is completed
       */
      send(mail, done) {
        mail.message.keepBcc = true;
        let envelope = mail.data.envelope || mail.message.getEnvelope();
        let messageId = mail.message.messageId();
        let recipients = [].concat(envelope.to || []);
        if (recipients.length > 3) {
          recipients.push("...and " + recipients.splice(2).length + " more");
        }
        this.logger.info(
          {
            tnx: "send",
            messageId
          },
          "Composing JSON structure of %s to <%s>",
          messageId,
          recipients.join(", ")
        );
        setImmediate(() => {
          mail.normalize((err, data) => {
            if (err) {
              this.logger.error(
                {
                  err,
                  tnx: "send",
                  messageId
                },
                "Failed building JSON structure for %s. %s",
                messageId,
                err.message
              );
              return done(err);
            }
            delete data.envelope;
            delete data.normalizedHeaders;
            return done(null, {
              envelope,
              messageId,
              message: this.options.skipEncoding ? data : JSON.stringify(data)
            });
          });
        });
      }
    };
    module.exports = JSONTransport;
  }
});

// node_modules/nodemailer/lib/ses-transport/index.js
var require_ses_transport = __commonJS({
  "node_modules/nodemailer/lib/ses-transport/index.js"(exports, module) {
    "use strict";
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    var EventEmitter2 = require_events();
    var packageData = require_package2();
    var shared = require_shared();
    var LeWindows = require_le_windows();
    var MimeNode = require_mime_node();
    var SESTransport = class extends EventEmitter2 {
      static {
        __name(this, "SESTransport");
      }
      constructor(options) {
        super();
        options = options || {};
        this.options = options || {};
        this.ses = this.options.SES;
        this.name = "SESTransport";
        this.version = packageData.version;
        this.logger = shared.getLogger(this.options, {
          component: this.options.component || "ses-transport"
        });
      }
      getRegion(cb) {
        if (this.ses.sesClient.config && typeof this.ses.sesClient.config.region === "function") {
          return this.ses.sesClient.config.region().then((region) => cb(null, region)).catch((err) => cb(err));
        }
        return cb(null, false);
      }
      /**
       * Compiles a mailcomposer message and forwards it to SES
       *
       * @param {Object} emailMessage MailComposer object
       * @param {Function} callback Callback function to run when the sending is completed
       */
      send(mail, callback) {
        let statObject = {
          ts: Date.now(),
          pending: true
        };
        let fromHeader = mail.message._headers.find((header) => /^from$/i.test(header.key));
        if (fromHeader) {
          let mimeNode = new MimeNode("text/plain");
          fromHeader = mimeNode._convertAddresses(mimeNode._parseAddresses(fromHeader.value));
        }
        let envelope = mail.data.envelope || mail.message.getEnvelope();
        let messageId = mail.message.messageId();
        let recipients = [].concat(envelope.to || []);
        if (recipients.length > 3) {
          recipients.push("...and " + recipients.splice(2).length + " more");
        }
        this.logger.info(
          {
            tnx: "send",
            messageId
          },
          "Sending message %s to <%s>",
          messageId,
          recipients.join(", ")
        );
        let getRawMessage = /* @__PURE__ */ __name((next) => {
          if (!mail.data._dkim) {
            mail.data._dkim = {};
          }
          if (mail.data._dkim.skipFields && typeof mail.data._dkim.skipFields === "string") {
            mail.data._dkim.skipFields += ":date:message-id";
          } else {
            mail.data._dkim.skipFields = "date:message-id";
          }
          let sourceStream = mail.message.createReadStream();
          let stream = sourceStream.pipe(new LeWindows());
          let chunks = [];
          let chunklen = 0;
          stream.on("readable", () => {
            let chunk;
            while ((chunk = stream.read()) !== null) {
              chunks.push(chunk);
              chunklen += chunk.length;
            }
          });
          sourceStream.once("error", (err) => stream.emit("error", err));
          stream.once("error", (err) => {
            next(err);
          });
          stream.once("end", () => next(null, Buffer.concat(chunks, chunklen)));
        }, "getRawMessage");
        setImmediate(
          () => getRawMessage((err, raw2) => {
            if (err) {
              this.logger.error(
                {
                  err,
                  tnx: "send",
                  messageId
                },
                "Failed creating message for %s. %s",
                messageId,
                err.message
              );
              statObject.pending = false;
              return callback(err);
            }
            let sesMessage = {
              Content: {
                Raw: {
                  // required
                  Data: raw2
                  // required
                }
              },
              FromEmailAddress: fromHeader ? fromHeader : envelope.from,
              Destination: {
                ToAddresses: envelope.to
              }
            };
            Object.keys(mail.data.ses || {}).forEach((key) => {
              sesMessage[key] = mail.data.ses[key];
            });
            this.getRegion((err2, region) => {
              if (err2 || !region) {
                region = "us-east-1";
              }
              const command = new this.ses.SendEmailCommand(sesMessage);
              const sendPromise = this.ses.sesClient.send(command);
              sendPromise.then((data) => {
                if (region === "us-east-1") {
                  region = "email";
                }
                statObject.pending = true;
                callback(null, {
                  envelope: {
                    from: envelope.from,
                    to: envelope.to
                  },
                  messageId: "<" + data.MessageId + (!/@/.test(data.MessageId) ? "@" + region + ".amazonses.com" : "") + ">",
                  response: data.MessageId,
                  raw: raw2
                });
              }).catch((err3) => {
                this.logger.error(
                  {
                    err: err3,
                    tnx: "send"
                  },
                  "Send error for %s: %s",
                  messageId,
                  err3.message
                );
                statObject.pending = false;
                callback(err3);
              });
            });
          })
        );
      }
      /**
       * Verifies SES configuration
       *
       * @param {Function} callback Callback function
       */
      verify(callback) {
        let promise;
        if (!callback) {
          promise = new Promise((resolve, reject) => {
            callback = shared.callbackPromise(resolve, reject);
          });
        }
        const cb = /* @__PURE__ */ __name((err) => {
          if (err && !["InvalidParameterValue", "MessageRejected"].includes(err.code || err.Code || err.name)) {
            return callback(err);
          }
          return callback(null, true);
        }, "cb");
        const sesMessage = {
          Content: {
            Raw: {
              Data: Buffer.from("From: <invalid@invalid>\r\nTo: <invalid@invalid>\r\n Subject: Invalid\r\n\r\nInvalid")
            }
          },
          FromEmailAddress: "invalid@invalid",
          Destination: {
            ToAddresses: ["invalid@invalid"]
          }
        };
        this.getRegion((err, region) => {
          if (err || !region) {
            region = "us-east-1";
          }
          const command = new this.ses.SendEmailCommand(sesMessage);
          const sendPromise = this.ses.sesClient.send(command);
          sendPromise.then((data) => cb(null, data)).catch((err2) => cb(err2));
        });
        return promise;
      }
    };
    module.exports = SESTransport;
  }
});

// node_modules/nodemailer/lib/nodemailer.js
var require_nodemailer = __commonJS({
  "node_modules/nodemailer/lib/nodemailer.js"(exports, module) {
    "use strict";
    init_modules_watch_stub();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
    init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
    init_performance2();
    var Mailer = require_mailer();
    var shared = require_shared();
    var SMTPPool = require_smtp_pool();
    var SMTPTransport = require_smtp_transport();
    var SendmailTransport = require_sendmail_transport();
    var StreamTransport = require_stream_transport();
    var JSONTransport = require_json_transport();
    var SESTransport = require_ses_transport();
    var nmfetch = require_fetch();
    var packageData = require_package2();
    var ETHEREAL_API = (process.env.ETHEREAL_API || "https://api.nodemailer.com").replace(/\/+$/, "");
    var ETHEREAL_WEB = (process.env.ETHEREAL_WEB || "https://ethereal.email").replace(/\/+$/, "");
    var ETHEREAL_API_KEY = (process.env.ETHEREAL_API_KEY || "").replace(/\s*/g, "") || null;
    var ETHEREAL_CACHE = ["true", "yes", "y", "1"].includes((process.env.ETHEREAL_CACHE || "yes").toString().trim().toLowerCase());
    var testAccount = false;
    module.exports.createTransport = function(transporter, defaults) {
      let urlConfig;
      let options;
      let mailer;
      if (
        // provided transporter is a configuration object, not transporter plugin
        typeof transporter === "object" && typeof transporter.send !== "function" || // provided transporter looks like a connection url
        typeof transporter === "string" && /^(smtps?|direct):/i.test(transporter)
      ) {
        if (urlConfig = typeof transporter === "string" ? transporter : transporter.url) {
          options = shared.parseConnectionUrl(urlConfig);
        } else {
          options = transporter;
        }
        if (options.pool) {
          transporter = new SMTPPool(options);
        } else if (options.sendmail) {
          transporter = new SendmailTransport(options);
        } else if (options.streamTransport) {
          transporter = new StreamTransport(options);
        } else if (options.jsonTransport) {
          transporter = new JSONTransport(options);
        } else if (options.SES) {
          if (options.SES.ses && options.SES.aws) {
            let error3 = new Error("Using legacy SES configuration, expecting @aws-sdk/client-sesv2, see https://nodemailer.com/transports/ses/");
            error3.code = "LegacyConfig";
            throw error3;
          }
          transporter = new SESTransport(options);
        } else {
          transporter = new SMTPTransport(options);
        }
      }
      mailer = new Mailer(transporter, options, defaults);
      return mailer;
    };
    module.exports.createTestAccount = function(apiUrl, callback) {
      let promise;
      if (!callback && typeof apiUrl === "function") {
        callback = apiUrl;
        apiUrl = false;
      }
      if (!callback) {
        promise = new Promise((resolve, reject) => {
          callback = shared.callbackPromise(resolve, reject);
        });
      }
      if (ETHEREAL_CACHE && testAccount) {
        setImmediate(() => callback(null, testAccount));
        return promise;
      }
      apiUrl = apiUrl || ETHEREAL_API;
      let chunks = [];
      let chunklen = 0;
      let requestHeaders = {};
      let requestBody = {
        requestor: packageData.name,
        version: packageData.version
      };
      if (ETHEREAL_API_KEY) {
        requestHeaders.Authorization = "Bearer " + ETHEREAL_API_KEY;
      }
      let req = nmfetch(apiUrl + "/user", {
        contentType: "application/json",
        method: "POST",
        headers: requestHeaders,
        body: Buffer.from(JSON.stringify(requestBody))
      });
      req.on("readable", () => {
        let chunk;
        while ((chunk = req.read()) !== null) {
          chunks.push(chunk);
          chunklen += chunk.length;
        }
      });
      req.once("error", (err) => callback(err));
      req.once("end", () => {
        let res = Buffer.concat(chunks, chunklen);
        let data;
        let err;
        try {
          data = JSON.parse(res.toString());
        } catch (E) {
          err = E;
        }
        if (err) {
          return callback(err);
        }
        if (data.status !== "success" || data.error) {
          return callback(new Error(data.error || "Request failed"));
        }
        delete data.status;
        testAccount = data;
        callback(null, testAccount);
      });
      return promise;
    };
    module.exports.getTestMessageUrl = function(info3) {
      if (!info3 || !info3.response) {
        return false;
      }
      let infoProps = /* @__PURE__ */ new Map();
      info3.response.replace(/\[([^\]]+)\]$/, (m, props) => {
        props.replace(/\b([A-Z0-9]+)=([^\s]+)/g, (m2, key, value) => {
          infoProps.set(key, value);
        });
      });
      if (infoProps.has("STATUS") && infoProps.has("MSGID")) {
        return (testAccount.web || ETHEREAL_WEB) + "/message/" + infoProps.get("MSGID");
      }
      return false;
    };
  }
});

// .wrangler/tmp/bundle-eoARvH/middleware-loader.entry.ts
init_modules_watch_stub();
init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
init_performance2();

// .wrangler/tmp/bundle-eoARvH/middleware-insertion-facade.js
init_modules_watch_stub();
init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
init_performance2();

// src/index.ts
init_modules_watch_stub();
init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
init_performance2();

// node_modules/hono/dist/index.js
init_modules_watch_stub();
init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
init_performance2();

// node_modules/hono/dist/hono.js
init_modules_watch_stub();
init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
init_performance2();

// node_modules/hono/dist/hono-base.js
init_modules_watch_stub();
init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
init_performance2();

// node_modules/hono/dist/compose.js
init_modules_watch_stub();
init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
init_performance2();
var compose = /* @__PURE__ */ __name((middleware, onError, onNotFound) => {
  return (context2, next) => {
    let index = -1;
    return dispatch(0);
    async function dispatch(i) {
      if (i <= index) {
        throw new Error("next() called multiple times");
      }
      index = i;
      let res;
      let isError = false;
      let handler;
      if (middleware[i]) {
        handler = middleware[i][0][0];
        context2.req.routeIndex = i;
      } else {
        handler = i === middleware.length && next || void 0;
      }
      if (handler) {
        try {
          res = await handler(context2, () => dispatch(i + 1));
        } catch (err) {
          if (err instanceof Error && onError) {
            context2.error = err;
            res = await onError(err, context2);
            isError = true;
          } else {
            throw err;
          }
        }
      } else {
        if (context2.finalized === false && onNotFound) {
          res = await onNotFound(context2);
        }
      }
      if (res && (context2.finalized === false || isError)) {
        context2.res = res;
      }
      return context2;
    }
    __name(dispatch, "dispatch");
  };
}, "compose");

// node_modules/hono/dist/context.js
init_modules_watch_stub();
init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
init_performance2();

// node_modules/hono/dist/request.js
init_modules_watch_stub();
init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
init_performance2();

// node_modules/hono/dist/request/constants.js
init_modules_watch_stub();
init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
init_performance2();
var GET_MATCH_RESULT = Symbol();

// node_modules/hono/dist/utils/body.js
init_modules_watch_stub();
init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
init_performance2();
var parseBody = /* @__PURE__ */ __name(async (request, options = /* @__PURE__ */ Object.create(null)) => {
  const { all = false, dot = false } = options;
  const headers = request instanceof HonoRequest ? request.raw.headers : request.headers;
  const contentType = headers.get("Content-Type");
  if (contentType?.startsWith("multipart/form-data") || contentType?.startsWith("application/x-www-form-urlencoded")) {
    return parseFormData(request, { all, dot });
  }
  return {};
}, "parseBody");
async function parseFormData(request, options) {
  const formData = await request.formData();
  if (formData) {
    return convertFormDataToBodyData(formData, options);
  }
  return {};
}
__name(parseFormData, "parseFormData");
function convertFormDataToBodyData(formData, options) {
  const form = /* @__PURE__ */ Object.create(null);
  formData.forEach((value, key) => {
    const shouldParseAllValues = options.all || key.endsWith("[]");
    if (!shouldParseAllValues) {
      form[key] = value;
    } else {
      handleParsingAllValues(form, key, value);
    }
  });
  if (options.dot) {
    Object.entries(form).forEach(([key, value]) => {
      const shouldParseDotValues = key.includes(".");
      if (shouldParseDotValues) {
        handleParsingNestedValues(form, key, value);
        delete form[key];
      }
    });
  }
  return form;
}
__name(convertFormDataToBodyData, "convertFormDataToBodyData");
var handleParsingAllValues = /* @__PURE__ */ __name((form, key, value) => {
  if (form[key] !== void 0) {
    if (Array.isArray(form[key])) {
      ;
      form[key].push(value);
    } else {
      form[key] = [form[key], value];
    }
  } else {
    if (!key.endsWith("[]")) {
      form[key] = value;
    } else {
      form[key] = [value];
    }
  }
}, "handleParsingAllValues");
var handleParsingNestedValues = /* @__PURE__ */ __name((form, key, value) => {
  let nestedForm = form;
  const keys = key.split(".");
  keys.forEach((key2, index) => {
    if (index === keys.length - 1) {
      nestedForm[key2] = value;
    } else {
      if (!nestedForm[key2] || typeof nestedForm[key2] !== "object" || Array.isArray(nestedForm[key2]) || nestedForm[key2] instanceof File) {
        nestedForm[key2] = /* @__PURE__ */ Object.create(null);
      }
      nestedForm = nestedForm[key2];
    }
  });
}, "handleParsingNestedValues");

// node_modules/hono/dist/utils/url.js
init_modules_watch_stub();
init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
init_performance2();
var splitPath = /* @__PURE__ */ __name((path) => {
  const paths = path.split("/");
  if (paths[0] === "") {
    paths.shift();
  }
  return paths;
}, "splitPath");
var splitRoutingPath = /* @__PURE__ */ __name((routePath) => {
  const { groups, path } = extractGroupsFromPath(routePath);
  const paths = splitPath(path);
  return replaceGroupMarks(paths, groups);
}, "splitRoutingPath");
var extractGroupsFromPath = /* @__PURE__ */ __name((path) => {
  const groups = [];
  path = path.replace(/\{[^}]+\}/g, (match, index) => {
    const mark = `@${index}`;
    groups.push([mark, match]);
    return mark;
  });
  return { groups, path };
}, "extractGroupsFromPath");
var replaceGroupMarks = /* @__PURE__ */ __name((paths, groups) => {
  for (let i = groups.length - 1; i >= 0; i--) {
    const [mark] = groups[i];
    for (let j = paths.length - 1; j >= 0; j--) {
      if (paths[j].includes(mark)) {
        paths[j] = paths[j].replace(mark, groups[i][1]);
        break;
      }
    }
  }
  return paths;
}, "replaceGroupMarks");
var patternCache = {};
var getPattern = /* @__PURE__ */ __name((label, next) => {
  if (label === "*") {
    return "*";
  }
  const match = label.match(/^\:([^\{\}]+)(?:\{(.+)\})?$/);
  if (match) {
    const cacheKey = `${label}#${next}`;
    if (!patternCache[cacheKey]) {
      if (match[2]) {
        patternCache[cacheKey] = next && next[0] !== ":" && next[0] !== "*" ? [cacheKey, match[1], new RegExp(`^${match[2]}(?=/${next})`)] : [label, match[1], new RegExp(`^${match[2]}$`)];
      } else {
        patternCache[cacheKey] = [label, match[1], true];
      }
    }
    return patternCache[cacheKey];
  }
  return null;
}, "getPattern");
var tryDecode = /* @__PURE__ */ __name((str, decoder) => {
  try {
    return decoder(str);
  } catch {
    return str.replace(/(?:%[0-9A-Fa-f]{2})+/g, (match) => {
      try {
        return decoder(match);
      } catch {
        return match;
      }
    });
  }
}, "tryDecode");
var tryDecodeURI = /* @__PURE__ */ __name((str) => tryDecode(str, decodeURI), "tryDecodeURI");
var getPath = /* @__PURE__ */ __name((request) => {
  const url = request.url;
  const start = url.indexOf("/", url.indexOf(":") + 4);
  let i = start;
  for (; i < url.length; i++) {
    const charCode = url.charCodeAt(i);
    if (charCode === 37) {
      const queryIndex = url.indexOf("?", i);
      const path = url.slice(start, queryIndex === -1 ? void 0 : queryIndex);
      return tryDecodeURI(path.includes("%25") ? path.replace(/%25/g, "%2525") : path);
    } else if (charCode === 63) {
      break;
    }
  }
  return url.slice(start, i);
}, "getPath");
var getPathNoStrict = /* @__PURE__ */ __name((request) => {
  const result = getPath(request);
  return result.length > 1 && result.at(-1) === "/" ? result.slice(0, -1) : result;
}, "getPathNoStrict");
var mergePath = /* @__PURE__ */ __name((base, sub, ...rest) => {
  if (rest.length) {
    sub = mergePath(sub, ...rest);
  }
  return `${base?.[0] === "/" ? "" : "/"}${base}${sub === "/" ? "" : `${base?.at(-1) === "/" ? "" : "/"}${sub?.[0] === "/" ? sub.slice(1) : sub}`}`;
}, "mergePath");
var checkOptionalParameter = /* @__PURE__ */ __name((path) => {
  if (path.charCodeAt(path.length - 1) !== 63 || !path.includes(":")) {
    return null;
  }
  const segments = path.split("/");
  const results = [];
  let basePath = "";
  segments.forEach((segment) => {
    if (segment !== "" && !/\:/.test(segment)) {
      basePath += "/" + segment;
    } else if (/\:/.test(segment)) {
      if (/\?/.test(segment)) {
        if (results.length === 0 && basePath === "") {
          results.push("/");
        } else {
          results.push(basePath);
        }
        const optionalSegment = segment.replace("?", "");
        basePath += "/" + optionalSegment;
        results.push(basePath);
      } else {
        basePath += "/" + segment;
      }
    }
  });
  return results.filter((v, i, a) => a.indexOf(v) === i);
}, "checkOptionalParameter");
var _decodeURI = /* @__PURE__ */ __name((value) => {
  if (!/[%+]/.test(value)) {
    return value;
  }
  if (value.indexOf("+") !== -1) {
    value = value.replace(/\+/g, " ");
  }
  return value.indexOf("%") !== -1 ? tryDecode(value, decodeURIComponent_) : value;
}, "_decodeURI");
var _getQueryParam = /* @__PURE__ */ __name((url, key, multiple) => {
  let encoded;
  if (!multiple && key && !/[%+]/.test(key)) {
    let keyIndex2 = url.indexOf(`?${key}`, 8);
    if (keyIndex2 === -1) {
      keyIndex2 = url.indexOf(`&${key}`, 8);
    }
    while (keyIndex2 !== -1) {
      const trailingKeyCode = url.charCodeAt(keyIndex2 + key.length + 1);
      if (trailingKeyCode === 61) {
        const valueIndex = keyIndex2 + key.length + 2;
        const endIndex = url.indexOf("&", valueIndex);
        return _decodeURI(url.slice(valueIndex, endIndex === -1 ? void 0 : endIndex));
      } else if (trailingKeyCode == 38 || isNaN(trailingKeyCode)) {
        return "";
      }
      keyIndex2 = url.indexOf(`&${key}`, keyIndex2 + 1);
    }
    encoded = /[%+]/.test(url);
    if (!encoded) {
      return void 0;
    }
  }
  const results = {};
  encoded ??= /[%+]/.test(url);
  let keyIndex = url.indexOf("?", 8);
  while (keyIndex !== -1) {
    const nextKeyIndex = url.indexOf("&", keyIndex + 1);
    let valueIndex = url.indexOf("=", keyIndex);
    if (valueIndex > nextKeyIndex && nextKeyIndex !== -1) {
      valueIndex = -1;
    }
    let name = url.slice(
      keyIndex + 1,
      valueIndex === -1 ? nextKeyIndex === -1 ? void 0 : nextKeyIndex : valueIndex
    );
    if (encoded) {
      name = _decodeURI(name);
    }
    keyIndex = nextKeyIndex;
    if (name === "") {
      continue;
    }
    let value;
    if (valueIndex === -1) {
      value = "";
    } else {
      value = url.slice(valueIndex + 1, nextKeyIndex === -1 ? void 0 : nextKeyIndex);
      if (encoded) {
        value = _decodeURI(value);
      }
    }
    if (multiple) {
      if (!(results[name] && Array.isArray(results[name]))) {
        results[name] = [];
      }
      ;
      results[name].push(value);
    } else {
      results[name] ??= value;
    }
  }
  return key ? results[key] : results;
}, "_getQueryParam");
var getQueryParam = _getQueryParam;
var getQueryParams = /* @__PURE__ */ __name((url, key) => {
  return _getQueryParam(url, key, true);
}, "getQueryParams");
var decodeURIComponent_ = decodeURIComponent;

// node_modules/hono/dist/request.js
var tryDecodeURIComponent = /* @__PURE__ */ __name((str) => tryDecode(str, decodeURIComponent_), "tryDecodeURIComponent");
var HonoRequest = class {
  static {
    __name(this, "HonoRequest");
  }
  raw;
  #validatedData;
  #matchResult;
  routeIndex = 0;
  path;
  bodyCache = {};
  constructor(request, path = "/", matchResult = [[]]) {
    this.raw = request;
    this.path = path;
    this.#matchResult = matchResult;
    this.#validatedData = {};
  }
  param(key) {
    return key ? this.#getDecodedParam(key) : this.#getAllDecodedParams();
  }
  #getDecodedParam(key) {
    const paramKey = this.#matchResult[0][this.routeIndex][1][key];
    const param = this.#getParamValue(paramKey);
    return param ? /\%/.test(param) ? tryDecodeURIComponent(param) : param : void 0;
  }
  #getAllDecodedParams() {
    const decoded = {};
    const keys = Object.keys(this.#matchResult[0][this.routeIndex][1]);
    for (const key of keys) {
      const value = this.#getParamValue(this.#matchResult[0][this.routeIndex][1][key]);
      if (value && typeof value === "string") {
        decoded[key] = /\%/.test(value) ? tryDecodeURIComponent(value) : value;
      }
    }
    return decoded;
  }
  #getParamValue(paramKey) {
    return this.#matchResult[1] ? this.#matchResult[1][paramKey] : paramKey;
  }
  query(key) {
    return getQueryParam(this.url, key);
  }
  queries(key) {
    return getQueryParams(this.url, key);
  }
  header(name) {
    if (name) {
      return this.raw.headers.get(name) ?? void 0;
    }
    const headerData = {};
    this.raw.headers.forEach((value, key) => {
      headerData[key] = value;
    });
    return headerData;
  }
  async parseBody(options) {
    return this.bodyCache.parsedBody ??= await parseBody(this, options);
  }
  #cachedBody = /* @__PURE__ */ __name((key) => {
    const { bodyCache, raw: raw2 } = this;
    const cachedBody = bodyCache[key];
    if (cachedBody) {
      return cachedBody;
    }
    const anyCachedKey = Object.keys(bodyCache)[0];
    if (anyCachedKey) {
      return bodyCache[anyCachedKey].then((body) => {
        if (anyCachedKey === "json") {
          body = JSON.stringify(body);
        }
        return new Response(body)[key]();
      });
    }
    return bodyCache[key] = raw2[key]();
  }, "#cachedBody");
  json() {
    return this.#cachedBody("text").then((text) => JSON.parse(text));
  }
  text() {
    return this.#cachedBody("text");
  }
  arrayBuffer() {
    return this.#cachedBody("arrayBuffer");
  }
  blob() {
    return this.#cachedBody("blob");
  }
  formData() {
    return this.#cachedBody("formData");
  }
  addValidatedData(target, data) {
    this.#validatedData[target] = data;
  }
  valid(target) {
    return this.#validatedData[target];
  }
  get url() {
    return this.raw.url;
  }
  get method() {
    return this.raw.method;
  }
  get [GET_MATCH_RESULT]() {
    return this.#matchResult;
  }
  get matchedRoutes() {
    return this.#matchResult[0].map(([[, route]]) => route);
  }
  get routePath() {
    return this.#matchResult[0].map(([[, route]]) => route)[this.routeIndex].path;
  }
};

// node_modules/hono/dist/utils/html.js
init_modules_watch_stub();
init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
init_performance2();
var HtmlEscapedCallbackPhase = {
  Stringify: 1,
  BeforeStream: 2,
  Stream: 3
};
var raw = /* @__PURE__ */ __name((value, callbacks) => {
  const escapedString = new String(value);
  escapedString.isEscaped = true;
  escapedString.callbacks = callbacks;
  return escapedString;
}, "raw");
var resolveCallback = /* @__PURE__ */ __name(async (str, phase, preserveCallbacks, context2, buffer) => {
  if (typeof str === "object" && !(str instanceof String)) {
    if (!(str instanceof Promise)) {
      str = str.toString();
    }
    if (str instanceof Promise) {
      str = await str;
    }
  }
  const callbacks = str.callbacks;
  if (!callbacks?.length) {
    return Promise.resolve(str);
  }
  if (buffer) {
    buffer[0] += str;
  } else {
    buffer = [str];
  }
  const resStr = Promise.all(callbacks.map((c) => c({ phase, buffer, context: context2 }))).then(
    (res) => Promise.all(
      res.filter(Boolean).map((str2) => resolveCallback(str2, phase, false, context2, buffer))
    ).then(() => buffer[0])
  );
  if (preserveCallbacks) {
    return raw(await resStr, callbacks);
  } else {
    return resStr;
  }
}, "resolveCallback");

// node_modules/hono/dist/context.js
var TEXT_PLAIN = "text/plain; charset=UTF-8";
var setDefaultContentType = /* @__PURE__ */ __name((contentType, headers) => {
  return {
    "Content-Type": contentType,
    ...headers
  };
}, "setDefaultContentType");
var Context = class {
  static {
    __name(this, "Context");
  }
  #rawRequest;
  #req;
  env = {};
  #var;
  finalized = false;
  error;
  #status;
  #executionCtx;
  #res;
  #layout;
  #renderer;
  #notFoundHandler;
  #preparedHeaders;
  #matchResult;
  #path;
  constructor(req, options) {
    this.#rawRequest = req;
    if (options) {
      this.#executionCtx = options.executionCtx;
      this.env = options.env;
      this.#notFoundHandler = options.notFoundHandler;
      this.#path = options.path;
      this.#matchResult = options.matchResult;
    }
  }
  get req() {
    this.#req ??= new HonoRequest(this.#rawRequest, this.#path, this.#matchResult);
    return this.#req;
  }
  get event() {
    if (this.#executionCtx && "respondWith" in this.#executionCtx) {
      return this.#executionCtx;
    } else {
      throw Error("This context has no FetchEvent");
    }
  }
  get executionCtx() {
    if (this.#executionCtx) {
      return this.#executionCtx;
    } else {
      throw Error("This context has no ExecutionContext");
    }
  }
  get res() {
    return this.#res ||= new Response(null, {
      headers: this.#preparedHeaders ??= new Headers()
    });
  }
  set res(_res) {
    if (this.#res && _res) {
      _res = new Response(_res.body, _res);
      for (const [k, v] of this.#res.headers.entries()) {
        if (k === "content-type") {
          continue;
        }
        if (k === "set-cookie") {
          const cookies = this.#res.headers.getSetCookie();
          _res.headers.delete("set-cookie");
          for (const cookie of cookies) {
            _res.headers.append("set-cookie", cookie);
          }
        } else {
          _res.headers.set(k, v);
        }
      }
    }
    this.#res = _res;
    this.finalized = true;
  }
  render = /* @__PURE__ */ __name((...args) => {
    this.#renderer ??= (content) => this.html(content);
    return this.#renderer(...args);
  }, "render");
  setLayout = /* @__PURE__ */ __name((layout) => this.#layout = layout, "setLayout");
  getLayout = /* @__PURE__ */ __name(() => this.#layout, "getLayout");
  setRenderer = /* @__PURE__ */ __name((renderer) => {
    this.#renderer = renderer;
  }, "setRenderer");
  header = /* @__PURE__ */ __name((name, value, options) => {
    if (this.finalized) {
      this.#res = new Response(this.#res.body, this.#res);
    }
    const headers = this.#res ? this.#res.headers : this.#preparedHeaders ??= new Headers();
    if (value === void 0) {
      headers.delete(name);
    } else if (options?.append) {
      headers.append(name, value);
    } else {
      headers.set(name, value);
    }
  }, "header");
  status = /* @__PURE__ */ __name((status) => {
    this.#status = status;
  }, "status");
  set = /* @__PURE__ */ __name((key, value) => {
    this.#var ??= /* @__PURE__ */ new Map();
    this.#var.set(key, value);
  }, "set");
  get = /* @__PURE__ */ __name((key) => {
    return this.#var ? this.#var.get(key) : void 0;
  }, "get");
  get var() {
    if (!this.#var) {
      return {};
    }
    return Object.fromEntries(this.#var);
  }
  #newResponse(data, arg, headers) {
    const responseHeaders = this.#res ? new Headers(this.#res.headers) : this.#preparedHeaders ?? new Headers();
    if (typeof arg === "object" && "headers" in arg) {
      const argHeaders = arg.headers instanceof Headers ? arg.headers : new Headers(arg.headers);
      for (const [key, value] of argHeaders) {
        if (key.toLowerCase() === "set-cookie") {
          responseHeaders.append(key, value);
        } else {
          responseHeaders.set(key, value);
        }
      }
    }
    if (headers) {
      for (const [k, v] of Object.entries(headers)) {
        if (typeof v === "string") {
          responseHeaders.set(k, v);
        } else {
          responseHeaders.delete(k);
          for (const v2 of v) {
            responseHeaders.append(k, v2);
          }
        }
      }
    }
    const status = typeof arg === "number" ? arg : arg?.status ?? this.#status;
    return new Response(data, { status, headers: responseHeaders });
  }
  newResponse = /* @__PURE__ */ __name((...args) => this.#newResponse(...args), "newResponse");
  body = /* @__PURE__ */ __name((data, arg, headers) => this.#newResponse(data, arg, headers), "body");
  text = /* @__PURE__ */ __name((text, arg, headers) => {
    return !this.#preparedHeaders && !this.#status && !arg && !headers && !this.finalized ? new Response(text) : this.#newResponse(
      text,
      arg,
      setDefaultContentType(TEXT_PLAIN, headers)
    );
  }, "text");
  json = /* @__PURE__ */ __name((object, arg, headers) => {
    return this.#newResponse(
      JSON.stringify(object),
      arg,
      setDefaultContentType("application/json", headers)
    );
  }, "json");
  html = /* @__PURE__ */ __name((html, arg, headers) => {
    const res = /* @__PURE__ */ __name((html2) => this.#newResponse(html2, arg, setDefaultContentType("text/html; charset=UTF-8", headers)), "res");
    return typeof html === "object" ? resolveCallback(html, HtmlEscapedCallbackPhase.Stringify, false, {}).then(res) : res(html);
  }, "html");
  redirect = /* @__PURE__ */ __name((location, status) => {
    const locationString = String(location);
    this.header(
      "Location",
      !/[^\x00-\xFF]/.test(locationString) ? locationString : encodeURI(locationString)
    );
    return this.newResponse(null, status ?? 302);
  }, "redirect");
  notFound = /* @__PURE__ */ __name(() => {
    this.#notFoundHandler ??= () => new Response();
    return this.#notFoundHandler(this);
  }, "notFound");
};

// node_modules/hono/dist/router.js
init_modules_watch_stub();
init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
init_performance2();
var METHOD_NAME_ALL = "ALL";
var METHOD_NAME_ALL_LOWERCASE = "all";
var METHODS = ["get", "post", "put", "delete", "options", "patch"];
var MESSAGE_MATCHER_IS_ALREADY_BUILT = "Can not add a route since the matcher is already built.";
var UnsupportedPathError = class extends Error {
  static {
    __name(this, "UnsupportedPathError");
  }
};

// node_modules/hono/dist/utils/constants.js
init_modules_watch_stub();
init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
init_performance2();
var COMPOSED_HANDLER = "__COMPOSED_HANDLER";

// node_modules/hono/dist/hono-base.js
var notFoundHandler = /* @__PURE__ */ __name((c) => {
  return c.text("404 Not Found", 404);
}, "notFoundHandler");
var errorHandler = /* @__PURE__ */ __name((err, c) => {
  if ("getResponse" in err) {
    const res = err.getResponse();
    return c.newResponse(res.body, res);
  }
  console.error(err);
  return c.text("Internal Server Error", 500);
}, "errorHandler");
var Hono = class {
  static {
    __name(this, "Hono");
  }
  get;
  post;
  put;
  delete;
  options;
  patch;
  all;
  on;
  use;
  router;
  getPath;
  _basePath = "/";
  #path = "/";
  routes = [];
  constructor(options = {}) {
    const allMethods = [...METHODS, METHOD_NAME_ALL_LOWERCASE];
    allMethods.forEach((method) => {
      this[method] = (args1, ...args) => {
        if (typeof args1 === "string") {
          this.#path = args1;
        } else {
          this.#addRoute(method, this.#path, args1);
        }
        args.forEach((handler) => {
          this.#addRoute(method, this.#path, handler);
        });
        return this;
      };
    });
    this.on = (method, path, ...handlers) => {
      for (const p of [path].flat()) {
        this.#path = p;
        for (const m of [method].flat()) {
          handlers.map((handler) => {
            this.#addRoute(m.toUpperCase(), this.#path, handler);
          });
        }
      }
      return this;
    };
    this.use = (arg1, ...handlers) => {
      if (typeof arg1 === "string") {
        this.#path = arg1;
      } else {
        this.#path = "*";
        handlers.unshift(arg1);
      }
      handlers.forEach((handler) => {
        this.#addRoute(METHOD_NAME_ALL, this.#path, handler);
      });
      return this;
    };
    const { strict, ...optionsWithoutStrict } = options;
    Object.assign(this, optionsWithoutStrict);
    this.getPath = strict ?? true ? options.getPath ?? getPath : getPathNoStrict;
  }
  #clone() {
    const clone = new Hono({
      router: this.router,
      getPath: this.getPath
    });
    clone.errorHandler = this.errorHandler;
    clone.#notFoundHandler = this.#notFoundHandler;
    clone.routes = this.routes;
    return clone;
  }
  #notFoundHandler = notFoundHandler;
  errorHandler = errorHandler;
  route(path, app2) {
    const subApp = this.basePath(path);
    app2.routes.map((r) => {
      let handler;
      if (app2.errorHandler === errorHandler) {
        handler = r.handler;
      } else {
        handler = /* @__PURE__ */ __name(async (c, next) => (await compose([], app2.errorHandler)(c, () => r.handler(c, next))).res, "handler");
        handler[COMPOSED_HANDLER] = r.handler;
      }
      subApp.#addRoute(r.method, r.path, handler);
    });
    return this;
  }
  basePath(path) {
    const subApp = this.#clone();
    subApp._basePath = mergePath(this._basePath, path);
    return subApp;
  }
  onError = /* @__PURE__ */ __name((handler) => {
    this.errorHandler = handler;
    return this;
  }, "onError");
  notFound = /* @__PURE__ */ __name((handler) => {
    this.#notFoundHandler = handler;
    return this;
  }, "notFound");
  mount(path, applicationHandler, options) {
    let replaceRequest;
    let optionHandler;
    if (options) {
      if (typeof options === "function") {
        optionHandler = options;
      } else {
        optionHandler = options.optionHandler;
        if (options.replaceRequest === false) {
          replaceRequest = /* @__PURE__ */ __name((request) => request, "replaceRequest");
        } else {
          replaceRequest = options.replaceRequest;
        }
      }
    }
    const getOptions = optionHandler ? (c) => {
      const options2 = optionHandler(c);
      return Array.isArray(options2) ? options2 : [options2];
    } : (c) => {
      let executionContext = void 0;
      try {
        executionContext = c.executionCtx;
      } catch {
      }
      return [c.env, executionContext];
    };
    replaceRequest ||= (() => {
      const mergedPath = mergePath(this._basePath, path);
      const pathPrefixLength = mergedPath === "/" ? 0 : mergedPath.length;
      return (request) => {
        const url = new URL(request.url);
        url.pathname = url.pathname.slice(pathPrefixLength) || "/";
        return new Request(url, request);
      };
    })();
    const handler = /* @__PURE__ */ __name(async (c, next) => {
      const res = await applicationHandler(replaceRequest(c.req.raw), ...getOptions(c));
      if (res) {
        return res;
      }
      await next();
    }, "handler");
    this.#addRoute(METHOD_NAME_ALL, mergePath(path, "*"), handler);
    return this;
  }
  #addRoute(method, path, handler) {
    method = method.toUpperCase();
    path = mergePath(this._basePath, path);
    const r = { basePath: this._basePath, path, method, handler };
    this.router.add(method, path, [handler, r]);
    this.routes.push(r);
  }
  #handleError(err, c) {
    if (err instanceof Error) {
      return this.errorHandler(err, c);
    }
    throw err;
  }
  #dispatch(request, executionCtx, env2, method) {
    if (method === "HEAD") {
      return (async () => new Response(null, await this.#dispatch(request, executionCtx, env2, "GET")))();
    }
    const path = this.getPath(request, { env: env2 });
    const matchResult = this.router.match(method, path);
    const c = new Context(request, {
      path,
      matchResult,
      env: env2,
      executionCtx,
      notFoundHandler: this.#notFoundHandler
    });
    if (matchResult[0].length === 1) {
      let res;
      try {
        res = matchResult[0][0][0][0](c, async () => {
          c.res = await this.#notFoundHandler(c);
        });
      } catch (err) {
        return this.#handleError(err, c);
      }
      return res instanceof Promise ? res.then(
        (resolved) => resolved || (c.finalized ? c.res : this.#notFoundHandler(c))
      ).catch((err) => this.#handleError(err, c)) : res ?? this.#notFoundHandler(c);
    }
    const composed = compose(matchResult[0], this.errorHandler, this.#notFoundHandler);
    return (async () => {
      try {
        const context2 = await composed(c);
        if (!context2.finalized) {
          throw new Error(
            "Context is not finalized. Did you forget to return a Response object or `await next()`?"
          );
        }
        return context2.res;
      } catch (err) {
        return this.#handleError(err, c);
      }
    })();
  }
  fetch = /* @__PURE__ */ __name((request, ...rest) => {
    return this.#dispatch(request, rest[1], rest[0], request.method);
  }, "fetch");
  request = /* @__PURE__ */ __name((input, requestInit, Env, executionCtx) => {
    if (input instanceof Request) {
      return this.fetch(requestInit ? new Request(input, requestInit) : input, Env, executionCtx);
    }
    input = input.toString();
    return this.fetch(
      new Request(
        /^https?:\/\//.test(input) ? input : `http://localhost${mergePath("/", input)}`,
        requestInit
      ),
      Env,
      executionCtx
    );
  }, "request");
  fire = /* @__PURE__ */ __name(() => {
    addEventListener("fetch", (event) => {
      event.respondWith(this.#dispatch(event.request, event, void 0, event.request.method));
    });
  }, "fire");
};

// node_modules/hono/dist/router/reg-exp-router/index.js
init_modules_watch_stub();
init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
init_performance2();

// node_modules/hono/dist/router/reg-exp-router/router.js
init_modules_watch_stub();
init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
init_performance2();

// node_modules/hono/dist/router/reg-exp-router/node.js
init_modules_watch_stub();
init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
init_performance2();
var LABEL_REG_EXP_STR = "[^/]+";
var ONLY_WILDCARD_REG_EXP_STR = ".*";
var TAIL_WILDCARD_REG_EXP_STR = "(?:|/.*)";
var PATH_ERROR = Symbol();
var regExpMetaChars = new Set(".\\+*[^]$()");
function compareKey(a, b) {
  if (a.length === 1) {
    return b.length === 1 ? a < b ? -1 : 1 : -1;
  }
  if (b.length === 1) {
    return 1;
  }
  if (a === ONLY_WILDCARD_REG_EXP_STR || a === TAIL_WILDCARD_REG_EXP_STR) {
    return 1;
  } else if (b === ONLY_WILDCARD_REG_EXP_STR || b === TAIL_WILDCARD_REG_EXP_STR) {
    return -1;
  }
  if (a === LABEL_REG_EXP_STR) {
    return 1;
  } else if (b === LABEL_REG_EXP_STR) {
    return -1;
  }
  return a.length === b.length ? a < b ? -1 : 1 : b.length - a.length;
}
__name(compareKey, "compareKey");
var Node = class {
  static {
    __name(this, "Node");
  }
  #index;
  #varIndex;
  #children = /* @__PURE__ */ Object.create(null);
  insert(tokens, index, paramMap, context2, pathErrorCheckOnly) {
    if (tokens.length === 0) {
      if (this.#index !== void 0) {
        throw PATH_ERROR;
      }
      if (pathErrorCheckOnly) {
        return;
      }
      this.#index = index;
      return;
    }
    const [token, ...restTokens] = tokens;
    const pattern = token === "*" ? restTokens.length === 0 ? ["", "", ONLY_WILDCARD_REG_EXP_STR] : ["", "", LABEL_REG_EXP_STR] : token === "/*" ? ["", "", TAIL_WILDCARD_REG_EXP_STR] : token.match(/^\:([^\{\}]+)(?:\{(.+)\})?$/);
    let node;
    if (pattern) {
      const name = pattern[1];
      let regexpStr = pattern[2] || LABEL_REG_EXP_STR;
      if (name && pattern[2]) {
        if (regexpStr === ".*") {
          throw PATH_ERROR;
        }
        regexpStr = regexpStr.replace(/^\((?!\?:)(?=[^)]+\)$)/, "(?:");
        if (/\((?!\?:)/.test(regexpStr)) {
          throw PATH_ERROR;
        }
      }
      node = this.#children[regexpStr];
      if (!node) {
        if (Object.keys(this.#children).some(
          (k) => k !== ONLY_WILDCARD_REG_EXP_STR && k !== TAIL_WILDCARD_REG_EXP_STR
        )) {
          throw PATH_ERROR;
        }
        if (pathErrorCheckOnly) {
          return;
        }
        node = this.#children[regexpStr] = new Node();
        if (name !== "") {
          node.#varIndex = context2.varIndex++;
        }
      }
      if (!pathErrorCheckOnly && name !== "") {
        paramMap.push([name, node.#varIndex]);
      }
    } else {
      node = this.#children[token];
      if (!node) {
        if (Object.keys(this.#children).some(
          (k) => k.length > 1 && k !== ONLY_WILDCARD_REG_EXP_STR && k !== TAIL_WILDCARD_REG_EXP_STR
        )) {
          throw PATH_ERROR;
        }
        if (pathErrorCheckOnly) {
          return;
        }
        node = this.#children[token] = new Node();
      }
    }
    node.insert(restTokens, index, paramMap, context2, pathErrorCheckOnly);
  }
  buildRegExpStr() {
    const childKeys = Object.keys(this.#children).sort(compareKey);
    const strList = childKeys.map((k) => {
      const c = this.#children[k];
      return (typeof c.#varIndex === "number" ? `(${k})@${c.#varIndex}` : regExpMetaChars.has(k) ? `\\${k}` : k) + c.buildRegExpStr();
    });
    if (typeof this.#index === "number") {
      strList.unshift(`#${this.#index}`);
    }
    if (strList.length === 0) {
      return "";
    }
    if (strList.length === 1) {
      return strList[0];
    }
    return "(?:" + strList.join("|") + ")";
  }
};

// node_modules/hono/dist/router/reg-exp-router/trie.js
init_modules_watch_stub();
init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
init_performance2();
var Trie = class {
  static {
    __name(this, "Trie");
  }
  #context = { varIndex: 0 };
  #root = new Node();
  insert(path, index, pathErrorCheckOnly) {
    const paramAssoc = [];
    const groups = [];
    for (let i = 0; ; ) {
      let replaced = false;
      path = path.replace(/\{[^}]+\}/g, (m) => {
        const mark = `@\\${i}`;
        groups[i] = [mark, m];
        i++;
        replaced = true;
        return mark;
      });
      if (!replaced) {
        break;
      }
    }
    const tokens = path.match(/(?::[^\/]+)|(?:\/\*$)|./g) || [];
    for (let i = groups.length - 1; i >= 0; i--) {
      const [mark] = groups[i];
      for (let j = tokens.length - 1; j >= 0; j--) {
        if (tokens[j].indexOf(mark) !== -1) {
          tokens[j] = tokens[j].replace(mark, groups[i][1]);
          break;
        }
      }
    }
    this.#root.insert(tokens, index, paramAssoc, this.#context, pathErrorCheckOnly);
    return paramAssoc;
  }
  buildRegExp() {
    let regexp = this.#root.buildRegExpStr();
    if (regexp === "") {
      return [/^$/, [], []];
    }
    let captureIndex = 0;
    const indexReplacementMap = [];
    const paramReplacementMap = [];
    regexp = regexp.replace(/#(\d+)|@(\d+)|\.\*\$/g, (_, handlerIndex, paramIndex) => {
      if (handlerIndex !== void 0) {
        indexReplacementMap[++captureIndex] = Number(handlerIndex);
        return "$()";
      }
      if (paramIndex !== void 0) {
        paramReplacementMap[Number(paramIndex)] = ++captureIndex;
        return "";
      }
      return "";
    });
    return [new RegExp(`^${regexp}`), indexReplacementMap, paramReplacementMap];
  }
};

// node_modules/hono/dist/router/reg-exp-router/router.js
var emptyParam = [];
var nullMatcher = [/^$/, [], /* @__PURE__ */ Object.create(null)];
var wildcardRegExpCache = /* @__PURE__ */ Object.create(null);
function buildWildcardRegExp(path) {
  return wildcardRegExpCache[path] ??= new RegExp(
    path === "*" ? "" : `^${path.replace(
      /\/\*$|([.\\+*[^\]$()])/g,
      (_, metaChar) => metaChar ? `\\${metaChar}` : "(?:|/.*)"
    )}$`
  );
}
__name(buildWildcardRegExp, "buildWildcardRegExp");
function clearWildcardRegExpCache() {
  wildcardRegExpCache = /* @__PURE__ */ Object.create(null);
}
__name(clearWildcardRegExpCache, "clearWildcardRegExpCache");
function buildMatcherFromPreprocessedRoutes(routes) {
  const trie = new Trie();
  const handlerData = [];
  if (routes.length === 0) {
    return nullMatcher;
  }
  const routesWithStaticPathFlag = routes.map(
    (route) => [!/\*|\/:/.test(route[0]), ...route]
  ).sort(
    ([isStaticA, pathA], [isStaticB, pathB]) => isStaticA ? 1 : isStaticB ? -1 : pathA.length - pathB.length
  );
  const staticMap = /* @__PURE__ */ Object.create(null);
  for (let i = 0, j = -1, len = routesWithStaticPathFlag.length; i < len; i++) {
    const [pathErrorCheckOnly, path, handlers] = routesWithStaticPathFlag[i];
    if (pathErrorCheckOnly) {
      staticMap[path] = [handlers.map(([h]) => [h, /* @__PURE__ */ Object.create(null)]), emptyParam];
    } else {
      j++;
    }
    let paramAssoc;
    try {
      paramAssoc = trie.insert(path, j, pathErrorCheckOnly);
    } catch (e) {
      throw e === PATH_ERROR ? new UnsupportedPathError(path) : e;
    }
    if (pathErrorCheckOnly) {
      continue;
    }
    handlerData[j] = handlers.map(([h, paramCount]) => {
      const paramIndexMap = /* @__PURE__ */ Object.create(null);
      paramCount -= 1;
      for (; paramCount >= 0; paramCount--) {
        const [key, value] = paramAssoc[paramCount];
        paramIndexMap[key] = value;
      }
      return [h, paramIndexMap];
    });
  }
  const [regexp, indexReplacementMap, paramReplacementMap] = trie.buildRegExp();
  for (let i = 0, len = handlerData.length; i < len; i++) {
    for (let j = 0, len2 = handlerData[i].length; j < len2; j++) {
      const map = handlerData[i][j]?.[1];
      if (!map) {
        continue;
      }
      const keys = Object.keys(map);
      for (let k = 0, len3 = keys.length; k < len3; k++) {
        map[keys[k]] = paramReplacementMap[map[keys[k]]];
      }
    }
  }
  const handlerMap = [];
  for (const i in indexReplacementMap) {
    handlerMap[i] = handlerData[indexReplacementMap[i]];
  }
  return [regexp, handlerMap, staticMap];
}
__name(buildMatcherFromPreprocessedRoutes, "buildMatcherFromPreprocessedRoutes");
function findMiddleware(middleware, path) {
  if (!middleware) {
    return void 0;
  }
  for (const k of Object.keys(middleware).sort((a, b) => b.length - a.length)) {
    if (buildWildcardRegExp(k).test(path)) {
      return [...middleware[k]];
    }
  }
  return void 0;
}
__name(findMiddleware, "findMiddleware");
var RegExpRouter = class {
  static {
    __name(this, "RegExpRouter");
  }
  name = "RegExpRouter";
  #middleware;
  #routes;
  constructor() {
    this.#middleware = { [METHOD_NAME_ALL]: /* @__PURE__ */ Object.create(null) };
    this.#routes = { [METHOD_NAME_ALL]: /* @__PURE__ */ Object.create(null) };
  }
  add(method, path, handler) {
    const middleware = this.#middleware;
    const routes = this.#routes;
    if (!middleware || !routes) {
      throw new Error(MESSAGE_MATCHER_IS_ALREADY_BUILT);
    }
    if (!middleware[method]) {
      ;
      [middleware, routes].forEach((handlerMap) => {
        handlerMap[method] = /* @__PURE__ */ Object.create(null);
        Object.keys(handlerMap[METHOD_NAME_ALL]).forEach((p) => {
          handlerMap[method][p] = [...handlerMap[METHOD_NAME_ALL][p]];
        });
      });
    }
    if (path === "/*") {
      path = "*";
    }
    const paramCount = (path.match(/\/:/g) || []).length;
    if (/\*$/.test(path)) {
      const re = buildWildcardRegExp(path);
      if (method === METHOD_NAME_ALL) {
        Object.keys(middleware).forEach((m) => {
          middleware[m][path] ||= findMiddleware(middleware[m], path) || findMiddleware(middleware[METHOD_NAME_ALL], path) || [];
        });
      } else {
        middleware[method][path] ||= findMiddleware(middleware[method], path) || findMiddleware(middleware[METHOD_NAME_ALL], path) || [];
      }
      Object.keys(middleware).forEach((m) => {
        if (method === METHOD_NAME_ALL || method === m) {
          Object.keys(middleware[m]).forEach((p) => {
            re.test(p) && middleware[m][p].push([handler, paramCount]);
          });
        }
      });
      Object.keys(routes).forEach((m) => {
        if (method === METHOD_NAME_ALL || method === m) {
          Object.keys(routes[m]).forEach(
            (p) => re.test(p) && routes[m][p].push([handler, paramCount])
          );
        }
      });
      return;
    }
    const paths = checkOptionalParameter(path) || [path];
    for (let i = 0, len = paths.length; i < len; i++) {
      const path2 = paths[i];
      Object.keys(routes).forEach((m) => {
        if (method === METHOD_NAME_ALL || method === m) {
          routes[m][path2] ||= [
            ...findMiddleware(middleware[m], path2) || findMiddleware(middleware[METHOD_NAME_ALL], path2) || []
          ];
          routes[m][path2].push([handler, paramCount - len + i + 1]);
        }
      });
    }
  }
  match(method, path) {
    clearWildcardRegExpCache();
    const matchers = this.#buildAllMatchers();
    this.match = (method2, path2) => {
      const matcher = matchers[method2] || matchers[METHOD_NAME_ALL];
      const staticMatch = matcher[2][path2];
      if (staticMatch) {
        return staticMatch;
      }
      const match = path2.match(matcher[0]);
      if (!match) {
        return [[], emptyParam];
      }
      const index = match.indexOf("", 1);
      return [matcher[1][index], match];
    };
    return this.match(method, path);
  }
  #buildAllMatchers() {
    const matchers = /* @__PURE__ */ Object.create(null);
    Object.keys(this.#routes).concat(Object.keys(this.#middleware)).forEach((method) => {
      matchers[method] ||= this.#buildMatcher(method);
    });
    this.#middleware = this.#routes = void 0;
    return matchers;
  }
  #buildMatcher(method) {
    const routes = [];
    let hasOwnRoute = method === METHOD_NAME_ALL;
    [this.#middleware, this.#routes].forEach((r) => {
      const ownRoute = r[method] ? Object.keys(r[method]).map((path) => [path, r[method][path]]) : [];
      if (ownRoute.length !== 0) {
        hasOwnRoute ||= true;
        routes.push(...ownRoute);
      } else if (method !== METHOD_NAME_ALL) {
        routes.push(
          ...Object.keys(r[METHOD_NAME_ALL]).map((path) => [path, r[METHOD_NAME_ALL][path]])
        );
      }
    });
    if (!hasOwnRoute) {
      return null;
    } else {
      return buildMatcherFromPreprocessedRoutes(routes);
    }
  }
};

// node_modules/hono/dist/router/smart-router/index.js
init_modules_watch_stub();
init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
init_performance2();

// node_modules/hono/dist/router/smart-router/router.js
init_modules_watch_stub();
init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
init_performance2();
var SmartRouter = class {
  static {
    __name(this, "SmartRouter");
  }
  name = "SmartRouter";
  #routers = [];
  #routes = [];
  constructor(init) {
    this.#routers = init.routers;
  }
  add(method, path, handler) {
    if (!this.#routes) {
      throw new Error(MESSAGE_MATCHER_IS_ALREADY_BUILT);
    }
    this.#routes.push([method, path, handler]);
  }
  match(method, path) {
    if (!this.#routes) {
      throw new Error("Fatal error");
    }
    const routers = this.#routers;
    const routes = this.#routes;
    const len = routers.length;
    let i = 0;
    let res;
    for (; i < len; i++) {
      const router = routers[i];
      try {
        for (let i2 = 0, len2 = routes.length; i2 < len2; i2++) {
          router.add(...routes[i2]);
        }
        res = router.match(method, path);
      } catch (e) {
        if (e instanceof UnsupportedPathError) {
          continue;
        }
        throw e;
      }
      this.match = router.match.bind(router);
      this.#routers = [router];
      this.#routes = void 0;
      break;
    }
    if (i === len) {
      throw new Error("Fatal error");
    }
    this.name = `SmartRouter + ${this.activeRouter.name}`;
    return res;
  }
  get activeRouter() {
    if (this.#routes || this.#routers.length !== 1) {
      throw new Error("No active router has been determined yet.");
    }
    return this.#routers[0];
  }
};

// node_modules/hono/dist/router/trie-router/index.js
init_modules_watch_stub();
init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
init_performance2();

// node_modules/hono/dist/router/trie-router/router.js
init_modules_watch_stub();
init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
init_performance2();

// node_modules/hono/dist/router/trie-router/node.js
init_modules_watch_stub();
init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
init_performance2();
var emptyParams = /* @__PURE__ */ Object.create(null);
var Node2 = class {
  static {
    __name(this, "Node");
  }
  #methods;
  #children;
  #patterns;
  #order = 0;
  #params = emptyParams;
  constructor(method, handler, children) {
    this.#children = children || /* @__PURE__ */ Object.create(null);
    this.#methods = [];
    if (method && handler) {
      const m = /* @__PURE__ */ Object.create(null);
      m[method] = { handler, possibleKeys: [], score: 0 };
      this.#methods = [m];
    }
    this.#patterns = [];
  }
  insert(method, path, handler) {
    this.#order = ++this.#order;
    let curNode = this;
    const parts = splitRoutingPath(path);
    const possibleKeys = [];
    for (let i = 0, len = parts.length; i < len; i++) {
      const p = parts[i];
      const nextP = parts[i + 1];
      const pattern = getPattern(p, nextP);
      const key = Array.isArray(pattern) ? pattern[0] : p;
      if (key in curNode.#children) {
        curNode = curNode.#children[key];
        if (pattern) {
          possibleKeys.push(pattern[1]);
        }
        continue;
      }
      curNode.#children[key] = new Node2();
      if (pattern) {
        curNode.#patterns.push(pattern);
        possibleKeys.push(pattern[1]);
      }
      curNode = curNode.#children[key];
    }
    curNode.#methods.push({
      [method]: {
        handler,
        possibleKeys: possibleKeys.filter((v, i, a) => a.indexOf(v) === i),
        score: this.#order
      }
    });
    return curNode;
  }
  #getHandlerSets(node, method, nodeParams, params) {
    const handlerSets = [];
    for (let i = 0, len = node.#methods.length; i < len; i++) {
      const m = node.#methods[i];
      const handlerSet = m[method] || m[METHOD_NAME_ALL];
      const processedSet = {};
      if (handlerSet !== void 0) {
        handlerSet.params = /* @__PURE__ */ Object.create(null);
        handlerSets.push(handlerSet);
        if (nodeParams !== emptyParams || params && params !== emptyParams) {
          for (let i2 = 0, len2 = handlerSet.possibleKeys.length; i2 < len2; i2++) {
            const key = handlerSet.possibleKeys[i2];
            const processed = processedSet[handlerSet.score];
            handlerSet.params[key] = params?.[key] && !processed ? params[key] : nodeParams[key] ?? params?.[key];
            processedSet[handlerSet.score] = true;
          }
        }
      }
    }
    return handlerSets;
  }
  search(method, path) {
    const handlerSets = [];
    this.#params = emptyParams;
    const curNode = this;
    let curNodes = [curNode];
    const parts = splitPath(path);
    const curNodesQueue = [];
    for (let i = 0, len = parts.length; i < len; i++) {
      const part = parts[i];
      const isLast = i === len - 1;
      const tempNodes = [];
      for (let j = 0, len2 = curNodes.length; j < len2; j++) {
        const node = curNodes[j];
        const nextNode = node.#children[part];
        if (nextNode) {
          nextNode.#params = node.#params;
          if (isLast) {
            if (nextNode.#children["*"]) {
              handlerSets.push(
                ...this.#getHandlerSets(nextNode.#children["*"], method, node.#params)
              );
            }
            handlerSets.push(...this.#getHandlerSets(nextNode, method, node.#params));
          } else {
            tempNodes.push(nextNode);
          }
        }
        for (let k = 0, len3 = node.#patterns.length; k < len3; k++) {
          const pattern = node.#patterns[k];
          const params = node.#params === emptyParams ? {} : { ...node.#params };
          if (pattern === "*") {
            const astNode = node.#children["*"];
            if (astNode) {
              handlerSets.push(...this.#getHandlerSets(astNode, method, node.#params));
              astNode.#params = params;
              tempNodes.push(astNode);
            }
            continue;
          }
          const [key, name, matcher] = pattern;
          if (!part && !(matcher instanceof RegExp)) {
            continue;
          }
          const child = node.#children[key];
          const restPathString = parts.slice(i).join("/");
          if (matcher instanceof RegExp) {
            const m = matcher.exec(restPathString);
            if (m) {
              params[name] = m[0];
              handlerSets.push(...this.#getHandlerSets(child, method, node.#params, params));
              if (Object.keys(child.#children).length) {
                child.#params = params;
                const componentCount = m[0].match(/\//)?.length ?? 0;
                const targetCurNodes = curNodesQueue[componentCount] ||= [];
                targetCurNodes.push(child);
              }
              continue;
            }
          }
          if (matcher === true || matcher.test(part)) {
            params[name] = part;
            if (isLast) {
              handlerSets.push(...this.#getHandlerSets(child, method, params, node.#params));
              if (child.#children["*"]) {
                handlerSets.push(
                  ...this.#getHandlerSets(child.#children["*"], method, params, node.#params)
                );
              }
            } else {
              child.#params = params;
              tempNodes.push(child);
            }
          }
        }
      }
      curNodes = tempNodes.concat(curNodesQueue.shift() ?? []);
    }
    if (handlerSets.length > 1) {
      handlerSets.sort((a, b) => {
        return a.score - b.score;
      });
    }
    return [handlerSets.map(({ handler, params }) => [handler, params])];
  }
};

// node_modules/hono/dist/router/trie-router/router.js
var TrieRouter = class {
  static {
    __name(this, "TrieRouter");
  }
  name = "TrieRouter";
  #node;
  constructor() {
    this.#node = new Node2();
  }
  add(method, path, handler) {
    const results = checkOptionalParameter(path);
    if (results) {
      for (let i = 0, len = results.length; i < len; i++) {
        this.#node.insert(method, results[i], handler);
      }
      return;
    }
    this.#node.insert(method, path, handler);
  }
  match(method, path) {
    return this.#node.search(method, path);
  }
};

// node_modules/hono/dist/hono.js
var Hono2 = class extends Hono {
  static {
    __name(this, "Hono");
  }
  constructor(options = {}) {
    super(options);
    this.router = options.router ?? new SmartRouter({
      routers: [new RegExpRouter(), new TrieRouter()]
    });
  }
};

// src/routes/authRoutes.ts
init_modules_watch_stub();
init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
init_performance2();

// src/controllers/authController.ts
init_modules_watch_stub();
init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
init_performance2();

// node_modules/bcryptjs/index.js
init_modules_watch_stub();
init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
init_performance2();
import nodeCrypto from "crypto";
var randomFallback = null;
function randomBytes(len) {
  try {
    return crypto.getRandomValues(new Uint8Array(len));
  } catch {
  }
  try {
    return nodeCrypto.randomBytes(len);
  } catch {
  }
  if (!randomFallback) {
    throw Error(
      "Neither WebCryptoAPI nor a crypto module is available. Use bcrypt.setRandomFallback to set an alternative"
    );
  }
  return randomFallback(len);
}
__name(randomBytes, "randomBytes");
function genSaltSync(rounds, seed_length) {
  rounds = rounds || GENSALT_DEFAULT_LOG2_ROUNDS;
  if (typeof rounds !== "number")
    throw Error(
      "Illegal arguments: " + typeof rounds + ", " + typeof seed_length
    );
  if (rounds < 4) rounds = 4;
  else if (rounds > 31) rounds = 31;
  var salt = [];
  salt.push("$2b$");
  if (rounds < 10) salt.push("0");
  salt.push(rounds.toString());
  salt.push("$");
  salt.push(base64_encode(randomBytes(BCRYPT_SALT_LEN), BCRYPT_SALT_LEN));
  return salt.join("");
}
__name(genSaltSync, "genSaltSync");
function genSalt(rounds, seed_length, callback) {
  if (typeof seed_length === "function")
    callback = seed_length, seed_length = void 0;
  if (typeof rounds === "function") callback = rounds, rounds = void 0;
  if (typeof rounds === "undefined") rounds = GENSALT_DEFAULT_LOG2_ROUNDS;
  else if (typeof rounds !== "number")
    throw Error("illegal arguments: " + typeof rounds);
  function _async(callback2) {
    nextTick2(function() {
      try {
        callback2(null, genSaltSync(rounds));
      } catch (err) {
        callback2(err);
      }
    });
  }
  __name(_async, "_async");
  if (callback) {
    if (typeof callback !== "function")
      throw Error("Illegal callback: " + typeof callback);
    _async(callback);
  } else
    return new Promise(function(resolve, reject) {
      _async(function(err, res) {
        if (err) {
          reject(err);
          return;
        }
        resolve(res);
      });
    });
}
__name(genSalt, "genSalt");
function hash(password, salt, callback, progressCallback) {
  function _async(callback2) {
    if (typeof password === "string" && typeof salt === "number")
      genSalt(salt, function(err, salt2) {
        _hash(password, salt2, callback2, progressCallback);
      });
    else if (typeof password === "string" && typeof salt === "string")
      _hash(password, salt, callback2, progressCallback);
    else
      nextTick2(
        callback2.bind(
          this,
          Error("Illegal arguments: " + typeof password + ", " + typeof salt)
        )
      );
  }
  __name(_async, "_async");
  if (callback) {
    if (typeof callback !== "function")
      throw Error("Illegal callback: " + typeof callback);
    _async(callback);
  } else
    return new Promise(function(resolve, reject) {
      _async(function(err, res) {
        if (err) {
          reject(err);
          return;
        }
        resolve(res);
      });
    });
}
__name(hash, "hash");
function safeStringCompare(known, unknown) {
  var diff = known.length ^ unknown.length;
  for (var i = 0; i < known.length; ++i) {
    diff |= known.charCodeAt(i) ^ unknown.charCodeAt(i);
  }
  return diff === 0;
}
__name(safeStringCompare, "safeStringCompare");
function compare(password, hashValue, callback, progressCallback) {
  function _async(callback2) {
    if (typeof password !== "string" || typeof hashValue !== "string") {
      nextTick2(
        callback2.bind(
          this,
          Error(
            "Illegal arguments: " + typeof password + ", " + typeof hashValue
          )
        )
      );
      return;
    }
    if (hashValue.length !== 60) {
      nextTick2(callback2.bind(this, null, false));
      return;
    }
    hash(
      password,
      hashValue.substring(0, 29),
      function(err, comp) {
        if (err) callback2(err);
        else callback2(null, safeStringCompare(comp, hashValue));
      },
      progressCallback
    );
  }
  __name(_async, "_async");
  if (callback) {
    if (typeof callback !== "function")
      throw Error("Illegal callback: " + typeof callback);
    _async(callback);
  } else
    return new Promise(function(resolve, reject) {
      _async(function(err, res) {
        if (err) {
          reject(err);
          return;
        }
        resolve(res);
      });
    });
}
__name(compare, "compare");
var nextTick2 = typeof process !== "undefined" && process && typeof process.nextTick === "function" ? typeof setImmediate === "function" ? setImmediate : process.nextTick : setTimeout;
function utf8Length(string) {
  var len = 0, c = 0;
  for (var i = 0; i < string.length; ++i) {
    c = string.charCodeAt(i);
    if (c < 128) len += 1;
    else if (c < 2048) len += 2;
    else if ((c & 64512) === 55296 && (string.charCodeAt(i + 1) & 64512) === 56320) {
      ++i;
      len += 4;
    } else len += 3;
  }
  return len;
}
__name(utf8Length, "utf8Length");
function utf8Array(string) {
  var offset = 0, c1, c2;
  var buffer = new Array(utf8Length(string));
  for (var i = 0, k = string.length; i < k; ++i) {
    c1 = string.charCodeAt(i);
    if (c1 < 128) {
      buffer[offset++] = c1;
    } else if (c1 < 2048) {
      buffer[offset++] = c1 >> 6 | 192;
      buffer[offset++] = c1 & 63 | 128;
    } else if ((c1 & 64512) === 55296 && ((c2 = string.charCodeAt(i + 1)) & 64512) === 56320) {
      c1 = 65536 + ((c1 & 1023) << 10) + (c2 & 1023);
      ++i;
      buffer[offset++] = c1 >> 18 | 240;
      buffer[offset++] = c1 >> 12 & 63 | 128;
      buffer[offset++] = c1 >> 6 & 63 | 128;
      buffer[offset++] = c1 & 63 | 128;
    } else {
      buffer[offset++] = c1 >> 12 | 224;
      buffer[offset++] = c1 >> 6 & 63 | 128;
      buffer[offset++] = c1 & 63 | 128;
    }
  }
  return buffer;
}
__name(utf8Array, "utf8Array");
var BASE64_CODE = "./ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789".split("");
var BASE64_INDEX = [
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  0,
  1,
  54,
  55,
  56,
  57,
  58,
  59,
  60,
  61,
  62,
  63,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  13,
  14,
  15,
  16,
  17,
  18,
  19,
  20,
  21,
  22,
  23,
  24,
  25,
  26,
  27,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  28,
  29,
  30,
  31,
  32,
  33,
  34,
  35,
  36,
  37,
  38,
  39,
  40,
  41,
  42,
  43,
  44,
  45,
  46,
  47,
  48,
  49,
  50,
  51,
  52,
  53,
  -1,
  -1,
  -1,
  -1,
  -1
];
function base64_encode(b, len) {
  var off2 = 0, rs = [], c1, c2;
  if (len <= 0 || len > b.length) throw Error("Illegal len: " + len);
  while (off2 < len) {
    c1 = b[off2++] & 255;
    rs.push(BASE64_CODE[c1 >> 2 & 63]);
    c1 = (c1 & 3) << 4;
    if (off2 >= len) {
      rs.push(BASE64_CODE[c1 & 63]);
      break;
    }
    c2 = b[off2++] & 255;
    c1 |= c2 >> 4 & 15;
    rs.push(BASE64_CODE[c1 & 63]);
    c1 = (c2 & 15) << 2;
    if (off2 >= len) {
      rs.push(BASE64_CODE[c1 & 63]);
      break;
    }
    c2 = b[off2++] & 255;
    c1 |= c2 >> 6 & 3;
    rs.push(BASE64_CODE[c1 & 63]);
    rs.push(BASE64_CODE[c2 & 63]);
  }
  return rs.join("");
}
__name(base64_encode, "base64_encode");
function base64_decode(s, len) {
  var off2 = 0, slen = s.length, olen = 0, rs = [], c1, c2, c3, c4, o, code;
  if (len <= 0) throw Error("Illegal len: " + len);
  while (off2 < slen - 1 && olen < len) {
    code = s.charCodeAt(off2++);
    c1 = code < BASE64_INDEX.length ? BASE64_INDEX[code] : -1;
    code = s.charCodeAt(off2++);
    c2 = code < BASE64_INDEX.length ? BASE64_INDEX[code] : -1;
    if (c1 == -1 || c2 == -1) break;
    o = c1 << 2 >>> 0;
    o |= (c2 & 48) >> 4;
    rs.push(String.fromCharCode(o));
    if (++olen >= len || off2 >= slen) break;
    code = s.charCodeAt(off2++);
    c3 = code < BASE64_INDEX.length ? BASE64_INDEX[code] : -1;
    if (c3 == -1) break;
    o = (c2 & 15) << 4 >>> 0;
    o |= (c3 & 60) >> 2;
    rs.push(String.fromCharCode(o));
    if (++olen >= len || off2 >= slen) break;
    code = s.charCodeAt(off2++);
    c4 = code < BASE64_INDEX.length ? BASE64_INDEX[code] : -1;
    o = (c3 & 3) << 6 >>> 0;
    o |= c4;
    rs.push(String.fromCharCode(o));
    ++olen;
  }
  var res = [];
  for (off2 = 0; off2 < olen; off2++) res.push(rs[off2].charCodeAt(0));
  return res;
}
__name(base64_decode, "base64_decode");
var BCRYPT_SALT_LEN = 16;
var GENSALT_DEFAULT_LOG2_ROUNDS = 10;
var BLOWFISH_NUM_ROUNDS = 16;
var MAX_EXECUTION_TIME = 100;
var P_ORIG = [
  608135816,
  2242054355,
  320440878,
  57701188,
  2752067618,
  698298832,
  137296536,
  3964562569,
  1160258022,
  953160567,
  3193202383,
  887688300,
  3232508343,
  3380367581,
  1065670069,
  3041331479,
  2450970073,
  2306472731
];
var S_ORIG = [
  3509652390,
  2564797868,
  805139163,
  3491422135,
  3101798381,
  1780907670,
  3128725573,
  4046225305,
  614570311,
  3012652279,
  134345442,
  2240740374,
  1667834072,
  1901547113,
  2757295779,
  4103290238,
  227898511,
  1921955416,
  1904987480,
  2182433518,
  2069144605,
  3260701109,
  2620446009,
  720527379,
  3318853667,
  677414384,
  3393288472,
  3101374703,
  2390351024,
  1614419982,
  1822297739,
  2954791486,
  3608508353,
  3174124327,
  2024746970,
  1432378464,
  3864339955,
  2857741204,
  1464375394,
  1676153920,
  1439316330,
  715854006,
  3033291828,
  289532110,
  2706671279,
  2087905683,
  3018724369,
  1668267050,
  732546397,
  1947742710,
  3462151702,
  2609353502,
  2950085171,
  1814351708,
  2050118529,
  680887927,
  999245976,
  1800124847,
  3300911131,
  1713906067,
  1641548236,
  4213287313,
  1216130144,
  1575780402,
  4018429277,
  3917837745,
  3693486850,
  3949271944,
  596196993,
  3549867205,
  258830323,
  2213823033,
  772490370,
  2760122372,
  1774776394,
  2652871518,
  566650946,
  4142492826,
  1728879713,
  2882767088,
  1783734482,
  3629395816,
  2517608232,
  2874225571,
  1861159788,
  326777828,
  3124490320,
  2130389656,
  2716951837,
  967770486,
  1724537150,
  2185432712,
  2364442137,
  1164943284,
  2105845187,
  998989502,
  3765401048,
  2244026483,
  1075463327,
  1455516326,
  1322494562,
  910128902,
  469688178,
  1117454909,
  936433444,
  3490320968,
  3675253459,
  1240580251,
  122909385,
  2157517691,
  634681816,
  4142456567,
  3825094682,
  3061402683,
  2540495037,
  79693498,
  3249098678,
  1084186820,
  1583128258,
  426386531,
  1761308591,
  1047286709,
  322548459,
  995290223,
  1845252383,
  2603652396,
  3431023940,
  2942221577,
  3202600964,
  3727903485,
  1712269319,
  422464435,
  3234572375,
  1170764815,
  3523960633,
  3117677531,
  1434042557,
  442511882,
  3600875718,
  1076654713,
  1738483198,
  4213154764,
  2393238008,
  3677496056,
  1014306527,
  4251020053,
  793779912,
  2902807211,
  842905082,
  4246964064,
  1395751752,
  1040244610,
  2656851899,
  3396308128,
  445077038,
  3742853595,
  3577915638,
  679411651,
  2892444358,
  2354009459,
  1767581616,
  3150600392,
  3791627101,
  3102740896,
  284835224,
  4246832056,
  1258075500,
  768725851,
  2589189241,
  3069724005,
  3532540348,
  1274779536,
  3789419226,
  2764799539,
  1660621633,
  3471099624,
  4011903706,
  913787905,
  3497959166,
  737222580,
  2514213453,
  2928710040,
  3937242737,
  1804850592,
  3499020752,
  2949064160,
  2386320175,
  2390070455,
  2415321851,
  4061277028,
  2290661394,
  2416832540,
  1336762016,
  1754252060,
  3520065937,
  3014181293,
  791618072,
  3188594551,
  3933548030,
  2332172193,
  3852520463,
  3043980520,
  413987798,
  3465142937,
  3030929376,
  4245938359,
  2093235073,
  3534596313,
  375366246,
  2157278981,
  2479649556,
  555357303,
  3870105701,
  2008414854,
  3344188149,
  4221384143,
  3956125452,
  2067696032,
  3594591187,
  2921233993,
  2428461,
  544322398,
  577241275,
  1471733935,
  610547355,
  4027169054,
  1432588573,
  1507829418,
  2025931657,
  3646575487,
  545086370,
  48609733,
  2200306550,
  1653985193,
  298326376,
  1316178497,
  3007786442,
  2064951626,
  458293330,
  2589141269,
  3591329599,
  3164325604,
  727753846,
  2179363840,
  146436021,
  1461446943,
  4069977195,
  705550613,
  3059967265,
  3887724982,
  4281599278,
  3313849956,
  1404054877,
  2845806497,
  146425753,
  1854211946,
  1266315497,
  3048417604,
  3681880366,
  3289982499,
  290971e4,
  1235738493,
  2632868024,
  2414719590,
  3970600049,
  1771706367,
  1449415276,
  3266420449,
  422970021,
  1963543593,
  2690192192,
  3826793022,
  1062508698,
  1531092325,
  1804592342,
  2583117782,
  2714934279,
  4024971509,
  1294809318,
  4028980673,
  1289560198,
  2221992742,
  1669523910,
  35572830,
  157838143,
  1052438473,
  1016535060,
  1802137761,
  1753167236,
  1386275462,
  3080475397,
  2857371447,
  1040679964,
  2145300060,
  2390574316,
  1461121720,
  2956646967,
  4031777805,
  4028374788,
  33600511,
  2920084762,
  1018524850,
  629373528,
  3691585981,
  3515945977,
  2091462646,
  2486323059,
  586499841,
  988145025,
  935516892,
  3367335476,
  2599673255,
  2839830854,
  265290510,
  3972581182,
  2759138881,
  3795373465,
  1005194799,
  847297441,
  406762289,
  1314163512,
  1332590856,
  1866599683,
  4127851711,
  750260880,
  613907577,
  1450815602,
  3165620655,
  3734664991,
  3650291728,
  3012275730,
  3704569646,
  1427272223,
  778793252,
  1343938022,
  2676280711,
  2052605720,
  1946737175,
  3164576444,
  3914038668,
  3967478842,
  3682934266,
  1661551462,
  3294938066,
  4011595847,
  840292616,
  3712170807,
  616741398,
  312560963,
  711312465,
  1351876610,
  322626781,
  1910503582,
  271666773,
  2175563734,
  1594956187,
  70604529,
  3617834859,
  1007753275,
  1495573769,
  4069517037,
  2549218298,
  2663038764,
  504708206,
  2263041392,
  3941167025,
  2249088522,
  1514023603,
  1998579484,
  1312622330,
  694541497,
  2582060303,
  2151582166,
  1382467621,
  776784248,
  2618340202,
  3323268794,
  2497899128,
  2784771155,
  503983604,
  4076293799,
  907881277,
  423175695,
  432175456,
  1378068232,
  4145222326,
  3954048622,
  3938656102,
  3820766613,
  2793130115,
  2977904593,
  26017576,
  3274890735,
  3194772133,
  1700274565,
  1756076034,
  4006520079,
  3677328699,
  720338349,
  1533947780,
  354530856,
  688349552,
  3973924725,
  1637815568,
  332179504,
  3949051286,
  53804574,
  2852348879,
  3044236432,
  1282449977,
  3583942155,
  3416972820,
  4006381244,
  1617046695,
  2628476075,
  3002303598,
  1686838959,
  431878346,
  2686675385,
  1700445008,
  1080580658,
  1009431731,
  832498133,
  3223435511,
  2605976345,
  2271191193,
  2516031870,
  1648197032,
  4164389018,
  2548247927,
  300782431,
  375919233,
  238389289,
  3353747414,
  2531188641,
  2019080857,
  1475708069,
  455242339,
  2609103871,
  448939670,
  3451063019,
  1395535956,
  2413381860,
  1841049896,
  1491858159,
  885456874,
  4264095073,
  4001119347,
  1565136089,
  3898914787,
  1108368660,
  540939232,
  1173283510,
  2745871338,
  3681308437,
  4207628240,
  3343053890,
  4016749493,
  1699691293,
  1103962373,
  3625875870,
  2256883143,
  3830138730,
  1031889488,
  3479347698,
  1535977030,
  4236805024,
  3251091107,
  2132092099,
  1774941330,
  1199868427,
  1452454533,
  157007616,
  2904115357,
  342012276,
  595725824,
  1480756522,
  206960106,
  497939518,
  591360097,
  863170706,
  2375253569,
  3596610801,
  1814182875,
  2094937945,
  3421402208,
  1082520231,
  3463918190,
  2785509508,
  435703966,
  3908032597,
  1641649973,
  2842273706,
  3305899714,
  1510255612,
  2148256476,
  2655287854,
  3276092548,
  4258621189,
  236887753,
  3681803219,
  274041037,
  1734335097,
  3815195456,
  3317970021,
  1899903192,
  1026095262,
  4050517792,
  356393447,
  2410691914,
  3873677099,
  3682840055,
  3913112168,
  2491498743,
  4132185628,
  2489919796,
  1091903735,
  1979897079,
  3170134830,
  3567386728,
  3557303409,
  857797738,
  1136121015,
  1342202287,
  507115054,
  2535736646,
  337727348,
  3213592640,
  1301675037,
  2528481711,
  1895095763,
  1721773893,
  3216771564,
  62756741,
  2142006736,
  835421444,
  2531993523,
  1442658625,
  3659876326,
  2882144922,
  676362277,
  1392781812,
  170690266,
  3921047035,
  1759253602,
  3611846912,
  1745797284,
  664899054,
  1329594018,
  3901205900,
  3045908486,
  2062866102,
  2865634940,
  3543621612,
  3464012697,
  1080764994,
  553557557,
  3656615353,
  3996768171,
  991055499,
  499776247,
  1265440854,
  648242737,
  3940784050,
  980351604,
  3713745714,
  1749149687,
  3396870395,
  4211799374,
  3640570775,
  1161844396,
  3125318951,
  1431517754,
  545492359,
  4268468663,
  3499529547,
  1437099964,
  2702547544,
  3433638243,
  2581715763,
  2787789398,
  1060185593,
  1593081372,
  2418618748,
  4260947970,
  69676912,
  2159744348,
  86519011,
  2512459080,
  3838209314,
  1220612927,
  3339683548,
  133810670,
  1090789135,
  1078426020,
  1569222167,
  845107691,
  3583754449,
  4072456591,
  1091646820,
  628848692,
  1613405280,
  3757631651,
  526609435,
  236106946,
  48312990,
  2942717905,
  3402727701,
  1797494240,
  859738849,
  992217954,
  4005476642,
  2243076622,
  3870952857,
  3732016268,
  765654824,
  3490871365,
  2511836413,
  1685915746,
  3888969200,
  1414112111,
  2273134842,
  3281911079,
  4080962846,
  172450625,
  2569994100,
  980381355,
  4109958455,
  2819808352,
  2716589560,
  2568741196,
  3681446669,
  3329971472,
  1835478071,
  660984891,
  3704678404,
  4045999559,
  3422617507,
  3040415634,
  1762651403,
  1719377915,
  3470491036,
  2693910283,
  3642056355,
  3138596744,
  1364962596,
  2073328063,
  1983633131,
  926494387,
  3423689081,
  2150032023,
  4096667949,
  1749200295,
  3328846651,
  309677260,
  2016342300,
  1779581495,
  3079819751,
  111262694,
  1274766160,
  443224088,
  298511866,
  1025883608,
  3806446537,
  1145181785,
  168956806,
  3641502830,
  3584813610,
  1689216846,
  3666258015,
  3200248200,
  1692713982,
  2646376535,
  4042768518,
  1618508792,
  1610833997,
  3523052358,
  4130873264,
  2001055236,
  3610705100,
  2202168115,
  4028541809,
  2961195399,
  1006657119,
  2006996926,
  3186142756,
  1430667929,
  3210227297,
  1314452623,
  4074634658,
  4101304120,
  2273951170,
  1399257539,
  3367210612,
  3027628629,
  1190975929,
  2062231137,
  2333990788,
  2221543033,
  2438960610,
  1181637006,
  548689776,
  2362791313,
  3372408396,
  3104550113,
  3145860560,
  296247880,
  1970579870,
  3078560182,
  3769228297,
  1714227617,
  3291629107,
  3898220290,
  166772364,
  1251581989,
  493813264,
  448347421,
  195405023,
  2709975567,
  677966185,
  3703036547,
  1463355134,
  2715995803,
  1338867538,
  1343315457,
  2802222074,
  2684532164,
  233230375,
  2599980071,
  2000651841,
  3277868038,
  1638401717,
  4028070440,
  3237316320,
  6314154,
  819756386,
  300326615,
  590932579,
  1405279636,
  3267499572,
  3150704214,
  2428286686,
  3959192993,
  3461946742,
  1862657033,
  1266418056,
  963775037,
  2089974820,
  2263052895,
  1917689273,
  448879540,
  3550394620,
  3981727096,
  150775221,
  3627908307,
  1303187396,
  508620638,
  2975983352,
  2726630617,
  1817252668,
  1876281319,
  1457606340,
  908771278,
  3720792119,
  3617206836,
  2455994898,
  1729034894,
  1080033504,
  976866871,
  3556439503,
  2881648439,
  1522871579,
  1555064734,
  1336096578,
  3548522304,
  2579274686,
  3574697629,
  3205460757,
  3593280638,
  3338716283,
  3079412587,
  564236357,
  2993598910,
  1781952180,
  1464380207,
  3163844217,
  3332601554,
  1699332808,
  1393555694,
  1183702653,
  3581086237,
  1288719814,
  691649499,
  2847557200,
  2895455976,
  3193889540,
  2717570544,
  1781354906,
  1676643554,
  2592534050,
  3230253752,
  1126444790,
  2770207658,
  2633158820,
  2210423226,
  2615765581,
  2414155088,
  3127139286,
  673620729,
  2805611233,
  1269405062,
  4015350505,
  3341807571,
  4149409754,
  1057255273,
  2012875353,
  2162469141,
  2276492801,
  2601117357,
  993977747,
  3918593370,
  2654263191,
  753973209,
  36408145,
  2530585658,
  25011837,
  3520020182,
  2088578344,
  530523599,
  2918365339,
  1524020338,
  1518925132,
  3760827505,
  3759777254,
  1202760957,
  3985898139,
  3906192525,
  674977740,
  4174734889,
  2031300136,
  2019492241,
  3983892565,
  4153806404,
  3822280332,
  352677332,
  2297720250,
  60907813,
  90501309,
  3286998549,
  1016092578,
  2535922412,
  2839152426,
  457141659,
  509813237,
  4120667899,
  652014361,
  1966332200,
  2975202805,
  55981186,
  2327461051,
  676427537,
  3255491064,
  2882294119,
  3433927263,
  1307055953,
  942726286,
  933058658,
  2468411793,
  3933900994,
  4215176142,
  1361170020,
  2001714738,
  2830558078,
  3274259782,
  1222529897,
  1679025792,
  2729314320,
  3714953764,
  1770335741,
  151462246,
  3013232138,
  1682292957,
  1483529935,
  471910574,
  1539241949,
  458788160,
  3436315007,
  1807016891,
  3718408830,
  978976581,
  1043663428,
  3165965781,
  1927990952,
  4200891579,
  2372276910,
  3208408903,
  3533431907,
  1412390302,
  2931980059,
  4132332400,
  1947078029,
  3881505623,
  4168226417,
  2941484381,
  1077988104,
  1320477388,
  886195818,
  18198404,
  3786409e3,
  2509781533,
  112762804,
  3463356488,
  1866414978,
  891333506,
  18488651,
  661792760,
  1628790961,
  3885187036,
  3141171499,
  876946877,
  2693282273,
  1372485963,
  791857591,
  2686433993,
  3759982718,
  3167212022,
  3472953795,
  2716379847,
  445679433,
  3561995674,
  3504004811,
  3574258232,
  54117162,
  3331405415,
  2381918588,
  3769707343,
  4154350007,
  1140177722,
  4074052095,
  668550556,
  3214352940,
  367459370,
  261225585,
  2610173221,
  4209349473,
  3468074219,
  3265815641,
  314222801,
  3066103646,
  3808782860,
  282218597,
  3406013506,
  3773591054,
  379116347,
  1285071038,
  846784868,
  2669647154,
  3771962079,
  3550491691,
  2305946142,
  453669953,
  1268987020,
  3317592352,
  3279303384,
  3744833421,
  2610507566,
  3859509063,
  266596637,
  3847019092,
  517658769,
  3462560207,
  3443424879,
  370717030,
  4247526661,
  2224018117,
  4143653529,
  4112773975,
  2788324899,
  2477274417,
  1456262402,
  2901442914,
  1517677493,
  1846949527,
  2295493580,
  3734397586,
  2176403920,
  1280348187,
  1908823572,
  3871786941,
  846861322,
  1172426758,
  3287448474,
  3383383037,
  1655181056,
  3139813346,
  901632758,
  1897031941,
  2986607138,
  3066810236,
  3447102507,
  1393639104,
  373351379,
  950779232,
  625454576,
  3124240540,
  4148612726,
  2007998917,
  544563296,
  2244738638,
  2330496472,
  2058025392,
  1291430526,
  424198748,
  50039436,
  29584100,
  3605783033,
  2429876329,
  2791104160,
  1057563949,
  3255363231,
  3075367218,
  3463963227,
  1469046755,
  985887462
];
var C_ORIG = [
  1332899944,
  1700884034,
  1701343084,
  1684370003,
  1668446532,
  1869963892
];
function _encipher(lr, off2, P, S) {
  var n, l = lr[off2], r = lr[off2 + 1];
  l ^= P[0];
  n = S[l >>> 24];
  n += S[256 | l >> 16 & 255];
  n ^= S[512 | l >> 8 & 255];
  n += S[768 | l & 255];
  r ^= n ^ P[1];
  n = S[r >>> 24];
  n += S[256 | r >> 16 & 255];
  n ^= S[512 | r >> 8 & 255];
  n += S[768 | r & 255];
  l ^= n ^ P[2];
  n = S[l >>> 24];
  n += S[256 | l >> 16 & 255];
  n ^= S[512 | l >> 8 & 255];
  n += S[768 | l & 255];
  r ^= n ^ P[3];
  n = S[r >>> 24];
  n += S[256 | r >> 16 & 255];
  n ^= S[512 | r >> 8 & 255];
  n += S[768 | r & 255];
  l ^= n ^ P[4];
  n = S[l >>> 24];
  n += S[256 | l >> 16 & 255];
  n ^= S[512 | l >> 8 & 255];
  n += S[768 | l & 255];
  r ^= n ^ P[5];
  n = S[r >>> 24];
  n += S[256 | r >> 16 & 255];
  n ^= S[512 | r >> 8 & 255];
  n += S[768 | r & 255];
  l ^= n ^ P[6];
  n = S[l >>> 24];
  n += S[256 | l >> 16 & 255];
  n ^= S[512 | l >> 8 & 255];
  n += S[768 | l & 255];
  r ^= n ^ P[7];
  n = S[r >>> 24];
  n += S[256 | r >> 16 & 255];
  n ^= S[512 | r >> 8 & 255];
  n += S[768 | r & 255];
  l ^= n ^ P[8];
  n = S[l >>> 24];
  n += S[256 | l >> 16 & 255];
  n ^= S[512 | l >> 8 & 255];
  n += S[768 | l & 255];
  r ^= n ^ P[9];
  n = S[r >>> 24];
  n += S[256 | r >> 16 & 255];
  n ^= S[512 | r >> 8 & 255];
  n += S[768 | r & 255];
  l ^= n ^ P[10];
  n = S[l >>> 24];
  n += S[256 | l >> 16 & 255];
  n ^= S[512 | l >> 8 & 255];
  n += S[768 | l & 255];
  r ^= n ^ P[11];
  n = S[r >>> 24];
  n += S[256 | r >> 16 & 255];
  n ^= S[512 | r >> 8 & 255];
  n += S[768 | r & 255];
  l ^= n ^ P[12];
  n = S[l >>> 24];
  n += S[256 | l >> 16 & 255];
  n ^= S[512 | l >> 8 & 255];
  n += S[768 | l & 255];
  r ^= n ^ P[13];
  n = S[r >>> 24];
  n += S[256 | r >> 16 & 255];
  n ^= S[512 | r >> 8 & 255];
  n += S[768 | r & 255];
  l ^= n ^ P[14];
  n = S[l >>> 24];
  n += S[256 | l >> 16 & 255];
  n ^= S[512 | l >> 8 & 255];
  n += S[768 | l & 255];
  r ^= n ^ P[15];
  n = S[r >>> 24];
  n += S[256 | r >> 16 & 255];
  n ^= S[512 | r >> 8 & 255];
  n += S[768 | r & 255];
  l ^= n ^ P[16];
  lr[off2] = r ^ P[BLOWFISH_NUM_ROUNDS + 1];
  lr[off2 + 1] = l;
  return lr;
}
__name(_encipher, "_encipher");
function _streamtoword(data, offp) {
  for (var i = 0, word = 0; i < 4; ++i)
    word = word << 8 | data[offp] & 255, offp = (offp + 1) % data.length;
  return { key: word, offp };
}
__name(_streamtoword, "_streamtoword");
function _key(key, P, S) {
  var offset = 0, lr = [0, 0], plen = P.length, slen = S.length, sw;
  for (var i = 0; i < plen; i++)
    sw = _streamtoword(key, offset), offset = sw.offp, P[i] = P[i] ^ sw.key;
  for (i = 0; i < plen; i += 2)
    lr = _encipher(lr, 0, P, S), P[i] = lr[0], P[i + 1] = lr[1];
  for (i = 0; i < slen; i += 2)
    lr = _encipher(lr, 0, P, S), S[i] = lr[0], S[i + 1] = lr[1];
}
__name(_key, "_key");
function _ekskey(data, key, P, S) {
  var offp = 0, lr = [0, 0], plen = P.length, slen = S.length, sw;
  for (var i = 0; i < plen; i++)
    sw = _streamtoword(key, offp), offp = sw.offp, P[i] = P[i] ^ sw.key;
  offp = 0;
  for (i = 0; i < plen; i += 2)
    sw = _streamtoword(data, offp), offp = sw.offp, lr[0] ^= sw.key, sw = _streamtoword(data, offp), offp = sw.offp, lr[1] ^= sw.key, lr = _encipher(lr, 0, P, S), P[i] = lr[0], P[i + 1] = lr[1];
  for (i = 0; i < slen; i += 2)
    sw = _streamtoword(data, offp), offp = sw.offp, lr[0] ^= sw.key, sw = _streamtoword(data, offp), offp = sw.offp, lr[1] ^= sw.key, lr = _encipher(lr, 0, P, S), S[i] = lr[0], S[i + 1] = lr[1];
}
__name(_ekskey, "_ekskey");
function _crypt(b, salt, rounds, callback, progressCallback) {
  var cdata = C_ORIG.slice(), clen = cdata.length, err;
  if (rounds < 4 || rounds > 31) {
    err = Error("Illegal number of rounds (4-31): " + rounds);
    if (callback) {
      nextTick2(callback.bind(this, err));
      return;
    } else throw err;
  }
  if (salt.length !== BCRYPT_SALT_LEN) {
    err = Error(
      "Illegal salt length: " + salt.length + " != " + BCRYPT_SALT_LEN
    );
    if (callback) {
      nextTick2(callback.bind(this, err));
      return;
    } else throw err;
  }
  rounds = 1 << rounds >>> 0;
  var P, S, i = 0, j;
  if (typeof Int32Array === "function") {
    P = new Int32Array(P_ORIG);
    S = new Int32Array(S_ORIG);
  } else {
    P = P_ORIG.slice();
    S = S_ORIG.slice();
  }
  _ekskey(salt, b, P, S);
  function next() {
    if (progressCallback) progressCallback(i / rounds);
    if (i < rounds) {
      var start = Date.now();
      for (; i < rounds; ) {
        i = i + 1;
        _key(b, P, S);
        _key(salt, P, S);
        if (Date.now() - start > MAX_EXECUTION_TIME) break;
      }
    } else {
      for (i = 0; i < 64; i++)
        for (j = 0; j < clen >> 1; j++) _encipher(cdata, j << 1, P, S);
      var ret = [];
      for (i = 0; i < clen; i++)
        ret.push((cdata[i] >> 24 & 255) >>> 0), ret.push((cdata[i] >> 16 & 255) >>> 0), ret.push((cdata[i] >> 8 & 255) >>> 0), ret.push((cdata[i] & 255) >>> 0);
      if (callback) {
        callback(null, ret);
        return;
      } else return ret;
    }
    if (callback) nextTick2(next);
  }
  __name(next, "next");
  if (typeof callback !== "undefined") {
    next();
  } else {
    var res;
    while (true) if (typeof (res = next()) !== "undefined") return res || [];
  }
}
__name(_crypt, "_crypt");
function _hash(password, salt, callback, progressCallback) {
  var err;
  if (typeof password !== "string" || typeof salt !== "string") {
    err = Error("Invalid string / salt: Not a string");
    if (callback) {
      nextTick2(callback.bind(this, err));
      return;
    } else throw err;
  }
  var minor, offset;
  if (salt.charAt(0) !== "$" || salt.charAt(1) !== "2") {
    err = Error("Invalid salt version: " + salt.substring(0, 2));
    if (callback) {
      nextTick2(callback.bind(this, err));
      return;
    } else throw err;
  }
  if (salt.charAt(2) === "$") minor = String.fromCharCode(0), offset = 3;
  else {
    minor = salt.charAt(2);
    if (minor !== "a" && minor !== "b" && minor !== "y" || salt.charAt(3) !== "$") {
      err = Error("Invalid salt revision: " + salt.substring(2, 4));
      if (callback) {
        nextTick2(callback.bind(this, err));
        return;
      } else throw err;
    }
    offset = 4;
  }
  if (salt.charAt(offset + 2) > "$") {
    err = Error("Missing salt rounds");
    if (callback) {
      nextTick2(callback.bind(this, err));
      return;
    } else throw err;
  }
  var r1 = parseInt(salt.substring(offset, offset + 1), 10) * 10, r2 = parseInt(salt.substring(offset + 1, offset + 2), 10), rounds = r1 + r2, real_salt = salt.substring(offset + 3, offset + 25);
  password += minor >= "a" ? "\0" : "";
  var passwordb = utf8Array(password), saltb = base64_decode(real_salt, BCRYPT_SALT_LEN);
  function finish(bytes) {
    var res = [];
    res.push("$2");
    if (minor >= "a") res.push(minor);
    res.push("$");
    if (rounds < 10) res.push("0");
    res.push(rounds.toString());
    res.push("$");
    res.push(base64_encode(saltb, saltb.length));
    res.push(base64_encode(bytes, C_ORIG.length * 4 - 1));
    return res.join("");
  }
  __name(finish, "finish");
  if (typeof callback == "undefined")
    return finish(_crypt(passwordb, saltb, rounds));
  else {
    _crypt(
      passwordb,
      saltb,
      rounds,
      function(err2, bytes) {
        if (err2) callback(err2, null);
        else callback(null, finish(bytes));
      },
      progressCallback
    );
  }
}
__name(_hash, "_hash");

// src/models/user.ts
init_modules_watch_stub();
init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
init_performance2();
var import_mongoose = __toESM(require_browser_umd());
var Schema = import_mongoose.default.Schema;
var userSchema = new Schema(
  {
    name: {
      type: String,
      required: true
    },
    country: {
      type: String
    },
    email: {
      type: String,
      required: true,
      unique: true
    },
    password: {
      type: String,
      required: true
    }
  },
  { timestamps: true }
);
var User = import_mongoose.default.model("User", userSchema);
var user_default = User;

// src/controllers/authController.ts
var jwt = __toESM(require_jsonwebtoken());

// src/utils/response.ts
init_modules_watch_stub();
init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
init_performance2();
function sendResponse(c, status, success, message, data, error3, pagination) {
  const response = {
    success,
    message
  };
  if (data !== void 0) response.data = data;
  if (error3 !== void 0) response.error = error3;
  if (pagination !== void 0) response.pagination = pagination;
  return c.json(response, status);
}
__name(sendResponse, "sendResponse");

// src/controllers/authController.ts
var register = /* @__PURE__ */ __name(async (c) => {
  try {
    const { name, email, password, country } = await c.req.json();
    if (!name || !email || !password) {
      return sendResponse(c, 400, false, "\u064A\u062C\u0628 \u0625\u062F\u062E\u0627\u0644 \u062C\u0645\u064A\u0639 \u0627\u0644\u062D\u0642\u0648\u0644 \u0627\u0644\u0645\u0637\u0644\u0648\u0628\u0629");
    }
    const existingUser = await user_default.findOne({ email });
    if (existingUser) {
      return sendResponse(c, 400, false, "\u0647\u0630\u0627 \u0627\u0644\u0628\u0631\u064A\u062F \u0627\u0644\u0625\u0644\u0643\u062A\u0631\u0648\u0646\u064A \u0645\u0633\u062C\u0651\u064E\u0644 \u0628\u0627\u0644\u0641\u0639\u0644");
    }
    const hashedPassword = await hash(password, 10);
    const newUser = new user_default({
      name,
      country,
      email,
      password: hashedPassword
    });
    const savedUser = await newUser.save();
    if (!process.env.ACCESS_TOKEN_SECRET) {
      return sendResponse(c, 500, false, "\u062E\u0637\u0623 \u0641\u064A \u0625\u0639\u062F\u0627\u062F\u0627\u062A \u0627\u0644\u062E\u0627\u062F\u0645");
    }
    const token = jwt.sign(
      { id: savedUser._id },
      process.env.ACCESS_TOKEN_SECRET,
      { expiresIn: "7d" }
    );
    return sendResponse(c, 201, true, "\u062A\u0645 \u0625\u0646\u0634\u0627\u0621 \u0627\u0644\u062D\u0633\u0627\u0628 \u0628\u0646\u062C\u0627\u062D", {
      token,
      user: {
        _id: savedUser._id.toString(),
        name: savedUser.name,
        country: savedUser.country,
        email: savedUser.email
      }
    });
  } catch (error3) {
    console.error(error3);
    return sendResponse(c, 500, false, "\u062D\u062F\u062B \u062E\u0637\u0623 \u0641\u064A \u0627\u0644\u062E\u0627\u062F\u0645", void 0, error3);
  }
}, "register");
var login = /* @__PURE__ */ __name(async (c) => {
  try {
    const { email, password } = await c.req.json();
    if (!email || !password) {
      return sendResponse(
        c,
        400,
        false,
        "\u0627\u0644\u0631\u062C\u0627\u0621 \u0625\u062F\u062E\u0627\u0644 \u0627\u0644\u0628\u0631\u064A\u062F \u0627\u0644\u0625\u0644\u0643\u062A\u0631\u0648\u0646\u064A \u0648\u0643\u0644\u0645\u0629 \u0627\u0644\u0645\u0631\u0648\u0631"
      );
    }
    const user2 = await user_default.findOne({ email });
    if (!user2) {
      return sendResponse(
        c,
        400,
        false,
        "\u0644\u0627 \u064A\u0648\u062C\u062F \u062D\u0633\u0627\u0628 \u0645\u0633\u062C\u0651\u064E\u0644 \u0628\u0647\u0630\u0627 \u0627\u0644\u0628\u0631\u064A\u062F \u0627\u0644\u0625\u0644\u0643\u062A\u0631\u0648\u0646\u064A"
      );
    }
    const isMatched = await compare(password, user2.password);
    if (!isMatched) {
      return sendResponse(c, 400, false, "\u0643\u0644\u0645\u0629 \u0627\u0644\u0645\u0631\u0648\u0631 \u063A\u064A\u0631 \u0635\u062D\u064A\u062D\u0629");
    }
    if (!process.env.ACCESS_TOKEN_SECRET) {
      return sendResponse(c, 500, false, "\u062E\u0637\u0623 \u0641\u064A \u0625\u0639\u062F\u0627\u062F\u0627\u062A \u0627\u0644\u062E\u0627\u062F\u0645");
    }
    const token = jwt.sign({ id: user2._id }, process.env.ACCESS_TOKEN_SECRET, {
      expiresIn: "7d"
    });
    return sendResponse(c, 200, true, "\u062A\u0645 \u062A\u0633\u062C\u064A\u0644 \u0627\u0644\u062F\u062E\u0648\u0644 \u0628\u0646\u062C\u0627\u062D", {
      token,
      user: {
        _id: user2._id.toString(),
        name: user2.name,
        country: user2.country,
        email: user2.email
      }
    });
  } catch (error3) {
    console.error(error3);
    return sendResponse(c, 500, false, "\u062D\u062F\u062B \u062E\u0637\u0623 \u0641\u064A \u0627\u0644\u062E\u0627\u062F\u0645", void 0, error3);
  }
}, "login");

// src/routes/authRoutes.ts
var auth = new Hono2();
auth.post("/login", login);
auth.post("/register", register);

// src/index.ts
var import_mongoose3 = __toESM(require_browser_umd());

// node_modules/hono/dist/middleware/logger/index.js
init_modules_watch_stub();
init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
init_performance2();

// node_modules/hono/dist/utils/color.js
init_modules_watch_stub();
init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
init_performance2();
function getColorEnabled() {
  const { process: process2, Deno: Deno2 } = globalThis;
  const isNoColor = typeof Deno2?.noColor === "boolean" ? Deno2.noColor : process2 !== void 0 ? "NO_COLOR" in process2?.env : false;
  return !isNoColor;
}
__name(getColorEnabled, "getColorEnabled");
async function getColorEnabledAsync() {
  const { navigator: navigator2 } = globalThis;
  const cfWorkers = "cloudflare:workers";
  const isNoColor = navigator2 !== void 0 && navigator2.userAgent === "Cloudflare-Workers" ? await (async () => {
    try {
      return "NO_COLOR" in ((await import(cfWorkers)).env ?? {});
    } catch {
      return false;
    }
  })() : !getColorEnabled();
  return !isNoColor;
}
__name(getColorEnabledAsync, "getColorEnabledAsync");

// node_modules/hono/dist/middleware/logger/index.js
var humanize = /* @__PURE__ */ __name((times) => {
  const [delimiter, separator] = [",", "."];
  const orderTimes = times.map((v) => v.replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1" + delimiter));
  return orderTimes.join(separator);
}, "humanize");
var time3 = /* @__PURE__ */ __name((start) => {
  const delta = Date.now() - start;
  return humanize([delta < 1e3 ? delta + "ms" : Math.round(delta / 1e3) + "s"]);
}, "time");
var colorStatus = /* @__PURE__ */ __name(async (status) => {
  const colorEnabled = await getColorEnabledAsync();
  if (colorEnabled) {
    switch (status / 100 | 0) {
      case 5:
        return `\x1B[31m${status}\x1B[0m`;
      case 4:
        return `\x1B[33m${status}\x1B[0m`;
      case 3:
        return `\x1B[36m${status}\x1B[0m`;
      case 2:
        return `\x1B[32m${status}\x1B[0m`;
    }
  }
  return `${status}`;
}, "colorStatus");
async function log3(fn, prefix, method, path, status = 0, elapsed) {
  const out = prefix === "<--" ? `${prefix} ${method} ${path}` : `${prefix} ${method} ${path} ${await colorStatus(status)} ${elapsed}`;
  fn(out);
}
__name(log3, "log");
var logger = /* @__PURE__ */ __name((fn = console.log) => {
  return /* @__PURE__ */ __name(async function logger2(c, next) {
    const { method, url } = c.req;
    const path = url.slice(url.indexOf("/", 8));
    await log3(fn, "<--", method, path);
    const start = Date.now();
    await next();
    await log3(fn, "-->", method, path, c.res.status, time3(start));
  }, "logger2");
}, "logger");

// node_modules/hono/dist/middleware/cors/index.js
init_modules_watch_stub();
init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
init_performance2();
var cors = /* @__PURE__ */ __name((options) => {
  const defaults = {
    origin: "*",
    allowMethods: ["GET", "HEAD", "PUT", "POST", "DELETE", "PATCH"],
    allowHeaders: [],
    exposeHeaders: []
  };
  const opts = {
    ...defaults,
    ...options
  };
  const findAllowOrigin = ((optsOrigin) => {
    if (typeof optsOrigin === "string") {
      if (optsOrigin === "*") {
        return () => optsOrigin;
      } else {
        return (origin) => optsOrigin === origin ? origin : null;
      }
    } else if (typeof optsOrigin === "function") {
      return optsOrigin;
    } else {
      return (origin) => optsOrigin.includes(origin) ? origin : null;
    }
  })(opts.origin);
  const findAllowMethods = ((optsAllowMethods) => {
    if (typeof optsAllowMethods === "function") {
      return optsAllowMethods;
    } else if (Array.isArray(optsAllowMethods)) {
      return () => optsAllowMethods;
    } else {
      return () => [];
    }
  })(opts.allowMethods);
  return /* @__PURE__ */ __name(async function cors2(c, next) {
    function set(key, value) {
      c.res.headers.set(key, value);
    }
    __name(set, "set");
    const allowOrigin = await findAllowOrigin(c.req.header("origin") || "", c);
    if (allowOrigin) {
      set("Access-Control-Allow-Origin", allowOrigin);
    }
    if (opts.origin !== "*") {
      const existingVary = c.req.header("Vary");
      if (existingVary) {
        set("Vary", existingVary);
      } else {
        set("Vary", "Origin");
      }
    }
    if (opts.credentials) {
      set("Access-Control-Allow-Credentials", "true");
    }
    if (opts.exposeHeaders?.length) {
      set("Access-Control-Expose-Headers", opts.exposeHeaders.join(","));
    }
    if (c.req.method === "OPTIONS") {
      if (opts.maxAge != null) {
        set("Access-Control-Max-Age", opts.maxAge.toString());
      }
      const allowMethods = await findAllowMethods(c.req.header("origin") || "", c);
      if (allowMethods.length) {
        set("Access-Control-Allow-Methods", allowMethods.join(","));
      }
      let headers = opts.allowHeaders;
      if (!headers?.length) {
        const requestHeaders = c.req.header("Access-Control-Request-Headers");
        if (requestHeaders) {
          headers = requestHeaders.split(/\s*,\s*/);
        }
      }
      if (headers?.length) {
        set("Access-Control-Allow-Headers", headers.join(","));
        c.res.headers.append("Vary", "Access-Control-Request-Headers");
      }
      c.res.headers.delete("Content-Length");
      c.res.headers.delete("Content-Type");
      return new Response(null, {
        headers: c.res.headers,
        status: 204,
        statusText: "No Content"
      });
    }
    await next();
  }, "cors2");
}, "cors");

// node_modules/dotenv/config.js
init_modules_watch_stub();
init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
init_performance2();
(function() {
  require_main().config(
    Object.assign(
      {},
      require_env_options(),
      require_cli_options()(process.argv)
    )
  );
})();

// src/routes/scholarshipRoutes.ts
init_modules_watch_stub();
init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
init_performance2();

// src/controllers/scholarshipController.ts
init_modules_watch_stub();
init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
init_performance2();

// src/models/scholarship.ts
init_modules_watch_stub();
init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
init_performance2();
var import_mongoose2 = __toESM(require_browser_umd());
var Schema2 = import_mongoose2.default.Schema;
var scholarshipScheama = new Schema2(
  {
    userId: {
      type: import_mongoose2.default.Schema.Types.ObjectId,
      ref: "User",
      required: true
    },
    title: {
      type: String,
      required: true,
      unique: true
    },
    description: {
      type: String,
      required: true
    },
    country: {
      type: String
    },
    degreeLevel: {
      type: String,
      required: true
    },
    fundingType: {
      type: String,
      required: true
    },
    deadline: {
      type: Date,
      required: true
    },
    resultsDate: {
      type: Date
    },
    status: {
      type: String,
      required: true
    },
    link: {
      type: String,
      required: true
    }
  },
  { timestamps: true }
);
var Scholarship = import_mongoose2.default.model("Scholarship", scholarshipScheama);
var scholarship_default = Scholarship;

// src/controllers/scholarshipController.ts
var getScholarships = /* @__PURE__ */ __name(async (c) => {
  try {
    const user2 = c.get("user");
    const page = Number(c.req.query("page") || 1);
    const limit = Number(c.req.query("limit") || 10);
    const skip = (page - 1) * limit;
    const total = await scholarship_default.countDocuments({ userId: user2.id });
    const totalPages = Math.ceil(total / limit);
    const scholarships2 = await scholarship_default.find({ userId: user2.id }).skip(skip).limit(limit).sort({ createdAt: -1 });
    return sendResponse(
      c,
      200,
      true,
      "\u062A\u0645 \u062C\u0644\u0628 \u0627\u0644\u0645\u0646\u062D \u0627\u0644\u062F\u0631\u0627\u0633\u064A\u0629 \u0628\u0646\u062C\u0627\u062D",
      scholarships2,
      void 0,
      { page, limit, total, totalPages }
    );
  } catch (err) {
    console.error("Error in getScholarships:", err);
    return sendResponse(c, 500, false, "\u062D\u0635\u0644 \u062E\u0637\u0623 \u0641\u064A \u0627\u0644\u0633\u064A\u0631\u0641\u0631", void 0, err);
  }
}, "getScholarships");
var getNearest = /* @__PURE__ */ __name(async (c) => {
  try {
    const user2 = c.get("user");
    const { limit = "5" } = c.req.query();
    const scholarships2 = await scholarship_default.find({
      userId: user2.id,
      deadline: { $gt: /* @__PURE__ */ new Date() },
      status: "\u0644\u0645 \u064A\u062A\u0645 \u0627\u0644\u062A\u0642\u062F\u064A\u0645"
    }).sort({ deadline: 1 }).limit(parseInt(limit));
    return sendResponse(
      c,
      200,
      true,
      "\u062A\u0645 \u062C\u0644\u0628 \u0627\u0642\u0631\u0628 \u0627\u0644\u0645\u0646\u062D \u0627\u0644\u062F\u0631\u0627\u0633\u064A\u0629 \u0628\u0646\u062C\u0627\u062D",
      scholarships2
    );
  } catch (err) {
    console.error("Error in getNearest:", err);
    return sendResponse(c, 500, false, "\u062D\u0635\u0644 \u062E\u0637\u0623 \u0641\u064A \u0627\u0644\u0633\u064A\u0631\u0641\u0631", void 0, err);
  }
}, "getNearest");
var getLatest = /* @__PURE__ */ __name(async (c) => {
  try {
    const user2 = c.get("user");
    const { limit = "5" } = c.req.query();
    const scholarships2 = await scholarship_default.find({ userId: user2.id }).sort({ createdAt: -1 }).limit(parseInt(limit));
    return sendResponse(
      c,
      200,
      true,
      "\u062A\u0645 \u062C\u0644\u0628 \u0622\u062E\u0631 \u0627\u0644\u0645\u0646\u062D \u0627\u0644\u062F\u0631\u0627\u0633\u064A\u0629 \u0628\u0646\u062C\u0627\u062D",
      scholarships2
    );
  } catch (err) {
    console.error("Error in getLatest:", err);
    return sendResponse(c, 500, false, "\u062D\u0635\u0644 \u062E\u0637\u0623 \u0641\u064A \u0627\u0644\u0633\u064A\u0631\u0641\u0631", void 0, err);
  }
}, "getLatest");
var addScholarship = /* @__PURE__ */ __name(async (c) => {
  try {
    const user2 = c.get("user");
    const body = await c.req.json();
    const {
      title: title2,
      description,
      country,
      degreeLevel,
      fundingType,
      deadline,
      resultsDate,
      status,
      link
    } = body;
    if (!title2 || !description || !degreeLevel || !fundingType || !deadline || !status || !link) {
      return sendResponse(c, 400, false, "\u064A\u062C\u0628 \u0625\u062F\u062E\u0627\u0644 \u062C\u0645\u064A\u0639 \u0627\u0644\u062D\u0642\u0648\u0644 \u0627\u0644\u0645\u0637\u0644\u0648\u0628\u0629");
    }
    const parsedDeadline = new Date(deadline);
    if (isNaN(parsedDeadline.getTime())) {
      return sendResponse(c, 400, false, "\u062A\u0627\u0631\u064A\u062E \u0627\u0644\u0627\u0646\u062A\u0647\u0627\u0621 \u063A\u064A\u0631 \u0635\u0627\u0644\u062D");
    }
    let parsedResultsDate;
    if (resultsDate) {
      parsedResultsDate = new Date(resultsDate);
      if (isNaN(parsedResultsDate.getTime())) {
        return sendResponse(c, 400, false, "\u062A\u0627\u0631\u064A\u062E \u0627\u0644\u0646\u062A\u0627\u0626\u062C \u063A\u064A\u0631 \u0635\u0627\u0644\u062D");
      }
    }
    const existingScholarship = await scholarship_default.findOne({
      title: title2,
      userId: user2.id
    });
    if (existingScholarship) {
      return sendResponse(c, 400, false, "\u0647\u0630\u0647 \u0627\u0644\u0645\u0646\u062D\u0629 \u0645\u0633\u062C\u0644\u0629 \u0628\u0627\u0644\u0641\u0639\u0644");
    }
    const newScholarship = new scholarship_default({
      title: title2,
      description,
      country,
      degreeLevel,
      fundingType,
      deadline: parsedDeadline,
      resultsDate: parsedResultsDate,
      status,
      link,
      userId: user2.id
    });
    const savedScholarship = await newScholarship.save();
    return sendResponse(
      c,
      201,
      true,
      "\u062A\u0645 \u0625\u0636\u0627\u0641\u0629 \u0627\u0644\u0645\u0646\u062D\u0629 \u0628\u0646\u062C\u0627\u062D",
      savedScholarship
    );
  } catch (err) {
    console.error("Error in addScholarship:", err);
    return sendResponse(c, 500, false, "\u062D\u0635\u0644 \u062E\u0637\u0623 \u0641\u064A \u0627\u0644\u0633\u064A\u0631\u0641\u0631", void 0, err);
  }
}, "addScholarship");
var updateScholarship = /* @__PURE__ */ __name(async (c) => {
  try {
    const user2 = c.get("user");
    const { id } = c.req.param();
    const body = await c.req.json();
    const existingScholarship = await scholarship_default.findOne({
      _id: id,
      userId: user2.id
    });
    if (!existingScholarship) {
      return sendResponse(
        c,
        404,
        false,
        "\u0627\u0644\u0645\u0646\u062D\u0629 \u063A\u064A\u0631 \u0645\u0648\u062C\u0648\u062F\u0629 \u0623\u0648 \u0644\u0627 \u062A\u0645\u0644\u0643 \u0635\u0644\u0627\u062D\u064A\u0629 \u0627\u0644\u062A\u0639\u062F\u064A\u0644"
      );
    }
    let updateData = { ...body };
    if (body.deadline) {
      const parsedDeadline = new Date(body.deadline);
      if (isNaN(parsedDeadline.getTime())) {
        return sendResponse(c, 400, false, "\u062A\u0627\u0631\u064A\u062E \u0627\u0644\u0627\u0646\u062A\u0647\u0627\u0621 \u063A\u064A\u0631 \u0635\u0627\u0644\u062D");
      }
      updateData.deadline = parsedDeadline;
    }
    if (body.resultsDate) {
      const parsedResultsDate = new Date(body.resultsDate);
      if (isNaN(parsedResultsDate.getTime())) {
        return sendResponse(c, 400, false, "\u062A\u0627\u0631\u064A\u062E \u0627\u0644\u0646\u062A\u0627\u0626\u062C \u063A\u064A\u0631 \u0635\u0627\u0644\u062D");
      }
      updateData.resultsDate = parsedResultsDate;
    } else if (body.resultsDate === null) {
      updateData.resultsDate = void 0;
    }
    const updatedScholarship = await scholarship_default.findByIdAndUpdate(
      id,
      updateData,
      { new: true, runValidators: true }
    );
    return sendResponse(
      c,
      200,
      true,
      "\u062A\u0645 \u062A\u062D\u062F\u064A\u062B \u0645\u0639\u0644\u0648\u0645\u0627\u062A \u0627\u0644\u0645\u0646\u062D\u0629 \u0628\u0646\u062C\u0627\u062D",
      updatedScholarship
    );
  } catch (err) {
    console.error("Error in updateScholarship:", err);
    return sendResponse(c, 500, false, "\u062D\u0635\u0644 \u062E\u0637\u0623 \u0641\u064A \u0627\u0644\u0633\u064A\u0631\u0641\u0631", void 0, err);
  }
}, "updateScholarship");
var deleteScholarship = /* @__PURE__ */ __name(async (c) => {
  try {
    const user2 = c.get("user");
    const { id } = c.req.param();
    if (!id) {
      return sendResponse(c, 400, false, "\u0645\u0637\u0644\u0648\u0628 \u0631\u0642\u0645 \u062A\u0639\u0631\u064A\u0641 \u0627\u0644\u0645\u0646\u062D\u0629 (id)");
    }
    const scholarship = await scholarship_default.findOne({
      _id: id,
      userId: user2.id
    });
    if (!scholarship) {
      return sendResponse(
        c,
        404,
        false,
        "\u0644\u0645 \u064A\u062A\u0645 \u0627\u0644\u0639\u062B\u0648\u0631 \u0639\u0644\u0649 \u0627\u0644\u0645\u0646\u062D\u0629 \u0623\u0648 \u0644\u0627 \u062A\u0645\u0644\u0643 \u0635\u0644\u0627\u062D\u064A\u0629 \u0627\u0644\u062D\u0630\u0641"
      );
    }
    const deletedScholarship = await scholarship_default.findByIdAndDelete(id);
    return sendResponse(
      c,
      200,
      true,
      "\u062A\u0645 \u062D\u0630\u0641 \u0627\u0644\u0645\u0646\u062D\u0629 \u0628\u0646\u062C\u0627\u062D",
      deletedScholarship
    );
  } catch (err) {
    console.error("Error in deleteScholarship:", err);
    return sendResponse(c, 500, false, "\u062D\u0635\u0644 \u062E\u0637\u0623 \u0641\u064A \u0627\u0644\u0633\u064A\u0631\u0641\u0631", void 0, err);
  }
}, "deleteScholarship");
var getStatistics = /* @__PURE__ */ __name(async (c) => {
  try {
    const user2 = c.get("user");
    const allScholarships = await scholarship_default.find({ userId: user2.id });
    if (allScholarships.length === 0) {
      return sendResponse(c, 200, true, "\u0644\u0627 \u062A\u0648\u062C\u062F \u0645\u0646\u062D \u0644\u0639\u0631\u0636 \u0627\u0644\u0625\u062D\u0635\u0627\u0626\u064A\u0627\u062A", {
        total: [{ count: 0 }],
        byStatus: [],
        byDegree: [],
        byCountry: [],
        upcoming: [{ count: 0 }]
      });
    }
    const statusStats = {};
    const degreeStats = {};
    const countryStats = {};
    let upcomingCount = 0;
    allScholarships.forEach((scholarship) => {
      const status = scholarship.status;
      statusStats[status] = (statusStats[status] || 0) + 1;
      const degree = scholarship.degreeLevel;
      degreeStats[degree] = (degreeStats[degree] || 0) + 1;
      const country = scholarship.country || "\u063A\u064A\u0631 \u0645\u062D\u062F\u062F";
      countryStats[country] = (countryStats[country] || 0) + 1;
      const now = /* @__PURE__ */ new Date();
      const deadline = new Date(scholarship.deadline);
      if (deadline > now && scholarship.status === "\u0644\u0645 \u064A\u062A\u0645 \u0627\u0644\u062A\u0642\u062F\u064A\u0645") {
        upcomingCount++;
      }
    });
    const statistics = {
      total: [{ count: allScholarships.length }],
      byStatus: Object.entries(statusStats).map(([_id, count3]) => ({
        _id,
        count: count3
      })),
      byDegree: Object.entries(degreeStats).map(([_id, count3]) => ({
        _id,
        count: count3
      })),
      byCountry: Object.entries(countryStats).map(([_id, count3]) => ({
        _id,
        count: count3
      })),
      upcoming: [{ count: upcomingCount }]
    };
    return sendResponse(c, 200, true, "\u062A\u0645 \u062C\u0644\u0628 \u0627\u0644\u0625\u062D\u0635\u0627\u0626\u064A\u0627\u062A \u0628\u0646\u062C\u0627\u062D", statistics);
  } catch (err) {
    console.error("Error in getStatistics:", err);
    return sendResponse(c, 500, false, "\u062D\u0635\u0644 \u062E\u0637\u0623 \u0641\u064A \u0627\u0644\u0633\u064A\u0631\u0641\u0631", void 0, err);
  }
}, "getStatistics");
var search = /* @__PURE__ */ __name(async (c) => {
  const user2 = c.get("user");
  const query = c.req.query("q");
  const results = await scholarship_default.find({
    title: { $regex: query, $options: "i" },
    userId: user2.id
  });
  return sendResponse(c, 200, true, "", results);
}, "search");

// src/middlewares/authMiddleware.ts
init_modules_watch_stub();
init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
init_performance2();

// node_modules/hono/dist/middleware/jwt/index.js
init_modules_watch_stub();
init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
init_performance2();

// node_modules/hono/dist/middleware/jwt/jwt.js
init_modules_watch_stub();
init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
init_performance2();

// node_modules/hono/dist/helper/cookie/index.js
init_modules_watch_stub();
init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
init_performance2();

// node_modules/hono/dist/utils/cookie.js
init_modules_watch_stub();
init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
init_performance2();

// node_modules/hono/dist/http-exception.js
init_modules_watch_stub();
init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
init_performance2();

// node_modules/hono/dist/utils/jwt/index.js
init_modules_watch_stub();
init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
init_performance2();

// node_modules/hono/dist/utils/jwt/jwt.js
init_modules_watch_stub();
init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
init_performance2();

// node_modules/hono/dist/utils/encode.js
init_modules_watch_stub();
init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
init_performance2();
var decodeBase64Url = /* @__PURE__ */ __name((str) => {
  return decodeBase64(str.replace(/_|-/g, (m) => ({ _: "/", "-": "+" })[m] ?? m));
}, "decodeBase64Url");
var encodeBase64Url = /* @__PURE__ */ __name((buf) => encodeBase64(buf).replace(/\/|\+/g, (m) => ({ "/": "_", "+": "-" })[m] ?? m), "encodeBase64Url");
var encodeBase64 = /* @__PURE__ */ __name((buf) => {
  let binary = "";
  const bytes = new Uint8Array(buf);
  for (let i = 0, len = bytes.length; i < len; i++) {
    binary += String.fromCharCode(bytes[i]);
  }
  return btoa(binary);
}, "encodeBase64");
var decodeBase64 = /* @__PURE__ */ __name((str) => {
  const binary = atob(str);
  const bytes = new Uint8Array(new ArrayBuffer(binary.length));
  const half = binary.length / 2;
  for (let i = 0, j = binary.length - 1; i <= half; i++, j--) {
    bytes[i] = binary.charCodeAt(i);
    bytes[j] = binary.charCodeAt(j);
  }
  return bytes;
}, "decodeBase64");

// node_modules/hono/dist/utils/jwt/jwa.js
init_modules_watch_stub();
init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
init_performance2();
var AlgorithmTypes = /* @__PURE__ */ ((AlgorithmTypes2) => {
  AlgorithmTypes2["HS256"] = "HS256";
  AlgorithmTypes2["HS384"] = "HS384";
  AlgorithmTypes2["HS512"] = "HS512";
  AlgorithmTypes2["RS256"] = "RS256";
  AlgorithmTypes2["RS384"] = "RS384";
  AlgorithmTypes2["RS512"] = "RS512";
  AlgorithmTypes2["PS256"] = "PS256";
  AlgorithmTypes2["PS384"] = "PS384";
  AlgorithmTypes2["PS512"] = "PS512";
  AlgorithmTypes2["ES256"] = "ES256";
  AlgorithmTypes2["ES384"] = "ES384";
  AlgorithmTypes2["ES512"] = "ES512";
  AlgorithmTypes2["EdDSA"] = "EdDSA";
  return AlgorithmTypes2;
})(AlgorithmTypes || {});

// node_modules/hono/dist/utils/jwt/jws.js
init_modules_watch_stub();
init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
init_performance2();

// node_modules/hono/dist/helper/adapter/index.js
init_modules_watch_stub();
init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
init_performance2();
var knownUserAgents = {
  deno: "Deno",
  bun: "Bun",
  workerd: "Cloudflare-Workers",
  node: "Node.js"
};
var getRuntimeKey = /* @__PURE__ */ __name(() => {
  const global = globalThis;
  const userAgentSupported = typeof navigator !== "undefined" && true;
  if (userAgentSupported) {
    for (const [runtimeKey, userAgent] of Object.entries(knownUserAgents)) {
      if (checkUserAgentEquals(userAgent)) {
        return runtimeKey;
      }
    }
  }
  if (typeof global?.EdgeRuntime === "string") {
    return "edge-light";
  }
  if (global?.fastly !== void 0) {
    return "fastly";
  }
  if (global?.process?.release?.name === "node") {
    return "node";
  }
  return "other";
}, "getRuntimeKey");
var checkUserAgentEquals = /* @__PURE__ */ __name((platform2) => {
  const userAgent = "Cloudflare-Workers";
  return userAgent.startsWith(platform2);
}, "checkUserAgentEquals");

// node_modules/hono/dist/utils/jwt/types.js
init_modules_watch_stub();
init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
init_performance2();
var JwtAlgorithmNotImplemented = class extends Error {
  static {
    __name(this, "JwtAlgorithmNotImplemented");
  }
  constructor(alg) {
    super(`${alg} is not an implemented algorithm`);
    this.name = "JwtAlgorithmNotImplemented";
  }
};
var JwtTokenInvalid = class extends Error {
  static {
    __name(this, "JwtTokenInvalid");
  }
  constructor(token) {
    super(`invalid JWT token: ${token}`);
    this.name = "JwtTokenInvalid";
  }
};
var JwtTokenNotBefore = class extends Error {
  static {
    __name(this, "JwtTokenNotBefore");
  }
  constructor(token) {
    super(`token (${token}) is being used before it's valid`);
    this.name = "JwtTokenNotBefore";
  }
};
var JwtTokenExpired = class extends Error {
  static {
    __name(this, "JwtTokenExpired");
  }
  constructor(token) {
    super(`token (${token}) expired`);
    this.name = "JwtTokenExpired";
  }
};
var JwtTokenIssuedAt = class extends Error {
  static {
    __name(this, "JwtTokenIssuedAt");
  }
  constructor(currentTimestamp, iat) {
    super(
      `Invalid "iat" claim, must be a valid number lower than "${currentTimestamp}" (iat: "${iat}")`
    );
    this.name = "JwtTokenIssuedAt";
  }
};
var JwtTokenIssuer = class extends Error {
  static {
    __name(this, "JwtTokenIssuer");
  }
  constructor(expected, iss) {
    super(`expected issuer "${expected}", got ${iss ? `"${iss}"` : "none"} `);
    this.name = "JwtTokenIssuer";
  }
};
var JwtHeaderInvalid = class extends Error {
  static {
    __name(this, "JwtHeaderInvalid");
  }
  constructor(header) {
    super(`jwt header is invalid: ${JSON.stringify(header)}`);
    this.name = "JwtHeaderInvalid";
  }
};
var JwtHeaderRequiresKid = class extends Error {
  static {
    __name(this, "JwtHeaderRequiresKid");
  }
  constructor(header) {
    super(`required "kid" in jwt header: ${JSON.stringify(header)}`);
    this.name = "JwtHeaderRequiresKid";
  }
};
var JwtTokenSignatureMismatched = class extends Error {
  static {
    __name(this, "JwtTokenSignatureMismatched");
  }
  constructor(token) {
    super(`token(${token}) signature mismatched`);
    this.name = "JwtTokenSignatureMismatched";
  }
};
var CryptoKeyUsage = /* @__PURE__ */ ((CryptoKeyUsage2) => {
  CryptoKeyUsage2["Encrypt"] = "encrypt";
  CryptoKeyUsage2["Decrypt"] = "decrypt";
  CryptoKeyUsage2["Sign"] = "sign";
  CryptoKeyUsage2["Verify"] = "verify";
  CryptoKeyUsage2["DeriveKey"] = "deriveKey";
  CryptoKeyUsage2["DeriveBits"] = "deriveBits";
  CryptoKeyUsage2["WrapKey"] = "wrapKey";
  CryptoKeyUsage2["UnwrapKey"] = "unwrapKey";
  return CryptoKeyUsage2;
})(CryptoKeyUsage || {});

// node_modules/hono/dist/utils/jwt/utf8.js
init_modules_watch_stub();
init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
init_performance2();
var utf8Encoder = new TextEncoder();
var utf8Decoder = new TextDecoder();

// node_modules/hono/dist/utils/jwt/jws.js
async function signing(privateKey, alg, data) {
  const algorithm = getKeyAlgorithm(alg);
  const cryptoKey = await importPrivateKey(privateKey, algorithm);
  return await crypto.subtle.sign(algorithm, cryptoKey, data);
}
__name(signing, "signing");
async function verifying(publicKey, alg, signature, data) {
  const algorithm = getKeyAlgorithm(alg);
  const cryptoKey = await importPublicKey(publicKey, algorithm);
  return await crypto.subtle.verify(algorithm, cryptoKey, signature, data);
}
__name(verifying, "verifying");
function pemToBinary(pem) {
  return decodeBase64(pem.replace(/-+(BEGIN|END).*/g, "").replace(/\s/g, ""));
}
__name(pemToBinary, "pemToBinary");
async function importPrivateKey(key, alg) {
  if (!crypto.subtle || !crypto.subtle.importKey) {
    throw new Error("`crypto.subtle.importKey` is undefined. JWT auth middleware requires it.");
  }
  if (isCryptoKey(key)) {
    if (key.type !== "private" && key.type !== "secret") {
      throw new Error(
        `unexpected key type: CryptoKey.type is ${key.type}, expected private or secret`
      );
    }
    return key;
  }
  const usages = [CryptoKeyUsage.Sign];
  if (typeof key === "object") {
    return await crypto.subtle.importKey("jwk", key, alg, false, usages);
  }
  if (key.includes("PRIVATE")) {
    return await crypto.subtle.importKey("pkcs8", pemToBinary(key), alg, false, usages);
  }
  return await crypto.subtle.importKey("raw", utf8Encoder.encode(key), alg, false, usages);
}
__name(importPrivateKey, "importPrivateKey");
async function importPublicKey(key, alg) {
  if (!crypto.subtle || !crypto.subtle.importKey) {
    throw new Error("`crypto.subtle.importKey` is undefined. JWT auth middleware requires it.");
  }
  if (isCryptoKey(key)) {
    if (key.type === "public" || key.type === "secret") {
      return key;
    }
    key = await exportPublicJwkFrom(key);
  }
  if (typeof key === "string" && key.includes("PRIVATE")) {
    const privateKey = await crypto.subtle.importKey("pkcs8", pemToBinary(key), alg, true, [
      CryptoKeyUsage.Sign
    ]);
    key = await exportPublicJwkFrom(privateKey);
  }
  const usages = [CryptoKeyUsage.Verify];
  if (typeof key === "object") {
    return await crypto.subtle.importKey("jwk", key, alg, false, usages);
  }
  if (key.includes("PUBLIC")) {
    return await crypto.subtle.importKey("spki", pemToBinary(key), alg, false, usages);
  }
  return await crypto.subtle.importKey("raw", utf8Encoder.encode(key), alg, false, usages);
}
__name(importPublicKey, "importPublicKey");
async function exportPublicJwkFrom(privateKey) {
  if (privateKey.type !== "private") {
    throw new Error(`unexpected key type: ${privateKey.type}`);
  }
  if (!privateKey.extractable) {
    throw new Error("unexpected private key is unextractable");
  }
  const jwk = await crypto.subtle.exportKey("jwk", privateKey);
  const { kty } = jwk;
  const { alg, e, n } = jwk;
  const { crv, x, y } = jwk;
  return { kty, alg, e, n, crv, x, y, key_ops: [CryptoKeyUsage.Verify] };
}
__name(exportPublicJwkFrom, "exportPublicJwkFrom");
function getKeyAlgorithm(name) {
  switch (name) {
    case "HS256":
      return {
        name: "HMAC",
        hash: {
          name: "SHA-256"
        }
      };
    case "HS384":
      return {
        name: "HMAC",
        hash: {
          name: "SHA-384"
        }
      };
    case "HS512":
      return {
        name: "HMAC",
        hash: {
          name: "SHA-512"
        }
      };
    case "RS256":
      return {
        name: "RSASSA-PKCS1-v1_5",
        hash: {
          name: "SHA-256"
        }
      };
    case "RS384":
      return {
        name: "RSASSA-PKCS1-v1_5",
        hash: {
          name: "SHA-384"
        }
      };
    case "RS512":
      return {
        name: "RSASSA-PKCS1-v1_5",
        hash: {
          name: "SHA-512"
        }
      };
    case "PS256":
      return {
        name: "RSA-PSS",
        hash: {
          name: "SHA-256"
        },
        saltLength: 32
      };
    case "PS384":
      return {
        name: "RSA-PSS",
        hash: {
          name: "SHA-384"
        },
        saltLength: 48
      };
    case "PS512":
      return {
        name: "RSA-PSS",
        hash: {
          name: "SHA-512"
        },
        saltLength: 64
      };
    case "ES256":
      return {
        name: "ECDSA",
        hash: {
          name: "SHA-256"
        },
        namedCurve: "P-256"
      };
    case "ES384":
      return {
        name: "ECDSA",
        hash: {
          name: "SHA-384"
        },
        namedCurve: "P-384"
      };
    case "ES512":
      return {
        name: "ECDSA",
        hash: {
          name: "SHA-512"
        },
        namedCurve: "P-521"
      };
    case "EdDSA":
      return {
        name: "Ed25519",
        namedCurve: "Ed25519"
      };
    default:
      throw new JwtAlgorithmNotImplemented(name);
  }
}
__name(getKeyAlgorithm, "getKeyAlgorithm");
function isCryptoKey(key) {
  const runtime = getRuntimeKey();
  if (runtime === "node" && !!crypto.webcrypto) {
    return key instanceof crypto.webcrypto.CryptoKey;
  }
  return key instanceof CryptoKey;
}
__name(isCryptoKey, "isCryptoKey");

// node_modules/hono/dist/utils/jwt/jwt.js
var encodeJwtPart = /* @__PURE__ */ __name((part) => encodeBase64Url(utf8Encoder.encode(JSON.stringify(part)).buffer).replace(/=/g, ""), "encodeJwtPart");
var encodeSignaturePart = /* @__PURE__ */ __name((buf) => encodeBase64Url(buf).replace(/=/g, ""), "encodeSignaturePart");
var decodeJwtPart = /* @__PURE__ */ __name((part) => JSON.parse(utf8Decoder.decode(decodeBase64Url(part))), "decodeJwtPart");
function isTokenHeader(obj) {
  if (typeof obj === "object" && obj !== null) {
    const objWithAlg = obj;
    return "alg" in objWithAlg && Object.values(AlgorithmTypes).includes(objWithAlg.alg) && (!("typ" in objWithAlg) || objWithAlg.typ === "JWT");
  }
  return false;
}
__name(isTokenHeader, "isTokenHeader");
var sign2 = /* @__PURE__ */ __name(async (payload, privateKey, alg = "HS256") => {
  const encodedPayload = encodeJwtPart(payload);
  let encodedHeader;
  if (typeof privateKey === "object" && "alg" in privateKey) {
    alg = privateKey.alg;
    encodedHeader = encodeJwtPart({ alg, typ: "JWT", kid: privateKey.kid });
  } else {
    encodedHeader = encodeJwtPart({ alg, typ: "JWT" });
  }
  const partialToken = `${encodedHeader}.${encodedPayload}`;
  const signaturePart = await signing(privateKey, alg, utf8Encoder.encode(partialToken));
  const signature = encodeSignaturePart(signaturePart);
  return `${partialToken}.${signature}`;
}, "sign");
var verify = /* @__PURE__ */ __name(async (token, publicKey, algOrOptions) => {
  const optsIn = typeof algOrOptions === "string" ? { alg: algOrOptions } : algOrOptions || {};
  const opts = {
    alg: optsIn.alg ?? "HS256",
    iss: optsIn.iss,
    nbf: optsIn.nbf ?? true,
    exp: optsIn.exp ?? true,
    iat: optsIn.iat ?? true
  };
  const tokenParts = token.split(".");
  if (tokenParts.length !== 3) {
    throw new JwtTokenInvalid(token);
  }
  const { header, payload } = decode(token);
  if (!isTokenHeader(header)) {
    throw new JwtHeaderInvalid(header);
  }
  const now = Date.now() / 1e3 | 0;
  if (opts.nbf && payload.nbf && payload.nbf > now) {
    throw new JwtTokenNotBefore(token);
  }
  if (opts.exp && payload.exp && payload.exp <= now) {
    throw new JwtTokenExpired(token);
  }
  if (opts.iat && payload.iat && now < payload.iat) {
    throw new JwtTokenIssuedAt(now, payload.iat);
  }
  if (opts.iss) {
    if (!payload.iss) {
      throw new JwtTokenIssuer(opts.iss, null);
    }
    if (typeof opts.iss === "string" && payload.iss !== opts.iss) {
      throw new JwtTokenIssuer(opts.iss, payload.iss);
    }
    if (opts.iss instanceof RegExp && !opts.iss.test(payload.iss)) {
      throw new JwtTokenIssuer(opts.iss, payload.iss);
    }
  }
  const headerPayload = token.substring(0, token.lastIndexOf("."));
  const verified = await verifying(
    publicKey,
    opts.alg,
    decodeBase64Url(tokenParts[2]),
    utf8Encoder.encode(headerPayload)
  );
  if (!verified) {
    throw new JwtTokenSignatureMismatched(token);
  }
  return payload;
}, "verify");
var verifyWithJwks = /* @__PURE__ */ __name(async (token, options, init) => {
  const verifyOpts = options.verification || {};
  const header = decodeHeader(token);
  if (!isTokenHeader(header)) {
    throw new JwtHeaderInvalid(header);
  }
  if (!header.kid) {
    throw new JwtHeaderRequiresKid(header);
  }
  if (options.jwks_uri) {
    const response = await fetch(options.jwks_uri, init);
    if (!response.ok) {
      throw new Error(`failed to fetch JWKS from ${options.jwks_uri}`);
    }
    const data = await response.json();
    if (!data.keys) {
      throw new Error('invalid JWKS response. "keys" field is missing');
    }
    if (!Array.isArray(data.keys)) {
      throw new Error('invalid JWKS response. "keys" field is not an array');
    }
    if (options.keys) {
      options.keys.push(...data.keys);
    } else {
      options.keys = data.keys;
    }
  } else if (!options.keys) {
    throw new Error('verifyWithJwks requires options for either "keys" or "jwks_uri" or both');
  }
  const matchingKey = options.keys.find((key) => key.kid === header.kid);
  if (!matchingKey) {
    throw new JwtTokenInvalid(token);
  }
  return await verify(token, matchingKey, {
    alg: matchingKey.alg || header.alg,
    ...verifyOpts
  });
}, "verifyWithJwks");
var decode = /* @__PURE__ */ __name((token) => {
  try {
    const [h, p] = token.split(".");
    const header = decodeJwtPart(h);
    const payload = decodeJwtPart(p);
    return {
      header,
      payload
    };
  } catch {
    throw new JwtTokenInvalid(token);
  }
}, "decode");
var decodeHeader = /* @__PURE__ */ __name((token) => {
  try {
    const [h] = token.split(".");
    return decodeJwtPart(h);
  } catch {
    throw new JwtTokenInvalid(token);
  }
}, "decodeHeader");

// node_modules/hono/dist/utils/jwt/index.js
var Jwt = { sign: sign2, verify, decode, verifyWithJwks };

// node_modules/hono/dist/middleware/jwt/jwt.js
var verifyWithJwks2 = Jwt.verifyWithJwks;
var verify2 = Jwt.verify;
var decode2 = Jwt.decode;
var sign3 = Jwt.sign;

// src/middlewares/authMiddleware.ts
async function authMiddleware(c, next) {
  try {
    const authHeader = c.req.header("Authorization");
    if (!authHeader || !authHeader.startsWith("Bearer ")) {
      return c.json({ success: false, message: "Unauthorized" }, 401);
    }
    const token = authHeader.split(" ")[1];
    const payload = await verify2(token, process.env.ACCESS_TOKEN_SECRET);
    c.set("user", payload);
    await next();
  } catch (err) {
    return c.json({ success: false, message: "Invalid token" }, 401);
  }
}
__name(authMiddleware, "authMiddleware");

// src/routes/scholarshipRoutes.ts
var scholarships = new Hono2();
scholarships.use("*", authMiddleware);
scholarships.get("/", getScholarships);
scholarships.get("/nearest", getNearest);
scholarships.get("/latest", getLatest);
scholarships.get("/statistics", getStatistics);
scholarships.get("/search", search);
scholarships.post("/add", addScholarship);
scholarships.patch("/:id", updateScholarship);
scholarships.delete("/:id", deleteScholarship);

// src/routes/userRoutes.ts
init_modules_watch_stub();
init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
init_performance2();

// src/controllers/userController.ts
init_modules_watch_stub();
init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
init_performance2();
var nodemailer = __toESM(require_nodemailer());
var updateUser = /* @__PURE__ */ __name(async (c) => {
  try {
    const body = await c.req.json();
    const { id } = c.req.param();
    const user2 = c.get("user");
    if (!id) {
      return sendResponse(c, 400, false, "\u0645\u0637\u0644\u0648\u0628 \u0631\u0642\u0645 \u062A\u0639\u0631\u064A\u0641 \u0627\u0644\u0645\u0633\u062A\u062E\u062F\u0645 (id)");
    }
    if (user2.id !== id) {
      return sendResponse(c, 403, false, "\u0644\u0627 \u062A\u0645\u0644\u0643 \u0635\u0644\u0627\u062D\u064A\u0627\u062A", void 0);
    }
    if (!body.name || !body.email) {
      return sendResponse(c, 400, false, "\u064A\u062C\u0628 \u0625\u062F\u062E\u0627\u0644 \u062C\u0645\u064A\u0639 \u0627\u0644\u062D\u0642\u0648\u0644 \u0627\u0644\u0645\u0637\u0644\u0648\u0628\u0629");
    }
    const existedUser = await user_default.findById(id);
    if (!existedUser) {
      return sendResponse(c, 404, false, "\u0644\u0645 \u064A\u062A\u0645 \u0627\u0644\u0639\u062B\u0648\u0631 \u0639\u0644\u0649 \u0627\u0644\u0645\u0633\u062A\u062E\u062F\u0645");
    }
    const updatedUser = await user_default.findByIdAndUpdate(id, body, {
      new: true,
      runValidators: true
    });
    return sendResponse(
      c,
      200,
      true,
      "\u062A\u0645 \u062A\u062D\u062F\u064A\u062B \u0645\u0639\u0644\u0648\u0645\u0627\u062A \u0627\u0644\u0645\u0633\u062A\u062E\u062F\u0645 \u0628\u0646\u062C\u0627\u062D",
      updatedUser
    );
  } catch (err) {
    console.error("Error in updateUser:", err);
    return sendResponse(c, 500, false, "\u062D\u0635\u0644 \u062E\u0637\u0623 \u0641\u064A \u0627\u0644\u0633\u064A\u0631\u0641\u0631", void 0, err);
  }
}, "updateUser");
var getUser = /* @__PURE__ */ __name(async (c) => {
  try {
    const { id } = c.req.param();
    const user2 = c.get("user");
    if (!id) {
      return sendResponse(c, 400, false, "\u0645\u0637\u0644\u0648\u0628 \u0631\u0642\u0645 \u062A\u0639\u0631\u064A\u0641 \u0627\u0644\u0645\u0633\u062A\u062E\u062F\u0645 (id)");
    }
    if (user2.id !== id) {
      return sendResponse(c, 403, false, "\u0644\u0627 \u062A\u0645\u0644\u0643 \u0635\u0644\u0627\u062D\u064A\u0627\u062A", void 0);
    }
    const existedUser = await user_default.findById(id);
    if (!existedUser) {
      return sendResponse(c, 404, false, "\u0644\u0645 \u064A\u062A\u0645 \u0627\u0644\u0639\u062B\u0648\u0631 \u0639\u0644\u0649 \u0627\u0644\u0645\u0633\u062A\u062E\u062F\u0645");
    }
    return sendResponse(
      c,
      200,
      true,
      "\u062A\u0645 \u062C\u0644\u0628 \u0645\u0639\u0644\u0648\u0645\u0627\u062A \u0627\u0644\u0645\u0633\u062A\u062E\u062F\u0645 \u0628\u0646\u062C\u0627\u062D",
      existedUser
    );
  } catch (err) {
    console.error("Error in getUser:", err);
    return sendResponse(c, 500, false, "\u062D\u0635\u0644 \u062E\u0637\u0623 \u0641\u064A \u0627\u0644\u0633\u064A\u0631\u0641\u0631", void 0, err);
  }
}, "getUser");
var resetPassword = /* @__PURE__ */ __name(async (c) => {
  try {
    const { id } = c.req.param();
    const user2 = c.get("user");
    const { currPassword, newPassword } = await c.req.json();
    if (!id) {
      return sendResponse(c, 400, false, "\u0645\u0637\u0644\u0648\u0628 \u0631\u0642\u0645 \u062A\u0639\u0631\u064A\u0641 \u0627\u0644\u0645\u0633\u062A\u062E\u062F\u0645 (id)");
    }
    if (user2.id !== id) {
      return sendResponse(c, 403, false, "\u0644\u0627 \u062A\u0645\u0644\u0643 \u0635\u0644\u0627\u062D\u064A\u0627\u062A", void 0);
    }
    const existedUser = await user_default.findById(id);
    if (!existedUser) {
      return sendResponse(c, 404, false, "\u0644\u0645 \u064A\u062A\u0645 \u0627\u0644\u0639\u062B\u0648\u0631 \u0639\u0644\u0649 \u0627\u0644\u0645\u0633\u062A\u062E\u062F\u0645");
    }
    const isMatched = await compare(currPassword, existedUser.password);
    console.log(isMatched);
    if (!isMatched) {
      return sendResponse(
        c,
        403,
        false,
        "\u0643\u0644\u0645\u0629 \u0627\u0644\u0645\u0631\u0648\u0631 \u0627\u0644\u062D\u0627\u0644\u064A\u0629 \u062E\u0627\u0637\u0626\u0629",
        void 0
      );
    }
    const hashedPassword = await hash(newPassword, 10);
    const updatedUser = await user_default.findByIdAndUpdate(id, {
      password: hashedPassword
    });
    return sendResponse(
      c,
      200,
      true,
      "\u062A\u0645 \u062A\u063A\u064A\u064A\u0631 \u0643\u0644\u0645\u0629 \u0645\u0631\u0648\u0631 \u0627\u0644\u0645\u0633\u062A\u062E\u062F\u0645 \u0628\u0646\u062C\u0627\u062D",
      updatedUser
    );
  } catch (err) {
    console.error("Error in resetPassword:", err);
    return sendResponse(c, 500, false, "\u062D\u0635\u0644 \u062E\u0637\u0623 \u0641\u064A \u0627\u0644\u0633\u064A\u0631\u0641\u0631", void 0, err);
  }
}, "resetPassword");
var deleteUser = /* @__PURE__ */ __name(async (c) => {
  try {
    const { id } = c.req.param();
    const user2 = c.get("user");
    if (!id) {
      return sendResponse(c, 400, false, "\u0645\u0637\u0644\u0648\u0628 \u0631\u0642\u0645 \u062A\u0639\u0631\u064A\u0641 \u0627\u0644\u0645\u0633\u062A\u062E\u062F\u0645 (id)");
    }
    if (user2.id !== id) {
      return sendResponse(c, 403, false, "\u0644\u0627 \u062A\u0645\u0644\u0643 \u0635\u0644\u0627\u062D\u064A\u0627\u062A", void 0);
    }
    const deletedUser = await user_default.findByIdAndDelete(id);
    if (!deletedUser) {
      return sendResponse(c, 404, false, "\u0644\u0645 \u064A\u062A\u0645 \u0627\u0644\u0639\u062B\u0648\u0631 \u0639\u0644\u0649 \u0627\u0644\u0645\u0633\u062A\u062E\u062F\u0645");
    }
    const deletedScholars = await scholarship_default.deleteMany({ userId: id });
    return sendResponse(c, 200, true, "\u062A\u0645 \u062D\u0630\u0641 \u0627\u0644\u0645\u0633\u062A\u062E\u062F\u0645 \u0628\u0646\u062C\u0627\u062D", {
      deleteUser,
      deletedScholars
    });
  } catch (err) {
    console.error("Error in deleteUser:", err);
    return sendResponse(c, 500, false, "\u062D\u0635\u0644 \u062E\u0637\u0623 \u0641\u064A \u0627\u0644\u0633\u064A\u0631\u0641\u0631", void 0, err);
  }
}, "deleteUser");
var sendReport = /* @__PURE__ */ __name(async (c) => {
  try {
    const { name, email, message } = await c.req.json();
    const transporter = nodemailer.createTransport({
      host: "smtp.gmail.com",
      port: 465,
      secure: true,
      auth: {
        user: process.env.EMAIL_USER,
        pass: process.env.EMAIL_PASS
      }
    });
    await transporter.sendMail({
      from: `"${name}" <${process.env.EMAIL_USER}>`,
      to: "mohayyad2.0@gmail.com",
      subject: "\u0625\u0628\u0644\u0627\u063A \u062C\u062F\u064A\u062F",
      html: `<p><strong>\u0627\u0644\u0627\u0633\u0645:</strong> ${name}</p>
               <p><strong>\u0627\u0644\u0628\u0631\u064A\u062F \u0627\u0644\u0627\u0644\u0643\u062A\u0631\u0648\u0646\u064A:</strong> ${email}</p>
               <p><strong>\u0627\u0644\u0645\u0634\u0643\u0644\u0629:</strong> ${message}</p>`
    });
    return sendResponse(c, 200, true, "\u062A\u0645 \u0627\u0644\u062A\u0628\u0644\u064A\u063A \u0639\u0646 \u0627\u0644\u0645\u0634\u0643\u0644\u0629 \u0628\u0646\u062C\u0627\u062D", {
      name,
      email,
      message
    });
  } catch (err) {
    console.error("Error in sendReport:", err);
    return sendResponse(c, 500, false, "\u062D\u0635\u0644 \u062E\u0637\u0623 \u0641\u064A \u0627\u0644\u0633\u064A\u0631\u0641\u0631", void 0, err);
  }
}, "sendReport");

// src/routes/userRoutes.ts
var user = new Hono2();
user.use("*", authMiddleware);
user.get("/:id", getUser);
user.post("/report", sendReport);
user.patch("/:id", updateUser);
user.patch("pass/:id", resetPassword);
user.delete("/:id", deleteUser);

// src/index.ts
var app = new Hono2();
app.use(cors());
app.use(logger());
app.get("/", (c) => {
  return c.text("Hello Hono!");
});
app.route("/auth", auth);
app.route("/user", user);
app.route("/scholarships", scholarships);
var dbUri = process.env.DB_URI;
if (!dbUri) {
  throw new Error("DB_URI environment variable is not defined");
}
import_mongoose3.default.connect(dbUri).then(() => {
  console.log("MongoDB connected");
}).catch((err) => {
  console.error("MongoDB connection error:", err);
});
var src_default = app;

// ../../../../../../../../home/mohayyad/.bun/install/global/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts
init_modules_watch_stub();
init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
init_performance2();
var drainBody = /* @__PURE__ */ __name(async (request, env2, _ctx, middlewareCtx) => {
  try {
    return await middlewareCtx.next(request, env2);
  } finally {
    try {
      if (request.body !== null && !request.bodyUsed) {
        const reader = request.body.getReader();
        while (!(await reader.read()).done) {
        }
      }
    } catch (e) {
      console.error("Failed to drain the unused request body.", e);
    }
  }
}, "drainBody");
var middleware_ensure_req_body_drained_default = drainBody;

// ../../../../../../../../home/mohayyad/.bun/install/global/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts
init_modules_watch_stub();
init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
init_performance2();
function reduceError(e) {
  return {
    name: e?.name,
    message: e?.message ?? String(e),
    stack: e?.stack,
    cause: e?.cause === void 0 ? void 0 : reduceError(e.cause)
  };
}
__name(reduceError, "reduceError");
var jsonError = /* @__PURE__ */ __name(async (request, env2, _ctx, middlewareCtx) => {
  try {
    return await middlewareCtx.next(request, env2);
  } catch (e) {
    const error3 = reduceError(e);
    return Response.json(error3, {
      status: 500,
      headers: { "MF-Experimental-Error-Stack": "true" }
    });
  }
}, "jsonError");
var middleware_miniflare3_json_error_default = jsonError;

// .wrangler/tmp/bundle-eoARvH/middleware-insertion-facade.js
var __INTERNAL_WRANGLER_MIDDLEWARE__ = [
  middleware_ensure_req_body_drained_default,
  middleware_miniflare3_json_error_default
];
var middleware_insertion_facade_default = src_default;

// ../../../../../../../../home/mohayyad/.bun/install/global/node_modules/wrangler/templates/middleware/common.ts
init_modules_watch_stub();
init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process();
init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console();
init_performance2();
var __facade_middleware__ = [];
function __facade_register__(...args) {
  __facade_middleware__.push(...args.flat());
}
__name(__facade_register__, "__facade_register__");
function __facade_invokeChain__(request, env2, ctx, dispatch, middlewareChain) {
  const [head, ...tail] = middlewareChain;
  const middlewareCtx = {
    dispatch,
    next(newRequest, newEnv) {
      return __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);
    }
  };
  return head(request, env2, ctx, middlewareCtx);
}
__name(__facade_invokeChain__, "__facade_invokeChain__");
function __facade_invoke__(request, env2, ctx, dispatch, finalMiddleware) {
  return __facade_invokeChain__(request, env2, ctx, dispatch, [
    ...__facade_middleware__,
    finalMiddleware
  ]);
}
__name(__facade_invoke__, "__facade_invoke__");

// .wrangler/tmp/bundle-eoARvH/middleware-loader.entry.ts
var __Facade_ScheduledController__ = class ___Facade_ScheduledController__ {
  constructor(scheduledTime, cron, noRetry) {
    this.scheduledTime = scheduledTime;
    this.cron = cron;
    this.#noRetry = noRetry;
  }
  static {
    __name(this, "__Facade_ScheduledController__");
  }
  #noRetry;
  noRetry() {
    if (!(this instanceof ___Facade_ScheduledController__)) {
      throw new TypeError("Illegal invocation");
    }
    this.#noRetry();
  }
};
function wrapExportedHandler(worker) {
  if (__INTERNAL_WRANGLER_MIDDLEWARE__ === void 0 || __INTERNAL_WRANGLER_MIDDLEWARE__.length === 0) {
    return worker;
  }
  for (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {
    __facade_register__(middleware);
  }
  const fetchDispatcher = /* @__PURE__ */ __name(function(request, env2, ctx) {
    if (worker.fetch === void 0) {
      throw new Error("Handler does not export a fetch() function.");
    }
    return worker.fetch(request, env2, ctx);
  }, "fetchDispatcher");
  return {
    ...worker,
    fetch(request, env2, ctx) {
      const dispatcher = /* @__PURE__ */ __name(function(type, init) {
        if (type === "scheduled" && worker.scheduled !== void 0) {
          const controller = new __Facade_ScheduledController__(
            Date.now(),
            init.cron ?? "",
            () => {
            }
          );
          return worker.scheduled(controller, env2, ctx);
        }
      }, "dispatcher");
      return __facade_invoke__(request, env2, ctx, dispatcher, fetchDispatcher);
    }
  };
}
__name(wrapExportedHandler, "wrapExportedHandler");
function wrapWorkerEntrypoint(klass) {
  if (__INTERNAL_WRANGLER_MIDDLEWARE__ === void 0 || __INTERNAL_WRANGLER_MIDDLEWARE__.length === 0) {
    return klass;
  }
  for (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {
    __facade_register__(middleware);
  }
  return class extends klass {
    #fetchDispatcher = /* @__PURE__ */ __name((request, env2, ctx) => {
      this.env = env2;
      this.ctx = ctx;
      if (super.fetch === void 0) {
        throw new Error("Entrypoint class does not define a fetch() function.");
      }
      return super.fetch(request);
    }, "#fetchDispatcher");
    #dispatcher = /* @__PURE__ */ __name((type, init) => {
      if (type === "scheduled" && super.scheduled !== void 0) {
        const controller = new __Facade_ScheduledController__(
          Date.now(),
          init.cron ?? "",
          () => {
          }
        );
        return super.scheduled(controller);
      }
    }, "#dispatcher");
    fetch(request) {
      return __facade_invoke__(
        request,
        this.env,
        this.ctx,
        this.#dispatcher,
        this.#fetchDispatcher
      );
    }
  };
}
__name(wrapWorkerEntrypoint, "wrapWorkerEntrypoint");
var WRAPPED_ENTRY;
if (typeof middleware_insertion_facade_default === "object") {
  WRAPPED_ENTRY = wrapExportedHandler(middleware_insertion_facade_default);
} else if (typeof middleware_insertion_facade_default === "function") {
  WRAPPED_ENTRY = wrapWorkerEntrypoint(middleware_insertion_facade_default);
}
var middleware_loader_entry_default = WRAPPED_ENTRY;
export {
  __INTERNAL_WRANGLER_MIDDLEWARE__,
  middleware_loader_entry_default as default
};
/*! Bundled license information:

mongoose/dist/browser.umd.js:
  (*! For license information please see browser.umd.js.LICENSE.txt *)

safe-buffer/index.js:
  (*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> *)
*/
//# sourceMappingURL=index.js.map
